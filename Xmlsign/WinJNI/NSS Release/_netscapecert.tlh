// Created by Microsoft (R) C/C++ Compiler Version 13.10.3077 (88ce9d6e).
//
// c:\activex\xmlsign\winjni\nss release\_netscapecert.tlh
//
// C++ source equivalent of Win32 type library ..\NetscapeCert\_NetscapeCert.tlb
// compiler-generated file created 07/06/05 at 10:19:10 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace NetscapeCert {

//
// Forward references and typedefs
//

struct __declspec(uuid("d0d24f2b-a223-4e79-9551-f99b486958d7"))
/* LIBID */ __NetscapeCert;
struct /* coclass */ CCertStore;
struct __declspec(uuid("0d61aa35-48d5-47f5-8249-f685f75250fd"))
/* dual interface */ ICertStore;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(ICertStore, __uuidof(ICertStore));

//
// Type library items
//

struct __declspec(uuid("0a06154b-8ff9-48b2-a819-b68c327fc773"))
CCertStore;
    // [ default ] interface ICertStore

struct __declspec(uuid("0d61aa35-48d5-47f5-8249-f685f75250fd"))
ICertStore : IDispatch
{
    //
    // Property data
    //

    __declspec(property(put=PutNetscapeStorePassword))
    _bstr_t NetscapeStorePassword;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCertificateList (
        unsigned long * certCount );
    void PutNetscapeStorePassword (
        _bstr_t _arg1 );
    _bstr_t ExportNetscapeCert (
        _bstr_t certSerialNumber );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_GetCertificateList (
        /*[out]*/ unsigned long * certCount,
        /*[out,retval]*/ BSTR * certArray ) = 0;
      virtual HRESULT __stdcall put_NetscapeStorePassword (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall raw_ExportNetscapeCert (
        /*[in]*/ BSTR certSerialNumber,
        /*[out,retval]*/ BSTR * pfxFilePath ) = 0;
};

//
// Wrapper method implementations
//

#include "c:\activex\xmlsign\winjni\nss release\_netscapecert.tli"

} // namespace NetscapeCert

#pragma pack(pop)
