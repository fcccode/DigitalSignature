; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\ShowSelectCert.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0CE@BJCBICOJ@c?3?2activex?2xmlsign?2ShowSelectCer@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CD@LOCFBMPJ@CShowSelectCert?3?3selectCertifica@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@IMJCHIMA@CConfig?3?3setConfigFile?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BM@LOCLFAIJ@c?3?2activex?2xmlsign?2config?4h?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EJ@DPIMAKHN@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CD@DIDNGAPJ@s?5?$DN?$DN?50?5?$HM?$HM?5?$CIconst?5char?$CK?$CJ?5?$CKthis?5?$CB?$DN@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CG@PAOIECBF@s?5?$DN?$DN?50?5?$HM?$HM?5?$CIconst?5wchar_t?$CK?$CJ?5?$CKthis@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DD@NCNHACCB@s?5?$DN?$DN?50?5?$HM?$HM?5m_Data?5?$DN?$DN?50?5?$HM?$HM?5m_Data?9@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CH@LJMJHPFK@m_Data?5?$CB?$DN?50?5?$CG?$CG?5m_Data?9?$DORefCount?$CI@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FG@GKIPNLEE@?$CI?$CIthis?$CJ?9?$DOvt?$CJ?5?$CB?$DN?5VT_BSTR?5?$HM?$HM?5?$CIBSTR@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EC@EDNDDDBI@?$CI?$CIthis?$CJ?9?$DOvt?$CJ?5?$CB?$DN?5VT_BSTR?5?$HM?$HM?5pSrc?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EL@EEEMIENH@?$CI?$CIthis?$CJ?9?$DOvt?$CJ?5?$CB?$DN?5?$CIVT_I1?5?$HM?5VT_BYRE@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EH@IHHPLLAD@?$CI?$CIthis?$CJ?9?$DOvt?$CJ?5?$CB?$DN?5VT_DISPATCH?5?$HM?$HM?5p@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EF@LJOMBHMP@?$CI?$CIthis?$CJ?9?$DOvt?$CJ?5?$CB?$DN?5VT_UNKNOWN?5?$HM?$HM?5pS@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@NNIJINN@IDispatch?5error?5?$CD?$CFd?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@IPPGFENJ@Unknown?5error?50x?$CF0lX?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_17CGPNFONA@?$AA?7?$EA?$AD?$AA?7?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_19ELGCFCMM@?$AA?$AD?$AA?7?$EA?$AD?$AA?7?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1BC@CBBHPGMH@?$EA?$AI?$EA?$AD?$EA?$AD?$EA?$AD?$EA?$AD?$AA?7?$AA?7?$AA?7?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1O@LPGBCEBP@?$AA?$AD?$AA?7?$EA?$AD?$AA?7?$AA?7?$AA?7?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1O@NEHKDCLA@?$EA?$AI?$EA?$AI?$EA?$AI?$EA?$AD?$EA?$AD?$AA?7?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_15ONFCDLDB@?$EA?$AD?$AA?7?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_19DICFMKI@?$AA?$AD?$AA?$AM?$EA?$AD?$AA?7?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1M@FFKIHFKI@?$AA?$AD?$AA?$AM?$AA?7?$EA?$AD?$AA?7?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_19NKKCEOAE@?$AA?$AD?$AA?$AD?$EA?$AD?$AA?7?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1M@KEKDCOCF@?$AA?$AD?$AA?$AD?$AA?7?$EA?$AD?$AA?7?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_17LHDNECBI@?$AA?$AD?$EA?$AD?$AA?7?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_17CANDCMNE@?$EA?$AL?$EA?$AD?$AA?7?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FG@EOHGAEB@?3Sun?3Sunday?3Mon?3Monday?3Tue?3Tuesd@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0IH@HPGJLCCK@?3Jan?3January?3Feb?3February?3Mar?3Ma@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EH@NBFKEDIC@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CD@HFEEKIIE@mbstr?5?$DN?$DN?50?5?$HM?$HM?5result?5?$DM?$DN?5?$CIint?$CJcou@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FB@DNILBHEN@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CD@JADEDFCN@wcstr?5?$DN?$DN?50?5?$HM?$HM?5result?5?$DM?$DN?5?$CIint?$CJcou@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@CLMJJCOM@nSize?5?$DO?$DN?5nSizeW?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@DFFCODPF@m_pData?9?$DOnRefs?5?$DN?$DN?5?91?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BK@KFNMPDFA@m_pData?9?$DOnDataLength?5?$DN?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@JINHKJCC@pData?9?$DOnRefs?5?$DM?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@HNGMIMJM@pData?9?$DOnRefs?5?$DM?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FB@EIPLHBJE@CFixedStringMgr?3?3Allocate?$CI?$CJ?5spil@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FD@PINPFILO@CFixedStringMgr?3?3Reallocate?$CI?$CJ?5sp@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@MDHCGOCC@m_pMemMgr?5?$DN?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EP@ENACCIMA@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BK@KICONMKH@pData?9?$DOpStringMgr?5?$DN?$DN?5this?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CG@HPMMCKHL@?$CI?$CIWORD?$CJ?$CI?$CIDWORD_PTR?$CJ?$CIpsz?$CJ?5?$DO?$DO?516?$CJ?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@BDLMIBLB@pFormat?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FA@JGFACAOB@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05LLAMLEHD@?$CFI64d?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05KCADNOJC@?$CF02ld?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CB@FKADHJGH@strFormat?4LoadStringA?$CInFormatID?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BP@BEGENEN@c?3?2activex?2xmlsign?2signature?4h?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@KEHCEMNB@CSignature?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08LIEICNMC@m_bModal?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BO@OBIGOAOM@AtlIsValidString?$CI?5pszFormat?5?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CJ@FJEKGMMD@Warning?3?5implicit?5LoadString?$CI?$CFu?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EE@PNDBCBIA@CAxDialogImpl?3?3AdviseSinkMap?5cal@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@HHPDHHJB@AtlAxWinLic71?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EG@DKHIMJLN@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09BNFEDJPE@?$CBm_bModal?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?ProcessWindowMessage@CShowSelectCert@@UAEHPAUHWND__@@IIJAAJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnInitDialog@CShowSelectCert@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnOK@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCancel@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateHeader@CShowSelectCert@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCell@CShowSelectCert@@QAEXPAGHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnClickList@CShowSelectCert@@QAEJHPAUtagNMHDR@@AAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?setSelection@CShowSelectCert@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCShowSelectCert@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCConfig@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _acosl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _asinl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _atanl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _atan2l
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ceill
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _cosl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _coshl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _expl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _fabsl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _floorl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _fmodl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _frexpl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ldexpl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _logl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _log10l
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _modfl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _powl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sinl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sinhl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sqrtl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tanl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tanhl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _frexpf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ldexpf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _acosf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _asinf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _atanf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _atan2f
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ceilf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _cosf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _coshf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _expf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _fabsf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _floorf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _fmodf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _logf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _log10f
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _modff
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _powf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sinf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sinhf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sqrtf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tanf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tanhf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckError@_com_util@@YAXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_bstr_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4_bstr_t@@QAEAAV0@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y_bstr_t@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7_bstr_t@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@_bstr_t@@QAEXPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Compare@_bstr_t@@ABEHABV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@ABV1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RefCount@Data_t@_bstr_t@@QBEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWString@Data_t@_bstr_t@@QAEAAPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@Data_t@_bstr_t@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@Data_t@_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@Data_t@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@Data_t@_bstr_t@@QBEHABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2Data_t@_bstr_t@@SAPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Data_t@_bstr_t@@AAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@Data_t@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_variant_t@@QAE@AAUtagVARIANT@@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4_variant_t@@QAEAAV0@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8_variant_t@@QBE_NPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@_variant_t@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@_variant_t@@QAEXGPBV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_com_error@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_com_error@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WCode@_com_error@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HRESULTToWCode@_com_error@@SAGJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GData_t@_bstr_t@@AAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G_com_error@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBufferVariant@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBufferVariant@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CBufferVariant@@QAE@ABUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCBufferVariant@@QBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetLength@CBufferVariant@@QAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MyVariantCopy@CBufferVariant@@QAEXPAUtagVARIANT@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@CBufferVariant@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BuildByteArrayFromVariant@CBufferVariant@@AAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BuildByteArrayFromData@CBufferVariant@@AAEXPBXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendByteArrayFromVariant@CBufferVariant@@AAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendByteArrayFromData@CBufferVariant@@AAEXPBXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1bad_exception@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gbad_exception@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemchr
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemset
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@G@std@@SAPAGPAGPBGI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?to_char_type@?$char_traits@G@std@@SAGABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?to_int_type@?$char_traits@G@std@@SAGABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?eq_int_type@?$char_traits@G@std@@SA_NABG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?eof@?$char_traits@G@std@@SAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?to_char_type@?$char_traits@D@std@@SADABH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?to_int_type@?$char_traits@D@std@@SAHABD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1domain_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gdomain_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1invalid_argument@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Ginvalid_argument@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1runtime_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@runtime_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gruntime_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1overflow_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Goverflow_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1underflow_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gunderflow_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1range_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Grange_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_DebugHeapString@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Timevec@std@@QAE@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_Timevec@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4_Timevec@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getctype@_Locinfo@std@@QBE?AU_Ctypevec@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bid@locale@std@@QAEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Incref@facet@locale@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Decref@facet@locale@std@@QAEPAV123@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1facet@locale@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0facet@locale@std@@IAE@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0locale@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1locale@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gfacet@locale@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0codecvt_base@std@@QAE@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1codecvt_base@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_always_noconv@codecvt_base@std@@MBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_max_length@codecvt_base@std@@MBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_encoding@codecvt_base@std@@MBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gcodecvt_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$codecvt@GDH@std@@QAE@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$codecvt@GDH@std@@MAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$codecvt@GDH@std@@IAEXABV_Locinfo@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_in@?$codecvt@GDH@std@@MBEHAAHPBD1AAPBDPAG3AAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_out@?$codecvt@GDH@std@@MBEHAAHPBG1AAPBGPAD3AAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_unshift@?$codecvt@GDH@std@@MBEHAAHPAD1AAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_length@?$codecvt@GDH@std@@MBEHABHPBD1I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_always_noconv@?$codecvt@GDH@std@@MBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_max_length@?$codecvt@GDH@std@@MBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_encoding@?$codecvt@GDH@std@@MBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$codecvt@GDH@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ctype_base@std@@QAE@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1ctype_base@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gctype_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?is@?$ctype@D@std@@QBE_NFD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$ctype@D@std@@QAE@PBF_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$ctype@D@std@@MAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$ctype@D@std@@IAEXABV_Locinfo@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$ctype@D@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_tolower@?$ctype@D@std@@MBEDD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_tolower@?$ctype@D@std@@MBEPBDPADPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_toupper@?$ctype@D@std@@MBEDD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_toupper@?$ctype@D@std@@MBEPBDPADPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_widen@?$ctype@D@std@@MBEDD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_widen@?$ctype@D@std@@MBEPBDPBD0PAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_narrow@?$ctype@D@std@@MBEDDD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_narrow@?$ctype@D@std@@MBEPBDPBD0DPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?table@?$ctype@D@std@@IBEPBFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?is@?$ctype@G@std@@QBE_NFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$ctype@G@std@@QAE@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getcat@?$ctype@G@std@@SAIPAPBVfacet@locale@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$ctype@G@std@@MAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$ctype@G@std@@IAEXABV_Locinfo@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_is@?$ctype@G@std@@MBE_NFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_is@?$ctype@G@std@@MBEPBGPBG0PAF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_scan_is@?$ctype@G@std@@MBEPBGFPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_scan_not@?$ctype@G@std@@MBEPBGFPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_tolower@?$ctype@G@std@@MBEGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_tolower@?$ctype@G@std@@MBEPBGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_toupper@?$ctype@G@std@@MBEGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_toupper@?$ctype@G@std@@MBEPBGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dowiden@?$ctype@G@std@@IBEGD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_widen@?$ctype@G@std@@MBEGD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_widen@?$ctype@G@std@@MBEPBDPBD0PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Donarrow@?$ctype@G@std@@IBEDGD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_narrow@?$ctype@G@std@@MBEDGD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_narrow@?$ctype@G@std@@MBEPBGPBG0DPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@G@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1failure@ios_base@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@ios_base@std@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?rdstate@ios_base@std@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?setstate@ios_base@std@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?good@ios_base@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?eof@ios_base@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fail@ios_base@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?exceptions@ios_base@std@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?flags@ios_base@std@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?setf@ios_base@std@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?setf@ios_base@std@@QAEHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?unsetf@ios_base@std@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?width@ios_base@std@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?width@ios_base@std@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?getloc@ios_base@std@@QBE?AVlocale@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gfailure@ios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetEnvironmentVariableWFake@ATL@@YGKPBGPAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetEnvironmentVariableWThunk@ATL@@YGKPBGPAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CompareStringWFake@ATL@@YGHKKPBGH0H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CompareStringWThunk@ATL@@YGHKKPBGH0H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetStringTypeExWFake@ATL@@YGHKKPBGHPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetStringTypeExWThunk@ATL@@YGHKKPBGHPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lstrcmpiWFake@ATL@@YGHPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lstrcmpiWThunk@ATL@@YGHPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharLowerWFake@ATL@@YGPAGPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharLowerWThunk@ATL@@YGPAGPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharUpperWFake@ATL@@YGPAGPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharUpperWThunk@ATL@@YGPAGPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_GetEnvironmentVariableW@?$ChTraitsCRT@G@ATL@@CGKPBGPAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringFindString@?$ChTraitsCRT@G@ATL@@SAPBGPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFixedStringMgr@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@CFixedStringMgr@ATL@@UAEPAUCStringData@2@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@CFixedStringMgr@ATL@@UAEXPAUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reallocate@CFixedStringMgr@ATL@@UAEPAUCStringData@2@PAU32@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNilString@CFixedStringMgr@ATL@@UAEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clone@CFixedStringMgr@ATL@@UAEPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFixedStringMgr@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFixedStringLog@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnAllocateSpill@CFixedStringLog@ATL@@UAEXHHPBUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnReallocateSpill@CFixedStringLog@ATL@@UAEXHHPBUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFixedStringLog@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IFixedStringLog@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAtlStringMgr@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@PAU32@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAtlStringMgr@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CompareStringW@?$ChTraitsOS@G@ATL@@KGHKKPBGH0H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetStringTypeExW@?$ChTraitsOS@G@ATL@@KGHKKPBGHPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lstrcmpiW@?$ChTraitsOS@G@ATL@@KGHPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharLowerW@?$ChTraitsOS@G@ATL@@KGPAGPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharUpperW@?$ChTraitsOS@G@ATL@@KGPAGPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?strchr@?$ChTraitsOS@G@ATL@@SAPBGPBGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?strrchr@?$ChTraitsOS@G@ATL@@SAPBGPBGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_strrev@?$ChTraitsOS@G@ATL@@SAPAGPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?strstr@?$ChTraitsOS@G@ATL@@SAPBGPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?strspn@?$ChTraitsOS@G@ATL@@SAHPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?strcspn@?$ChTraitsOS@G@ATL@@SAHPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?strpbrk@?$ChTraitsOS@G@ATL@@SAPBGPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringFindString@?$ChTraitsOS@G@ATL@@SAPBGPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Format@CTimeSpan@ATL@@QBE?AV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@2@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Format@CTime@ATL@@QBE?AV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@2@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FormatGmt@CTime@ATL@@QBE?AV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@2@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_GetRawUnknown@CSignature@@QAEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_GetEntries@CSignature@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ANSIToUnicode@CSignature@@QAEPAGPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@SigException@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GSigException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1SigException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Preallocate@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComObject@VCAxFrameWindow@ATL@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComObject@VCAxUIWindow@ATL@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$_CopyInterface@UIUnknown@@@ATL@@SAJPAPAUIUnknown@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?init@?$_CopyInterface@UIUnknown@@@ATL@@SAXPAPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$_CopyInterface@UIUnknown@@@ATL@@SAXPAPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDialogProc@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEP6GHPAUHWND__@@IIJ@ZXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoModal@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHPAUHWND__@@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndDialog@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ProcessWindowMessage@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEHPAUHWND__@@IIJAAJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateActiveXControls@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEJI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_com_ptr_t@V?$_com_IIID@UIUnknown@@$1?_GUID_00000000_0000_0000_c000_000000000046@@3U__s_GUID@@B@@@@QAE@PAUIUnknown@@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_com_ptr_t@V?$_com_IIID@UIUnknown@@$1?_GUID_00000000_0000_0000_c000_000000000046@@3U__s_GUID@@B@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_com_ptr_t@V?$_com_IIID@UProperty@@$1?_GUID_00000503_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@QAE@PAUProperty@@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_com_ptr_t@V?$_com_IIID@UProperty@@$1?_GUID_00000503_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_com_ptr_t@V?$_com_IIID@UProperties@@$1?_GUID_00000504_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@QAE@PAUProperties@@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_com_ptr_t@V?$_com_IIID@UProperties@@$1?_GUID_00000504_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_com_ptr_t@V?$_com_IIID@UError@@$1?_GUID_00000500_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@QAE@PAUError@@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_com_ptr_t@V?$_com_IIID@UError@@$1?_GUID_00000500_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_com_ptr_t@V?$_com_IIID@UField@@$1?_GUID_00000569_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@QAE@PAUField@@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_com_ptr_t@V?$_com_IIID@UField@@$1?_GUID_00000569_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_com_ptr_t@V?$_com_IIID@U_Parameter@@$1?_GUID_0000050c_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@QAE@PAU_Parameter@@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_com_ptr_t@V?$_com_IIID@U_Parameter@@$1?_GUID_0000050c_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_com_ptr_t@V?$_com_IIID@U_Connection@@$1?_GUID_00000550_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@QAE@PAU_Connection@@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_com_ptr_t@V?$_com_IIID@U_Connection@@$1?_GUID_00000550_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_com_ptr_t@V?$_com_IIID@U_Recordset@@$1?_GUID_00000556_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@QAE@PAU_Recordset@@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_com_ptr_t@V?$_com_IIID@U_Recordset@@$1?_GUID_00000556_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_com_ptr_t@V?$_com_IIID@UParameters@@$1?_GUID_0000050d_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@QAE@PAUParameters@@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_com_ptr_t@V?$_com_IIID@UParameters@@$1?_GUID_0000050d_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_com_ptr_t@V?$_com_IIID@UErrors@@$1?_GUID_00000501_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@QAE@PAUErrors@@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_com_ptr_t@V?$_com_IIID@UErrors@@$1?_GUID_00000501_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_com_ptr_t@V?$_com_IIID@UFields@@$1?_GUID_00000564_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@QAE@PAUFields@@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_com_ptr_t@V?$_com_IIID@UFields@@$1?_GUID_00000564_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_com_ptr_t@V?$_com_IIID@UIDispatch@@$1?_GUID_00020400_0000_0000_c000_000000000046@@3U__s_GUID@@B@@@@QAE@PAUIDispatch@@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_com_ptr_t@V?$_com_IIID@UIDispatch@@$1?_GUID_00020400_0000_0000_c000_000000000046@@3U__s_GUID@@B@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_ostream@GU?$char_traits@G@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?put@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAEAAV12@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?flush@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAEAAV12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_ios@GU?$char_traits@G@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?setstate@?$basic_ios@GU?$char_traits@G@std@@@std@@QAEXH_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?rdbuf@?$basic_ios@GU?$char_traits@G@std@@@std@@QBEPAV?$basic_streambuf@GU?$char_traits@G@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@?$basic_ios@GU?$char_traits@G@std@@@std@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_streambuf@GU?$char_traits@G@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sbumpc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sgetc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?snextc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sputc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QAEGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?overflow@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pbackfail@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?showmanyc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?underflow@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?uflow@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?xsgetn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEHPAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?xsputn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?seekoff@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAE?AV?$fpos@H@2@JHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?seekpos@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?setbuf@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEPAV12@PAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sync@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?imbue@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEXABVlocale@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_istream@GU?$char_traits@G@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_Sentry_base@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?overflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pbackfail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?underflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?seekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@JHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?seekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CW2AEX@$0IA@@ATL@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CW2AEX@$0IA@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendFormat@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAAXPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_DebugHeapAllocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_DebugHeapAllocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_ostream@GU?$char_traits@G@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_ios@GU?$char_traits@G@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_streambuf@GU?$char_traits@G@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_ostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_ios@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_istream@GU?$char_traits@G@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_istream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_D?$basic_ostream@GU?$char_traits@G@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_D?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_D?$basic_istream@GU?$char_traits@G@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_D?$basic_istream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MapDialogRect@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAEHPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnInitDialog@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDestroy@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_com_ptr_t@V?$_com_IIID@UIUnknown@@$1?_GUID_00000000_0000_0000_c000_000000000046@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_com_ptr_t@V?$_com_IIID@UIUnknown@@$1?_GUID_00000000_0000_0000_c000_000000000046@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_com_ptr_t@V?$_com_IIID@UProperty@@$1?_GUID_00000503_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_com_ptr_t@V?$_com_IIID@UProperty@@$1?_GUID_00000503_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_com_ptr_t@V?$_com_IIID@UProperties@@$1?_GUID_00000504_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_com_ptr_t@V?$_com_IIID@UProperties@@$1?_GUID_00000504_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_com_ptr_t@V?$_com_IIID@UError@@$1?_GUID_00000500_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_com_ptr_t@V?$_com_IIID@UError@@$1?_GUID_00000500_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_com_ptr_t@V?$_com_IIID@UField@@$1?_GUID_00000569_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_com_ptr_t@V?$_com_IIID@UField@@$1?_GUID_00000569_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_com_ptr_t@V?$_com_IIID@U_Parameter@@$1?_GUID_0000050c_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_com_ptr_t@V?$_com_IIID@U_Parameter@@$1?_GUID_0000050c_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_com_ptr_t@V?$_com_IIID@U_Connection@@$1?_GUID_00000550_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_com_ptr_t@V?$_com_IIID@U_Connection@@$1?_GUID_00000550_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_com_ptr_t@V?$_com_IIID@U_Recordset@@$1?_GUID_00000556_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_com_ptr_t@V?$_com_IIID@U_Recordset@@$1?_GUID_00000556_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_com_ptr_t@V?$_com_IIID@UParameters@@$1?_GUID_0000050d_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_com_ptr_t@V?$_com_IIID@UParameters@@$1?_GUID_0000050d_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_com_ptr_t@V?$_com_IIID@UErrors@@$1?_GUID_00000501_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_com_ptr_t@V?$_com_IIID@UErrors@@$1?_GUID_00000501_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_com_ptr_t@V?$_com_IIID@UFields@@$1?_GUID_00000564_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_com_ptr_t@V?$_com_IIID@UFields@@$1?_GUID_00000564_0000_0010_8000_00aa006d2ea4@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_com_ptr_t@V?$_com_IIID@UIDispatch@@$1?_GUID_00020400_0000_0000_c000_000000000046@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_com_ptr_t@V?$_com_IIID@UIDispatch@@$1?_GUID_00020400_0000_0000_c000_000000000046@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$_DebugHeapAllocator@D@std@@@std@@IAE@V?$_DebugHeapAllocator@D@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Osfx@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$basic_ios@GU?$char_traits@G@std@@@std@@QAEXH_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?tie@?$basic_ios@GU?$char_traits@G@std@@@std@@QBEPAV?$basic_ostream@GU?$char_traits@G@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Sentry_base@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_Sentry_base@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pubsync@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Unlock@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?gptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?egptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?gbump@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?epptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Gninc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IAEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pbump@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Pninc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IAEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ipfx@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE_N_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Sentry_base@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@?$CW2AEX@$0IA@@ATL@@AAEXPBGI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendFormatV@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEXPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckImplicitLoad@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@AAE_NPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindStringResourceInstance@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAE@PAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateControlLic@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendChar@?$CSimpleStringT@D$0A@@ATL@@QAEXD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ExecuteDlgInit@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AdviseSinkMap@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEJ_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$_DebugHeapAllocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lock@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFormattedLength@?$ChTraitsCRT@D@ATL@@SAHPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Format@?$ChTraitsCRT@D@ATL@@SAHPADPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndClassName@?$CAxWindow2T@VCWindow@ATL@@@ATL@@SAPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateControlLicEx@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@2ABU_GUID@@PAU4@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CAxWindowT@VCWindow@ATL@@@ATL@@QAE@PAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@?$CComPtrBase@UIUnknown@@@ATL@@QAEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAEPAPAUIAxWinHostWindowLic@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIAxWinHostWindowLic@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$_DebugHeapAllocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StartDialogProc@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateInstance@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SGJPAPAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DialogProc@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Pow_int@N@@YANNH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Pow_int@H@@YAHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Pow_int@M@@YAMMH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Pow_int@O@@YAOOH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_DebugHeapDelete@Vfacet@locale@std@@@std@@YAXPAVfacet@locale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@G@std@@@std@@YAABV?$ctype@G@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$AtlAlignUp@H@ATL@@YGHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_DebugHeapDelete@Vlocale@std@@@std@@YAXPAVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_DebugHeapDelete@X@std@@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$QueryHost@UIAxWinHostWindowLic@@@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJPAPAUIAxWinHostWindowLic@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$QueryInterface@UIUnknown@@@?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEJPAPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Glocale@std@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIDD@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DestroyWindow@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryHost@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnFinalMessage@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAEXPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0L@PGEBGEDK@ppUnk?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07MEKCDCMA@pp?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3935bda8_4ed9_495c_8650_e01fc1e38a4b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_cast@@@8??0bad_cast@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_cast@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?DialogProc@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_ATL_MSG@ATL@@QAE@PAUHWND__@@IIJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0N@JELNCKOF@m_dwRef?5?$DN?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_AtlFinalConstruct@CComObjectRootBase@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FinalConstruct@CComObjectRootBase@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetVoid@CComObjectRootBase@ATL@@QAEXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IEnumUnknown@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComObjectRootBase@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?QueryInterface@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_InternalQueryInterface@?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_GetEntries@?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_09BEHAHIFA@_CComEnum?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000100_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_entries@?1??_GetEntries@?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AddRef@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Next@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJKPAPAUIUnknown@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Skip@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reset@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clone@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJPAPAUIEnumUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@QAEJPAPAUIUnknown@@0PAU3@W4CComEnumFlags@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIUnknown@@@ATL@@QAEPAUIUnknown@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetWindowLongPtrA@@YAJPAUHWND__@@HJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWNDPROC@CWndProcThunk@ATL@@QAEP6GJPAUHWND__@@IIJ@ZXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCodeAddress@CDynamicStdCallThunk@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_06CIAHICCP@pThunk?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetCodeAddress@_stdcallthunk@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@CWndProcThunk@ATL@@QAEXP6GJPAUHWND__@@IIJ@ZPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@CDynamicStdCallThunk@ATL@@QAEXKPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@_stdcallthunk@ATL@@QAEXKPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ExtractCreateWndData@CAtlWinModule@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FA@KBNNCCJL@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09HIEJFN@m_bLocked?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CWindow@ATL@@QAE@PAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BF@CCFFBNDL@?$CI?$CIHRESULT?$CJ?$CIhr?$CJ?5?$DO?$DN?50?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?A2T@@YAPADPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDlgItemMessageA@CWindow@ATL@@QAEJHIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Stz@?$fpos@H@std@@0HA
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT ?Create@CWindow@ATL@@QAEPAUHWND__@@PBDPAU3@V_U_RECT@2@0KKV_U_MENUorID@2@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?rcDefault@CWindow@ATL@@2UtagRECT@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlFindStringResourceInstance@ATL@@YAPAUHINSTANCE__@@IG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@IG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrowLastWin32@ATL@@YGXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FD@MKDEOELP@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CWndProcThunk@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CDynamicStdCallThunk@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DE@JJEOCICO@ERROR?5?9?5Object?5deleted?5before?5wi@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$CWindowImplRoot@VCWindow@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CMessageMap@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CWndProcThunk@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CDynamicStdCallThunk@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Invoke@CComTypeInfoHolder@ATL@@QAEJPAUIDispatch@@JABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnsureTI@CComTypeInfoHolder@ATL@@QAEJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTI@CComTypeInfoHolder@ATL@@QAEJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BO@GHLKPFE@m_plibid?5?$CB?$DN?50?5?$CG?$CG?5m_pguid?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DG@CJCBGKEH@Did?5you?5forget?5to?5pass?5the?5LIBID@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0GE@MNEAPMLF@?$CBInlineIsEqualGUID?$CI?$CKm_plibid?0?5GU@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@AAVCComCriticalSection@1@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0L@MPGHMANA@?$CBm_bLocked?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Lock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EG@JLAFHAGH@ERROR?5?3?5Unable?5to?5lock?5critical?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?m_libid@CAtlModule@ATL@@2U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UITypeLib@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _InlineIsEqualGUID
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0GE@IPBGNBKO@Warning?5?3?5CComTypeInfoHolder?3?3Ge@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DN@OOAEELGE@?7See?5IDispatchImpl?5overview?5help@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??C?$CComPtrBase@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DG@JANIJOBP@ERROR?5?3?5Unable?5to?5load?5Typelibra@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DE@PFCDKHBK@?7Verify?5TypelibID?5and?5major?5vers@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FB@GGFNIACC@?7IDispatchImpl?0?5CStockPropImpl?0?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UITypeInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAPAUITypeInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UITypeInfo@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@PAUITypeInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UITypeInfo2@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UITypeInfo2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$QueryInterface@UITypeInfo2@@@IUnknown@@QAGJPAPAUITypeInfo2@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_00020412_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??C?$CComPtrBase@UITypeInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeInfo@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UITypeInfo2@@@ATL@@QAEPAPAUITypeInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?4UITypeInfo2@@@?$CComPtr@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@ABV?$CComPtr@UITypeInfo2@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_00020401_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Detach@?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddTermFunc@CAtlModule@ATL@@QAEJP6GXK@ZK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Cleanup@CComTypeInfoHolder@ATL@@SGXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_07PJPEDDJP@dw?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Estringdispid@CComTypeInfoHolder@ATL@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadNameCache@CComTypeInfoHolder@ATL@@QAEJPAUITypeInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ICComBSTR@ATL@@QAEPAPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CComBSTR@ATL@@QAEXPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CComBSTR@ATL@@QAEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPAGIKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocslen@@YAHPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_tih@?$IDispatchImpl@UISignature@@$1?IID_ISignature@@3U_GUID@@B$1?LIBID_XMLSIGNLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?GetTypeInfo@CComTypeInfoHolder@ATL@@QAEJIKPAPAUITypeInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTI@CComTypeInfoHolder@ATL@@QAEJKPAPAUITypeInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0M@NNHBFKBG@ppInfo?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AtlIsValidString@ATL@@YAHPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$basic_istream@GU?$char_traits@G@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$basic_streambuf@GU?$char_traits@G@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$basic_ios@GU?$char_traits@G@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$basic_ostream@GU?$char_traits@G@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@2IB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?FindNextDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PAU3@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlHresultFromLastError@ATL@@YAJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetWindowPos@CWindow@ATL@@QAEHPAUHWND__@@HHHHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetWindowContextHelpId@CWindow@ATL@@QAEHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_U_RECT@ATL@@QAE@PAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_U_MENUorID@ATL@@QAE@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIStream@@@ATL@@QBEPAUIStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ParseInitData@_DialogSplitHelper@ATL@@SAJPAUIStream@@PAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@CComBSTR@ATL@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIStream@@@ATL@@QAEPAPAUIStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIStream@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindCreateData@_DialogSplitHelper@ATL@@SAKKPAEPAPAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0L@KAJDHFFC@dwLen?5?$DN?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?IsActiveXControl@_DialogSplitHelper@ATL@@SA_NPAUDLGITEMTEMPLATE@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindow@CWindow@ATL@@QBE?AV12@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindFirstDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PBUDLGTEMPLATE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DlgTemplateItemCount@_DialogSplitHelper@ATL@@SAAAGPAUDLGTEMPLATE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsDialogEx@_DialogSplitHelper@ATL@@SAHPBUDLGTEMPLATE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetResourceInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT _$E1
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
;	COMDAT ??0CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _$E2
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
;	COMDAT ??1CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Term@CAtlWinModule@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
;	COMDAT ?AddCreateWndData@CAtlWinModule@ATL@@QAEXPAU_AtlCreateWndData@2@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@MFNOGLO@m_hWnd?5?$DN?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCAxUIWindow@ATL@@@ATL@@6BIOleInPlaceUIWindow@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?QueryInterface@?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_InternalQueryInterface@CAxUIWindow@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_GetEntries@CAxUIWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0M@EHKCMBND@CAxUIWindow?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000115_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000114_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_entries@?1??_GetEntries@CAxUIWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AddRef@?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindow@CAxUIWindow@ATL@@UAGJPAPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndClassName@CWindow@ATL@@SAPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Register@_ATL_WNDCLASSINFOA@ATL@@QAEGPAP6GJPAUHWND__@@IIJ@Z@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndClassInfo@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StartWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?wc@?1??GetWndClassInfo@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@3@XZ@4U43@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?GetWndStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndExStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndExStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndCaption@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@GPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@FJBCDDKK@AXWIN?5UI?5Window?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ContextSensitiveHelp@CAxUIWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBorder@CAxUIWindow@ATL@@UAGJPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RequestBorderSpace@CAxUIWindow@ATL@@UAGJPBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBorderSpace@CAxUIWindow@ATL@@UAGJPBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetActiveObject@CAxUIWindow@ATL@@UAGJPAUIOleInPlaceActiveObject@@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAEPAUIOleInPlaceActiveObject@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$CComObject@VCAxUIWindow@ATL@@@ATL@@6B?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@1@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ProcessWindowMessage@CAxUIWindow@ATL@@UAEHPAUHWND__@@IIJAAJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FinalRelease@CAxUIWindow@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DestroyWindow@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEP6GJPAUHWND__@@IIJ@ZXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DefWindowProcA@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEJIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindowLongPtrA@@YAJPAUHWND__@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnFinalMessage@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEXPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAxUIWindow@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CAxUIWindow@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IOleInPlaceUIWindow@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IOleWindow@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7?$CComObject@VCAxFrameWindow@ATL@@@ATL@@6BIOleInPlaceFrame@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?QueryInterface@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_InternalQueryInterface@CAxFrameWindow@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_GetEntries@CAxFrameWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0P@MFMDEJMN@CAxFrameWindow?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000116_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_entries@?1??_GetEntries@CAxFrameWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AddRef@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindow@CAxFrameWindow@ATL@@UAGJPAPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0L@JIHHHPOK@phwnd?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Create@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndClassInfo@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?wc@?1??GetWndClassInfo@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@3@XZ@4U43@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?GetWndCaption@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BD@LIOMMJMF@AXWIN?5Frame?5Window?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ContextSensitiveHelp@CAxFrameWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBorder@CAxFrameWindow@ATL@@UAGJPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RequestBorderSpace@CAxFrameWindow@ATL@@UAGJPBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBorderSpace@CAxFrameWindow@ATL@@UAGJPBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetActiveObject@CAxFrameWindow@ATL@@UAGJPAUIOleInPlaceActiveObject@@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InsertMenus@CAxFrameWindow@ATL@@UAGJPAUHMENU__@@PAUtagOleMenuGroupWidths@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMenu@CAxFrameWindow@ATL@@UAGJPAUHMENU__@@PAXPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveMenus@CAxFrameWindow@ATL@@UAGJPAUHMENU__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatusText@CAxFrameWindow@ATL@@UAGJPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnableModeless@CAxFrameWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TranslateAcceleratorA@CAxFrameWindow@ATL@@UAGJPAUtagMSG@@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$CComObject@VCAxFrameWindow@ATL@@@ATL@@6B?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@1@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ProcessWindowMessage@CAxFrameWindow@ATL@@UAEHPAUHWND__@@IIJAAJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FinalRelease@CAxFrameWindow@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAxFrameWindow@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CAxFrameWindow@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IOleInPlaceFrame@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Detach@CWindow@ATL@@QAEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7SigException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComVariant@ATL@@QAE@ABUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pMap@?1??GetCategoryMap@CSignature@@SAPBU_ATL_CATMAP_ENTRY@ATL@@XZ@4QBU34@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateRegistryFromResourceD@CAtlModule@ATL@@QAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateRegistryFromResourceDHelper@CAtlModule@ATL@@QAGJPBGHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIRegistrar@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIRegistrar@@@ATL@@QAEPAPAUIRegistrar@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BJ@MKNPNODP@0?5?$CB?$DN?5pMapEntries?9?$DOszData?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??C?$CComPtrBase@UIRegistrar@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIRegistrar@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIRegistrar@@@ATL@@QBEPAUIRegistrar@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_entries@?1??_GetEntries@CSignature@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ@4QBU34@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b722bccb_4e68_101b_a2bc_00aa00404770
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020400_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_62ec64dc_b26d_46ce_9e33_24289bcf5f63
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0P@BMHEGBAP@ppvObject?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@DBHNDLKF@pThis?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DC@BBKMJDPM@pEntries?9?$DOpFunc?5?$DN?$DN?5?$CI?$CIATL?3?3_ATL_C@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DJ@HNJMKNAP@_GetEntries?$CI?$CJ?$FL0?$FN?4pFunc?5?$DN?$DN?5?$CI?$CIATL?3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Cache@CComObjectRootBase@ATL@@SGJPAXABU_GUID@@PAPAXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Decrement@CComSingleThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EC@FOHBGNDM@0?5?$CG?$CG?5?$CCRelease?5called?5on?5a?5pointe@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0P@IDNKKMJE@m_dwRef?5?$CB?$DN?5?91L?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Increment@CComSingleThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_c8be4864_227a_4a1b_84ee_473681bd4872
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0d61aa35_48d5_47f5_8249_f685f75250fd
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?licenseTimeout@CLicense@@0HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szInvalidDateTimeSpan@ATL@@3QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szInvalidDateTime@ATL@@3QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Week@CFileTime@ATL@@2_KB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Day@CFileTime@ATL@@2_KB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Hour@CFileTime@ATL@@2_KB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Minute@CFileTime@ATL@@2_KB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Second@CFileTime@ATL@@2_KB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Millisecond@CFileTime@ATL@@2_KB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@GV?$StrTraitATL@GV?$ChTraitsCRT@G@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09BBJEMDLA@nRet?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?SetManager@CNilStringData@ATL@@QAEXPAUIAtlStringMgr@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@MLJMCNFJ@pStringMgr?5?$DN?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0CNilStringData@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CAtlStringMgr@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IFixedStringLog@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CFixedStringLog@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?s_pLog@CFixedStringMgr@ATL@@2PAVIFixedStringLog@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CFixedStringMgr@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08DMHHBMMN@lpa?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08DIHJLFDJ@lpw?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FA@OHHMODBN@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FC@CFIFHLCH@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0CAtlException@ATL@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI1?AVCAtlException@ATL@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA1?AVCAtlException@ATL@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVCAtlException@ATL@@@84
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVCAtlException@ATL@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_strthunks@ATL@@3U_AtlStringThunks@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08GPODJFIN@m_p?5?$DN?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FB@IAFJMJBP@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?s_bWin9x@?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@4_NA
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT ??_B?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@51
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7ios_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$ctype@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7ctype_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$codecvt@GDH@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7codecvt_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7facet@locale@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7range_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7underflow_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7overflow_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7invalid_argument@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7domain_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7bad_exception@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CBufferVariant@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000562_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000403_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000402_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000556_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000555_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000054f_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000050e_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000550_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000515_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b08400bd_f9d1_4d02_b856_71d5dba123e9
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000054e_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000508_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000505_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000283_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000517_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000568_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000567_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000565_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000516_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000050d_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000050c_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000564_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000054d_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000506_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000569_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000054c_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000501_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000500_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000534_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000504_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000503_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000513_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000512_0000_0010_8000_00aa006d2ea4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_0000_000000000000
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7_com_error@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CConfig@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWindow@ATL@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MessageBoxA@CWindow@ATL@@QAEHPBD0I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMessageA@CWindow@ATL@@QAEJIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDlgItem@CWindow@ATL@@QBE?AV12@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CenterWindow@CWindow@ATL@@QAEHPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetStyle@CWindow@ATL@@QBEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BH@ENLIMLGL@?3?3IsWindow?$CIhWndParent?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@LBNLFONB@?3?3IsWindow?$CIhWndCenter?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?A2WBSTR@@YAPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BJ@OGJFCAD@nResult?5?$DN?$DN?5nConvertedLen?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??BCComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@CComBSTR@ATL@@QAE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringResource@CComBSTR@ATL@@SA_NIAAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0O@LPAFDJOF@bstrText?5?$DN?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_01GBGANLPD@0?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BN@BNLFFEBD@Invalid?5message?5map?5ID?5?$CI?$CFi?$CJ?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnableWindow@CWindow@ATL@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CShowSelectCert@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS, CRT$XCU
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?g_pfnGetThreadACP@ATL@@3P6GIXZA		; ATL::g_pfnGetThreadACP
PUBLIC	?_AtlGetThreadACPThunk@ATL@@YGIXZ		; ATL::_AtlGetThreadACPThunk
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?_pAtlModule@ATL@@3PAVCAtlModule@1@A		; ATL::_pAtlModule
PUBLIC	?m_libid@CAtlModule@ATL@@2U_GUID@@A		; ATL::CAtlModule::m_libid
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?Millisecond@CFileTime@ATL@@2_KB		; ATL::CFileTime::Millisecond
PUBLIC	?Second@CFileTime@ATL@@2_KB			; ATL::CFileTime::Second
PUBLIC	?Minute@CFileTime@ATL@@2_KB			; ATL::CFileTime::Minute
PUBLIC	?Hour@CFileTime@ATL@@2_KB			; ATL::CFileTime::Hour
PUBLIC	?Day@CFileTime@ATL@@2_KB			; ATL::CFileTime::Day
PUBLIC	?Week@CFileTime@ATL@@2_KB			; ATL::CFileTime::Week
PUBLIC	?szInvalidDateTime@ATL@@3QBDB			; ATL::szInvalidDateTime
PUBLIC	?szInvalidDateTimeSpan@ATL@@3QBDB		; ATL::szInvalidDateTimeSpan
PUBLIC	?s_pLog@CFixedStringMgr@ATL@@2PAVIFixedStringLog@2@A ; ATL::CFixedStringMgr::s_pLog
PUBLIC	?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@GV?$StrTraitATL@GV?$ChTraitsCRT@G@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<unsigned short,ATL::StrTraitATL<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::c_bIsMFCDLLTraits
PUBLIC	?_strthunks@ATL@@3U_AtlStringThunks@1@A		; ATL::_strthunks
PUBLIC	?GetEnvironmentVariableWThunk@ATL@@YGKPBGPAGK@Z	; ATL::GetEnvironmentVariableWThunk
PUBLIC	?rcDefault@CWindow@ATL@@2UtagRECT@@A		; ATL::CWindow::rcDefault
PUBLIC	?licenseTimeout@CLicense@@0HB			; CLicense::licenseTimeout
PUBLIC	?CompareStringWThunk@ATL@@YGHKKPBGH0H@Z		; ATL::CompareStringWThunk
PUBLIC	?GetStringTypeExWThunk@ATL@@YGHKKPBGHPAG@Z	; ATL::GetStringTypeExWThunk
PUBLIC	?m_bInitFailed@CAtlBaseModule@ATL@@2_NA		; ATL::CAtlBaseModule::m_bInitFailed
PUBLIC	?lstrcmpiWThunk@ATL@@YGHPBG0@Z			; ATL::lstrcmpiWThunk
PUBLIC	?CharLowerWThunk@ATL@@YGPAGPAG@Z		; ATL::CharLowerWThunk
PUBLIC	?CharUpperWThunk@ATL@@YGPAGPAG@Z		; ATL::CharUpperWThunk
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::c_bIsMFCDLLTraits
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_BSS	SEGMENT
?_pAtlModule@ATL@@3PAVCAtlModule@1@A DD 01H DUP (?)	; ATL::_pAtlModule
_BSS	ENDS
;	COMDAT ?m_libid@CAtlModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CAtlModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CAtlModule::m_libid
_BSS	ENDS
;	COMDAT ?s_pLog@CFixedStringMgr@ATL@@2PAVIFixedStringLog@2@A
_BSS	SEGMENT
?s_pLog@CFixedStringMgr@ATL@@2PAVIFixedStringLog@2@A DD 01H DUP (?) ; ATL::CFixedStringMgr::s_pLog
_BSS	ENDS
;	COMDAT ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA
_BSS	SEGMENT
?m_bInitFailed@CAtlBaseModule@ATL@@2_NA DB 01H DUP (?)	; ATL::CAtlBaseModule::m_bInitFailed
_BSS	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?_strthunks@ATL@@3U_AtlStringThunks@1@A
_DATA	SEGMENT
?_strthunks@ATL@@3U_AtlStringThunks@1@A DD FLAT:?CompareStringWThunk@ATL@@YGHKKPBGH0H@Z ; ATL::_strthunks
	DD	FLAT:?GetStringTypeExWThunk@ATL@@YGHKKPBGHPAG@Z
	DD	FLAT:?lstrcmpiWThunk@ATL@@YGHPBG0@Z
	DD	FLAT:?CharLowerWThunk@ATL@@YGPAGPAG@Z
	DD	FLAT:?CharUpperWThunk@ATL@@YGPAGPAG@Z
	DD	FLAT:?GetEnvironmentVariableWThunk@ATL@@YGKPBGPAGK@Z
_DATA	ENDS
;	COMDAT ?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB
CONST	SEGMENT
?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB DB 00H ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::c_bIsMFCDLLTraits
CONST	ENDS
;	COMDAT ?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@GV?$StrTraitATL@GV?$ChTraitsCRT@G@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB
CONST	SEGMENT
?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@GV?$StrTraitATL@GV?$ChTraitsCRT@G@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB DB 00H ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<unsigned short,ATL::StrTraitATL<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::c_bIsMFCDLLTraits
CONST	ENDS
;	COMDAT ?Millisecond@CFileTime@ATL@@2_KB
CONST	SEGMENT
?Millisecond@CFileTime@ATL@@2_KB DQ 0000000000002710H	; ATL::CFileTime::Millisecond
CONST	ENDS
;	COMDAT ?Second@CFileTime@ATL@@2_KB
CONST	SEGMENT
?Second@CFileTime@ATL@@2_KB DQ 0000000000989680H	; ATL::CFileTime::Second
CONST	ENDS
;	COMDAT ?Minute@CFileTime@ATL@@2_KB
CONST	SEGMENT
?Minute@CFileTime@ATL@@2_KB DQ 0000000023c34600H	; ATL::CFileTime::Minute
CONST	ENDS
;	COMDAT ?Hour@CFileTime@ATL@@2_KB
CONST	SEGMENT
?Hour@CFileTime@ATL@@2_KB DQ 0000000861c46800H		; ATL::CFileTime::Hour
CONST	ENDS
;	COMDAT ?Day@CFileTime@ATL@@2_KB
CONST	SEGMENT
?Day@CFileTime@ATL@@2_KB DQ 000000c92a69c000H		; ATL::CFileTime::Day
CONST	ENDS
;	COMDAT ?Week@CFileTime@ATL@@2_KB
CONST	SEGMENT
?Week@CFileTime@ATL@@2_KB DQ 0000058028e44000H		; ATL::CFileTime::Week
CONST	ENDS
CONST	SEGMENT
$SG198798 DB	'Invalid DateTime', 00H
CONST	ENDS
;	COMDAT ?szInvalidDateTime@ATL@@3QBDB
CONST	SEGMENT
?szInvalidDateTime@ATL@@3QBDB DD FLAT:$SG198798		; ATL::szInvalidDateTime
CONST	ENDS
CONST	SEGMENT
	ORG $+3
$SG198800 DB	'Invalid DateTimeSpan', 00H
CONST	ENDS
;	COMDAT ?szInvalidDateTimeSpan@ATL@@3QBDB
CONST	SEGMENT
?szInvalidDateTimeSpan@ATL@@3QBDB DD FLAT:$SG198800	; ATL::szInvalidDateTimeSpan
CONST	ENDS
;	COMDAT ?licenseTimeout@CLicense@@0HB
CONST	SEGMENT
?licenseTimeout@CLicense@@0HB DD 01eH			; CLicense::licenseTimeout
CONST	ENDS
CONST	SEGMENT
	ORG $+3
$SG202095 DB	'CShowSelectCert::CShowSelectCert', 00H
	ORG $+3
$SG202096 DB	'.\ShowSelectCert.cpp', 00H
	ORG $+3
$SG202099 DB	'CShowSelectCert::CShowSelectCert', 00H
	ORG $+3
$SG202100 DB	'.\ShowSelectCert.cpp', 00H
	ORG $+3
$SG202103 DB	'CShowSelectCert::CShowSelectCert', 00H
	ORG $+3
$SG202104 DB	'.\ShowSelectCert.cpp', 00H
	ORG $+3
$SG202107 DB	'CShowSelectCert::CShowSelectCert', 00H
	ORG $+3
$SG202108 DB	'.\ShowSelectCert.cpp', 00H
	ORG $+3
$SG202121 DB	'CShowSelectCert::CShowSelectCert', 00H
	ORG $+3
$SG202122 DB	'.\ShowSelectCert.cpp', 00H
	ORG $+3
$SG202125 DB	'CShowSelectCert::CShowSelectCert', 00H
	ORG $+3
$SG202126 DB	'.\ShowSelectCert.cpp', 00H
	ORG $+3
$SG202128 DB	'CShowSelectCert::CShowSelectCert', 00H
	ORG $+3
$SG202129 DB	'.\ShowSelectCert.cpp', 00H
	ORG $+3
$SG202135 DB	'%02x', 00H
	ORG $+3
$SG202136 DB	' ', 00H
	ORG $+2
$SG202138 DB	'CShowSelectCert::CShowSelectCert', 00H
	ORG $+3
$SG202139 DB	'.\ShowSelectCert.cpp', 00H
	ORG $+3
$SG202151 DB	'CShowSelectCert::~CShowSelectCert', 00H
	ORG $+2
$SG202152 DB	'.\ShowSelectCert.cpp', 00H
	ORG $+3
$SG202153 DB	'CShowSelectCert::~CShowSelectCert', 00H
	ORG $+2
$SG202154 DB	'.\ShowSelectCert.cpp', 00H
	ORG $+3
$SG202155 DB	'CShowSelectCert::~CShowSelectCert', 00H
	ORG $+2
$SG202156 DB	'.\ShowSelectCert.cpp', 00H
	ORG $+3
$SG202157 DB	'CShowSelectCert::~CShowSelectCert', 00H
	ORG $+2
$SG202158 DB	'.\ShowSelectCert.cpp', 00H
	ORG $+3
$SG202159 DB	'CShowSelectCert::~CShowSelectCert', 00H
	ORG $+2
$SG202160 DB	'.\ShowSelectCert.cpp', 00H
	ORG $+3
$SG203758 DB	'pThis != 0', 00H
	ORG $+1
$SG203759 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlwin.h', 00H
	ORG $+1
$SG203769 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlwin.h', 00H
	ORG $+1
$SG203770 DB	'Subclassing through a hook discarded.', 0aH, 00H
	ORG $+1
$SG203776 DB	'pp != 0', 00H
$SG203777 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlcom.h', 00H
CONST	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT
?g_pfnGetThreadACP@ATL@@3P6GIXZA DD FLAT:?_AtlGetThreadACPThunk@ATL@@YGIXZ ; ATL::g_pfnGetThreadACP
_DATA	ENDS
;	COMDAT ?rcDefault@CWindow@ATL@@2UtagRECT@@A
_DATA	SEGMENT
?rcDefault@CWindow@ATL@@2UtagRECT@@A DD 080000000H	; ATL::CWindow::rcDefault
	DD	080000000H
	DD	00H
	DD	00H
_DATA	ENDS
CONST	SEGMENT
	ORG $+1
$SG160708 DB	'pThis->m_pCurrentMsg == &msg', 00H
	ORG $+3
$SG160709 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlwin.h', 00H
	ORG $+1
$SG160733 DB	'pThis != 0', 00H
	ORG $+5
$SG160734 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlwin.h', 00H
	ORG $+1
$SG160741 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlwin.h', 00H
	ORG $+1
$SG160742 DB	'Subclassing through a hook discarded.', 0aH, 00H
	ORG $+1
$SG160758 DB	'pThis->m_pCurrentMsg == &msg', 00H
	ORG $+3
$SG160759 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlwin.h', 00H
	ORG $+1
$SG160782 DB	'm_hWnd == 0', 00H
	ORG $+4
$SG160783 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlwin.h', 00H
	ORG $+1
$SG160794 DB	'm_hWnd == hWnd', 00H
	ORG $+1
$SG160795 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlwin.h', 00H
	ORG $+1
$SG161005 DB	'm_begin == 0', 00H
	ORG $+3
$SG161006 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlcom.h', 00H
CONST	ENDS
PUBLIC	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z	; InterlockedExchangePointer
PUBLIC	?_AtlGetThreadACPFake@ATL@@YGIXZ		; ATL::_AtlGetThreadACPFake
PUBLIC	?_AtlGetThreadACPReal@ATL@@YGIXZ		; ATL::_AtlGetThreadACPReal
EXTRN	__imp__GetVersionExA@4:NEAR
EXTRN	__RTC_InitBase:NEAR
EXTRN	__RTC_Shutdown:NEAR
EXTRN	__RTC_CheckEsp:NEAR
EXTRN	___security_cookie:DWORD
EXTRN	@_RTC_CheckStackVars@8:NEAR
EXTRN	@__security_check_cookie@4:NEAR
;	COMDAT rtc$IMZ
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
; Function compile flags: /Odt /RTCsu
rtc$TMZ	ENDS
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT
_pfnGetThreadACP$ = -164				; size = 4
_ver$ = -156						; size = 148
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPThunk@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPThunk, COMDAT

; 134  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 164				; 000000a4H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-164]
	mov	ecx, 41					; 00000029H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 135  : 	OSVERSIONINFO ver;
; 136  : 	ATLGETTHREADACP pfnGetThreadACP;
; 137  : 
; 138  : 	ver.dwOSVersionInfoSize = sizeof( ver );

	mov	DWORD PTR _ver$[ebp], 148		; 00000094H

; 139  : 	::GetVersionEx( &ver );

	mov	esi, esp
	lea	eax, DWORD PTR _ver$[ebp]
	push	eax
	call	DWORD PTR __imp__GetVersionExA@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 140  : 	if( (ver.dwPlatformId == VER_PLATFORM_WIN32_NT) && (ver.dwMajorVersion >= 5) )

	cmp	DWORD PTR _ver$[ebp+16], 2
	jne	SHORT $L75782
	cmp	DWORD PTR _ver$[ebp+4], 5
	jb	SHORT $L75782

; 141  : 	{
; 142  : 		// On Win2K, CP_THREAD_ACP is supported
; 143  : 		pfnGetThreadACP = _AtlGetThreadACPReal;

	mov	DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPReal@ATL@@YGIXZ ; ATL::_AtlGetThreadACPReal

; 144  : 	}
; 145  : 	else

	jmp	SHORT $L75783
$L75782:

; 146  : 	{
; 147  : 		pfnGetThreadACP = _AtlGetThreadACPFake;

	mov	DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPFake@ATL@@YGIXZ ; ATL::_AtlGetThreadACPFake
$L75783:

; 148  : 	}
; 149  : 	InterlockedExchangePointer( reinterpret_cast< void** >(&g_pfnGetThreadACP), pfnGetThreadACP );

	mov	ecx, DWORD PTR _pfnGetThreadACP$[ebp]
	push	ecx
	push	OFFSET FLAT:?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	call	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ; InterlockedExchangePointer

; 150  : 
; 151  : 	return( g_pfnGetThreadACP() );

	mov	esi, esp
	call	DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	cmp	esi, esp
	call	__RTC_CheckEsp

; 152  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L205303
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	add	esp, 164				; 000000a4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L205303:
	DD	1
	DD	$L205302
$L205302:
	DD	-156					; ffffff64H
	DD	148					; 00000094H
	DD	$L205299
$L205299:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?_AtlGetThreadACPThunk@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPThunk
_TEXT	ENDS
EXTRN	__imp__InterlockedExchange@8:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_pNew$ = 12						; size = 4
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z PROC NEAR	; InterlockedExchangePointer, COMDAT

; 91   : {

	push	ebp
	mov	ebp, esp
	push	esi

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(::InterlockedExchange(reinterpret_cast<LONG*>(pp), static_cast<LONG>(reinterpret_cast<LONG_PTR>(pNew))))) );

	mov	esi, esp
	mov	eax, DWORD PTR _pNew$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pp$[ebp]
	push	ecx
	call	DWORD PTR __imp__InterlockedExchange@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 93   : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ENDP	; InterlockedExchangePointer
_TEXT	ENDS
EXTRN	__imp__GetACP@0:NEAR
EXTRN	__imp__GetLocaleInfoA@16:NEAR
EXTRN	__imp__GetThreadLocale@0:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT
_pch$75770 = -32					; size = 4
_szACP$ = -24						; size = 7
_lcidThread$ = -12					; size = 4
_nACP$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPFake@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPFake, COMDAT

; 101  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 102  : 	UINT nACP = 0;

	mov	DWORD PTR _nACP$[ebp], 0

; 103  : 
; 104  : 	LCID lcidThread = ::GetThreadLocale();

	mov	esi, esp
	call	DWORD PTR __imp__GetThreadLocale@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lcidThread$[ebp], eax

; 105  : 
; 106  : 	char szACP[7];
; 107  : 	// GetLocaleInfoA will fail for a Unicode-only LCID, but those are only supported on 
; 108  : 	// Windows 2000.  Since Windows 2000 supports CP_THREAD_ACP, this code path is never
; 109  : 	// executed on Windows 2000.
; 110  : 	if (::GetLocaleInfoA(lcidThread, LOCALE_IDEFAULTANSICODEPAGE, szACP, 7) != 0)

	mov	esi, esp
	push	7
	lea	eax, DWORD PTR _szACP$[ebp]
	push	eax
	push	4100					; 00001004H
	mov	ecx, DWORD PTR _lcidThread$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetLocaleInfoA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $L75769

; 111  : 	{
; 112  : 		char* pch = szACP;

	lea	edx, DWORD PTR _szACP$[ebp]
	mov	DWORD PTR _pch$75770[ebp], edx
$L75772:

; 113  : 		while (*pch != '\0')

	mov	eax, DWORD PTR _pch$75770[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $L75769

; 114  : 		{
; 115  : 			nACP *= 10;

	mov	edx, DWORD PTR _nACP$[ebp]
	imul	edx, 10					; 0000000aH
	mov	DWORD PTR _nACP$[ebp], edx

; 116  : 			nACP += *pch++ - '0';

	mov	eax, DWORD PTR _pch$75770[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _nACP$[ebp]
	lea	eax, DWORD PTR [edx+ecx-48]
	mov	DWORD PTR _nACP$[ebp], eax
	mov	ecx, DWORD PTR _pch$75770[ebp]
	add	ecx, 1
	mov	DWORD PTR _pch$75770[ebp], ecx

; 117  : 		}

	jmp	SHORT $L75772
$L75769:

; 118  : 	}
; 119  : 	// Use the Default ANSI Code Page if we were unable to get the thread ACP or if one does not exist.
; 120  : 	if (nACP == 0)

	cmp	DWORD PTR _nACP$[ebp], 0
	jne	SHORT $L75774

; 121  : 		nACP = ::GetACP();

	mov	esi, esp
	call	DWORD PTR __imp__GetACP@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nACP$[ebp], eax
$L75774:

; 122  : 
; 123  : 	return nACP;

	mov	eax, DWORD PTR _nACP$[ebp]

; 124  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L205316
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L205316:
	DD	1
	DD	$L205315
$L205315:
	DD	-24					; ffffffe8H
	DD	7
	DD	$L205313
$L205313:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	65					; 00000041H
	DB	67					; 00000043H
	DB	80					; 00000050H
	DB	0
?_AtlGetThreadACPFake@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPFake
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetThreadACPReal@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPReal, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp

; 128  : 	return( CP_THREAD_ACP );

	mov	eax, 3

; 129  : }

	pop	ebp
	ret	0
?_AtlGetThreadACPReal@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPReal
_TEXT	ENDS
PUBLIC	??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ	; ATL::CComTypeInfoHolder::stringdispid::~stringdispid
PUBLIC	??_Estringdispid@CComTypeInfoHolder@ATL@@QAEPAXI@Z ; ATL::CComTypeInfoHolder::stringdispid::`vector deleting destructor'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:NEAR			; `eh vector destructor iterator'
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
EXTRN	??_V@YAXPAX@Z:NEAR				; operator delete[]
; Function compile flags: /Odt /RTCsu
;	COMDAT ??_Estringdispid@CComTypeInfoHolder@ATL@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Estringdispid@CComTypeInfoHolder@ATL@@QAEPAXI@Z PROC NEAR ; ATL::CComTypeInfoHolder::stringdispid::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $L92193
	push	OFFSET FLAT:??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-4]
	push	edx
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $L92194
	mov	edx, DWORD PTR _this$[ebp]
	sub	edx, 4
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L92194:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $L92192
$L92193:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L92196
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L92196:
	mov	eax, DWORD PTR _this$[ebp]
$L92192:
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Estringdispid@CComTypeInfoHolder@ATL@@QAEPAXI@Z ENDP	; ATL::CComTypeInfoHolder::stringdispid::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??1CComBSTR@ATL@@QAE@XZ				; ATL::CComBSTR::~CComBSTR
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ PROC NEAR ; ATL::CComTypeInfoHolder::stringdispid::~stringdispid, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ ENDP	; ATL::CComTypeInfoHolder::stringdispid::~stringdispid
_TEXT	ENDS
EXTRN	__imp__SysFreeString@4:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CComBSTR@ATL@@QAE@XZ PROC NEAR			; ATL::CComBSTR::~CComBSTR, COMDAT
; _this$ = ecx

; 628  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 629  : 		::SysFreeString(m_str);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SysFreeString@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 630  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CComBSTR@ATL@@QAE@XZ ENDP				; ATL::CComBSTR::~CComBSTR
_TEXT	ENDS
PUBLIC	?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z	; ATL::_AtlInstallStringThunk
PUBLIC	?GetEnvironmentVariableWFake@ATL@@YGKPBGPAGK@Z	; ATL::GetEnvironmentVariableWFake
EXTRN	__imp__GetEnvironmentVariableW@12:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?GetEnvironmentVariableWThunk@ATL@@YGKPBGPAGK@Z
_TEXT	SEGMENT
_pszName$ = 8						; size = 4
_pszBuffer$ = 12					; size = 4
_nSize$ = 16						; size = 4
?GetEnvironmentVariableWThunk@ATL@@YGKPBGPAGK@Z PROC NEAR ; ATL::GetEnvironmentVariableWThunk, COMDAT

; 183  : {

	push	ebp
	mov	ebp, esp
	push	esi

; 184  : 	_AtlInstallStringThunk(reinterpret_cast<void**>(&_strthunks.pfnGetEnvironmentVariableW), 
; 185  : 		GetEnvironmentVariableWFake, ::GetEnvironmentVariableW);

	mov	eax, DWORD PTR __imp__GetEnvironmentVariableW@12
	push	eax
	push	OFFSET FLAT:?GetEnvironmentVariableWFake@ATL@@YGKPBGPAGK@Z ; ATL::GetEnvironmentVariableWFake
	push	OFFSET FLAT:?_strthunks@ATL@@3U_AtlStringThunks@1@A+20
	call	?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z ; ATL::_AtlInstallStringThunk
	add	esp, 12					; 0000000cH

; 186  : 
; 187  : 	return _strthunks.pfnGetEnvironmentVariableW(pszName, pszBuffer, nSize);

	mov	esi, esp
	mov	ecx, DWORD PTR _nSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _pszName$[ebp]
	push	eax
	call	DWORD PTR ?_strthunks@ATL@@3U_AtlStringThunks@1@A+20
	cmp	esi, esp
	call	__RTC_CheckEsp

; 188  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?GetEnvironmentVariableWThunk@ATL@@YGKPBGPAGK@Z ENDP	; ATL::GetEnvironmentVariableWThunk
_TEXT	ENDS
PUBLIC	?s_bWin9x@?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@4_NA ; `ATL::_AtlInstallStringThunk'::`2'::s_bWin9x
PUBLIC	??_B?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@51 ; `ATL::_AtlInstallStringThunk'::`2'::`local static guard'
EXTRN	__imp__GetVersion@0:NEAR
;	COMDAT ?s_bWin9x@?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@4_NA
_BSS	SEGMENT
?s_bWin9x@?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@4_NA DB 01H DUP (?) ; `ATL::_AtlInstallStringThunk'::`2'::s_bWin9x
_BSS	ENDS
;	COMDAT ??_B?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@51
_BSS	SEGMENT
??_B?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@51 DD 01H DUP (?) ; `ATL::_AtlInstallStringThunk'::`2'::`local static guard'
; Function compile flags: /Odt /RTCsu
_BSS	ENDS
;	COMDAT ?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z
_TEXT	SEGMENT
_pfn$ = -4						; size = 4
_ppThunk$ = 8						; size = 4
_pfnWin9x$ = 12						; size = 4
_pfnNT$ = 16						; size = 4
?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z PROC NEAR	; ATL::_AtlInstallStringThunk, COMDAT

; 115  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 116  : #pragma warning (push)
; 117  : #pragma warning (disable : 4640)	// construction of local static object is not thread-safe
; 118  : 
; 119  : 	static bool s_bWin9x = (::GetVersion()&0x80000000) != 0;

	mov	eax, DWORD PTR ??_B?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@51
	and	eax, 1
	jne	SHORT $L196078
	mov	ecx, DWORD PTR ??_B?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@51
	or	ecx, 1
	mov	DWORD PTR ??_B?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@51, ecx
	mov	esi, esp
	call	DWORD PTR __imp__GetVersion@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	and	eax, -2147483648			; 80000000H
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	BYTE PTR ?s_bWin9x@?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@4_NA, al ; `ATL::_AtlInstallStringThunk'::`2'::s_bWin9x
$L196078:

; 120  : 	
; 121  : #pragma warning (pop)
; 122  : 
; 123  : 	void* pfn;
; 124  : 	if (s_bWin9x)

	movzx	edx, BYTE PTR ?s_bWin9x@?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@4_NA ; `ATL::_AtlInstallStringThunk'::`2'::s_bWin9x
	test	edx, edx
	je	SHORT $L196080

; 125  : 		pfn = pfnWin9x;

	mov	eax, DWORD PTR _pfnWin9x$[ebp]
	mov	DWORD PTR _pfn$[ebp], eax

; 126  : 	else

	jmp	SHORT $L196081
$L196080:

; 127  : 	{
; 128  : #ifdef _CSTRING_ALWAYS_THUNK
; 129  : 		pfn = pfnWin9x;
; 130  : 		(void)pfnNT;
; 131  : #else
; 132  : 		pfn = pfnNT;

	mov	ecx, DWORD PTR _pfnNT$[ebp]
	mov	DWORD PTR _pfn$[ebp], ecx
$L196081:

; 133  : #endif
; 134  : 	}
; 135  : 	InterlockedExchangePointer(ppThunk, pfn);

	mov	edx, DWORD PTR _pfn$[ebp]
	push	edx
	mov	eax, DWORD PTR _ppThunk$[ebp]
	push	eax
	call	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ; InterlockedExchangePointer

; 136  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z ENDP	; ATL::_AtlInstallStringThunk
_TEXT	ENDS
PUBLIC	?_AtlGetConversionACP@ATL@@YGIXZ		; ATL::_AtlGetConversionACP
PUBLIC	??_C@_0FB@DNILBHEN@C?3?2Program?5Files?2Microsoft?5Visua@ ; `string'
PUBLIC	??0?$CW2AEX@$0IA@@ATL@@QAE@PBG@Z		; ATL::CW2AEX<128>::CW2AEX<128>
PUBLIC	??1?$CW2AEX@$0IA@@ATL@@QAE@XZ			; ATL::CW2AEX<128>::~CW2AEX<128>
PUBLIC	??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ			; ATL::CW2AEX<128>::operator char *
PUBLIC	??_C@_0BA@CLMJJCOM@nSize?5?$DO?$DN?5nSizeW?$AA@	; `string'
PUBLIC	??0?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::CTempBuffer<char,128,ATL::CCRTAllocator>
PUBLIC	??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>
PUBLIC	??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::operator char *
PUBLIC	?Allocate@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::Allocate
EXTRN	__imp__MultiByteToWideChar@24:NEAR
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	__imp__GetEnvironmentVariableA@12:NEAR
EXTRN	__CrtDbgReport:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T205349 DD	0ffffffffH
	DD	FLAT:$L205336
	DD	00H
	DD	FLAT:$L205337
$T205341 DD	019930520H
	DD	02H
	DD	FLAT:$T205349
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BA@CLMJJCOM@nSize?5?$DO?$DN?5nSizeW?$AA@
CONST	SEGMENT
??_C@_0BA@CLMJJCOM@nSize?5?$DO?$DN?5nSizeW?$AA@ DB 'nSize >= nSizeW', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FB@DNILBHEN@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT
??_C@_0FB@DNILBHEN@C?3?2Program?5Files?2Microsoft?5Visua@ DB 'C:\Program '
	DB	'Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\include\cs'
	DB	'tringt.h', 00H				; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?GetEnvironmentVariableWFake@ATL@@YGKPBGPAGK@Z
_TEXT	SEGMENT
$T205335 = -316						; size = 4
$T205333 = -312						; size = 4
$T205332 = -308						; size = 4
_pszNameA$ = -300					; size = 132
_pszBufferA$ = -160					; size = 132
_nSizeW$ = -24						; size = 4
_nSizeA$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_pszName$ = 8						; size = 4
_pszBuffer$ = 12					; size = 4
_nSize$ = 16						; size = 4
?GetEnvironmentVariableWFake@ATL@@YGKPBGPAGK@Z PROC NEAR ; ATL::GetEnvironmentVariableWFake, COMDAT

; 159  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetEnvironmentVariableWFake@ATL@@YGKPBGPAGK@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 304				; 00000130H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 160  : 	ULONG nSizeA;
; 161  : 	ULONG nSizeW;
; 162  : 	CTempBuffer<char> pszBufferA;

	lea	ecx, DWORD PTR _pszBufferA$[ebp]
	call	??0?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::CTempBuffer<char,128,ATL::CCRTAllocator>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 163  : 	CW2A pszNameA(pszName);

	mov	eax, DWORD PTR _pszName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pszNameA$[ebp]
	call	??0?$CW2AEX@$0IA@@ATL@@QAE@PBG@Z	; ATL::CW2AEX<128>::CW2AEX<128>
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 164  : 
; 165  : 	nSizeA = ::GetEnvironmentVariableA(pszNameA, NULL, 0);

	mov	esi, esp
	push	0
	push	0
	lea	ecx, DWORD PTR _pszNameA$[ebp]
	call	??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ		; ATL::CW2AEX<128>::operator char *
	push	eax
	call	DWORD PTR __imp__GetEnvironmentVariableA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nSizeA$[ebp], eax

; 166  : 	if (nSizeA == 0)

	cmp	DWORD PTR _nSizeA$[ebp], 0
	jne	SHORT $L196152

; 167  : 		return 0;

	mov	DWORD PTR $T205332[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pszNameA$[ebp]
	call	??1?$CW2AEX@$0IA@@ATL@@QAE@XZ		; ATL::CW2AEX<128>::~CW2AEX<128>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pszBufferA$[ebp]
	call	??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>
	mov	eax, DWORD PTR $T205332[ebp]
	jmp	$L196124
$L196152:

; 168  : 
; 169  : 	pszBufferA.Allocate(nSizeA*2);

	mov	ecx, DWORD PTR _nSizeA$[ebp]
	shl	ecx, 1
	push	ecx
	lea	ecx, DWORD PTR _pszBufferA$[ebp]
	call	?Allocate@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::Allocate

; 170  : 	::GetEnvironmentVariableA(pszNameA, pszBufferA, nSizeA);

	mov	esi, esp
	mov	edx, DWORD PTR _nSizeA$[ebp]
	push	edx
	lea	ecx, DWORD PTR _pszBufferA$[ebp]
	call	??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::operator char *
	push	eax
	lea	ecx, DWORD PTR _pszNameA$[ebp]
	call	??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ		; ATL::CW2AEX<128>::operator char *
	push	eax
	call	DWORD PTR __imp__GetEnvironmentVariableA@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 171  : 
; 172  : 	nSizeW = ::MultiByteToWideChar(_AtlGetConversionACP(), 0, pszBufferA, -1, NULL, 0);

	mov	esi, esp
	push	0
	push	0
	push	-1
	lea	ecx, DWORD PTR _pszBufferA$[ebp]
	call	??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::operator char *
	push	eax
	push	0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	push	eax
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nSizeW$[ebp], eax

; 173  : 	if (nSize == 0)

	cmp	DWORD PTR _nSize$[ebp], 0
	jne	SHORT $L196154

; 174  : 		return nSizeW;

	mov	eax, DWORD PTR _nSizeW$[ebp]
	mov	DWORD PTR $T205333[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pszNameA$[ebp]
	call	??1?$CW2AEX@$0IA@@ATL@@QAE@XZ		; ATL::CW2AEX<128>::~CW2AEX<128>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pszBufferA$[ebp]
	call	??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>
	mov	eax, DWORD PTR $T205333[ebp]
	jmp	$L196124
$L196154:

; 175  : 	ATLASSERT(nSize >= nSizeW);

	mov	ecx, DWORD PTR _nSize$[ebp]
	cmp	ecx, DWORD PTR _nSizeW$[ebp]
	jae	SHORT $L205334
	push	OFFSET FLAT:??_C@_0BA@CLMJJCOM@nSize?5?$DO?$DN?5nSizeW?$AA@
	push	0
	push	175					; 000000afH
	push	OFFSET FLAT:??_C@_0FB@DNILBHEN@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205334
	int	3
$L205334:

; 176  : 	::MultiByteToWideChar(_AtlGetConversionACP(), 0, pszBufferA, -1, pszBuffer, nSizeW);

	mov	esi, esp
	mov	eax, DWORD PTR _nSizeW$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszBuffer$[ebp]
	push	ecx
	push	-1
	lea	ecx, DWORD PTR _pszBufferA$[ebp]
	call	??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::operator char *
	push	eax
	push	0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	push	eax
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp

; 177  : 
; 178  : 	return nSizeW;

	mov	edx, DWORD PTR _nSizeW$[ebp]
	mov	DWORD PTR $T205335[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pszNameA$[ebp]
	call	??1?$CW2AEX@$0IA@@ATL@@QAE@XZ		; ATL::CW2AEX<128>::~CW2AEX<128>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pszBufferA$[ebp]
	call	??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>
	mov	eax, DWORD PTR $T205335[ebp]
$L196124:

; 179  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L205348
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$L205348:
	DD	2
	DD	$L205347
$L205347:
	DD	-160					; ffffff60H
	DD	132					; 00000084H
	DD	$L205342
	DD	-300					; fffffed4H
	DD	132					; 00000084H
	DD	$L205343
$L205343:
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	65					; 00000041H
	DB	0
$L205342:
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	65					; 00000041H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L205336:
	lea	ecx, DWORD PTR _pszBufferA$[ebp]
	jmp	??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>
$L205337:
	lea	ecx, DWORD PTR _pszNameA$[ebp]
	jmp	??1?$CW2AEX@$0IA@@ATL@@QAE@XZ		; ATL::CW2AEX<128>::~CW2AEX<128>
__ehhandler$?GetEnvironmentVariableWFake@ATL@@YGKPBGPAGK@Z:
	mov	eax, OFFSET FLAT:$T205341
	jmp	___CxxFrameHandler
text$x	ENDS
?GetEnvironmentVariableWFake@ATL@@YGKPBGPAGK@Z ENDP	; ATL::GetEnvironmentVariableWFake
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetConversionACP@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetConversionACP, COMDAT

; 157  : {

	push	ebp
	mov	ebp, esp
	push	esi

; 158  : 	return( g_pfnGetThreadACP() );

	mov	esi, esp
	call	DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	cmp	esi, esp
	call	__RTC_CheckEsp

; 159  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?_AtlGetConversionACP@ATL@@YGIXZ ENDP			; ATL::_AtlGetConversionACP
_TEXT	ENDS
PUBLIC	?CompareStringWFake@ATL@@YGHKKPBGH0H@Z		; ATL::CompareStringWFake
EXTRN	__imp__CompareStringW@24:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?CompareStringWThunk@ATL@@YGHKKPBGH0H@Z
_TEXT	SEGMENT
_lcid$ = 8						; size = 4
_dwFlags$ = 12						; size = 4
_pszString1$ = 16					; size = 4
_nLength1$ = 20						; size = 4
_pszString2$ = 24					; size = 4
_nLength2$ = 28						; size = 4
?CompareStringWThunk@ATL@@YGHKKPBGH0H@Z PROC NEAR	; ATL::CompareStringWThunk, COMDAT

; 216  : {

	push	ebp
	mov	ebp, esp
	push	esi

; 217  : 	_AtlInstallStringThunk(reinterpret_cast<void**>(&_strthunks.pfnCompareStringW), CompareStringWFake, ::CompareStringW);

	mov	eax, DWORD PTR __imp__CompareStringW@24
	push	eax
	push	OFFSET FLAT:?CompareStringWFake@ATL@@YGHKKPBGH0H@Z ; ATL::CompareStringWFake
	push	OFFSET FLAT:?_strthunks@ATL@@3U_AtlStringThunks@1@A ; ATL::_strthunks
	call	?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z ; ATL::_AtlInstallStringThunk
	add	esp, 12					; 0000000cH

; 218  : 
; 219  : 	return _strthunks.pfnCompareStringW(lcid, dwFlags, pszString1, nLength1, pszString2, nLength2);

	mov	esi, esp
	mov	ecx, DWORD PTR _nLength2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszString2$[ebp]
	push	edx
	mov	eax, DWORD PTR _nLength1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszString1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dwFlags$[ebp]
	push	edx
	mov	eax, DWORD PTR _lcid$[ebp]
	push	eax
	call	DWORD PTR ?_strthunks@ATL@@3U_AtlStringThunks@1@A
	cmp	esi, esp
	call	__RTC_CheckEsp

; 220  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	24					; 00000018H
?CompareStringWThunk@ATL@@YGHKKPBGH0H@Z ENDP		; ATL::CompareStringWThunk
_TEXT	ENDS
PUBLIC	?AtlW2AHelper@@YGPADPADPBGHI@Z			; AtlW2AHelper
PUBLIC	?AtlThrow@ATL@@YGXJ@Z				; ATL::AtlThrow
PUBLIC	??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
PUBLIC	?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate
PUBLIC	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
PUBLIC	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
EXTRN	__imp__lstrlenW@4:NEAR
EXTRN	__imp__CompareStringA@24:NEAR
EXTRN	__alloca_probe:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T205376 DD	0ffffffffH
	DD	FLAT:$L205368
$T205370 DD	019930520H
	DD	01H
	DD	FLAT:$T205376
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?CompareStringWFake@ATL@@YGHKKPBGH0H@Z
_TEXT	SEGMENT
tv147 = -76						; size = 4
tv142 = -72						; size = 4
tv149 = -68						; size = 4
tv89 = -64						; size = 4
tv84 = -60						; size = 4
tv91 = -56						; size = 4
$T205367 = -52						; size = 4
_pszAString2$ = -48					; size = 4
_pszAString1$ = -44					; size = 4
__AtlSafeAllocaManager$ = -36				; size = 4
__lpa_ex$ = -28						; size = 4
__lpw_ex$ = -24						; size = 4
__acp_ex$ = -20						; size = 4
__convert_ex$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_lcid$ = 8						; size = 4
_dwFlags$ = 12						; size = 4
_pszString1$ = 16					; size = 4
_nLength1$ = 20						; size = 4
_pszString2$ = 24					; size = 4
_nLength2$ = 28						; size = 4
?CompareStringWFake@ATL@@YGHKKPBGH0H@Z PROC NEAR	; ATL::CompareStringWFake, COMDAT

; 192  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CompareStringWFake@ATL@@YGHKKPBGH0H@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 64					; 00000040H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-76]
	mov	ecx, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 193  : 	USES_CONVERSION_EX;

	mov	DWORD PTR __convert_ex$[ebp], 0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	mov	DWORD PTR __acp_ex$[ebp], eax
	mov	DWORD PTR __lpw_ex$[ebp], 0
	mov	DWORD PTR __lpa_ex$[ebp], 0
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	call	??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 194  : 	
; 195  : 	LPCSTR pszAString1 = NULL;

	mov	DWORD PTR _pszAString1$[ebp], 0

; 196  : 	if(pszString1 != NULL)

	cmp	DWORD PTR _pszString1$[ebp], 0
	je	$L196179

; 197  : 	{
; 198  : 		pszAString1 = W2A_EX(pszString1,_ATL_SAFE_ALLOCA_DEF_THRESHOLD);

	mov	eax, DWORD PTR _pszString1$[ebp]
	mov	DWORD PTR __lpw_ex$[ebp], eax
	cmp	DWORD PTR __lpw_ex$[ebp], 0
	jne	SHORT $L205361
	mov	DWORD PTR tv91[ebp], 0
	jmp	SHORT $L205362
$L205361:
	mov	esi, esp
	mov	ecx, DWORD PTR __lpw_ex$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	lea	edx, DWORD PTR [eax+eax+2]
	mov	DWORD PTR __convert_ex$[ebp], edx
	cmp	DWORD PTR __convert_ex$[ebp], 1024	; 00000400H
	jg	SHORT $L205359
	mov	eax, DWORD PTR __convert_ex$[ebp]
	push	eax
	call	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $L205359
	mov	eax, DWORD PTR __convert_ex$[ebp]
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv84[ebp], esp
	mov	edx, DWORD PTR tv84[ebp]
	mov	DWORD PTR tv89[ebp], edx
	jmp	SHORT $L205360
$L205359:
	mov	eax, DWORD PTR __convert_ex$[ebp]
	push	eax
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	call	?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate
	mov	DWORD PTR tv89[ebp], eax
$L205360:
	mov	ecx, DWORD PTR __acp_ex$[ebp]
	push	ecx
	mov	edx, DWORD PTR __convert_ex$[ebp]
	push	edx
	mov	eax, DWORD PTR __lpw_ex$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv89[ebp]
	push	ecx
	call	?AtlW2AHelper@@YGPADPADPBGHI@Z		; AtlW2AHelper
	mov	DWORD PTR tv91[ebp], eax
$L205362:
	mov	edx, DWORD PTR tv91[ebp]
	mov	DWORD PTR _pszAString1$[ebp], edx

; 199  : 		if(pszAString1 == NULL)

	cmp	DWORD PTR _pszAString1$[ebp], 0
	jne	SHORT $L196179

; 200  : 			AtlThrow(E_OUTOFMEMORY);

	push	-2147024882				; 8007000eH
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L196179:

; 201  : 	}
; 202  : 
; 203  : 	LPCSTR pszAString2 = NULL;

	mov	DWORD PTR _pszAString2$[ebp], 0

; 204  : 	if(pszString2 != NULL)

	cmp	DWORD PTR _pszString2$[ebp], 0
	je	$L196185

; 205  : 	{
; 206  : 		pszAString2 = W2A_EX(pszString2,_ATL_SAFE_ALLOCA_DEF_THRESHOLD);

	mov	eax, DWORD PTR _pszString2$[ebp]
	mov	DWORD PTR __lpw_ex$[ebp], eax
	cmp	DWORD PTR __lpw_ex$[ebp], 0
	jne	SHORT $L205365
	mov	DWORD PTR tv149[ebp], 0
	jmp	SHORT $L205366
$L205365:
	mov	esi, esp
	mov	ecx, DWORD PTR __lpw_ex$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	lea	edx, DWORD PTR [eax+eax+2]
	mov	DWORD PTR __convert_ex$[ebp], edx
	cmp	DWORD PTR __convert_ex$[ebp], 1024	; 00000400H
	jg	SHORT $L205363
	mov	eax, DWORD PTR __convert_ex$[ebp]
	push	eax
	call	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $L205363
	mov	eax, DWORD PTR __convert_ex$[ebp]
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv142[ebp], esp
	mov	edx, DWORD PTR tv142[ebp]
	mov	DWORD PTR tv147[ebp], edx
	jmp	SHORT $L205364
$L205363:
	mov	eax, DWORD PTR __convert_ex$[ebp]
	push	eax
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	call	?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate
	mov	DWORD PTR tv147[ebp], eax
$L205364:
	mov	ecx, DWORD PTR __acp_ex$[ebp]
	push	ecx
	mov	edx, DWORD PTR __convert_ex$[ebp]
	push	edx
	mov	eax, DWORD PTR __lpw_ex$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv147[ebp]
	push	ecx
	call	?AtlW2AHelper@@YGPADPADPBGHI@Z		; AtlW2AHelper
	mov	DWORD PTR tv149[ebp], eax
$L205366:
	mov	edx, DWORD PTR tv149[ebp]
	mov	DWORD PTR _pszAString2$[ebp], edx

; 207  : 		if(pszAString2 == NULL)

	cmp	DWORD PTR _pszAString2$[ebp], 0
	jne	SHORT $L196185

; 208  : 			AtlThrow(E_OUTOFMEMORY);

	push	-2147024882				; 8007000eH
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L196185:

; 209  : 	}
; 210  : 
; 211  : 	return ::CompareStringA(lcid, dwFlags, pszAString1, nLength1, pszAString2, nLength2);

	mov	esi, esp
	mov	eax, DWORD PTR _nLength2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszAString2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nLength1$[ebp]
	push	edx
	mov	eax, DWORD PTR _pszAString1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dwFlags$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lcid$[ebp]
	push	edx
	call	DWORD PTR __imp__CompareStringA@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T205367[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	call	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
	mov	eax, DWORD PTR $T205367[ebp]
$L205358:

; 212  : }

	lea	esp, DWORD PTR [ebp-84]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L205375
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
$L205375:
	DD	1
	DD	$L205374
$L205374:
	DD	-36					; ffffffdcH
	DD	4
	DD	$L205372
$L205372:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	116					; 00000074H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	97					; 00000061H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	77					; 0000004dH
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L205368:
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	jmp	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
__ehhandler$?CompareStringWFake@ATL@@YGHKKPBGH0H@Z:
	mov	eax, OFFSET FLAT:$T205370
	jmp	___CxxFrameHandler
text$x	ENDS
?CompareStringWFake@ATL@@YGHKKPBGH0H@Z ENDP		; ATL::CompareStringWFake
EXTRN	__resetstkoflw:NEAR
EXTRN	__except_handler3:NEAR
;	COMDAT CONST
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
CONST	SEGMENT
$T205387 DD	0ffffffffH
	DD	FLAT:$L205382
	DD	FLAT:$L205383
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z
_TEXT	SEGMENT
tv65 = -48						; size = 4
$T205386 = -44						; size = 4
_p$75737 = -36						; size = 4
_bStackAvailable$ = -25					; size = 1
__$SEHRec$ = -24					; size = 24
_Size$ = 8						; size = 4
?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z PROC NEAR ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable, COMDAT

; 331  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	OFFSET FLAT:$T205387
	push	OFFSET FLAT:__except_handler3
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	add	esp, -32				; ffffffe0H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-48], eax
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR __$SEHRec$[ebp], esp

; 332  :     bool bStackAvailable = true;

	mov	BYTE PTR _bStackAvailable$[ebp], 1

; 333  : 
; 334  :     __try

	mov	DWORD PTR __$SEHRec$[ebp+20], 0

; 335  :     {
; 336  :         PVOID p = _alloca(Size + _ATL_STACK_MARGIN);

	mov	eax, DWORD PTR _Size$[ebp]
	add	eax, 8195				; 00002003H
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv65[ebp], esp
	mov	DWORD PTR __$SEHRec$[ebp], esp
	mov	eax, DWORD PTR tv65[ebp]
	mov	DWORD PTR _p$75737[ebp], eax
	mov	DWORD PTR __$SEHRec$[ebp+20], -1
	jmp	SHORT $L205385
$L205382:
$L205394:

; 337  :         (p);
; 338  :     }
; 339  :     __except ((EXCEPTION_STACK_OVERFLOW == GetExceptionCode()) ?
; 340  :                    EXCEPTION_EXECUTE_HANDLER :
; 341  :                    EXCEPTION_CONTINUE_SEARCH)

	mov	ecx, DWORD PTR __$SEHRec$[ebp+4]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T205386[ebp], eax
	mov	eax, DWORD PTR $T205386[ebp]
	sub	eax, -1073741571			; c00000fdH
	neg	eax
	sbb	eax, eax
	inc	eax
$L205384:
$L205393:
	ret	0
$L205383:
	mov	esp, DWORD PTR __$SEHRec$[ebp]

; 342  :     {
; 343  :         bStackAvailable = false;

	mov	BYTE PTR _bStackAvailable$[ebp], 0

; 344  :         _resetstkoflw();

	call	__resetstkoflw
	mov	DWORD PTR __$SEHRec$[ebp+20], -1
$L205385:

; 345  :     }
; 346  :     return bStackAvailable;

	mov	al, BYTE PTR _bStackAvailable$[ebp]
$L205381:

; 347  : }

	lea	esp, DWORD PTR [ebp-60]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L205392
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$SEHRec$[ebp+8]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$L205392:
	DD	1
	DD	$L205391
$L205391:
	DD	-36					; ffffffdcH
	DD	4
	DD	$L205389
$L205389:
	DB	112					; 00000070H
	DB	0
?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
_TEXT	ENDS
PUBLIC	??_C@_08DMHHBMMN@lpa?5?$CB?$DN?50?$AA@		; `string'
PUBLIC	??_C@_0FA@OHHMODBN@C?3?2Program?5Files?2Microsoft?5Visua@ ; `string'
PUBLIC	??_C@_08DIHJLFDJ@lpw?5?$CB?$DN?50?$AA@		; `string'
PUBLIC	??_C@_01GBGANLPD@0?$AA@				; `string'
EXTRN	__imp__WideCharToMultiByte@32:NEAR
;	COMDAT ??_C@_08DIHJLFDJ@lpw?5?$CB?$DN?50?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
CONST	SEGMENT
??_C@_08DIHJLFDJ@lpw?5?$CB?$DN?50?$AA@ DB 'lpw != 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FA@OHHMODBN@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT
??_C@_0FA@OHHMODBN@C?3?2Program?5Files?2Microsoft?5Visua@ DB 'C:\Program '
	DB	'Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\include\at'
	DB	'lconv.h', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08DMHHBMMN@lpa?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_08DMHHBMMN@lpa?5?$CB?$DN?50?$AA@ DB 'lpa != 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01GBGANLPD@0?$AA@
CONST	SEGMENT
??_C@_01GBGANLPD@0?$AA@ DB '0', 00H			; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGHI@Z
_TEXT	SEGMENT
_ret$ = -4						; size = 4
_lpa$ = 8						; size = 4
_lpw$ = 12						; size = 4
_nChars$ = 16						; size = 4
_acp$ = 20						; size = 4
?AtlW2AHelper@@YGPADPADPBGHI@Z PROC NEAR		; AtlW2AHelper, COMDAT

; 573  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 574  : 	ATLASSERT(lpw != NULL);

	cmp	DWORD PTR _lpw$[ebp], 0
	jne	SHORT $L205399
	push	OFFSET FLAT:??_C@_08DIHJLFDJ@lpw?5?$CB?$DN?50?$AA@
	push	0
	push	574					; 0000023eH
	push	OFFSET FLAT:??_C@_0FA@OHHMODBN@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205399
	int	3
$L205399:

; 575  : 	ATLASSERT(lpa != NULL);

	cmp	DWORD PTR _lpa$[ebp], 0
	jne	SHORT $L205400
	push	OFFSET FLAT:??_C@_08DMHHBMMN@lpa?5?$CB?$DN?50?$AA@
	push	0
	push	575					; 0000023fH
	push	OFFSET FLAT:??_C@_0FA@OHHMODBN@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205400
	int	3
$L205400:

; 576  : 	if (lpa == NULL || lpw == NULL)

	cmp	DWORD PTR _lpa$[ebp], 0
	je	SHORT $L75958
	cmp	DWORD PTR _lpw$[ebp], 0
	jne	SHORT $L75957
$L75958:

; 577  : 		return NULL;

	xor	eax, eax
	jmp	SHORT $L75954
$L75957:

; 578  : 	// verify that no illegal character present
; 579  : 	// since lpa was allocated based on the size of lpw
; 580  : 	// don't worry about the number of chars
; 581  : 	lpa[0] = '\0';

	mov	edx, DWORD PTR _lpa$[ebp]
	mov	BYTE PTR [edx], 0

; 582  : 	int ret = WideCharToMultiByte(acp, 0, lpw, -1, lpa, nChars, NULL, NULL);

	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _nChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpa$[ebp]
	push	ecx
	push	-1
	mov	edx, DWORD PTR _lpw$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _acp$[ebp]
	push	eax
	call	DWORD PTR __imp__WideCharToMultiByte@32
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ret$[ebp], eax

; 583  : 	if(ret == 0)

	cmp	DWORD PTR _ret$[ebp], 0
	jne	SHORT $L75960

; 584  : 	{
; 585  : 		ATLASSERT(FALSE);

	xor	ecx, ecx
	jne	SHORT $L205401
	push	OFFSET FLAT:??_C@_01GBGANLPD@0?$AA@
	push	0
	push	585					; 00000249H
	push	OFFSET FLAT:??_C@_0FA@OHHMODBN@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205401
	int	3
$L205401:

; 586  : 		return NULL;

	xor	eax, eax
	jmp	SHORT $L75954
$L75960:

; 587  : 	}
; 588  : 	return lpa;

	mov	eax, DWORD PTR _lpa$[ebp]
$L75954:

; 589  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?AtlW2AHelper@@YGPADPADPBGHI@Z ENDP			; AtlW2AHelper
_TEXT	ENDS
PUBLIC	??BCTraceCategory@ATL@@QBEKXZ			; ATL::CTraceCategory::operator unsigned long
PUBLIC	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
PUBLIC	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ	; ATL::CTraceFileAndLineInfo::operator()
PUBLIC	??0CAtlException@ATL@@QAE@J@Z			; ATL::CAtlException::CAtlException
PUBLIC	??_C@_0FC@CFIFHLCH@C?3?2Program?5Files?2Microsoft?5Visua@ ; `string'
PUBLIC	??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@ ; `string'
PUBLIC	__TI1?AVCAtlException@ATL@@
PUBLIC	__CTA1?AVCAtlException@ATL@@
PUBLIC	??_R0?AVCAtlException@ATL@@@8			; ATL::CAtlException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVCAtlException@ATL@@@84
EXTRN	?atlTraceException@ATL@@3VCTraceCategory@1@A:DWORD ; ATL::atlTraceException
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
EXTRN	__CxxThrowException@8:NEAR
;	COMDAT ??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlexcept.h
CONST	SEGMENT
??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@ DB 'AtlThrow: hr '
	DB	'= 0x%x', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FC@CFIFHLCH@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT
??_C@_0FC@CFIFHLCH@C?3?2Program?5Files?2Microsoft?5Visua@ DB 'C:\Program '
	DB	'Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\include\at'
	DB	'lexcept.h', 00H				; `string'
CONST	ENDS
;	COMDAT __TI1?AVCAtlException@ATL@@
xdata$x	SEGMENT
__TI1?AVCAtlException@ATL@@ DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA1?AVCAtlException@ATL@@
xdata$x	ENDS
;	COMDAT __CTA1?AVCAtlException@ATL@@
xdata$x	SEGMENT
__CTA1?AVCAtlException@ATL@@ DD 01H
	DD	FLAT:__CT??_R0?AVCAtlException@ATL@@@84
xdata$x	ENDS
;	COMDAT __CT??_R0?AVCAtlException@ATL@@@84
xdata$x	SEGMENT
__CT??_R0?AVCAtlException@ATL@@@84 DD 00H
	DD	FLAT:??_R0?AVCAtlException@ATL@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0?AVCAtlException@ATL@@@8
_DATA	SEGMENT
??_R0?AVCAtlException@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::CAtlException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAtlException@ATL@@', 00H
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT
$T205406 = -16						; size = 4
$T205405 = -12						; size = 4
$T205404 = -8						; size = 8
_hr$ = 8						; size = 4
?AtlThrow@ATL@@YGXJ@Z PROC NEAR				; ATL::AtlThrow, COMDAT

; 61   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 62   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );

	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceException@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceException
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	62					; 0000003eH
	push	OFFSET FLAT:??_C@_0FC@CFIFHLCH@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T205404[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H

; 63   : #ifdef _AFX
; 64   : 	if( hr == E_OUTOFMEMORY )
; 65   : 	{
; 66   : 		AfxThrowMemoryException();
; 67   : 	}
; 68   : 	else
; 69   : 	{
; 70   : 		AfxThrowOleException( hr );
; 71   : 	}
; 72   : #else
; 73   : 	throw CAtlException( hr );

	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T205406[ebp]
	call	??0CAtlException@ATL@@QAE@J@Z		; ATL::CAtlException::CAtlException
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T205405[ebp], edx
	push	OFFSET FLAT:__TI1?AVCAtlException@ATL@@
	lea	eax, DWORD PTR $T205405[ebp]
	push	eax
	call	__CxxThrowException@8
$L205403:

; 74   : #endif
; 75   : };

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AtlThrow@ATL@@YGXJ@Z ENDP				; ATL::AtlThrow
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atltrace.h
_TEXT	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszFileName$ = 8					; size = 4
_nLineNo$ = 12						; size = 4
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z PROC NEAR	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo, COMDAT
; _this$ = ecx

; 158  : 	{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pszFileName$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _nLineNo$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ENDP		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
_TEXT	ENDS
PUBLIC	?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z		; ATL::CTrace::TraceV
EXTRN	?s_trace@CTrace@ATL@@2V12@A:QWORD		; ATL::CTrace::s_trace
; Function compile flags: /Odt /RTCsu
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ
_TEXT	SEGMENT
_ptr$ = -4						; size = 4
_this$ = 8						; size = 4
_dwCategory$ = 12					; size = 4
_nLevel$ = 16						; size = 4
_pszFmt$ = 20						; size = 4
??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ PROC NEAR	; ATL::CTraceFileAndLineInfo::operator(), COMDAT

; 161  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 162  : 		va_list ptr; va_start(ptr, pszFmt);

	lea	eax, DWORD PTR _pszFmt$[ebp+4]
	mov	DWORD PTR _ptr$[ebp], eax

; 163  : 		ATL::CTrace::s_trace.TraceV(m_pszFileName, m_nLineNo, dwCategory, nLevel, pszFmt, ptr);

	mov	ecx, DWORD PTR _ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszFmt$[ebp]
	push	edx
	mov	eax, DWORD PTR _nLevel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dwCategory$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET FLAT:?s_trace@CTrace@ATL@@2V12@A
	call	?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z	; ATL::CTrace::TraceV
	add	esp, 28					; 0000001cH

; 164  : 		va_end(ptr);

	mov	DWORD PTR _ptr$[ebp], 0

; 165  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ENDP		; ATL::CTraceFileAndLineInfo::operator()
_TEXT	ENDS
EXTRN	_AtlTraceVA:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pszFileName$ = 12					; size = 4
_nLine$ = 16						; size = 4
_dwCategory$ = 20					; size = 4
_nLevel$ = 24						; size = 4
_pszFmt$ = 28						; size = 4
_args$ = 32						; size = 4
?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z PROC NEAR		; ATL::CTrace::TraceV, COMDAT

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		AtlTraceVA(m_dwModule, pszFileName, nLine, dwCategory, nLevel, pszFmt, args);

	mov	eax, DWORD PTR _args$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszFmt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nLevel$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwCategory$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nLine$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszFileName$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_AtlTraceVA
	add	esp, 28					; 0000001cH

; 123  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z ENDP		; ATL::CTrace::TraceV
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BCTraceCategory@ATL@@QBEKXZ PROC NEAR			; ATL::CTraceCategory::operator unsigned long, COMDAT
; _this$ = ecx

; 202  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 203  : 	return( m_dwCategory );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 204  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??BCTraceCategory@ATL@@QBEKXZ ENDP			; ATL::CTraceCategory::operator unsigned long
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlexcept.h
_TEXT	ENDS
;	COMDAT ??0CAtlException@ATL@@QAE@J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hr$ = 8						; size = 4
??0CAtlException@ATL@@QAE@J@Z PROC NEAR			; ATL::CAtlException::CAtlException, COMDAT
; _this$ = ecx

; 40   : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR [eax], ecx

; 41   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CAtlException@ATL@@QAE@J@Z ENDP			; ATL::CAtlException::CAtlException
_TEXT	ENDS
PUBLIC	?GetStringTypeExWFake@ATL@@YGHKKPBGHPAG@Z	; ATL::GetStringTypeExWFake
EXTRN	__imp__GetStringTypeExW@20:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?GetStringTypeExWThunk@ATL@@YGHKKPBGHPAG@Z
_TEXT	SEGMENT
_lcid$ = 8						; size = 4
_dwInfoType$ = 12					; size = 4
_pszSrc$ = 16						; size = 4
_nLength$ = 20						; size = 4
_pwCharType$ = 24					; size = 4
?GetStringTypeExWThunk@ATL@@YGHKKPBGHPAG@Z PROC NEAR	; ATL::GetStringTypeExWThunk, COMDAT

; 240  : {

	push	ebp
	mov	ebp, esp
	push	esi

; 241  : 	_AtlInstallStringThunk(reinterpret_cast<void**>(&_strthunks.pfnGetStringTypeExW), GetStringTypeExWFake, ::GetStringTypeExW);

	mov	eax, DWORD PTR __imp__GetStringTypeExW@20
	push	eax
	push	OFFSET FLAT:?GetStringTypeExWFake@ATL@@YGHKKPBGHPAG@Z ; ATL::GetStringTypeExWFake
	push	OFFSET FLAT:?_strthunks@ATL@@3U_AtlStringThunks@1@A+4
	call	?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z ; ATL::_AtlInstallStringThunk
	add	esp, 12					; 0000000cH

; 242  : 
; 243  : 	return _strthunks.pfnGetStringTypeExW(lcid, dwInfoType, pszSrc, nLength, pwCharType);

	mov	esi, esp
	mov	ecx, DWORD PTR _pwCharType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dwInfoType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lcid$[ebp]
	push	edx
	call	DWORD PTR ?_strthunks@ATL@@3U_AtlStringThunks@1@A+4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 244  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	20					; 00000014H
?GetStringTypeExWThunk@ATL@@YGHKKPBGHPAG@Z ENDP		; ATL::GetStringTypeExWThunk
_TEXT	ENDS
EXTRN	__imp__GetStringTypeExA@20:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T205432 DD	0ffffffffH
	DD	FLAT:$L205424
$T205426 DD	019930520H
	DD	01H
	DD	FLAT:$T205432
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?GetStringTypeExWFake@ATL@@YGHKKPBGHPAG@Z
_TEXT	SEGMENT
$T205423 = -164						; size = 4
_pszA$ = -156						; size = 132
_nLengthA$ = -20					; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_lcid$ = 8						; size = 4
_dwInfoType$ = 12					; size = 4
_pszSrc$ = 16						; size = 4
_nLength$ = 20						; size = 4
_pwCharType$ = 24					; size = 4
?GetStringTypeExWFake@ATL@@YGHKKPBGHPAG@Z PROC NEAR	; ATL::GetStringTypeExWFake, COMDAT

; 224  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetStringTypeExWFake@ATL@@YGHKKPBGHPAG@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 152				; 00000098H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-164]
	mov	ecx, 38					; 00000026H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 225  : 	int nLengthA;
; 226  : 	CTempBuffer<char> pszA;

	lea	ecx, DWORD PTR _pszA$[ebp]
	call	??0?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::CTempBuffer<char,128,ATL::CCRTAllocator>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 227  : 
; 228  : 	nLengthA = ::WideCharToMultiByte(_AtlGetConversionACP(), 0, pszSrc, nLength, NULL, 0, NULL, NULL);

	mov	esi, esp
	push	0
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszSrc$[ebp]
	push	ecx
	push	0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	push	eax
	call	DWORD PTR __imp__WideCharToMultiByte@32
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nLengthA$[ebp], eax

; 229  : 	pszA.Allocate(nLengthA);

	mov	edx, DWORD PTR _nLengthA$[ebp]
	push	edx
	lea	ecx, DWORD PTR _pszA$[ebp]
	call	?Allocate@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::Allocate

; 230  : 	::WideCharToMultiByte(_AtlGetConversionACP(), 0, pszSrc, nLength, pszA, nLengthA, NULL, NULL);

	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _nLengthA$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pszA$[ebp]
	call	??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::operator char *
	push	eax
	mov	ecx, DWORD PTR _nLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszSrc$[ebp]
	push	edx
	push	0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	push	eax
	call	DWORD PTR __imp__WideCharToMultiByte@32
	cmp	esi, esp
	call	__RTC_CheckEsp

; 231  : 
; 232  : 	if (nLength == -1)

	cmp	DWORD PTR _nLength$[ebp], -1
	jne	SHORT $L196211

; 233  : 		nLengthA = -1;

	mov	DWORD PTR _nLengthA$[ebp], -1
$L196211:

; 234  : 
; 235  : 	return ::GetStringTypeExA(lcid, dwInfoType, pszA, nLengthA, pwCharType);

	mov	esi, esp
	mov	eax, DWORD PTR _pwCharType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nLengthA$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _pszA$[ebp]
	call	??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::operator char *
	push	eax
	mov	edx, DWORD PTR _dwInfoType$[ebp]
	push	edx
	mov	eax, DWORD PTR _lcid$[ebp]
	push	eax
	call	DWORD PTR __imp__GetStringTypeExA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T205423[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pszA$[ebp]
	call	??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>
	mov	eax, DWORD PTR $T205423[ebp]

; 236  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L205431
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	add	esp, 164				; 000000a4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$L205431:
	DD	1
	DD	$L205430
$L205430:
	DD	-156					; ffffff64H
	DD	132					; 00000084H
	DD	$L205427
$L205427:
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	65					; 00000041H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L205424:
	lea	ecx, DWORD PTR _pszA$[ebp]
	jmp	??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>
__ehhandler$?GetStringTypeExWFake@ATL@@YGHKKPBGHPAG@Z:
	mov	eax, OFFSET FLAT:$T205426
	jmp	___CxxFrameHandler
text$x	ENDS
?GetStringTypeExWFake@ATL@@YGHKKPBGHPAG@Z ENDP		; ATL::GetStringTypeExWFake
PUBLIC	?lstrcmpiWFake@ATL@@YGHPBG0@Z			; ATL::lstrcmpiWFake
EXTRN	__imp__lstrcmpiW@8:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?lstrcmpiWThunk@ATL@@YGHPBG0@Z
_TEXT	SEGMENT
_psz1$ = 8						; size = 4
_psz2$ = 12						; size = 4
?lstrcmpiWThunk@ATL@@YGHPBG0@Z PROC NEAR		; ATL::lstrcmpiWThunk, COMDAT

; 254  : {

	push	ebp
	mov	ebp, esp
	push	esi

; 255  : 	_AtlInstallStringThunk(reinterpret_cast<void**>(&_strthunks.pfnlstrcmpiW), lstrcmpiWFake, ::lstrcmpiW);

	mov	eax, DWORD PTR __imp__lstrcmpiW@8
	push	eax
	push	OFFSET FLAT:?lstrcmpiWFake@ATL@@YGHPBG0@Z ; ATL::lstrcmpiWFake
	push	OFFSET FLAT:?_strthunks@ATL@@3U_AtlStringThunks@1@A+8
	call	?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z ; ATL::_AtlInstallStringThunk
	add	esp, 12					; 0000000cH

; 256  : 
; 257  : 	return _strthunks.pfnlstrcmpiW(psz1, psz2);

	mov	esi, esp
	mov	ecx, DWORD PTR _psz2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _psz1$[ebp]
	push	edx
	call	DWORD PTR ?_strthunks@ATL@@3U_AtlStringThunks@1@A+8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 258  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?lstrcmpiWThunk@ATL@@YGHPBG0@Z ENDP			; ATL::lstrcmpiWThunk
_TEXT	ENDS
EXTRN	__imp__lstrcmpiA@8:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?lstrcmpiWFake@ATL@@YGHPBG0@Z
_TEXT	SEGMENT
tv91 = -32						; size = 4
tv94 = -28						; size = 4
tv76 = -24						; size = 4
tv79 = -20						; size = 4
__lpa$ = -16						; size = 4
__lpw$ = -12						; size = 4
__acp$ = -8						; size = 4
__convert$ = -4						; size = 4
_psz1$ = 8						; size = 4
_psz2$ = 12						; size = 4
?lstrcmpiWFake@ATL@@YGHPBG0@Z PROC NEAR			; ATL::lstrcmpiWFake, COMDAT

; 247  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 248  : 	USES_CONVERSION;

	mov	DWORD PTR __convert$[ebp], 0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	mov	DWORD PTR __acp$[ebp], eax
	mov	DWORD PTR __lpw$[ebp], 0
	mov	DWORD PTR __lpa$[ebp], 0

; 249  : 
; 250  : 	return ::lstrcmpiA(W2A(psz1), W2A(psz2));

	mov	eax, DWORD PTR _psz2$[ebp]
	mov	DWORD PTR __lpw$[ebp], eax
	cmp	DWORD PTR __lpw$[ebp], 0
	jne	SHORT $L205439
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $L205440
$L205439:
	mov	esi, esp
	mov	ecx, DWORD PTR __lpw$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	lea	edx, DWORD PTR [eax+eax+2]
	mov	DWORD PTR __convert$[ebp], edx
	mov	eax, DWORD PTR __convert$[ebp]
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv76[ebp], esp
	mov	eax, DWORD PTR __acp$[ebp]
	push	eax
	mov	ecx, DWORD PTR __convert$[ebp]
	push	ecx
	mov	edx, DWORD PTR __lpw$[ebp]
	push	edx
	mov	eax, DWORD PTR tv76[ebp]
	push	eax
	call	?AtlW2AHelper@@YGPADPADPBGHI@Z		; AtlW2AHelper
	mov	DWORD PTR tv79[ebp], eax
$L205440:
	mov	ecx, DWORD PTR _psz1$[ebp]
	mov	DWORD PTR __lpw$[ebp], ecx
	cmp	DWORD PTR __lpw$[ebp], 0
	jne	SHORT $L205441
	mov	DWORD PTR tv94[ebp], 0
	jmp	SHORT $L205442
$L205441:
	mov	esi, esp
	mov	edx, DWORD PTR __lpw$[ebp]
	push	edx
	call	DWORD PTR __imp__lstrlenW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	lea	eax, DWORD PTR [eax+eax+2]
	mov	DWORD PTR __convert$[ebp], eax
	mov	eax, DWORD PTR __convert$[ebp]
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv91[ebp], esp
	mov	ecx, DWORD PTR __acp$[ebp]
	push	ecx
	mov	edx, DWORD PTR __convert$[ebp]
	push	edx
	mov	eax, DWORD PTR __lpw$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv91[ebp]
	push	ecx
	call	?AtlW2AHelper@@YGPADPADPBGHI@Z		; AtlW2AHelper
	mov	DWORD PTR tv94[ebp], eax
$L205442:
	mov	esi, esp
	mov	edx, DWORD PTR tv79[ebp]
	push	edx
	mov	eax, DWORD PTR tv94[ebp]
	push	eax
	call	DWORD PTR __imp__lstrcmpiA@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 251  : }

	lea	esp, DWORD PTR [ebp-36]
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?lstrcmpiWFake@ATL@@YGHPBG0@Z ENDP			; ATL::lstrcmpiWFake
_TEXT	ENDS
PUBLIC	?CharLowerWFake@ATL@@YGPAGPAG@Z			; ATL::CharLowerWFake
EXTRN	__imp__CharLowerW@4:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?CharLowerWThunk@ATL@@YGPAGPAG@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
?CharLowerWThunk@ATL@@YGPAGPAG@Z PROC NEAR		; ATL::CharLowerWThunk, COMDAT

; 273  : {

	push	ebp
	mov	ebp, esp
	push	esi

; 274  : 	_AtlInstallStringThunk(reinterpret_cast<void**>(&_strthunks.pfnCharLowerW), CharLowerWFake, ::CharLowerW);

	mov	eax, DWORD PTR __imp__CharLowerW@4
	push	eax
	push	OFFSET FLAT:?CharLowerWFake@ATL@@YGPAGPAG@Z ; ATL::CharLowerWFake
	push	OFFSET FLAT:?_strthunks@ATL@@3U_AtlStringThunks@1@A+12
	call	?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z ; ATL::_AtlInstallStringThunk
	add	esp, 12					; 0000000cH

; 275  : 
; 276  : 	return _strthunks.pfnCharLowerW(psz);

	mov	esi, esp
	mov	ecx, DWORD PTR _psz$[ebp]
	push	ecx
	call	DWORD PTR ?_strthunks@ATL@@3U_AtlStringThunks@1@A+12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 277  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?CharLowerWThunk@ATL@@YGPAGPAG@Z ENDP			; ATL::CharLowerWThunk
_TEXT	ENDS
PUBLIC	?AtlA2WHelper@@YGPAGPAGPBDHI@Z			; AtlA2WHelper
EXTRN	__imp__CharLowerA@4:NEAR
EXTRN	__imp__lstrlenA@4:NEAR
EXTRN	_wcscpy:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?CharLowerWFake@ATL@@YGPAGPAG@Z
_TEXT	SEGMENT
tv90 = -36						; size = 4
tv94 = -32						; size = 4
tv75 = -28						; size = 4
tv78 = -24						; size = 4
_pszA$ = -20						; size = 4
__lpa$ = -16						; size = 4
__lpw$ = -12						; size = 4
__acp$ = -8						; size = 4
__convert$ = -4						; size = 4
_psz$ = 8						; size = 4
?CharLowerWFake@ATL@@YGPAGPAG@Z PROC NEAR		; ATL::CharLowerWFake, COMDAT

; 261  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 262  : 	USES_CONVERSION;

	mov	DWORD PTR __convert$[ebp], 0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	mov	DWORD PTR __acp$[ebp], eax
	mov	DWORD PTR __lpw$[ebp], 0
	mov	DWORD PTR __lpa$[ebp], 0

; 263  : 	LPSTR pszA;
; 264  : 
; 265  : 	pszA = W2A(psz);

	mov	eax, DWORD PTR _psz$[ebp]
	mov	DWORD PTR __lpw$[ebp], eax
	cmp	DWORD PTR __lpw$[ebp], 0
	jne	SHORT $L205447
	mov	DWORD PTR tv78[ebp], 0
	jmp	SHORT $L205448
$L205447:
	mov	esi, esp
	mov	ecx, DWORD PTR __lpw$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	lea	edx, DWORD PTR [eax+eax+2]
	mov	DWORD PTR __convert$[ebp], edx
	mov	eax, DWORD PTR __convert$[ebp]
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv75[ebp], esp
	mov	eax, DWORD PTR __acp$[ebp]
	push	eax
	mov	ecx, DWORD PTR __convert$[ebp]
	push	ecx
	mov	edx, DWORD PTR __lpw$[ebp]
	push	edx
	mov	eax, DWORD PTR tv75[ebp]
	push	eax
	call	?AtlW2AHelper@@YGPADPADPBGHI@Z		; AtlW2AHelper
	mov	DWORD PTR tv78[ebp], eax
$L205448:
	mov	ecx, DWORD PTR tv78[ebp]
	mov	DWORD PTR _pszA$[ebp], ecx

; 266  : 	::CharLowerA(pszA);

	mov	esi, esp
	mov	edx, DWORD PTR _pszA$[ebp]
	push	edx
	call	DWORD PTR __imp__CharLowerA@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 267  : 	wcscpy(psz, A2W(pszA));

	mov	eax, DWORD PTR _pszA$[ebp]
	mov	DWORD PTR __lpa$[ebp], eax
	cmp	DWORD PTR __lpa$[ebp], 0
	jne	SHORT $L205449
	mov	DWORD PTR tv94[ebp], 0
	jmp	SHORT $L205450
$L205449:
	mov	esi, esp
	mov	ecx, DWORD PTR __lpa$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	mov	DWORD PTR __convert$[ebp], eax
	mov	eax, DWORD PTR __convert$[ebp]
	shl	eax, 1
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv90[ebp], esp
	mov	edx, DWORD PTR __acp$[ebp]
	push	edx
	mov	eax, DWORD PTR __convert$[ebp]
	push	eax
	mov	ecx, DWORD PTR __lpa$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv90[ebp]
	push	edx
	call	?AtlA2WHelper@@YGPAGPAGPBDHI@Z		; AtlA2WHelper
	mov	DWORD PTR tv94[ebp], eax
$L205450:
	mov	eax, DWORD PTR tv94[ebp]
	push	eax
	mov	ecx, DWORD PTR _psz$[ebp]
	push	ecx
	call	_wcscpy
	add	esp, 8

; 268  : 
; 269  : 	return psz;

	mov	eax, DWORD PTR _psz$[ebp]

; 270  : }

	lea	esp, DWORD PTR [ebp-40]
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?CharLowerWFake@ATL@@YGPAGPAG@Z ENDP			; ATL::CharLowerWFake
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDHI@Z
_TEXT	SEGMENT
_ret$ = -4						; size = 4
_lpw$ = 8						; size = 4
_lpa$ = 12						; size = 4
_nChars$ = 16						; size = 4
_acp$ = 20						; size = 4
?AtlA2WHelper@@YGPAGPAGPBDHI@Z PROC NEAR		; AtlA2WHelper, COMDAT

; 554  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 555  : 	ATLASSERT(lpa != NULL);

	cmp	DWORD PTR _lpa$[ebp], 0
	jne	SHORT $L205453
	push	OFFSET FLAT:??_C@_08DMHHBMMN@lpa?5?$CB?$DN?50?$AA@
	push	0
	push	555					; 0000022bH
	push	OFFSET FLAT:??_C@_0FA@OHHMODBN@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205453
	int	3
$L205453:

; 556  : 	ATLASSERT(lpw != NULL);

	cmp	DWORD PTR _lpw$[ebp], 0
	jne	SHORT $L205454
	push	OFFSET FLAT:??_C@_08DIHJLFDJ@lpw?5?$CB?$DN?50?$AA@
	push	0
	push	556					; 0000022cH
	push	OFFSET FLAT:??_C@_0FA@OHHMODBN@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205454
	int	3
$L205454:

; 557  : 	if (lpw == NULL || lpa == NULL)

	cmp	DWORD PTR _lpw$[ebp], 0
	je	SHORT $L75944
	cmp	DWORD PTR _lpa$[ebp], 0
	jne	SHORT $L75943
$L75944:

; 558  : 		return NULL;

	xor	eax, eax
	jmp	SHORT $L75937
$L75943:

; 559  : 	// verify that no illegal character present
; 560  : 	// since lpw was allocated based on the size of lpa
; 561  : 	// don't worry about the number of chars
; 562  : 	lpw[0] = '\0';

	mov	edx, DWORD PTR _lpw$[ebp]
	mov	WORD PTR [edx], 0

; 563  : 	int ret = MultiByteToWideChar(acp, 0, lpa, -1, lpw, nChars);

	mov	esi, esp
	mov	eax, DWORD PTR _nChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpw$[ebp]
	push	ecx
	push	-1
	mov	edx, DWORD PTR _lpa$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _acp$[ebp]
	push	eax
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ret$[ebp], eax

; 564  : 	if(ret == 0)

	cmp	DWORD PTR _ret$[ebp], 0
	jne	SHORT $L75946

; 565  : 	{
; 566  : 		ATLASSERT(FALSE);

	xor	ecx, ecx
	jne	SHORT $L205455
	push	OFFSET FLAT:??_C@_01GBGANLPD@0?$AA@
	push	0
	push	566					; 00000236H
	push	OFFSET FLAT:??_C@_0FA@OHHMODBN@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205455
	int	3
$L205455:

; 567  : 		return NULL;

	xor	eax, eax
	jmp	SHORT $L75937
$L75946:

; 568  : 	}		
; 569  : 	return lpw;

	mov	eax, DWORD PTR _lpw$[ebp]
$L75937:

; 570  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?AtlA2WHelper@@YGPAGPAGPBDHI@Z ENDP			; AtlA2WHelper
_TEXT	ENDS
PUBLIC	?CharUpperWFake@ATL@@YGPAGPAG@Z			; ATL::CharUpperWFake
EXTRN	__imp__CharUpperW@4:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?CharUpperWThunk@ATL@@YGPAGPAG@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
?CharUpperWThunk@ATL@@YGPAGPAG@Z PROC NEAR		; ATL::CharUpperWThunk, COMDAT

; 292  : {

	push	ebp
	mov	ebp, esp
	push	esi

; 293  : 	_AtlInstallStringThunk(reinterpret_cast<void**>(&_strthunks.pfnCharUpperW), CharUpperWFake, ::CharUpperW);

	mov	eax, DWORD PTR __imp__CharUpperW@4
	push	eax
	push	OFFSET FLAT:?CharUpperWFake@ATL@@YGPAGPAG@Z ; ATL::CharUpperWFake
	push	OFFSET FLAT:?_strthunks@ATL@@3U_AtlStringThunks@1@A+16
	call	?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z ; ATL::_AtlInstallStringThunk
	add	esp, 12					; 0000000cH

; 294  : 
; 295  : 	return _strthunks.pfnCharUpperW(psz);

	mov	esi, esp
	mov	ecx, DWORD PTR _psz$[ebp]
	push	ecx
	call	DWORD PTR ?_strthunks@ATL@@3U_AtlStringThunks@1@A+16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 296  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?CharUpperWThunk@ATL@@YGPAGPAG@Z ENDP			; ATL::CharUpperWThunk
_TEXT	ENDS
EXTRN	__imp__CharUpperA@4:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?CharUpperWFake@ATL@@YGPAGPAG@Z
_TEXT	SEGMENT
tv90 = -36						; size = 4
tv94 = -32						; size = 4
tv75 = -28						; size = 4
tv78 = -24						; size = 4
_pszA$ = -20						; size = 4
__lpa$ = -16						; size = 4
__lpw$ = -12						; size = 4
__acp$ = -8						; size = 4
__convert$ = -4						; size = 4
_psz$ = 8						; size = 4
?CharUpperWFake@ATL@@YGPAGPAG@Z PROC NEAR		; ATL::CharUpperWFake, COMDAT

; 280  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 281  : 	USES_CONVERSION;

	mov	DWORD PTR __convert$[ebp], 0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	mov	DWORD PTR __acp$[ebp], eax
	mov	DWORD PTR __lpw$[ebp], 0
	mov	DWORD PTR __lpa$[ebp], 0

; 282  : 	LPSTR pszA;
; 283  : 
; 284  : 	pszA = W2A(psz);

	mov	eax, DWORD PTR _psz$[ebp]
	mov	DWORD PTR __lpw$[ebp], eax
	cmp	DWORD PTR __lpw$[ebp], 0
	jne	SHORT $L205460
	mov	DWORD PTR tv78[ebp], 0
	jmp	SHORT $L205461
$L205460:
	mov	esi, esp
	mov	ecx, DWORD PTR __lpw$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	lea	edx, DWORD PTR [eax+eax+2]
	mov	DWORD PTR __convert$[ebp], edx
	mov	eax, DWORD PTR __convert$[ebp]
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv75[ebp], esp
	mov	eax, DWORD PTR __acp$[ebp]
	push	eax
	mov	ecx, DWORD PTR __convert$[ebp]
	push	ecx
	mov	edx, DWORD PTR __lpw$[ebp]
	push	edx
	mov	eax, DWORD PTR tv75[ebp]
	push	eax
	call	?AtlW2AHelper@@YGPADPADPBGHI@Z		; AtlW2AHelper
	mov	DWORD PTR tv78[ebp], eax
$L205461:
	mov	ecx, DWORD PTR tv78[ebp]
	mov	DWORD PTR _pszA$[ebp], ecx

; 285  : 	::CharUpperA(pszA);

	mov	esi, esp
	mov	edx, DWORD PTR _pszA$[ebp]
	push	edx
	call	DWORD PTR __imp__CharUpperA@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 286  : 	wcscpy(psz, A2W(pszA));

	mov	eax, DWORD PTR _pszA$[ebp]
	mov	DWORD PTR __lpa$[ebp], eax
	cmp	DWORD PTR __lpa$[ebp], 0
	jne	SHORT $L205462
	mov	DWORD PTR tv94[ebp], 0
	jmp	SHORT $L205463
$L205462:
	mov	esi, esp
	mov	ecx, DWORD PTR __lpa$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	mov	DWORD PTR __convert$[ebp], eax
	mov	eax, DWORD PTR __convert$[ebp]
	shl	eax, 1
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv90[ebp], esp
	mov	edx, DWORD PTR __acp$[ebp]
	push	edx
	mov	eax, DWORD PTR __convert$[ebp]
	push	eax
	mov	ecx, DWORD PTR __lpa$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv90[ebp]
	push	edx
	call	?AtlA2WHelper@@YGPAGPAGPBDHI@Z		; AtlA2WHelper
	mov	DWORD PTR tv94[ebp], eax
$L205463:
	mov	eax, DWORD PTR tv94[ebp]
	push	eax
	mov	ecx, DWORD PTR _psz$[ebp]
	push	ecx
	call	_wcscpy
	add	esp, 8

; 287  : 
; 288  : 	return psz;

	mov	eax, DWORD PTR _psz$[ebp]

; 289  : }

	lea	esp, DWORD PTR [ebp-40]
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?CharUpperWFake@ATL@@YGPAGPAG@Z ENDP			; ATL::CharUpperWFake
_TEXT	ENDS
PUBLIC	??0?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAE@XZ ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::CAxDialogImpl<CShowSelectCert,ATL::CWindow>
PUBLIC	?GetDialogProc@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEP6GHPAUHWND__@@IIJ@ZXZ ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::GetDialogProc
PUBLIC	?CreateActiveXControls@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEJI@Z ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::CreateActiveXControls
PUBLIC	??0CShowSelectCert@@QAE@PAEPAPAU_CERT_DESCR@@J@Z ; CShowSelectCert::CShowSelectCert
PUBLIC	?ProcessWindowMessage@CShowSelectCert@@UAEHPAUHWND__@@IIJAAJK@Z ; CShowSelectCert::ProcessWindowMessage
PUBLIC	??_7CShowSelectCert@@6B@			; CShowSelectCert::`vftable'
PUBLIC	??_GCShowSelectCert@@UAEPAXI@Z			; CShowSelectCert::`scalar deleting destructor'
PUBLIC	?OnFinalMessage@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAEXPAUHWND__@@@Z ; ATL::CDialogImplBaseT<ATL::CWindow>::OnFinalMessage
EXTRN	_myMalloc:NEAR
EXTRN	_myFree:NEAR
EXTRN	_base64decodeSize:NEAR
EXTRN	_base64decode:NEAR
EXTRN	??_ECShowSelectCert@@UAEPAXI@Z:NEAR		; CShowSelectCert::`vector deleting destructor'
EXTRN	_memset:NEAR
EXTRN	_strcpy:NEAR
EXTRN	_strcat:NEAR
EXTRN	_strlen:NEAR
EXTRN	_sprintf:NEAR
;	COMDAT ??_7CShowSelectCert@@6B@
; File c:\activex\xmlsign\showselectcert.cpp
CONST	SEGMENT
??_7CShowSelectCert@@6B@ DD FLAT:?ProcessWindowMessage@CShowSelectCert@@UAEHPAUHWND__@@IIJAAJK@Z ; CShowSelectCert::`vftable'
	DD	FLAT:??_ECShowSelectCert@@UAEPAXI@Z
	DD	FLAT:?GetDialogProc@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEP6GHPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?OnFinalMessage@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAEXPAUHWND__@@@Z
	DD	FLAT:?CreateActiveXControls@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEJI@Z
; Function compile flags: /Odt /RTCsu
CONST	ENDS
_TEXT	SEGMENT
_j$202130 = -68						; size = 4
_i$202115 = -64						; size = 4
_d$ = -60						; size = 4
_s$ = -52						; size = 30
_buff$ = -16						; size = 4
_dwSizeBuf$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_storeName$ = 8						; size = 4
_certList$ = 12						; size = 4
_certCount$ = 16					; size = 4
??0CShowSelectCert@@QAE@PAEPAPAU_CERT_DESCR@@J@Z PROC NEAR ; CShowSelectCert::CShowSelectCert
; _this$ = ecx

; 18   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-68]
	mov	ecx, 17					; 00000011H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAE@XZ ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::CAxDialogImpl<CShowSelectCert,ATL::CWindow>
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CShowSelectCert@@6B@

; 19   : 	DWORD dwSizeBuf=0;

	mov	DWORD PTR _dwSizeBuf$[ebp], 0

; 20   : 	BYTE *buff=NULL;

	mov	DWORD PTR _buff$[ebp], 0

; 21   : 	char s[30];
; 22   : 	char *d;
; 23   : 
; 24   : 	certSelected = FALSE;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+72], 0

; 25   : 
; 26   : 	issuer = (WCHAR **) zMalloc(certCount * sizeof(char *));

	push	OFFSET FLAT:$SG202095
	push	26					; 0000001aH
	push	OFFSET FLAT:$SG202096
	mov	edx, DWORD PTR _certCount$[ebp]
	shl	edx, 2
	push	edx
	call	_myMalloc
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+44], eax

; 27   : 	subject = (WCHAR **) zMalloc(certCount * sizeof(char *));

	push	OFFSET FLAT:$SG202099
	push	27					; 0000001bH
	push	OFFSET FLAT:$SG202100
	mov	edx, DWORD PTR _certCount$[ebp]
	shl	edx, 2
	push	edx
	call	_myMalloc
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+48], eax

; 28   : 	notAfter = (char **) zMalloc(certCount * sizeof(char *));

	push	OFFSET FLAT:$SG202103
	push	28					; 0000001cH
	push	OFFSET FLAT:$SG202104
	mov	edx, DWORD PTR _certCount$[ebp]
	shl	edx, 2
	push	edx
	call	_myMalloc
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+52], eax

; 29   : 	decodedDataPtr = (char **) zMalloc(certCount * sizeof(char *));

	push	OFFSET FLAT:$SG202107
	push	29					; 0000001dH
	push	OFFSET FLAT:$SG202108
	mov	edx, DWORD PTR _certCount$[ebp]
	shl	edx, 2
	push	edx
	call	_myMalloc
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], eax

; 30   : 	memset(issuer, 0, certCount * sizeof(char *));

	mov	edx, DWORD PTR _certCount$[ebp]
	shl	edx, 2
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 31   : 	memset(subject, 0, certCount * sizeof(char *));

	mov	edx, DWORD PTR _certCount$[ebp]
	shl	edx, 2
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 32   : 	memset(notAfter, 0, certCount * sizeof(char *));

	mov	edx, DWORD PTR _certCount$[ebp]
	shl	edx, 2
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 33   : 	memset(decodedDataPtr, 0, certCount * sizeof(char *));

	mov	edx, DWORD PTR _certCount$[ebp]
	shl	edx, 2
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 34   : 
; 35   : 	strcpy((char *)StoreName, (const char *)storeName);

	mov	edx, DWORD PTR _storeName$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 76					; 0000004cH
	push	eax
	call	_strcpy
	add	esp, 8

; 36   : 
; 37   : 	nCurrentRow = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+68], 0

; 38   : 	count = certCount;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _certCount$[ebp]
	mov	DWORD PTR [edx+64], eax

; 39   : 	cV = certList;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _certList$[ebp]
	mov	DWORD PTR [ecx+36], edx

; 40   : 
; 41   : 	for (int i=0; i<count; i++)

	mov	DWORD PTR _i$202115[ebp], 0
	jmp	SHORT $L202116
$L202117:
	mov	eax, DWORD PTR _i$202115[ebp]
	add	eax, 1
	mov	DWORD PTR _i$202115[ebp], eax
$L202116:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$202115[ebp]
	cmp	edx, DWORD PTR [ecx+64]
	jge	$L202088

; 42   : 	{
; 43   : 		serialNo = cV[i]->serialNumber;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _i$202115[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR [edx+40], ecx

; 44   : 		dwSizeBuf = base64decodeSize(strlen((const char *)serialNo));

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	call	_base64decodeSize
	add	esp, 4
	mov	DWORD PTR _dwSizeBuf$[ebp], eax

; 45   : 		buff = (unsigned char *)zMalloc(dwSizeBuf+1);

	push	OFFSET FLAT:$SG202121
	push	45					; 0000002dH
	push	OFFSET FLAT:$SG202122
	mov	ecx, DWORD PTR _dwSizeBuf$[ebp]
	add	ecx, 1
	push	ecx
	call	_myMalloc
	add	esp, 16					; 00000010H
	mov	DWORD PTR _buff$[ebp], eax

; 46   : 		memset(buff,0,dwSizeBuf+1);

	mov	edx, DWORD PTR _dwSizeBuf$[ebp]
	add	edx, 1
	push	edx
	push	0
	mov	eax, DWORD PTR _buff$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 47   : 		if ((dwSizeBuf = base64decode(serialNo,buff,dwSizeBuf+1))==-1) 

	mov	ecx, DWORD PTR _dwSizeBuf$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _buff$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	call	_base64decode
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _dwSizeBuf$[ebp], eax
	cmp	DWORD PTR _dwSizeBuf$[ebp], -1
	jne	SHORT $L202123

; 48   : 		{	
; 49   : 			if (buff) zFree(buff);

	cmp	DWORD PTR _buff$[ebp], 0
	je	SHORT $L202124
	push	OFFSET FLAT:$SG202125
	push	49					; 00000031H
	push	OFFSET FLAT:$SG202126
	mov	edx, DWORD PTR _buff$[ebp]
	push	edx
	call	_myFree
	add	esp, 16					; 00000010H
$L202124:

; 50   : 			buff = NULL;

	mov	DWORD PTR _buff$[ebp], 0
$L202123:

; 51   : 		}
; 52   : 		d = (char *)zMalloc(256);

	push	OFFSET FLAT:$SG202128
	push	52					; 00000034H
	push	OFFSET FLAT:$SG202129
	push	256					; 00000100H
	call	_myMalloc
	add	esp, 16					; 00000010H
	mov	DWORD PTR _d$[ebp], eax

; 53   : 		memset(d,0,256);

	push	256					; 00000100H
	push	0
	mov	eax, DWORD PTR _d$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 54   : 		for(int j=dwSizeBuf;j>0;j--){

	mov	ecx, DWORD PTR _dwSizeBuf$[ebp]
	mov	DWORD PTR _j$202130[ebp], ecx
	jmp	SHORT $L202131
$L202132:
	mov	edx, DWORD PTR _j$202130[ebp]
	sub	edx, 1
	mov	DWORD PTR _j$202130[ebp], edx
$L202131:
	cmp	DWORD PTR _j$202130[ebp], 0
	jle	SHORT $L202133

; 55   : 			sprintf(s,"%02x",(int)buff[j-1]);

	mov	eax, DWORD PTR _buff$[ebp]
	add	eax, DWORD PTR _j$202130[ebp]
	movzx	ecx, BYTE PTR [eax-1]
	push	ecx
	push	OFFSET FLAT:$SG202135
	lea	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 56   : 			strcat(d,s);

	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _d$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8

; 57   : 			strcat(d," ");

	push	OFFSET FLAT:$SG202136
	mov	edx, DWORD PTR _d$[ebp]
	push	edx
	call	_strcat
	add	esp, 8

; 58   : 		}

	jmp	SHORT $L202132
$L202133:

; 59   : 		if (buff)

	cmp	DWORD PTR _buff$[ebp], 0
	je	SHORT $L202137

; 60   : 			zFree(buff);

	push	OFFSET FLAT:$SG202138
	push	60					; 0000003cH
	push	OFFSET FLAT:$SG202139
	mov	eax, DWORD PTR _buff$[ebp]
	push	eax
	call	_myFree
	add	esp, 16					; 00000010H
$L202137:

; 61   : 		buff=NULL;

	mov	DWORD PTR _buff$[ebp], 0

; 62   : 
; 63   : 		decodedDataPtr[i] = d;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	mov	eax, DWORD PTR _i$202115[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR [edx+eax*4], ecx

; 64   : 		
; 65   : 		issuer[i] = (WCHAR *)cV[i]->issuer;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	ecx, DWORD PTR _i$202115[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	add	edx, 256				; 00000100H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	eax, DWORD PTR _i$202115[ebp]
	mov	DWORD PTR [ecx+eax*4], edx

; 66   : 		subject[i] = (WCHAR *)cV[i]->shortSubject;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR _i$202115[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	add	ecx, 1280				; 00000500H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	mov	edx, DWORD PTR _i$202115[ebp]
	mov	DWORD PTR [eax+edx*4], ecx

; 67   : 		notAfter[i] = (char *)cV[i]->notAfter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR _i$202115[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	add	eax, 1792				; 00000700H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	mov	ecx, DWORD PTR _i$202115[ebp]
	mov	DWORD PTR [edx+ecx*4], eax

; 68   : 	}	

	jmp	$L202117
$L202088:

; 69   : }

	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L205471
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	add	esp, 68					; 00000044H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$L205471:
	DD	1
	DD	$L205470
$L205470:
	DD	-52					; ffffffccH
	DD	30					; 0000001eH
	DD	$L205468
$L205468:
	DB	115					; 00000073H
	DB	0
??0CShowSelectCert@@QAE@PAEPAPAU_CERT_DESCR@@J@Z ENDP	; CShowSelectCert::CShowSelectCert
_TEXT	ENDS
PUBLIC	?OnInitDialog@CShowSelectCert@@QAEJIIJAAH@Z	; CShowSelectCert::OnInitDialog
PUBLIC	?OnOK@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z	; CShowSelectCert::OnOK
PUBLIC	?OnCancel@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z ; CShowSelectCert::OnCancel
PUBLIC	?OnClickList@CShowSelectCert@@QAEJHPAUtagNMHDR@@AAH@Z ; CShowSelectCert::OnClickList
PUBLIC	?OnClickedButton1@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z ; CShowSelectCert::OnClickedButton1
PUBLIC	??_C@_0CE@BJCBICOJ@c?3?2activex?2xmlsign?2ShowSelectCer@ ; `string'
PUBLIC	??_C@_0BN@BNLFFEBD@Invalid?5message?5map?5ID?5?$CI?$CFi?$CJ?6?$AA@ ; `string'
EXTRN	?atlTraceWindowing@ATL@@3VCTraceCategory@1@A:DWORD ; ATL::atlTraceWindowing
;	COMDAT ??_C@_0BN@BNLFFEBD@Invalid?5message?5map?5ID?5?$CI?$CFi?$CJ?6?$AA@
; File c:\activex\xmlsign\showselectcert.h
CONST	SEGMENT
??_C@_0BN@BNLFFEBD@Invalid?5message?5map?5ID?5?$CI?$CFi?$CJ?6?$AA@ DB 'In'
	DB	'valid message map ID (%i)', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@BJCBICOJ@c?3?2activex?2xmlsign?2ShowSelectCer@
CONST	SEGMENT
??_C@_0CE@BJCBICOJ@c?3?2activex?2xmlsign?2ShowSelectCer@ DB 'c:\activex\x'
	DB	'mlsign\ShowSelectCert.h', 00H		; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?ProcessWindowMessage@CShowSelectCert@@UAEHPAUHWND__@@IIJAAJK@Z
_TEXT	SEGMENT
tv64 = -28						; size = 4
$T205473 = -24						; size = 8
_bHandled$ = -12					; size = 4
_this$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
_lResult$ = 24						; size = 4
_dwMsgMapID$ = 28					; size = 4
?ProcessWindowMessage@CShowSelectCert@@UAEHPAUHWND__@@IIJAAJK@Z PROC NEAR ; CShowSelectCert::ProcessWindowMessage, COMDAT
; _this$ = ecx

; 59   : BEGIN_MSG_MAP(CShowSelectCert)

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR _bHandled$[ebp], 1
	mov	eax, DWORD PTR _dwMsgMapID$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 0
	je	SHORT $L166327
	jmp	$L166365
$L166327:

; 60   : 	MESSAGE_HANDLER(WM_INITDIALOG, OnInitDialog)

	cmp	DWORD PTR _uMsg$[ebp], 272		; 00000110H
	jne	SHORT $L166328
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	ecx, DWORD PTR _bHandled$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _uMsg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnInitDialog@CShowSelectCert@@QAEJIIJAAH@Z ; CShowSelectCert::OnInitDialog
	mov	edx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [edx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L166328
	mov	eax, 1
	jmp	$L166321
$L166328:

; 61   : 	COMMAND_ID_HANDLER(IDOK, OnOK)

	cmp	DWORD PTR _uMsg$[ebp], 273		; 00000111H
	jne	SHORT $L166332
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cmp	ecx, 1
	jne	SHORT $L166332
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	and	ecx, 65535				; 0000ffffH
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnOK@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z ; CShowSelectCert::OnOK
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L166332
	mov	eax, 1
	jmp	$L166321
$L166332:

; 62   : 	COMMAND_ID_HANDLER(IDCANCEL, OnCancel)		

	cmp	DWORD PTR _uMsg$[ebp], 273		; 00000111H
	jne	SHORT $L166341
	mov	edx, DWORD PTR _wParam$[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	cmp	eax, 2
	jne	SHORT $L166341
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	ecx, DWORD PTR _bHandled$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnCancel@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z ; CShowSelectCert::OnCancel
	mov	edx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [edx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L166341
	mov	eax, 1
	jmp	$L166321
$L166341:

; 63   : 	NOTIFY_HANDLER(IDC_LIST2, NM_CLICK, OnClickList)

	cmp	DWORD PTR _uMsg$[ebp], 78		; 0000004eH
	jne	SHORT $L166350
	mov	eax, DWORD PTR _lParam$[ebp]
	cmp	DWORD PTR [eax+4], 202			; 000000caH
	jne	SHORT $L166350
	mov	ecx, DWORD PTR _lParam$[ebp]
	cmp	DWORD PTR [ecx+8], -2			; fffffffeH
	jne	SHORT $L166350
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnClickList@CShowSelectCert@@QAEJHPAUtagNMHDR@@AAH@Z ; CShowSelectCert::OnClickList
	mov	edx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [edx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L166350
	mov	eax, 1
	jmp	$L166321
$L166350:

; 64   : 	COMMAND_HANDLER(IDC_BUTTON1, BN_CLICKED, OnClickedButton1)		

	cmp	DWORD PTR _uMsg$[ebp], 273		; 00000111H
	jne	SHORT $L166358
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cmp	ecx, 203				; 000000cbH
	jne	SHORT $L166358
	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	movzx	eax, dx
	test	eax, eax
	jne	SHORT $L166358
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	ecx, DWORD PTR _bHandled$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnClickedButton1@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z ; CShowSelectCert::OnClickedButton1
	mov	edx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [edx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L166358
	mov	eax, 1
	jmp	SHORT $L166321
$L166358:

; 65   : END_MSG_MAP()

	jmp	SHORT $L166324
$L166365:
	mov	eax, DWORD PTR _dwMsgMapID$[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_0BN@BNLFFEBD@Invalid?5message?5map?5ID?5?$CI?$CFi?$CJ?6?$AA@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceWindowing@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceWindowing
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	65					; 00000041H
	push	OFFSET FLAT:??_C@_0CE@BJCBICOJ@c?3?2activex?2xmlsign?2ShowSelectCer@
	lea	ecx, DWORD PTR $T205473[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $L166324
	push	OFFSET FLAT:??_C@_01GBGANLPD@0?$AA@
	push	0
	push	65					; 00000041H
	push	OFFSET FLAT:??_C@_0CE@BJCBICOJ@c?3?2activex?2xmlsign?2ShowSelectCer@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L166324
	int	3
$L166324:
	xor	eax, eax
$L166321:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L205477
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
$L205477:
	DD	1
	DD	$L205476
$L205476:
	DD	-12					; fffffff4H
	DD	4
	DD	$L205475
$L205475:
	DB	98					; 00000062H
	DB	72					; 00000048H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
?ProcessWindowMessage@CShowSelectCert@@UAEHPAUHWND__@@IIJAAJK@Z ENDP ; CShowSelectCert::ProcessWindowMessage
_TEXT	ENDS
PUBLIC	?A2WBSTR@@YAPAGPBDH@Z				; A2WBSTR
PUBLIC	?CreateHeader@CShowSelectCert@@QAEXXZ		; CShowSelectCert::CreateHeader
PUBLIC	?SetCell@CShowSelectCert@@QAEXPAGHH@Z		; CShowSelectCert::SetCell
PUBLIC	?setSelection@CShowSelectCert@@QAEXXZ		; CShowSelectCert::setSelection
PUBLIC	??0CComBSTR@ATL@@QAE@XZ				; ATL::CComBSTR::CComBSTR
PUBLIC	??BCComBSTR@ATL@@QBEPAGXZ			; ATL::CComBSTR::operator unsigned short *
PUBLIC	?LoadStringA@CComBSTR@ATL@@QAE_NI@Z		; ATL::CComBSTR::LoadStringA
PUBLIC	?CenterWindow@CWindow@ATL@@QAEHPAUHWND__@@@Z	; ATL::CWindow::CenterWindow
EXTRN	__imp__SetWindowTextW@8:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T205488 DD	0ffffffffH
	DD	FLAT:$L205481
$T205483 DD	019930520H
	DD	01H
	DD	FLAT:$T205488
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?OnInitDialog@CShowSelectCert@@QAEJIIJAAH@Z
_TEXT	SEGMENT
$T205480 = -40						; size = 4
_tmpBstr$166379 = -36					; size = 4
_i$166373 = -32						; size = 4
_caption$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_uMsg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
_bHandled$ = 20						; size = 4
?OnInitDialog@CShowSelectCert@@QAEJIIJAAH@Z PROC NEAR	; CShowSelectCert::OnInitDialog, COMDAT
; _this$ = ecx

; 68   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnInitDialog@CShowSelectCert@@QAEJIIJAAH@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR _this$[ebp], ecx

; 69   : 		CComBSTR caption;

	lea	ecx, DWORD PTR _caption$[ebp]
	call	??0CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::CComBSTR
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 70   : 
; 71   : 		caption.LoadString(IDS_CAPTION);

	push	109					; 0000006dH
	lea	ecx, DWORD PTR _caption$[ebp]
	call	?LoadStringA@CComBSTR@ATL@@QAE_NI@Z	; ATL::CComBSTR::LoadStringA

; 72   : 		if (count != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 0
	je	$L166372

; 73   : 		{
; 74   : 			::SetWindowTextW(m_hWnd,caption);

	lea	ecx, DWORD PTR _caption$[ebp]
	call	??BCComBSTR@ATL@@QBEPAGXZ		; ATL::CComBSTR::operator unsigned short *
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__SetWindowTextW@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 75   : 			//Insert header		
; 76   : 			CreateHeader();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateHeader@CShowSelectCert@@QAEXXZ	; CShowSelectCert::CreateHeader

; 77   : 			
; 78   : 			// Inserts first Row with four columns .		
; 79   : 
; 80   : 			for(int i=0;i<count;i++){		

	mov	DWORD PTR _i$166373[ebp], 0
	jmp	SHORT $L166374
$L166375:
	mov	eax, DWORD PTR _i$166373[ebp]
	add	eax, 1
	mov	DWORD PTR _i$166373[ebp], eax
$L166374:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$166373[ebp]
	cmp	edx, DWORD PTR [ecx+64]
	jge	$L166376

; 81   : 				SetCell((LPWSTR)subject[i],i,0);

	push	0
	mov	eax, DWORD PTR _i$166373[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	eax, DWORD PTR _i$166373[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetCell@CShowSelectCert@@QAEXPAGHH@Z	; CShowSelectCert::SetCell

; 82   : 				SetCell((LPWSTR)issuer[i],i,1);

	push	1
	mov	edx, DWORD PTR _i$166373[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR _i$166373[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetCell@CShowSelectCert@@QAEXPAGHH@Z	; CShowSelectCert::SetCell

; 83   : 				BSTR tmpBstr;
; 84   : 				tmpBstr = A2WBSTR((LPCSTR)notAfter[i]);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR _i$166373[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	?A2WBSTR@@YAPAGPBDH@Z			; A2WBSTR
	add	esp, 8
	mov	DWORD PTR _tmpBstr$166379[ebp], eax

; 85   : 				SetCell((LPWSTR)tmpBstr,i,2);

	push	2
	mov	edx, DWORD PTR _i$166373[ebp]
	push	edx
	mov	eax, DWORD PTR _tmpBstr$166379[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetCell@CShowSelectCert@@QAEXPAGHH@Z	; CShowSelectCert::SetCell

; 86   : 				SysFreeString(tmpBstr);

	mov	esi, esp
	mov	ecx, DWORD PTR _tmpBstr$166379[ebp]
	push	ecx
	call	DWORD PTR __imp__SysFreeString@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 87   : 				tmpBstr = A2WBSTR((LPCSTR)decodedDataPtr[i]);

	push	-1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	mov	ecx, DWORD PTR _i$166373[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	push	edx
	call	?A2WBSTR@@YAPAGPBDH@Z			; A2WBSTR
	add	esp, 8
	mov	DWORD PTR _tmpBstr$166379[ebp], eax

; 88   : 				SetCell((LPWSTR)tmpBstr,i,3);

	push	3
	mov	eax, DWORD PTR _i$166373[ebp]
	push	eax
	mov	ecx, DWORD PTR _tmpBstr$166379[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetCell@CShowSelectCert@@QAEXPAGHH@Z	; CShowSelectCert::SetCell

; 89   : 				SysFreeString(tmpBstr);

	mov	esi, esp
	mov	edx, DWORD PTR _tmpBstr$166379[ebp]
	push	edx
	call	DWORD PTR __imp__SysFreeString@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 90   : 			}

	jmp	$L166375
$L166376:

; 91   : 			CenterWindow();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?CenterWindow@CWindow@ATL@@QAEHPAUHWND__@@@Z ; ATL::CWindow::CenterWindow

; 92   : 			nCurrentRow = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+68], 0

; 93   : 			setSelection();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?setSelection@CShowSelectCert@@QAEXXZ	; CShowSelectCert::setSelection
$L166372:

; 94   : 
; 95   : 		}
; 96   : 				
; 97   : 		return 1;  // Let the system set the focus

	mov	DWORD PTR $T205480[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _caption$[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
	mov	eax, DWORD PTR $T205480[ebp]

; 98   : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L205487
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$L205487:
	DD	1
	DD	$L205486
$L205486:
	DD	-24					; ffffffe8H
	DD	4
	DD	$L205484
$L205484:
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L205481:
	lea	ecx, DWORD PTR _caption$[ebp]
	jmp	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
__ehhandler$?OnInitDialog@CShowSelectCert@@QAEJIIJAAH@Z:
	mov	eax, OFFSET FLAT:$T205483
	jmp	___CxxFrameHandler
text$x	ENDS
?OnInitDialog@CShowSelectCert@@QAEJIIJAAH@Z ENDP	; CShowSelectCert::OnInitDialog
PUBLIC	?EndDialog@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHH@Z ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::EndDialog
; Function compile flags: /Odt /RTCsu
;	COMDAT ?OnOK@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wNotifyCode$ = 8					; size = 2
_wID$ = 12						; size = 2
_hWndCtl$ = 16						; size = 4
_bHandled$ = 20						; size = 4
?OnOK@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z PROC NEAR	; CShowSelectCert::OnOK, COMDAT
; _this$ = ecx

; 101  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 102  : 		if (nCurrentRow != -1)

	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+68]
	cmp	ecx, -1
	je	SHORT $L166387

; 103  : 			certSelected = TRUE;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+72], 1
$L166387:

; 104  : 		EndDialog(wID);

	movzx	eax, WORD PTR _wID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EndDialog@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHH@Z ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::EndDialog

; 105  : 		return 0;

	xor	eax, eax

; 106  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?OnOK@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z ENDP	; CShowSelectCert::OnOK
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?OnCancel@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wNotifyCode$ = 8					; size = 2
_wID$ = 12						; size = 2
_hWndCtl$ = 16						; size = 4
_bHandled$ = 20						; size = 4
?OnCancel@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z PROC NEAR ; CShowSelectCert::OnCancel, COMDAT
; _this$ = ecx

; 109  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 110  : 		certSelected = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0

; 111  : 		EndDialog(wID);

	movzx	ecx, WORD PTR _wID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EndDialog@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHH@Z ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::EndDialog

; 112  : 		return 0;

	xor	eax, eax

; 113  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?OnCancel@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z ENDP	; CShowSelectCert::OnCancel
_TEXT	ENDS
PUBLIC	?SendMessageA@CWindow@ATL@@QAEJIIJ@Z		; ATL::CWindow::SendMessageA
PUBLIC	?GetDlgItem@CWindow@ATL@@QBE?AV12@H@Z		; ATL::CWindow::GetDlgItem
EXTRN	__imp__SendMessageA@16:NEAR
EXTRN	__imp__SendMessageW@16:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?CreateHeader@CShowSelectCert@@QAEXXZ
_TEXT	SEGMENT
_list1$ = -64						; size = 32
_cstr$ = -24						; size = 4
_listControl$ = -12					; size = 4
_this$ = -4						; size = 4
?CreateHeader@CShowSelectCert@@QAEXXZ PROC NEAR		; CShowSelectCert::CreateHeader, COMDAT
; _this$ = ecx

; 115  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-68]
	mov	ecx, 17					; 00000011H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 116  : 		CWindow listControl(GetDlgItem(IDC_LIST2));

	push	202					; 000000caH
	lea	eax, DWORD PTR _listControl$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetDlgItem@CWindow@ATL@@QBE?AV12@H@Z	; ATL::CWindow::GetDlgItem

; 117  : 		CComBSTR cstr;

	lea	ecx, DWORD PTR _cstr$[ebp]
	call	??0CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::CComBSTR

; 118  : 		
; 119  : 		listControl.SendMessage(LVM_SETEXTENDEDLISTVIEWSTYLE,LVS_EX_FULLROWSELECT, LVS_EX_FULLROWSELECT);

	push	32					; 00000020H
	push	32					; 00000020H
	push	4150					; 00001036H
	lea	ecx, DWORD PTR _listControl$[ebp]
	call	?SendMessageA@CWindow@ATL@@QAEJIIJ@Z	; ATL::CWindow::SendMessageA

; 120  : 
; 121  : 		LVCOLUMNW list1;
; 122  : 		list1.mask =  LVCF_TEXT |LVCF_WIDTH| 
; 123  :         LVCF_FMT |LVCF_SUBITEM;

	mov	DWORD PTR _list1$[ebp], 15		; 0000000fH

; 124  : 		list1.fmt = LVCFMT_LEFT;

	mov	DWORD PTR _list1$[ebp+4], 0

; 125  : 		
; 126  : 		cstr.LoadString(IDS_SERIALNO);

	push	103					; 00000067H
	lea	ecx, DWORD PTR _cstr$[ebp]
	call	?LoadStringA@CComBSTR@ATL@@QAE_NI@Z	; ATL::CComBSTR::LoadStringA

; 127  : 		list1.cx = 100;

	mov	DWORD PTR _list1$[ebp+8], 100		; 00000064H

; 128  : 		list1.pszText   = (LPWSTR) cstr;

	lea	ecx, DWORD PTR _cstr$[ebp]
	call	??BCComBSTR@ATL@@QBEPAGXZ		; ATL::CComBSTR::operator unsigned short *
	mov	DWORD PTR _list1$[ebp+12], eax

; 129  : 			//L"Serial No";
; 130  : 		list1.iSubItem = 0;		

	mov	DWORD PTR _list1$[ebp+20], 0

; 131  : //		listControl.SendMessage(LVM_INSERTCOLUMN, (WPARAM)0,(WPARAM)&list1);
; 132  : 		::SendMessageW(listControl.m_hWnd, LVM_INSERTCOLUMNW, 0, (LPARAM)(const LV_ITEMW *)(&list1));

	mov	esi, esp
	lea	ecx, DWORD PTR _list1$[ebp]
	push	ecx
	push	0
	push	4193					; 00001061H
	mov	edx, DWORD PTR _listControl$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 133  : 		
; 134  : 		cstr.LoadString(IDS_EXPDATE);

	push	104					; 00000068H
	lea	ecx, DWORD PTR _cstr$[ebp]
	call	?LoadStringA@CComBSTR@ATL@@QAE_NI@Z	; ATL::CComBSTR::LoadStringA

; 135  : 		list1.cx = 100;

	mov	DWORD PTR _list1$[ebp+8], 100		; 00000064H

; 136  : 		list1.pszText   = (LPWSTR) cstr;

	lea	ecx, DWORD PTR _cstr$[ebp]
	call	??BCComBSTR@ATL@@QBEPAGXZ		; ATL::CComBSTR::operator unsigned short *
	mov	DWORD PTR _list1$[ebp+12], eax

; 137  : 			//L"Expiration Date";
; 138  : 		list1.iSubItem = 1;

	mov	DWORD PTR _list1$[ebp+20], 1

; 139  : //		listControl.SendMessage(LVM_INSERTCOLUMN, (WPARAM)0,(WPARAM)&list1);	
; 140  : 		SNDMSG(listControl.m_hWnd, LVM_INSERTCOLUMNW, 0, (LPARAM)(const LV_ITEMW *)(&list1));

	mov	esi, esp
	lea	eax, DWORD PTR _list1$[ebp]
	push	eax
	push	0
	push	4193					; 00001061H
	mov	ecx, DWORD PTR _listControl$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 141  : 
; 142  : 		cstr.LoadString(IDS_ISSUEDBY);

	push	105					; 00000069H
	lea	ecx, DWORD PTR _cstr$[ebp]
	call	?LoadStringA@CComBSTR@ATL@@QAE_NI@Z	; ATL::CComBSTR::LoadStringA

; 143  : 		list1.cx = 100;

	mov	DWORD PTR _list1$[ebp+8], 100		; 00000064H

; 144  : 		list1.pszText   = (LPWSTR) cstr;

	lea	ecx, DWORD PTR _cstr$[ebp]
	call	??BCComBSTR@ATL@@QBEPAGXZ		; ATL::CComBSTR::operator unsigned short *
	mov	DWORD PTR _list1$[ebp+12], eax

; 145  : 			//L"Issued by";
; 146  : 		list1.iSubItem = 2;

	mov	DWORD PTR _list1$[ebp+20], 2

; 147  : //		listControl.SendMessage(LVM_INSERTCOLUMN, (WPARAM)0,(WPARAM)&list1);
; 148  : 		SNDMSG(listControl.m_hWnd, LVM_INSERTCOLUMNW, 0, (LPARAM)(const LV_ITEMW *)(&list1));

	mov	esi, esp
	lea	edx, DWORD PTR _list1$[ebp]
	push	edx
	push	0
	push	4193					; 00001061H
	mov	eax, DWORD PTR _listControl$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 149  : 		
; 150  : 		cstr.LoadString(IDS_ISSUEDTO);

	push	106					; 0000006aH
	lea	ecx, DWORD PTR _cstr$[ebp]
	call	?LoadStringA@CComBSTR@ATL@@QAE_NI@Z	; ATL::CComBSTR::LoadStringA

; 151  : 		list1.cx = 100;

	mov	DWORD PTR _list1$[ebp+8], 100		; 00000064H

; 152  : 		list1.pszText   = (LPWSTR) cstr;

	lea	ecx, DWORD PTR _cstr$[ebp]
	call	??BCComBSTR@ATL@@QBEPAGXZ		; ATL::CComBSTR::operator unsigned short *
	mov	DWORD PTR _list1$[ebp+12], eax

; 153  : 			//L"Issued To";
; 154  : 		list1.iSubItem = 3;

	mov	DWORD PTR _list1$[ebp+20], 3

; 155  : //		listControl.SendMessage(LVM_INSERTCOLUMN, (WPARAM)0,(WPARAM)&list1);
; 156  : 		SNDMSG(listControl.m_hWnd, LVM_INSERTCOLUMNW, 0, (LPARAM)(const LV_ITEMW *)(&list1));

	mov	esi, esp
	lea	ecx, DWORD PTR _list1$[ebp]
	push	ecx
	push	0
	push	4193					; 00001061H
	mov	edx, DWORD PTR _listControl$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 157  : 	}

	lea	ecx, DWORD PTR _cstr$[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L205502
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 68					; 00000044H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L205502:
	DD	3
	DD	$L205501
$L205501:
	DD	-12					; fffffff4H
	DD	4
	DD	$L205498
	DD	-24					; ffffffe8H
	DD	4
	DD	$L205499
	DD	-64					; ffffffc0H
	DD	32					; 00000020H
	DD	$L205500
$L205500:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	49					; 00000031H
	DB	0
$L205499:
	DB	99					; 00000063H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$L205498:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	0
?CreateHeader@CShowSelectCert@@QAEXXZ ENDP		; CShowSelectCert::CreateHeader
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?SetCell@CShowSelectCert@@QAEXPAGHH@Z
_TEXT	SEGMENT
_lvItem$ = -60						; size = 40
_listControl$ = -12					; size = 4
_this$ = -4						; size = 4
_value$ = 8						; size = 4
_nRow$ = 12						; size = 4
_nCol$ = 16						; size = 4
?SetCell@CShowSelectCert@@QAEXPAGHH@Z PROC NEAR		; CShowSelectCert::SetCell, COMDAT
; _this$ = ecx

; 159  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 160  :     
; 161  : 	CWindow listControl(GetDlgItem(IDC_LIST2));

	push	202					; 000000caH
	lea	eax, DWORD PTR _listControl$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetDlgItem@CWindow@ATL@@QBE?AV12@H@Z	; ATL::CWindow::GetDlgItem

; 162  : 
; 163  :     //Fill the LVITEM structure with the 
; 164  :     //values given as parameters.
; 165  : 	
; 166  :     LVITEMW lvItem;
; 167  :     lvItem.mask = LVIF_TEXT;

	mov	DWORD PTR _lvItem$[ebp], 1

; 168  :     lvItem.iItem = nRow;

	mov	ecx, DWORD PTR _nRow$[ebp]
	mov	DWORD PTR _lvItem$[ebp+4], ecx

; 169  :     lvItem.pszText = value;

	mov	edx, DWORD PTR _value$[ebp]
	mov	DWORD PTR _lvItem$[ebp+20], edx

; 170  :     lvItem.iSubItem = nCol;

	mov	eax, DWORD PTR _nCol$[ebp]
	mov	DWORD PTR _lvItem$[ebp+8], eax

; 171  : 	lvItem.lParam = (LPARAM) value;

	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR _lvItem$[ebp+32], ecx

; 172  :     if(nCol >0)

	cmp	DWORD PTR _nCol$[ebp], 0
	jle	SHORT $L166414

; 173  :         
; 174  : //		ListView_SetItem(listControl.m_hWnd,&lvItem);
; 175  : 		SNDMSG(listControl.m_hWnd, LVM_SETITEMW, 0, (LPARAM)(const LV_ITEMW *)(&lvItem));

	mov	esi, esp
	lea	edx, DWORD PTR _lvItem$[ebp]
	push	edx
	push	0
	push	4172					; 0000104cH
	mov	eax, DWORD PTR _listControl$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 176  : 		
; 177  :     else

	jmp	SHORT $L166409
$L166414:

; 178  :         //Insert the value into List
; 179  : //        ListView_InsertItem(listControl.m_hWnd,&lvItem);
; 180  : 		  SNDMSG((listControl.m_hWnd), LVM_INSERTITEMW, 0, (LPARAM)(const LV_ITEMW *)(&lvItem));

	mov	esi, esp
	lea	ecx, DWORD PTR _lvItem$[ebp]
	push	ecx
	push	0
	push	4173					; 0000104dH
	mov	edx, DWORD PTR _listControl$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$L166409:

; 181  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L205508
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$L205508:
	DD	2
	DD	$L205507
$L205507:
	DD	-12					; fffffff4H
	DD	4
	DD	$L205505
	DD	-60					; ffffffc4H
	DD	40					; 00000028H
	DD	$L205506
$L205506:
	DB	108					; 0000006cH
	DB	118					; 00000076H
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	0
$L205505:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	0
?SetCell@CShowSelectCert@@QAEXPAGHH@Z ENDP		; CShowSelectCert::SetCell
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?OnClickList@CShowSelectCert@@QAEJHPAUtagNMHDR@@AAH@Z
_TEXT	SEGMENT
_temp$ = -8						; size = 4
_this$ = -4						; size = 4
_idCtrl$ = 8						; size = 4
_pnmh$ = 12						; size = 4
_bHandled$ = 16						; size = 4
?OnClickList@CShowSelectCert@@QAEJHPAUtagNMHDR@@AAH@Z PROC NEAR ; CShowSelectCert::OnClickList, COMDAT
; _this$ = ecx

; 184  : 	{		

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 	
; 186  : 		LPNMITEMACTIVATE temp = (LPNMITEMACTIVATE) pnmh;

	mov	eax, DWORD PTR _pnmh$[ebp]
	mov	DWORD PTR _temp$[ebp], eax

; 187  : 		
; 188  : 		nCurrentRow = temp->iItem;	

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _temp$[ebp]
	mov	ax, WORD PTR [edx+12]
	mov	WORD PTR [ecx+68], ax

; 189  : 		
; 190  : 		return 0;

	xor	eax, eax

; 191  : 	}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?OnClickList@CShowSelectCert@@QAEJHPAUtagNMHDR@@AAH@Z ENDP ; CShowSelectCert::OnClickList
_TEXT	ENDS
PUBLIC	??BCWindow@ATL@@QBEPAUHWND__@@XZ		; ATL::CWindow::operator HWND__ *
; Function compile flags: /Odt /RTCsu
;	COMDAT ?setSelection@CShowSelectCert@@QAEXXZ
_TEXT	SEGMENT
__ms_lvi$166442 = -60					; size = 40
_listControl$ = -12					; size = 4
_this$ = -4						; size = 4
?setSelection@CShowSelectCert@@QAEXXZ PROC NEAR		; CShowSelectCert::setSelection, COMDAT
; _this$ = ecx

; 217  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 218  : 	CWindow listControl(GetDlgItem(IDC_LIST2));

	push	202					; 000000caH
	lea	eax, DWORD PTR _listControl$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetDlgItem@CWindow@ATL@@QBE?AV12@H@Z	; ATL::CWindow::GetDlgItem

; 219  : 	ListView_SetItemState(listControl, nCurrentRow, LVIS_SELECTED| LVIS_FOCUSED, LVIS_SELECTED| LVIS_FOCUSED); 

	mov	DWORD PTR __ms_lvi$166442[ebp+16], 3
	mov	DWORD PTR __ms_lvi$166442[ebp+12], 3
	mov	esi, esp
	lea	ecx, DWORD PTR __ms_lvi$166442[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+68]
	push	eax
	push	4139					; 0000102bH
	lea	ecx, DWORD PTR _listControl$[ebp]
	call	??BCWindow@ATL@@QBEPAUHWND__@@XZ	; ATL::CWindow::operator HWND__ *
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 220  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L205516
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L205516:
	DD	2
	DD	$L205515
$L205515:
	DD	-12					; fffffff4H
	DD	4
	DD	$L205513
	DD	-60					; ffffffc4H
	DD	40					; 00000028H
	DD	$L205514
$L205514:
	DB	95					; 0000005fH
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	95					; 0000005fH
	DB	108					; 0000006cH
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	0
$L205513:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	0
?setSelection@CShowSelectCert@@QAEXXZ ENDP		; CShowSelectCert::setSelection
_TEXT	ENDS
PUBLIC	??1CShowSelectCert@@UAE@XZ			; CShowSelectCert::~CShowSelectCert
; Function compile flags: /Odt /RTCsu
;	COMDAT ??_GCShowSelectCert@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCShowSelectCert@@UAEPAXI@Z PROC NEAR		; CShowSelectCert::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CShowSelectCert@@UAE@XZ		; CShowSelectCert::~CShowSelectCert
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L166449
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L166449:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCShowSelectCert@@UAEPAXI@Z ENDP			; CShowSelectCert::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_0BJ@OGJFCAD@nResult?5?$DN?$DN?5nConvertedLen?$AA@ ; `string'
EXTRN	__imp__SysAllocStringLen@8:NEAR
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
xdata$x	SEGMENT
$T205531 DD	0ffffffffH
	DD	FLAT:$L205524
$T205526 DD	019930520H
	DD	01H
	DD	FLAT:$T205531
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BJ@OGJFCAD@nResult?5?$DN?$DN?5nConvertedLen?$AA@
CONST	SEGMENT
??_C@_0BJ@OGJFCAD@nResult?5?$DN?$DN?5nConvertedLen?$AA@ DB 'nResult == nC'
	DB	'onvertedLen', 00H				; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?A2WBSTR@@YAPAGPBDH@Z
_TEXT	SEGMENT
$T205523 = -64						; size = 4
$T205522 = -60						; size = 4
_nResult$76113 = -56					; size = 4
_nAllocLen$ = -52					; size = 4
_nConvertedLen$ = -48					; size = 4
_str$ = -44						; size = 4
__AtlSafeAllocaManager$ = -36				; size = 4
__lpa_ex$ = -28						; size = 4
__lpw_ex$ = -24						; size = 4
__acp_ex$ = -20						; size = 4
__convert_ex$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_lp$ = 8						; size = 4
_nLen$ = 12						; size = 4
?A2WBSTR@@YAPAGPBDH@Z PROC NEAR				; A2WBSTR, COMDAT

; 775  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?A2WBSTR@@YAPAGPBDH@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 52					; 00000034H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 776  : 	if (lp == NULL || nLen == 0)

	cmp	DWORD PTR _lp$[ebp], 0
	je	SHORT $L76086
	cmp	DWORD PTR _nLen$[ebp], 0
	jne	SHORT $L76085
$L76086:

; 777  : 		return NULL;

	xor	eax, eax
	jmp	$L76084
$L76085:

; 778  : 	USES_CONVERSION_EX;

	mov	DWORD PTR __convert_ex$[ebp], 0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	mov	DWORD PTR __acp_ex$[ebp], eax
	mov	DWORD PTR __lpw_ex$[ebp], 0
	mov	DWORD PTR __lpa_ex$[ebp], 0
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	call	??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 779  : 	BSTR str = NULL;

	mov	DWORD PTR _str$[ebp], 0

; 780  : 	int nConvertedLen = MultiByteToWideChar(_acp_ex, 0, lp,
; 781  : 		nLen, NULL, NULL);

	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _nLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lp$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __acp_ex$[ebp]
	push	edx
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nConvertedLen$[ebp], eax

; 782  : 	int nAllocLen = nConvertedLen;

	mov	eax, DWORD PTR _nConvertedLen$[ebp]
	mov	DWORD PTR _nAllocLen$[ebp], eax

; 783  : 	if (nLen == -1)

	cmp	DWORD PTR _nLen$[ebp], -1
	jne	SHORT $L76111

; 784  : 		nAllocLen -= 1;  // Don't allocate terminating '\0'

	mov	ecx, DWORD PTR _nAllocLen$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _nAllocLen$[ebp], ecx
$L76111:

; 785  : 	str = ::SysAllocStringLen(NULL, nAllocLen);

	mov	esi, esp
	mov	edx, DWORD PTR _nAllocLen$[ebp]
	push	edx
	push	0
	call	DWORD PTR __imp__SysAllocStringLen@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _str$[ebp], eax

; 786  : 
; 787  : 	if (str != NULL)

	cmp	DWORD PTR _str$[ebp], 0
	je	$L76112

; 788  : 	{
; 789  : 		int nResult;
; 790  : 		nResult = MultiByteToWideChar(_acp_ex, 0, lp, nLen, str, nConvertedLen);

	mov	esi, esp
	mov	eax, DWORD PTR _nConvertedLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nLen$[ebp]
	push	edx
	mov	eax, DWORD PTR _lp$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __acp_ex$[ebp]
	push	ecx
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nResult$76113[ebp], eax

; 791  : 		ATLASSERT(nResult == nConvertedLen);

	mov	edx, DWORD PTR _nResult$76113[ebp]
	cmp	edx, DWORD PTR _nConvertedLen$[ebp]
	je	SHORT $L205521
	push	OFFSET FLAT:??_C@_0BJ@OGJFCAD@nResult?5?$DN?$DN?5nConvertedLen?$AA@
	push	0
	push	791					; 00000317H
	push	OFFSET FLAT:??_C@_0FA@OHHMODBN@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205521
	int	3
$L205521:

; 792  : 		if(nResult != nConvertedLen)

	mov	ecx, DWORD PTR _nResult$76113[ebp]
	cmp	ecx, DWORD PTR _nConvertedLen$[ebp]
	je	SHORT $L76112

; 793  : 		{
; 794  : 			SysFreeString(str);

	mov	esi, esp
	mov	edx, DWORD PTR _str$[ebp]
	push	edx
	call	DWORD PTR __imp__SysFreeString@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 795  : 			return NULL;

	mov	DWORD PTR $T205522[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	call	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
	mov	eax, DWORD PTR $T205522[ebp]
	jmp	SHORT $L76084
$L76112:

; 796  : 		}
; 797  : 
; 798  : 	}
; 799  : 	return str;

	mov	eax, DWORD PTR _str$[ebp]
	mov	DWORD PTR $T205523[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	call	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
	mov	eax, DWORD PTR $T205523[ebp]
$L76084:

; 800  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L205530
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L205530:
	DD	1
	DD	$L205529
$L205529:
	DD	-36					; ffffffdcH
	DD	4
	DD	$L205527
$L205527:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	116					; 00000074H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	97					; 00000061H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	77					; 0000004dH
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L205524:
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	jmp	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
__ehhandler$?A2WBSTR@@YAPAGPBDH@Z:
	mov	eax, OFFSET FLAT:$T205526
	jmp	___CxxFrameHandler
text$x	ENDS
?A2WBSTR@@YAPAGPBDH@Z ENDP				; A2WBSTR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ??0CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CComBSTR@ATL@@QAE@XZ PROC NEAR			; ATL::CComBSTR::CComBSTR, COMDAT
; _this$ = ecx

; 545  : 	CComBSTR() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 546  : 	{
; 547  : 		m_str = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 548  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CComBSTR@ATL@@QAE@XZ ENDP				; ATL::CComBSTR::CComBSTR
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??BCComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BCComBSTR@ATL@@QBEPAGXZ PROC NEAR			; ATL::CComBSTR::operator unsigned short *, COMDAT
; _this$ = ecx

; 640  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 641  : 		return m_str;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 642  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??BCComBSTR@ATL@@QBEPAGXZ ENDP				; ATL::CComBSTR::operator unsigned short *
_TEXT	ENDS
PUBLIC	?LoadStringResource@CComBSTR@ATL@@SA_NIAAPAG@Z	; ATL::CComBSTR::LoadStringResource
; Function compile flags: /Odt /RTCsu
;	COMDAT ?LoadStringA@CComBSTR@ATL@@QAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nID$ = 8						; size = 4
?LoadStringA@CComBSTR@ATL@@QAE_NI@Z PROC NEAR		; ATL::CComBSTR::LoadStringA, COMDAT
; _this$ = ecx

; 890  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 891  : 		::SysFreeString(m_str);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SysFreeString@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 892  : 		m_str = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 893  : 		return LoadStringResource(nID, m_str);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nID$[ebp]
	push	ecx
	call	?LoadStringResource@CComBSTR@ATL@@SA_NIAAPAG@Z ; ATL::CComBSTR::LoadStringResource
	add	esp, 8

; 894  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?LoadStringA@CComBSTR@ATL@@QAE_NI@Z ENDP		; ATL::CComBSTR::LoadStringA
_TEXT	ENDS
PUBLIC	??_C@_0O@LPAFDJOF@bstrText?5?$DN?$DN?50?$AA@	; `string'
PUBLIC	??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@ ; `string'
PUBLIC	?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@I@Z ; ATL::AtlGetStringResourceImage
;	COMDAT ??_C@_0O@LPAFDJOF@bstrText?5?$DN?$DN?50?$AA@
CONST	SEGMENT
??_C@_0O@LPAFDJOF@bstrText?5?$DN?$DN?50?$AA@ DB 'bstrText == 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT
??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@ DB 'C:\Program '
	DB	'Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\include\at'
	DB	'lcomcli.h', 00H				; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?LoadStringResource@CComBSTR@ATL@@SA_NIAAPAG@Z
_TEXT	SEGMENT
_pImage$ = -4						; size = 4
_uID$ = 8						; size = 4
_bstrText$ = 12						; size = 4
?LoadStringResource@CComBSTR@ATL@@SA_NIAAPAG@Z PROC NEAR ; ATL::CComBSTR::LoadStringResource, COMDAT

; 1106 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1107 : 		const ATLSTRINGRESOURCEIMAGE* pImage;
; 1108 : 
; 1109 : 		ATLASSERT(bstrText == NULL);

	mov	eax, DWORD PTR _bstrText$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L205542
	push	OFFSET FLAT:??_C@_0O@LPAFDJOF@bstrText?5?$DN?$DN?50?$AA@
	push	0
	push	1109					; 00000455H
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205542
	int	3
$L205542:

; 1110 : 
; 1111 : 		pImage = AtlGetStringResourceImage(uID);

	mov	edx, DWORD PTR _uID$[ebp]
	push	edx
	call	?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@I@Z ; ATL::AtlGetStringResourceImage
	add	esp, 4
	mov	DWORD PTR _pImage$[ebp], eax

; 1112 : 		if (pImage != NULL)

	cmp	DWORD PTR _pImage$[ebp], 0
	je	SHORT $L82068

; 1113 : 		{
; 1114 : 			bstrText = ::SysAllocStringLen(pImage->achString, pImage->nLength);

	mov	eax, DWORD PTR _pImage$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _pImage$[ebp]
	add	edx, 2
	push	edx
	call	DWORD PTR __imp__SysAllocStringLen@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _bstrText$[ebp]
	mov	DWORD PTR [ecx], eax
$L82068:

; 1115 : 		}
; 1116 : 
; 1117 : 		return (bstrText != NULL) ? true : false;

	mov	edx, DWORD PTR _bstrText$[ebp]
	cmp	DWORD PTR [edx], 0
	setne	al

; 1118 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?LoadStringResource@CComBSTR@ATL@@SA_NIAAPAG@Z ENDP	; ATL::CComBSTR::LoadStringResource
_TEXT	ENDS
PUBLIC	?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ; ATL::AtlGetStringResourceImage
EXTRN	?GetHInstanceAt@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@H@Z:NEAR ; ATL::CAtlBaseModule::GetHInstanceAt
EXTRN	?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A:BYTE	; ATL::_AtlBaseModule
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcore.h
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@I@Z
_TEXT	SEGMENT
tv70 = -16						; size = 4
_i$77536 = -12						; size = 4
_hInst$ = -8						; size = 4
_p$ = -4						; size = 4
_id$ = 8						; size = 4
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@I@Z PROC NEAR ; ATL::AtlGetStringResourceImage, COMDAT

; 306  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 307  : 	const ATLSTRINGRESOURCEIMAGE* p = NULL;

	mov	DWORD PTR _p$[ebp], 0

; 308  : 	HINSTANCE hInst = _AtlBaseModule.GetHInstanceAt(0);

	push	0
	mov	ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
	call	?GetHInstanceAt@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@H@Z ; ATL::CAtlBaseModule::GetHInstanceAt
	mov	DWORD PTR _hInst$[ebp], eax

; 309  : 
; 310  : 	for (int i = 1; hInst != NULL && p == NULL; hInst = _AtlBaseModule.GetHInstanceAt(i++))

	mov	DWORD PTR _i$77536[ebp], 1
	jmp	SHORT $L77537
$L77538:
	mov	eax, DWORD PTR _i$77536[ebp]
	mov	DWORD PTR tv70[ebp], eax
	mov	ecx, DWORD PTR _i$77536[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$77536[ebp], ecx
	mov	edx, DWORD PTR tv70[ebp]
	push	edx
	mov	ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
	call	?GetHInstanceAt@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@H@Z ; ATL::CAtlBaseModule::GetHInstanceAt
	mov	DWORD PTR _hInst$[ebp], eax
$L77537:
	cmp	DWORD PTR _hInst$[ebp], 0
	je	SHORT $L77539
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $L77539

; 311  : 	{
; 312  : 		p = AtlGetStringResourceImage(hInst, id);

	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInst$[ebp]
	push	ecx
	call	?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ; ATL::AtlGetStringResourceImage
	add	esp, 8
	mov	DWORD PTR _p$[ebp], eax

; 313  : 	}

	jmp	SHORT $L77538
$L77539:

; 314  : 	return p;

	mov	eax, DWORD PTR _p$[ebp]

; 315  : }

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@I@Z ENDP ; ATL::AtlGetStringResourceImage
_TEXT	ENDS
PUBLIC	?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
EXTRN	__imp__FindResourceA@12:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_hResource$ = -4					; size = 4
_hInstance$ = 8						; size = 4
_id$ = 12						; size = 4
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z PROC NEAR ; ATL::AtlGetStringResourceImage, COMDAT

; 280  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 281  : 	HRSRC hResource;
; 282  : 
; 283  : 	hResource = ::FindResource( hInstance, MAKEINTRESOURCE( ((id>>4)+1) ), RT_STRING );

	mov	esi, esp
	push	6
	mov	eax, DWORD PTR _id$[ebp]
	shr	eax, 4
	add	eax, 1
	movzx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR _hInstance$[ebp]
	push	edx
	call	DWORD PTR __imp__FindResourceA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hResource$[ebp], eax

; 284  : 	if( hResource == NULL )

	cmp	DWORD PTR _hResource$[ebp], 0
	jne	SHORT $L77515

; 285  : 	{
; 286  : 		return( NULL );

	xor	eax, eax
	jmp	SHORT $L77507
$L77515:

; 287  : 	}
; 288  : 
; 289  : 	return _AtlGetStringResourceImage( hInstance, hResource, id );

	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hResource$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hInstance$[ebp]
	push	edx
	call	?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
	add	esp, 12					; 0000000cH
$L77507:

; 290  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ENDP ; ATL::AtlGetStringResourceImage
_TEXT	ENDS
EXTRN	__imp__LockResource@4:NEAR
EXTRN	__imp__LoadResource@8:NEAR
EXTRN	__imp__SizeofResource@8:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT
_iIndex$ = -20						; size = 4
_hGlobal$ = -16						; size = 4
_nResourceSize$ = -12					; size = 4
_pImageEnd$ = -8					; size = 4
_pImage$ = -4						; size = 4
_hInstance$ = 8						; size = 4
_hResource$ = 12					; size = 4
_id$ = 16						; size = 4
?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z PROC NEAR ; ATL::_AtlGetStringResourceImage, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 240  : 	const ATLSTRINGRESOURCEIMAGE* pImage;
; 241  : 	const ATLSTRINGRESOURCEIMAGE* pImageEnd;
; 242  : 	ULONG nResourceSize;
; 243  : 	HGLOBAL hGlobal;
; 244  : 	UINT iIndex;
; 245  : 
; 246  : 	hGlobal = ::LoadResource( hInstance, hResource );

	mov	esi, esp
	mov	eax, DWORD PTR _hResource$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	DWORD PTR __imp__LoadResource@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hGlobal$[ebp], eax

; 247  : 	if( hGlobal == NULL )

	cmp	DWORD PTR _hGlobal$[ebp], 0
	jne	SHORT $L77492

; 248  : 	{
; 249  : 		return( NULL );

	xor	eax, eax
	jmp	$L77486
$L77492:

; 250  : 	}
; 251  : 
; 252  : 	pImage = (const ATLSTRINGRESOURCEIMAGE*)::LockResource( hGlobal );

	mov	esi, esp
	mov	edx, DWORD PTR _hGlobal$[ebp]
	push	edx
	call	DWORD PTR __imp__LockResource@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pImage$[ebp], eax

; 253  : 	if( pImage == NULL )

	cmp	DWORD PTR _pImage$[ebp], 0
	jne	SHORT $L77494

; 254  : 	{
; 255  : 		return( NULL );

	xor	eax, eax
	jmp	SHORT $L77486
$L77494:

; 256  : 	}
; 257  : 
; 258  : 	nResourceSize = ::SizeofResource( hInstance, hResource );

	mov	esi, esp
	mov	eax, DWORD PTR _hResource$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	DWORD PTR __imp__SizeofResource@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nResourceSize$[ebp], eax

; 259  : 	pImageEnd = (const ATLSTRINGRESOURCEIMAGE*)(LPBYTE( pImage )+nResourceSize);

	mov	edx, DWORD PTR _pImage$[ebp]
	add	edx, DWORD PTR _nResourceSize$[ebp]
	mov	DWORD PTR _pImageEnd$[ebp], edx

; 260  : 	iIndex = id&0x000f;

	mov	eax, DWORD PTR _id$[ebp]
	and	eax, 15					; 0000000fH
	mov	DWORD PTR _iIndex$[ebp], eax
$L77497:

; 261  : 
; 262  : 	while( (iIndex > 0) && (pImage < pImageEnd) )

	cmp	DWORD PTR _iIndex$[ebp], 0
	jbe	SHORT $L77498
	mov	ecx, DWORD PTR _pImage$[ebp]
	cmp	ecx, DWORD PTR _pImageEnd$[ebp]
	jae	SHORT $L77498

; 263  : 	{
; 264  : 		pImage = (const ATLSTRINGRESOURCEIMAGE*)(LPBYTE( pImage )+(sizeof( ATLSTRINGRESOURCEIMAGE )+(pImage->nLength*sizeof( WCHAR ))));

	mov	edx, DWORD PTR _pImage$[ebp]
	movzx	eax, WORD PTR [edx]
	mov	ecx, DWORD PTR _pImage$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2+2]
	mov	DWORD PTR _pImage$[ebp], edx

; 265  : 		iIndex--;

	mov	eax, DWORD PTR _iIndex$[ebp]
	sub	eax, 1
	mov	DWORD PTR _iIndex$[ebp], eax

; 266  : 	}

	jmp	SHORT $L77497
$L77498:

; 267  : 	if( pImage >= pImageEnd )

	mov	ecx, DWORD PTR _pImage$[ebp]
	cmp	ecx, DWORD PTR _pImageEnd$[ebp]
	jb	SHORT $L77502

; 268  : 	{
; 269  : 		return( NULL );

	xor	eax, eax
	jmp	SHORT $L77486
$L77502:

; 270  : 	}
; 271  : 	if( pImage->nLength == 0 )

	mov	edx, DWORD PTR _pImage$[ebp]
	movzx	eax, WORD PTR [edx]
	test	eax, eax
	jne	SHORT $L77503

; 272  : 	{
; 273  : 		return( NULL );

	xor	eax, eax
	jmp	SHORT $L77486
$L77503:

; 274  : 	}
; 275  : 
; 276  : 	return( pImage );

	mov	eax, DWORD PTR _pImage$[ebp]
$L77486:

; 277  : }

	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ENDP ; ATL::_AtlGetStringResourceImage
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
_TEXT	ENDS
;	COMDAT ??BCWindow@ATL@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BCWindow@ATL@@QBEPAUHWND__@@XZ PROC NEAR		; ATL::CWindow::operator HWND__ *, COMDAT
; _this$ = ecx

; 732  : 	{ 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 733  : 		return m_hWnd; 

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 734  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??BCWindow@ATL@@QBEPAUHWND__@@XZ ENDP			; ATL::CWindow::operator HWND__ *
_TEXT	ENDS
PUBLIC	??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@ ; `string'
EXTRN	__imp__IsWindow@4:NEAR
;	COMDAT ??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
CONST	SEGMENT
??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@ DB '::IsWindow(m_hWnd)'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT
??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@ DB 'C:\Program '
	DB	'Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\include\at'
	DB	'lwin.h', 00H				; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?SendMessageA@CWindow@ATL@@QAEJIIJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_message$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?SendMessageA@CWindow@ATL@@QAEJIIJ@Z PROC NEAR		; ATL::CWindow::SendMessageA, COMDAT
; _this$ = ecx

; 787  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 788  : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L205553
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	788					; 00000314H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205553
	int	3
$L205553:

; 789  : 		return ::SendMessage(m_hWnd,message,wParam,lParam);

	mov	esi, esp
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _message$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 790  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SendMessageA@CWindow@ATL@@QAEJIIJ@Z ENDP		; ATL::CWindow::SendMessageA
_TEXT	ENDS
PUBLIC	??0CWindow@ATL@@QAE@PAUHWND__@@@Z		; ATL::CWindow::CWindow
EXTRN	__imp__GetDlgItem@8:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?GetDlgItem@CWindow@ATL@@QBE?AV12@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_nID$ = 12						; size = 4
?GetDlgItem@CWindow@ATL@@QBE?AV12@H@Z PROC NEAR		; ATL::CWindow::GetDlgItem, COMDAT
; _this$ = ecx

; 1468 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1469 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L205556
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	1469					; 000005bdH
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205556
	int	3
$L205556:

; 1470 : 		return CWindow(::GetDlgItem(m_hWnd, nID));

	mov	esi, esp
	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0CWindow@ATL@@QAE@PAUHWND__@@@Z	; ATL::CWindow::CWindow
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1471 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetDlgItem@CWindow@ATL@@QBE?AV12@H@Z ENDP		; ATL::CWindow::GetDlgItem
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0CWindow@ATL@@QAE@PAUHWND__@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hWnd$ = 8						; size = 4
??0CWindow@ATL@@QAE@PAUHWND__@@@Z PROC NEAR		; ATL::CWindow::CWindow, COMDAT
; _this$ = ecx

; 676  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _hWnd$[ebp]
	mov	DWORD PTR [eax], ecx

; 677  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CWindow@ATL@@QAE@PAUHWND__@@@Z ENDP			; ATL::CWindow::CWindow
_TEXT	ENDS
PUBLIC	??1?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAE@XZ ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::~CAxDialogImpl<CShowSelectCert,ATL::CWindow>
PUBLIC	?Detach@CWindow@ATL@@QAEPAUHWND__@@XZ		; ATL::CWindow::Detach
; Function compile flags: /Odt /RTCsu
; File c:\activex\xmlsign\showselectcert.cpp
_TEXT	SEGMENT
_i$202146 = -8						; size = 4
_this$ = -4						; size = 4
??1CShowSelectCert@@UAE@XZ PROC NEAR			; CShowSelectCert::~CShowSelectCert
; _this$ = ecx

; 73   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CShowSelectCert@@6B@

; 74   : 	for (int i=0; i<count;i++)

	mov	DWORD PTR _i$202146[ebp], 0
	jmp	SHORT $L202147
$L202148:
	mov	ecx, DWORD PTR _i$202146[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$202146[ebp], ecx
$L202147:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _i$202146[ebp]
	cmp	eax, DWORD PTR [edx+64]
	jge	SHORT $L202149

; 75   : 	{
; 76   : 		if (decodedDataPtr[i])

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	mov	eax, DWORD PTR _i$202146[ebp]
	cmp	DWORD PTR [edx+eax*4], 0
	je	SHORT $L202150

; 77   : 		{
; 78   : 			zFree(decodedDataPtr[i]);

	push	OFFSET FLAT:$SG202151
	push	78					; 0000004eH
	push	OFFSET FLAT:$SG202152
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	mov	eax, DWORD PTR _i$202146[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_myFree
	add	esp, 16					; 00000010H
$L202150:

; 79   : 		}
; 80   : 	}

	jmp	SHORT $L202148
$L202149:

; 81   : 	zFree(issuer);

	push	OFFSET FLAT:$SG202153
	push	81					; 00000051H
	push	OFFSET FLAT:$SG202154
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	_myFree
	add	esp, 16					; 00000010H

; 82   : 	zFree(subject);

	push	OFFSET FLAT:$SG202155
	push	82					; 00000052H
	push	OFFSET FLAT:$SG202156
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	_myFree
	add	esp, 16					; 00000010H

; 83   : 	zFree(notAfter);

	push	OFFSET FLAT:$SG202157
	push	83					; 00000053H
	push	OFFSET FLAT:$SG202158
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	call	_myFree
	add	esp, 16					; 00000010H

; 84   : 	zFree(decodedDataPtr);

	push	OFFSET FLAT:$SG202159
	push	84					; 00000054H
	push	OFFSET FLAT:$SG202160
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	push	eax
	call	_myFree
	add	esp, 16					; 00000010H

; 85   : 	Detach();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Detach@CWindow@ATL@@QAEPAUHWND__@@XZ	; ATL::CWindow::Detach

; 86   : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAE@XZ
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CShowSelectCert@@UAE@XZ ENDP				; CShowSelectCert::~CShowSelectCert
_TEXT	ENDS
PUBLIC	??1?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAE@XZ ; ATL::CDialogImplBaseT<ATL::CWindow>::~CDialogImplBaseT<ATL::CWindow>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAE@XZ PROC NEAR ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::~CAxDialogImpl<CShowSelectCert,ATL::CWindow>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAE@XZ ; ATL::CDialogImplBaseT<ATL::CWindow>::~CDialogImplBaseT<ATL::CWindow>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAE@XZ ENDP ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::~CAxDialogImpl<CShowSelectCert,ATL::CWindow>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
_TEXT	ENDS
;	COMDAT ?Detach@CWindow@ATL@@QAEPAUHWND__@@XZ
_TEXT	SEGMENT
_hWnd$ = -8						; size = 4
_this$ = -4						; size = 4
?Detach@CWindow@ATL@@QAEPAUHWND__@@XZ PROC NEAR		; ATL::CWindow::Detach, COMDAT
; _this$ = ecx

; 698  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 699  : 		HWND hWnd = m_hWnd;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _hWnd$[ebp], ecx

; 700  : 		m_hWnd = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 701  : 		return hWnd;

	mov	eax, DWORD PTR _hWnd$[ebp]

; 702  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?Detach@CWindow@ATL@@QAEPAUHWND__@@XZ ENDP		; ATL::CWindow::Detach
_TEXT	ENDS
PUBLIC	?getCertificateData@CShowSelectCert@@QAEPADH@Z	; CShowSelectCert::getCertificateData
; Function compile flags: /Odt /RTCsu
; File c:\activex\xmlsign\showselectcert.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?getCertificateData@CShowSelectCert@@QAEPADH@Z PROC NEAR ; CShowSelectCert::getCertificateData
; _this$ = ecx

; 89   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 90   : 	certificate = (char *)cV[index]->certificate;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+2048]
	mov	DWORD PTR [ecx+60], edx

; 91   : 	return certificate;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+60]

; 92   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?getCertificateData@CShowSelectCert@@QAEPADH@Z ENDP	; CShowSelectCert::getCertificateData
_TEXT	ENDS
EXTRN	_axViewAnyCertificate:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wNotifyCode$ = 8					; size = 2
_wID$ = 12						; size = 2
_hWndCtl$ = 16						; size = 4
_bHandled$ = 20						; size = 4
?OnClickedButton1@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z PROC NEAR ; CShowSelectCert::OnClickedButton1
; _this$ = ecx

; 95   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 96   : 	axViewAnyCertificate(cV[nCurrentRow]->certificate);

	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+68]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	ecx, DWORD PTR [eax+ecx*4]
	mov	edx, DWORD PTR [ecx+2048]
	push	edx
	call	_axViewAnyCertificate
	add	esp, 4

; 97   : 	return 0;

	xor	eax, eax

; 98   : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?OnClickedButton1@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z ENDP ; CShowSelectCert::OnClickedButton1
_TEXT	ENDS
PUBLIC	?GetStyle@CWindow@ATL@@QBEKXZ			; ATL::CWindow::GetStyle
PUBLIC	??_C@_0BH@ENLIMLGL@?3?3IsWindow?$CIhWndParent?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BH@LBNLFONB@?3?3IsWindow?$CIhWndCenter?$CJ?$AA@ ; `string'
EXTRN	__imp__SystemParametersInfoA@16:NEAR
EXTRN	__imp__GetClientRect@8:NEAR
EXTRN	__imp__GetWindowRect@8:NEAR
EXTRN	__imp__MapWindowPoints@16:NEAR
EXTRN	__imp__GetWindowLongA@8:NEAR
EXTRN	__imp__GetParent@4:NEAR
EXTRN	__imp__GetWindow@8:NEAR
EXTRN	__imp__SetWindowPos@28:NEAR
;	COMDAT ??_C@_0BH@ENLIMLGL@?3?3IsWindow?$CIhWndParent?$CJ?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
CONST	SEGMENT
??_C@_0BH@ENLIMLGL@?3?3IsWindow?$CIhWndParent?$CJ?$AA@ DB '::IsWindow(hWn'
	DB	'dParent)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LBNLFONB@?3?3IsWindow?$CIhWndCenter?$CJ?$AA@
CONST	SEGMENT
??_C@_0BH@LBNLFONB@?3?3IsWindow?$CIhWndCenter?$CJ?$AA@ DB '::IsWindow(hWn'
	DB	'dCenter)', 00H				; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?CenterWindow@CWindow@ATL@@QAEHPAUHWND__@@@Z
_TEXT	SEGMENT
_yTop$ = -104						; size = 4
_xLeft$ = -100						; size = 4
_DlgHeight$ = -96					; size = 4
_DlgWidth$ = -92					; size = 4
_dwStyleCenter$100100 = -88				; size = 4
_hWndParent$ = -84					; size = 4
_rcCenter$ = -76					; size = 16
_rcArea$ = -52						; size = 16
_rcDlg$ = -28						; size = 16
_dwStyle$ = -8						; size = 4
_this$ = -4						; size = 4
_hWndCenter$ = 8					; size = 4
?CenterWindow@CWindow@ATL@@QAEHPAUHWND__@@@Z PROC NEAR	; ATL::CWindow::CenterWindow, COMDAT
; _this$ = ecx

; 1755 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 104				; 00000068H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-104]
	mov	ecx, 26					; 0000001aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1756 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L205570
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	1756					; 000006dcH
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205570
	int	3
$L205570:

; 1757 : 
; 1758 : 		// determine owner window to center against
; 1759 : 		DWORD dwStyle = GetStyle();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetStyle@CWindow@ATL@@QBEKXZ		; ATL::CWindow::GetStyle
	mov	DWORD PTR _dwStyle$[ebp], eax

; 1760 : 		if(hWndCenter == NULL)

	cmp	DWORD PTR _hWndCenter$[ebp], 0
	jne	SHORT $L100091

; 1761 : 		{
; 1762 : 			if(dwStyle & WS_CHILD)

	mov	eax, DWORD PTR _dwStyle$[ebp]
	and	eax, 1073741824				; 40000000H
	je	SHORT $L100092

; 1763 : 				hWndCenter = ::GetParent(m_hWnd);

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__GetParent@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hWndCenter$[ebp], eax

; 1764 : 			else

	jmp	SHORT $L100091
$L100092:

; 1765 : 				hWndCenter = ::GetWindow(m_hWnd, GW_OWNER);

	mov	esi, esp
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__GetWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hWndCenter$[ebp], eax
$L100091:

; 1766 : 		}
; 1767 : 
; 1768 : 		// get coordinates of the window relative to its parent
; 1769 : 		RECT rcDlg;
; 1770 : 		::GetWindowRect(m_hWnd, &rcDlg);

	mov	esi, esp
	lea	edx, DWORD PTR _rcDlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__GetWindowRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1771 : 		RECT rcArea;
; 1772 : 		RECT rcCenter;
; 1773 : 		HWND hWndParent;
; 1774 : 		if(!(dwStyle & WS_CHILD))

	mov	edx, DWORD PTR _dwStyle$[ebp]
	and	edx, 1073741824				; 40000000H
	jne	$L100098

; 1775 : 		{
; 1776 : 			// don't center against invisible or minimized windows
; 1777 : 			if(hWndCenter != NULL)

	cmp	DWORD PTR _hWndCenter$[ebp], 0
	je	SHORT $L100099

; 1778 : 			{
; 1779 : 				DWORD dwStyleCenter = ::GetWindowLong(hWndCenter, GWL_STYLE);

	mov	esi, esp
	push	-16					; fffffff0H
	mov	eax, DWORD PTR _hWndCenter$[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindowLongA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dwStyleCenter$100100[ebp], eax

; 1780 : 				if(!(dwStyleCenter & WS_VISIBLE) || (dwStyleCenter & WS_MINIMIZE))

	mov	ecx, DWORD PTR _dwStyleCenter$100100[ebp]
	and	ecx, 268435456				; 10000000H
	je	SHORT $L100102
	mov	edx, DWORD PTR _dwStyleCenter$100100[ebp]
	and	edx, 536870912				; 20000000H
	je	SHORT $L100099
$L100102:

; 1781 : 					hWndCenter = NULL;

	mov	DWORD PTR _hWndCenter$[ebp], 0
$L100099:

; 1782 : 			}
; 1783 : 
; 1784 : 			// center within screen coordinates
; 1785 : 			::SystemParametersInfo(SPI_GETWORKAREA, NULL, &rcArea, NULL);

	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _rcArea$[ebp]
	push	eax
	push	0
	push	48					; 00000030H
	call	DWORD PTR __imp__SystemParametersInfoA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1786 : 			if(hWndCenter == NULL)

	cmp	DWORD PTR _hWndCenter$[ebp], 0
	jne	SHORT $L100103

; 1787 : 				rcCenter = rcArea;

	mov	ecx, DWORD PTR _rcArea$[ebp]
	mov	DWORD PTR _rcCenter$[ebp], ecx
	mov	edx, DWORD PTR _rcArea$[ebp+4]
	mov	DWORD PTR _rcCenter$[ebp+4], edx
	mov	eax, DWORD PTR _rcArea$[ebp+8]
	mov	DWORD PTR _rcCenter$[ebp+8], eax
	mov	ecx, DWORD PTR _rcArea$[ebp+12]
	mov	DWORD PTR _rcCenter$[ebp+12], ecx

; 1788 : 			else

	jmp	SHORT $L100104
$L100103:

; 1789 : 				::GetWindowRect(hWndCenter, &rcCenter);

	mov	esi, esp
	lea	edx, DWORD PTR _rcCenter$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWndCenter$[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindowRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$L100104:

; 1790 : 		}
; 1791 : 		else

	jmp	$L100105
$L100098:

; 1792 : 		{
; 1793 : 			// center within parent client coordinates
; 1794 : 			hWndParent = ::GetParent(m_hWnd);

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__GetParent@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hWndParent$[ebp], eax

; 1795 : 			ATLASSERT(::IsWindow(hWndParent));

	mov	esi, esp
	mov	eax, DWORD PTR _hWndParent$[ebp]
	push	eax
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L205571
	push	OFFSET FLAT:??_C@_0BH@ENLIMLGL@?3?3IsWindow?$CIhWndParent?$CJ?$AA@
	push	0
	push	1795					; 00000703H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205571
	int	3
$L205571:

; 1796 : 
; 1797 : 			::GetClientRect(hWndParent, &rcArea);

	mov	esi, esp
	lea	edx, DWORD PTR _rcArea$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWndParent$[ebp]
	push	eax
	call	DWORD PTR __imp__GetClientRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1798 : 			ATLASSERT(::IsWindow(hWndCenter));

	mov	esi, esp
	mov	ecx, DWORD PTR _hWndCenter$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L205572
	push	OFFSET FLAT:??_C@_0BH@LBNLFONB@?3?3IsWindow?$CIhWndCenter?$CJ?$AA@
	push	0
	push	1798					; 00000706H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205572
	int	3
$L205572:

; 1799 : 			::GetClientRect(hWndCenter, &rcCenter);

	mov	esi, esp
	lea	eax, DWORD PTR _rcCenter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWndCenter$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1800 : 			::MapWindowPoints(hWndCenter, hWndParent, (POINT*)&rcCenter, 2);

	mov	esi, esp
	push	2
	lea	edx, DWORD PTR _rcCenter$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWndParent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWndCenter$[ebp]
	push	ecx
	call	DWORD PTR __imp__MapWindowPoints@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$L100105:

; 1801 : 		}
; 1802 : 
; 1803 : 		int DlgWidth = rcDlg.right - rcDlg.left;

	mov	edx, DWORD PTR _rcDlg$[ebp+8]
	sub	edx, DWORD PTR _rcDlg$[ebp]
	mov	DWORD PTR _DlgWidth$[ebp], edx

; 1804 : 		int DlgHeight = rcDlg.bottom - rcDlg.top;

	mov	eax, DWORD PTR _rcDlg$[ebp+12]
	sub	eax, DWORD PTR _rcDlg$[ebp+4]
	mov	DWORD PTR _DlgHeight$[ebp], eax

; 1805 : 
; 1806 : 		// find dialog's upper left based on rcCenter
; 1807 : 		int xLeft = (rcCenter.left + rcCenter.right) / 2 - DlgWidth / 2;

	mov	eax, DWORD PTR _rcCenter$[ebp]
	add	eax, DWORD PTR _rcCenter$[ebp+8]
	cdq
	sub	eax, edx
	mov	ecx, eax
	sar	ecx, 1
	mov	eax, DWORD PTR _DlgWidth$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	sub	ecx, eax
	mov	DWORD PTR _xLeft$[ebp], ecx

; 1808 : 		int yTop = (rcCenter.top + rcCenter.bottom) / 2 - DlgHeight / 2;

	mov	eax, DWORD PTR _rcCenter$[ebp+4]
	add	eax, DWORD PTR _rcCenter$[ebp+12]
	cdq
	sub	eax, edx
	mov	ecx, eax
	sar	ecx, 1
	mov	eax, DWORD PTR _DlgHeight$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	sub	ecx, eax
	mov	DWORD PTR _yTop$[ebp], ecx

; 1809 : 
; 1810 : 		// if the dialog is outside the screen, move it inside
; 1811 : 		if(xLeft < rcArea.left)

	mov	edx, DWORD PTR _xLeft$[ebp]
	cmp	edx, DWORD PTR _rcArea$[ebp]
	jge	SHORT $L100115

; 1812 : 			xLeft = rcArea.left;

	mov	eax, DWORD PTR _rcArea$[ebp]
	mov	DWORD PTR _xLeft$[ebp], eax

; 1813 : 		else if(xLeft + DlgWidth > rcArea.right)

	jmp	SHORT $L100116
$L100115:
	mov	ecx, DWORD PTR _xLeft$[ebp]
	add	ecx, DWORD PTR _DlgWidth$[ebp]
	cmp	ecx, DWORD PTR _rcArea$[ebp+8]
	jle	SHORT $L100116

; 1814 : 			xLeft = rcArea.right - DlgWidth;

	mov	edx, DWORD PTR _rcArea$[ebp+8]
	sub	edx, DWORD PTR _DlgWidth$[ebp]
	mov	DWORD PTR _xLeft$[ebp], edx
$L100116:

; 1815 : 
; 1816 : 		if(yTop < rcArea.top)

	mov	eax, DWORD PTR _yTop$[ebp]
	cmp	eax, DWORD PTR _rcArea$[ebp+4]
	jge	SHORT $L100118

; 1817 : 			yTop = rcArea.top;

	mov	ecx, DWORD PTR _rcArea$[ebp+4]
	mov	DWORD PTR _yTop$[ebp], ecx

; 1818 : 		else if(yTop + DlgHeight > rcArea.bottom)

	jmp	SHORT $L100119
$L100118:
	mov	edx, DWORD PTR _yTop$[ebp]
	add	edx, DWORD PTR _DlgHeight$[ebp]
	cmp	edx, DWORD PTR _rcArea$[ebp+12]
	jle	SHORT $L100119

; 1819 : 			yTop = rcArea.bottom - DlgHeight;

	mov	eax, DWORD PTR _rcArea$[ebp+12]
	sub	eax, DWORD PTR _DlgHeight$[ebp]
	mov	DWORD PTR _yTop$[ebp], eax
$L100119:

; 1820 : 
; 1821 : 		// map screen coordinates to child coordinates
; 1822 : 		return ::SetWindowPos(m_hWnd, NULL, xLeft, yTop, -1, -1,
; 1823 : 			SWP_NOSIZE | SWP_NOZORDER | SWP_NOACTIVATE);

	mov	esi, esp
	push	21					; 00000015H
	push	-1
	push	-1
	mov	ecx, DWORD PTR _yTop$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xLeft$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SetWindowPos@28
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1824 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L205577
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 104				; 00000068H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$L205577:
	DD	3
	DD	$L205576
$L205576:
	DD	-28					; ffffffe4H
	DD	16					; 00000010H
	DD	$L205573
	DD	-52					; ffffffccH
	DD	16					; 00000010H
	DD	$L205574
	DD	-76					; ffffffb4H
	DD	16					; 00000010H
	DD	$L205575
$L205575:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	67					; 00000043H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$L205574:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	0
$L205573:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	68					; 00000044H
	DB	108					; 0000006cH
	DB	103					; 00000067H
	DB	0
?CenterWindow@CWindow@ATL@@QAEHPAUHWND__@@@Z ENDP	; ATL::CWindow::CenterWindow
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?GetStyle@CWindow@ATL@@QBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetStyle@CWindow@ATL@@QBEKXZ PROC NEAR			; ATL::CWindow::GetStyle, COMDAT
; _this$ = ecx

; 737  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 738  : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L205580
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	738					; 000002e2H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205580
	int	3
$L205580:

; 739  : 		return (DWORD)::GetWindowLong(m_hWnd, GWL_STYLE);

	mov	esi, esp
	push	-16					; fffffff0H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__GetWindowLongA@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 740  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetStyle@CWindow@ATL@@QBEKXZ ENDP			; ATL::CWindow::GetStyle
_TEXT	ENDS
PUBLIC	??0?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAE@XZ ; ATL::CDialogImplBaseT<ATL::CWindow>::CDialogImplBaseT<ATL::CWindow>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::CAxDialogImpl<CShowSelectCert,ATL::CWindow>, COMDAT
; _this$ = ecx

; 3408 : 	CAxDialogImpl() : m_bModal(false) { }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::CAxDialogImpl<CShowSelectCert,ATL::CWindow>
_TEXT	ENDS
PUBLIC	?DialogProc@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::DialogProc
; Function compile flags: /Odt /RTCsu
;	COMDAT ?GetDialogProc@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEP6GHPAUHWND__@@IIJ@ZXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDialogProc@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEP6GHPAUHWND__@@IIJ@ZXZ PROC NEAR ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::GetDialogProc, COMDAT
; _this$ = ecx

; 3415 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 3416 : 		return DialogProc;

	mov	eax, OFFSET FLAT:?DialogProc@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::DialogProc

; 3417 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetDialogProc@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEP6GHPAUHWND__@@IIJ@ZXZ ENDP ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::GetDialogProc
_TEXT	ENDS
PUBLIC	??_C@_08LIEICNMC@m_bModal?$AA@			; `string'
EXTRN	__imp__EndDialog@8:NEAR
;	COMDAT ??_C@_08LIEICNMC@m_bModal?$AA@
CONST	SEGMENT
??_C@_08LIEICNMC@m_bModal?$AA@ DB 'm_bModal', 00H	; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?EndDialog@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nRetCode$ = 8						; size = 4
?EndDialog@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHH@Z PROC NEAR ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::EndDialog, COMDAT
; _this$ = ecx

; 3431 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 3432 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L205588
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	3432					; 00000d68H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205588
	int	3
$L205588:

; 3433 : #ifdef _DEBUG
; 3434 : 		ATLASSERT(m_bModal);	// must be a modal dialog

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	jne	SHORT $L205589
	push	OFFSET FLAT:??_C@_08LIEICNMC@m_bModal?$AA@
	push	0
	push	3434					; 00000d6aH
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205589
	int	3
$L205589:

; 3435 : #endif //_DEBUG
; 3436 : 		return ::EndDialog(m_hWnd, nRetCode);

	mov	esi, esp
	mov	eax, DWORD PTR _nRetCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__EndDialog@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 3437 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?EndDialog@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHH@Z ENDP ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::EndDialog
_TEXT	ENDS
PUBLIC	??0?$CComPtr@UIStream@@@ATL@@QAE@XZ		; ATL::CComPtr<IStream>::CComPtr<IStream>
PUBLIC	??1?$CComPtr@UIStream@@@ATL@@QAE@XZ		; ATL::CComPtr<IStream>::~CComPtr<IStream>
PUBLIC	?AtlHresultFromLastError@ATL@@YAJXZ		; ATL::AtlHresultFromLastError
PUBLIC	??0_U_RECT@ATL@@QAE@PAUtagRECT@@@Z		; ATL::_U_RECT::_U_RECT
PUBLIC	??0_U_MENUorID@ATL@@QAE@I@Z			; ATL::_U_MENUorID::_U_MENUorID
PUBLIC	?IsDialogEx@_DialogSplitHelper@ATL@@SAHPBUDLGTEMPLATE@@@Z ; ATL::_DialogSplitHelper::IsDialogEx
PUBLIC	?DlgTemplateItemCount@_DialogSplitHelper@ATL@@SAAAGPAUDLGTEMPLATE@@@Z ; ATL::_DialogSplitHelper::DlgTemplateItemCount
PUBLIC	?FindFirstDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PBUDLGTEMPLATE@@@Z ; ATL::_DialogSplitHelper::FindFirstDlgItem
PUBLIC	?FindNextDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PAU3@H@Z ; ATL::_DialogSplitHelper::FindNextDlgItem
PUBLIC	?FindCreateData@_DialogSplitHelper@ATL@@SAKKPAEPAPAE@Z ; ATL::_DialogSplitHelper::FindCreateData
PUBLIC	?IsActiveXControl@_DialogSplitHelper@ATL@@SA_NPAUDLGITEMTEMPLATE@@H@Z ; ATL::_DialogSplitHelper::IsActiveXControl
PUBLIC	?ParseInitData@_DialogSplitHelper@ATL@@SAJPAUIStream@@PAPAG@Z ; ATL::_DialogSplitHelper::ParseInitData
PUBLIC	?MapDialogRect@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAEHPAUtagRECT@@@Z ; ATL::CDialogImplBaseT<ATL::CWindow>::MapDialogRect
PUBLIC	??0?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAE@PAUHWND__@@@Z ; ATL::CAxWindow2T<ATL::CWindow>::CAxWindow2T<ATL::CWindow>
PUBLIC	?Create@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z ; ATL::CAxWindow2T<ATL::CWindow>::Create
PUBLIC	?CreateControlLic@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@PAG@Z ; ATL::CAxWindow2T<ATL::CWindow>::CreateControlLic
PUBLIC	?GetResourceInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetResourceInstance
PUBLIC	?SetWindowPos@CWindow@ATL@@QAEHPAUHWND__@@HHHHI@Z ; ATL::CWindow::SetWindowPos
PUBLIC	?GetWindow@CWindow@ATL@@QBE?AV12@I@Z		; ATL::CWindow::GetWindow
PUBLIC	?SetWindowContextHelpId@CWindow@ATL@@QAEHK@Z	; ATL::CWindow::SetWindowContextHelpId
PUBLIC	??B?$CComPtrBase@UIStream@@@ATL@@QBEPAUIStream@@XZ ; ATL::CComPtrBase<IStream>::operator IStream *
PUBLIC	??I?$CComPtrBase@UIStream@@@ATL@@QAEPAPAUIStream@@XZ ; ATL::CComPtrBase<IStream>::operator&
EXTRN	__imp__GlobalAlloc@8:NEAR
EXTRN	__imp__GlobalLock@4:NEAR
EXTRN	__imp__GlobalUnlock@4:NEAR
EXTRN	__imp__CreateStreamOnHGlobal@12:NEAR
EXTRN	_memcpy:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T205625 DD	0ffffffffH
	DD	FLAT:$L205613
	DD	00H
	DD	FLAT:$L205614
$T205616 DD	019930520H
	DD	02H
	DD	FLAT:$T205625
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?CreateActiveXControls@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEJI@Z
_TEXT	SEGMENT
tv275 = -200						; size = 4
tv271 = -196						; size = 4
tv265 = -192						; size = 4
tv213 = -188						; size = 2
tv207 = -186						; size = 2
tv202 = -184						; size = 2
tv197 = -182						; size = 2
tv193 = -180						; size = 4
tv150 = -176						; size = 4
$T205612 = -172						; size = 4
$T205605 = -168						; size = 4
$T205592 = -164						; size = 4
_rect$202390 = -156					; size = 16
_pszClassName$202386 = -136				; size = 4
_wnd$202385 = -128					; size = 4
_bstrLicKey$202275 = -116				; size = 4
_pSource$202272 = -108					; size = 4
_pBytes$202270 = -104					; size = 4
_h$202268 = -100					; size = 4
_spStream$202266 = -92					; size = 4
_dwLen$202265 = -84					; size = 4
_pData$202264 = -76					; size = 4
_wID$202261 = -68					; size = 4
_nItem$202257 = -64					; size = 2
_hWndPrev$202255 = -60					; size = 4
_pItem$202254 = -56					; size = 4
_nItems$202253 = -52					; size = 2
_bDialogEx$202252 = -48					; size = 4
_pDlg$202248 = -44					; size = 4
_hResource$202247 = -40					; size = 4
_hDlg$ = -36						; size = 4
_hr$ = -32						; size = 4
_hData$ = -28						; size = 4
_pInitData$ = -24					; size = 4
_hDlgInit$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nID$ = 8						; size = 4
?CreateActiveXControls@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEJI@Z PROC NEAR ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::CreateActiveXControls, COMDAT
; _this$ = ecx

; 3490 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateActiveXControls@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEJI@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 188				; 000000bcH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-200]
	mov	ecx, 47					; 0000002fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3491 : 		// Load dialog template and InitData
; 3492 : 		HRSRC hDlgInit = ::FindResource(_AtlBaseModule.GetResourceInstance(), MAKEINTRESOURCE(nID), (LPTSTR)_ATL_RT_DLGINIT);

	mov	esi, esp
	push	240					; 000000f0H
	movzx	eax, WORD PTR _nID$[ebp]
	push	eax
	mov	ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
	call	?GetResourceInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetResourceInstance
	push	eax
	call	DWORD PTR __imp__FindResourceA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hDlgInit$[ebp], eax

; 3493 : 		BYTE* pInitData = NULL;

	mov	DWORD PTR _pInitData$[ebp], 0

; 3494 : 		HGLOBAL hData = NULL;

	mov	DWORD PTR _hData$[ebp], 0

; 3495 : 		HRESULT hr = S_OK;

	mov	DWORD PTR _hr$[ebp], 0

; 3496 : 		if (hDlgInit != NULL)

	cmp	DWORD PTR _hDlgInit$[ebp], 0
	je	SHORT $L202235

; 3497 : 		{
; 3498 : 			hData = ::LoadResource(_AtlBaseModule.GetResourceInstance(), hDlgInit);

	mov	esi, esp
	mov	ecx, DWORD PTR _hDlgInit$[ebp]
	push	ecx
	mov	ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
	call	?GetResourceInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetResourceInstance
	push	eax
	call	DWORD PTR __imp__LoadResource@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hData$[ebp], eax

; 3499 : 			if (hData != NULL)

	cmp	DWORD PTR _hData$[ebp], 0
	je	SHORT $L202235

; 3500 : 				pInitData = (BYTE*) ::LockResource(hData);

	mov	esi, esp
	mov	edx, DWORD PTR _hData$[ebp]
	push	edx
	call	DWORD PTR __imp__LockResource@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pInitData$[ebp], eax
$L202235:

; 3501 : 		}
; 3502 : 
; 3503 : 		HRSRC hDlg = ::FindResource(_AtlBaseModule.GetResourceInstance(), MAKEINTRESOURCE(nID), (LPTSTR)RT_DIALOG);

	mov	esi, esp
	push	5
	movzx	eax, WORD PTR _nID$[ebp]
	push	eax
	mov	ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
	call	?GetResourceInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetResourceInstance
	push	eax
	call	DWORD PTR __imp__FindResourceA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hDlg$[ebp], eax

; 3504 : 		if (hDlg != NULL)

	cmp	DWORD PTR _hDlg$[ebp], 0
	je	$L202246

; 3505 : 		{
; 3506 : 			HGLOBAL hResource = ::LoadResource(_AtlBaseModule.GetResourceInstance(), hDlg);

	mov	esi, esp
	mov	ecx, DWORD PTR _hDlg$[ebp]
	push	ecx
	mov	ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
	call	?GetResourceInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetResourceInstance
	push	eax
	call	DWORD PTR __imp__LoadResource@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hResource$202247[ebp], eax

; 3507 : 			DLGTEMPLATE* pDlg = NULL;

	mov	DWORD PTR _pDlg$202248[ebp], 0

; 3508 : 			if (hResource != NULL)

	cmp	DWORD PTR _hResource$202247[ebp], 0
	je	$L202249

; 3509 : 			{
; 3510 : 				pDlg = (DLGTEMPLATE*) ::LockResource(hResource);

	mov	esi, esp
	mov	edx, DWORD PTR _hResource$202247[ebp]
	push	edx
	call	DWORD PTR __imp__LockResource@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pDlg$202248[ebp], eax

; 3511 : 				if (pDlg != NULL)

	cmp	DWORD PTR _pDlg$202248[ebp], 0
	je	$L202251

; 3512 : 				{
; 3513 : 					// Get first control on the template
; 3514 : 					BOOL bDialogEx = _DialogSplitHelper::IsDialogEx(pDlg);

	mov	eax, DWORD PTR _pDlg$202248[ebp]
	push	eax
	call	?IsDialogEx@_DialogSplitHelper@ATL@@SAHPBUDLGTEMPLATE@@@Z ; ATL::_DialogSplitHelper::IsDialogEx
	add	esp, 4
	mov	DWORD PTR _bDialogEx$202252[ebp], eax

; 3515 : 					WORD nItems = _DialogSplitHelper::DlgTemplateItemCount(pDlg);

	mov	ecx, DWORD PTR _pDlg$202248[ebp]
	push	ecx
	call	?DlgTemplateItemCount@_DialogSplitHelper@ATL@@SAAAGPAUDLGTEMPLATE@@@Z ; ATL::_DialogSplitHelper::DlgTemplateItemCount
	add	esp, 4
	mov	dx, WORD PTR [eax]
	mov	WORD PTR _nItems$202253[ebp], dx

; 3516 : 
; 3517 : 					// Get first control on the dialog
; 3518 : 					DLGITEMTEMPLATE* pItem = _DialogSplitHelper::FindFirstDlgItem(pDlg);

	mov	eax, DWORD PTR _pDlg$202248[ebp]
	push	eax
	call	?FindFirstDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PBUDLGTEMPLATE@@@Z ; ATL::_DialogSplitHelper::FindFirstDlgItem
	add	esp, 4
	mov	DWORD PTR _pItem$202254[ebp], eax

; 3519 : 					HWND hWndPrev = GetWindow(GW_CHILD);

	push	5
	lea	ecx, DWORD PTR $T205592[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetWindow@CWindow@ATL@@QBE?AV12@I@Z	; ATL::CWindow::GetWindow
	mov	ecx, eax
	call	??BCWindow@ATL@@QBEPAUHWND__@@XZ	; ATL::CWindow::operator HWND__ *
	mov	DWORD PTR _hWndPrev$202255[ebp], eax

; 3520 : 
; 3521 : 					// Create all ActiveX cotnrols in the dialog template and place them in the correct tab order (z-order)
; 3522 : 					for (WORD nItem = 0; nItem < nItems; nItem++)

	mov	WORD PTR _nItem$202257[ebp], 0
	jmp	SHORT $L202258
$L202259:
	mov	dx, WORD PTR _nItem$202257[ebp]
	add	dx, 1
	mov	WORD PTR _nItem$202257[ebp], dx
$L202258:
	movzx	eax, WORD PTR _nItem$202257[ebp]
	movzx	ecx, WORD PTR _nItems$202253[ebp]
	cmp	eax, ecx
	jge	$L202260

; 3523 : 					{
; 3524 : 						DWORD wID = bDialogEx ? ((_DialogSplitHelper::DLGITEMTEMPLATEEX*)pItem)->id : pItem->id;

	cmp	DWORD PTR _bDialogEx$202252[ebp], 0
	je	SHORT $L205593
	mov	edx, DWORD PTR _pItem$202254[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR tv150[ebp], eax
	jmp	SHORT $L205594
$L205593:
	mov	ecx, DWORD PTR _pItem$202254[ebp]
	movzx	edx, WORD PTR [ecx+16]
	mov	DWORD PTR tv150[ebp], edx
$L205594:
	mov	eax, DWORD PTR tv150[ebp]
	mov	DWORD PTR _wID$202261[ebp], eax

; 3525 : 						if (_DialogSplitHelper::IsActiveXControl(pItem, bDialogEx))

	mov	ecx, DWORD PTR _bDialogEx$202252[ebp]
	push	ecx
	mov	edx, DWORD PTR _pItem$202254[ebp]
	push	edx
	call	?IsActiveXControl@_DialogSplitHelper@ATL@@SA_NPAUDLGITEMTEMPLATE@@H@Z ; ATL::_DialogSplitHelper::IsActiveXControl
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$L202263

; 3526 : 						{
; 3527 : 							BYTE* pData = NULL;

	mov	DWORD PTR _pData$202264[ebp], 0

; 3528 : 							DWORD dwLen = _DialogSplitHelper::FindCreateData(wID, pInitData, &pData);

	lea	ecx, DWORD PTR _pData$202264[ebp]
	push	ecx
	mov	edx, DWORD PTR _pInitData$[ebp]
	push	edx
	mov	eax, DWORD PTR _wID$202261[ebp]
	push	eax
	call	?FindCreateData@_DialogSplitHelper@ATL@@SAKKPAEPAPAE@Z ; ATL::_DialogSplitHelper::FindCreateData
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _dwLen$202265[ebp], eax

; 3529 : 							CComPtr<IStream> spStream;

	lea	ecx, DWORD PTR _spStream$202266[ebp]
	call	??0?$CComPtr@UIStream@@@ATL@@QAE@XZ	; ATL::CComPtr<IStream>::CComPtr<IStream>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3530 : 							if (dwLen != 0)

	cmp	DWORD PTR _dwLen$202265[ebp], 0
	je	$L202267

; 3531 : 							{
; 3532 : 								HGLOBAL h = GlobalAlloc(GHND, dwLen);

	mov	esi, esp
	mov	ecx, DWORD PTR _dwLen$202265[ebp]
	push	ecx
	push	66					; 00000042H
	call	DWORD PTR __imp__GlobalAlloc@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _h$202268[ebp], eax

; 3533 : 								if (h != NULL)

	cmp	DWORD PTR _h$202268[ebp], 0
	je	SHORT $L202269

; 3534 : 								{
; 3535 : 									BYTE* pBytes = (BYTE*) GlobalLock(h);

	mov	esi, esp
	mov	edx, DWORD PTR _h$202268[ebp]
	push	edx
	call	DWORD PTR __imp__GlobalLock@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pBytes$202270[ebp], eax

; 3536 : 									BYTE* pSource = pData; 

	mov	eax, DWORD PTR _pData$202264[ebp]
	mov	DWORD PTR _pSource$202272[ebp], eax

; 3537 : 									memcpy(pBytes, pSource, dwLen);

	mov	ecx, DWORD PTR _dwLen$202265[ebp]
	push	ecx
	mov	edx, DWORD PTR _pSource$202272[ebp]
	push	edx
	mov	eax, DWORD PTR _pBytes$202270[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 3538 : 									GlobalUnlock(h);

	mov	esi, esp
	mov	ecx, DWORD PTR _h$202268[ebp]
	push	ecx
	call	DWORD PTR __imp__GlobalUnlock@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 3539 : 									CreateStreamOnHGlobal(h, TRUE, &spStream);

	lea	ecx, DWORD PTR _spStream$202266[ebp]
	call	??I?$CComPtrBase@UIStream@@@ATL@@QAEPAPAUIStream@@XZ ; ATL::CComPtrBase<IStream>::operator&
	mov	esi, esp
	push	eax
	push	1
	mov	edx, DWORD PTR _h$202268[ebp]
	push	edx
	call	DWORD PTR __imp__CreateStreamOnHGlobal@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 3540 : 								}
; 3541 : 								else

	jmp	SHORT $L202267
$L202269:

; 3542 : 								{
; 3543 : 									hr = E_OUTOFMEMORY;

	mov	DWORD PTR _hr$[ebp], -2147024882	; 8007000eH

; 3544 : 									break;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spStream$202266[ebp]
	call	??1?$CComPtr@UIStream@@@ATL@@QAE@XZ
	jmp	$L202260
$L202267:

; 3545 : 								}
; 3546 : 							}
; 3547 : 
; 3548 : 							CComBSTR bstrLicKey;

	lea	ecx, DWORD PTR _bstrLicKey$202275[ebp]
	call	??0CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::CComBSTR
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 3549 : 							hr = _DialogSplitHelper::ParseInitData(spStream, &bstrLicKey.m_str);

	lea	eax, DWORD PTR _bstrLicKey$202275[ebp]
	push	eax
	lea	ecx, DWORD PTR _spStream$202266[ebp]
	call	??B?$CComPtrBase@UIStream@@@ATL@@QBEPAUIStream@@XZ ; ATL::CComPtrBase<IStream>::operator IStream *
	push	eax
	call	?ParseInitData@_DialogSplitHelper@ATL@@SAJPAUIStream@@PAPAG@Z ; ATL::_DialogSplitHelper::ParseInitData
	add	esp, 8
	mov	DWORD PTR _hr$[ebp], eax

; 3550 : 							if (SUCCEEDED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jl	$L202277

; 3551 : 							{
; 3552 : 								CAxWindow2 wnd;

	push	0
	lea	ecx, DWORD PTR _wnd$202385[ebp]
	call	??0?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAE@PAUHWND__@@@Z ; ATL::CAxWindow2T<ATL::CWindow>::CAxWindow2T<ATL::CWindow>

; 3553 : 								// Get control caption.
; 3554 : 								LPWSTR pszClassName = 
; 3555 : 									bDialogEx ? 
; 3556 : 										(LPWSTR)(((_DialogSplitHelper::DLGITEMTEMPLATEEX*)pItem) + 1) :
; 3557 : 										(LPWSTR)(pItem + 1);

	cmp	DWORD PTR _bDialogEx$202252[ebp], 0
	je	SHORT $L205595
	mov	ecx, DWORD PTR _pItem$202254[ebp]
	add	ecx, 24					; 00000018H
	mov	DWORD PTR tv193[ebp], ecx
	jmp	SHORT $L205596
$L205595:
	mov	edx, DWORD PTR _pItem$202254[ebp]
	add	edx, 18					; 00000012H
	mov	DWORD PTR tv193[ebp], edx
$L205596:
	mov	eax, DWORD PTR tv193[ebp]
	mov	DWORD PTR _pszClassName$202386[ebp], eax

; 3558 : 								// Get control rect.
; 3559 : 								RECT rect;
; 3560 : 								rect.left = 
; 3561 : 									bDialogEx ? 
; 3562 : 										((_DialogSplitHelper::DLGITEMTEMPLATEEX*)pItem)->x : 
; 3563 : 										pItem->x;

	cmp	DWORD PTR _bDialogEx$202252[ebp], 0
	je	SHORT $L205597
	mov	ecx, DWORD PTR _pItem$202254[ebp]
	mov	dx, WORD PTR [ecx+12]
	mov	WORD PTR tv197[ebp], dx
	jmp	SHORT $L205598
$L205597:
	mov	eax, DWORD PTR _pItem$202254[ebp]
	mov	cx, WORD PTR [eax+8]
	mov	WORD PTR tv197[ebp], cx
$L205598:
	movsx	edx, WORD PTR tv197[ebp]
	mov	DWORD PTR _rect$202390[ebp], edx

; 3564 : 								rect.top = 
; 3565 : 									bDialogEx ? 
; 3566 : 										((_DialogSplitHelper::DLGITEMTEMPLATEEX*)pItem)->y : 
; 3567 : 										pItem->y;

	cmp	DWORD PTR _bDialogEx$202252[ebp], 0
	je	SHORT $L205599
	mov	eax, DWORD PTR _pItem$202254[ebp]
	mov	cx, WORD PTR [eax+14]
	mov	WORD PTR tv202[ebp], cx
	jmp	SHORT $L205600
$L205599:
	mov	edx, DWORD PTR _pItem$202254[ebp]
	mov	ax, WORD PTR [edx+10]
	mov	WORD PTR tv202[ebp], ax
$L205600:
	movsx	ecx, WORD PTR tv202[ebp]
	mov	DWORD PTR _rect$202390[ebp+4], ecx

; 3568 : 								rect.right = rect.left + 
; 3569 : 									(bDialogEx ? 
; 3570 : 										((_DialogSplitHelper::DLGITEMTEMPLATEEX*)pItem)->cx : 
; 3571 : 										pItem->cx);

	cmp	DWORD PTR _bDialogEx$202252[ebp], 0
	je	SHORT $L205601
	mov	edx, DWORD PTR _pItem$202254[ebp]
	mov	ax, WORD PTR [edx+16]
	mov	WORD PTR tv207[ebp], ax
	jmp	SHORT $L205602
$L205601:
	mov	ecx, DWORD PTR _pItem$202254[ebp]
	mov	dx, WORD PTR [ecx+12]
	mov	WORD PTR tv207[ebp], dx
$L205602:
	movsx	eax, WORD PTR tv207[ebp]
	add	eax, DWORD PTR _rect$202390[ebp]
	mov	DWORD PTR _rect$202390[ebp+8], eax

; 3572 : 								rect.bottom = rect.top + 
; 3573 : 									(bDialogEx ? 
; 3574 : 										((_DialogSplitHelper::DLGITEMTEMPLATEEX*)pItem)->cy : 
; 3575 : 										pItem->cy);

	cmp	DWORD PTR _bDialogEx$202252[ebp], 0
	je	SHORT $L205603
	mov	ecx, DWORD PTR _pItem$202254[ebp]
	mov	dx, WORD PTR [ecx+18]
	mov	WORD PTR tv213[ebp], dx
	jmp	SHORT $L205604
$L205603:
	mov	eax, DWORD PTR _pItem$202254[ebp]
	mov	cx, WORD PTR [eax+14]
	mov	WORD PTR tv213[ebp], cx
$L205604:
	movsx	edx, WORD PTR tv213[ebp]
	add	edx, DWORD PTR _rect$202390[ebp+4]
	mov	DWORD PTR _rect$202390[ebp+12], edx

; 3576 : 
; 3577 : 								// Convert from dialog units to screen units
; 3578 : 								MapDialogRect(&rect);

	lea	eax, DWORD PTR _rect$202390[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MapDialogRect@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAEHPAUtagRECT@@@Z ; ATL::CDialogImplBaseT<ATL::CWindow>::MapDialogRect

; 3579 : 
; 3580 : 								// Create AxWindow with a NULL caption.
; 3581 : 								wnd.Create(m_hWnd, 
; 3582 : 									&rect, 
; 3583 : 									NULL, 
; 3584 : 									(bDialogEx ? 
; 3585 : 										((_DialogSplitHelper::DLGITEMTEMPLATEEX*)pItem)->style : 
; 3586 : 										pItem->style) | WS_TABSTOP, 
; 3587 : 									bDialogEx ? 
; 3588 : 										((_DialogSplitHelper::DLGITEMTEMPLATEEX*)pItem)->exStyle : 
; 3589 : 										0,
; 3590 : 									bDialogEx ? 
; 3591 : 										((_DialogSplitHelper::DLGITEMTEMPLATEEX*)pItem)->id : 
; 3592 : 										pItem->id,
; 3593 : 									NULL);

	cmp	DWORD PTR _bDialogEx$202252[ebp], 0
	je	SHORT $L205606
	mov	ecx, DWORD PTR _pItem$202254[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR tv265[ebp], edx
	jmp	SHORT $L205607
$L205606:
	mov	eax, DWORD PTR _pItem$202254[ebp]
	movzx	ecx, WORD PTR [eax+16]
	mov	DWORD PTR tv265[ebp], ecx
$L205607:
	cmp	DWORD PTR _bDialogEx$202252[ebp], 0
	je	SHORT $L205608
	mov	edx, DWORD PTR _pItem$202254[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR tv271[ebp], eax
	jmp	SHORT $L205609
$L205608:
	mov	DWORD PTR tv271[ebp], 0
$L205609:
	cmp	DWORD PTR _bDialogEx$202252[ebp], 0
	je	SHORT $L205610
	mov	ecx, DWORD PTR _pItem$202254[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv275[ebp], edx
	jmp	SHORT $L205611
$L205610:
	mov	eax, DWORD PTR _pItem$202254[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv275[ebp], ecx
$L205611:
	push	0
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T205605[ebp], esp
	mov	edx, DWORD PTR tv265[ebp]
	push	edx
	call	??0_U_MENUorID@ATL@@QAE@I@Z		; ATL::_U_MENUorID::_U_MENUorID
	mov	eax, DWORD PTR tv271[ebp]
	push	eax
	mov	ecx, DWORD PTR tv275[ebp]
	or	ecx, 65536				; 00010000H
	push	ecx
	push	0
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T205612[ebp], esp
	lea	edx, DWORD PTR _rect$202390[ebp]
	push	edx
	call	??0_U_RECT@ATL@@QAE@PAUtagRECT@@@Z	; ATL::_U_RECT::_U_RECT
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	ecx, DWORD PTR _wnd$202385[ebp]
	call	?Create@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z ; ATL::CAxWindow2T<ATL::CWindow>::Create

; 3594 : 
; 3595 : 								if (wnd != NULL)

	lea	ecx, DWORD PTR _wnd$202385[ebp]
	call	??BCWindow@ATL@@QBEPAUHWND__@@XZ	; ATL::CWindow::operator HWND__ *
	test	eax, eax
	je	$L202400

; 3596 : 								{
; 3597 : 									// Set the Help ID
; 3598 : 									if (bDialogEx && ((_DialogSplitHelper::DLGITEMTEMPLATEEX*)pItem)->helpID != 0)

	cmp	DWORD PTR _bDialogEx$202252[ebp], 0
	je	SHORT $L202402
	mov	edx, DWORD PTR _pItem$202254[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $L202402

; 3599 : 										wnd.SetWindowContextHelpId(((_DialogSplitHelper::DLGITEMTEMPLATEEX*)pItem)->helpID);

	mov	eax, DWORD PTR _pItem$202254[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR _wnd$202385[ebp]
	call	?SetWindowContextHelpId@CWindow@ATL@@QAEHK@Z ; ATL::CWindow::SetWindowContextHelpId
$L202402:

; 3600 : 									// Try to create the ActiveX control.
; 3601 : 									hr = wnd.CreateControlLic(pszClassName, spStream, NULL, bstrLicKey);

	lea	ecx, DWORD PTR _bstrLicKey$202275[ebp]
	call	??BCComBSTR@ATL@@QBEPAGXZ		; ATL::CComBSTR::operator unsigned short *
	push	eax
	push	0
	lea	ecx, DWORD PTR _spStream$202266[ebp]
	call	??B?$CComPtrBase@UIStream@@@ATL@@QBEPAUIStream@@XZ ; ATL::CComPtrBase<IStream>::operator IStream *
	push	eax
	mov	edx, DWORD PTR _pszClassName$202386[ebp]
	push	edx
	lea	ecx, DWORD PTR _wnd$202385[ebp]
	call	?CreateControlLic@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@PAG@Z ; ATL::CAxWindow2T<ATL::CWindow>::CreateControlLic
	mov	DWORD PTR _hr$[ebp], eax

; 3602 : 									if (FAILED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L202405

; 3603 : 										break;

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _bstrLicKey$202275[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spStream$202266[ebp]
	call	??1?$CComPtr@UIStream@@@ATL@@QAE@XZ
	jmp	$L202260
$L202405:

; 3604 : 									// Set the correct tab position.
; 3605 : 									if (nItem == 0)

	movzx	eax, WORD PTR _nItem$202257[ebp]
	test	eax, eax
	jne	SHORT $L202406

; 3606 : 										hWndPrev = HWND_TOP;

	mov	DWORD PTR _hWndPrev$202255[ebp], 0
$L202406:

; 3607 : 									wnd.SetWindowPos(hWndPrev, 0,0,0,0,SWP_NOACTIVATE | SWP_NOMOVE | SWP_NOSIZE);

	push	19					; 00000013H
	push	0
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _hWndPrev$202255[ebp]
	push	ecx
	lea	ecx, DWORD PTR _wnd$202385[ebp]
	call	?SetWindowPos@CWindow@ATL@@QAEHPAUHWND__@@HHHHI@Z ; ATL::CWindow::SetWindowPos

; 3608 : 									hWndPrev = wnd;

	lea	ecx, DWORD PTR _wnd$202385[ebp]
	call	??BCWindow@ATL@@QBEPAUHWND__@@XZ	; ATL::CWindow::operator HWND__ *
	mov	DWORD PTR _hWndPrev$202255[ebp], eax

; 3609 : 								}
; 3610 : 								else

	jmp	SHORT $L202277
$L202400:

; 3611 : 								{
; 3612 : 									hr = AtlHresultFromLastError();

	call	?AtlHresultFromLastError@ATL@@YAJXZ	; ATL::AtlHresultFromLastError
	mov	DWORD PTR _hr$[ebp], eax
$L202277:

; 3613 : 								}
; 3614 : 							}
; 3615 : 						}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _bstrLicKey$202275[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spStream$202266[ebp]
	call	??1?$CComPtr@UIStream@@@ATL@@QAE@XZ

; 3616 : 						else

	jmp	SHORT $L202409
$L202263:

; 3617 : 						{
; 3618 : 							if (nItem != 0)

	movzx	edx, WORD PTR _nItem$202257[ebp]
	test	edx, edx
	je	SHORT $L202409

; 3619 : 								hWndPrev = ::GetWindow(hWndPrev, GW_HWNDNEXT);

	mov	esi, esp
	push	2
	mov	eax, DWORD PTR _hWndPrev$202255[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hWndPrev$202255[ebp], eax
$L202409:

; 3620 : 						}
; 3621 : 						pItem = _DialogSplitHelper::FindNextDlgItem(pItem, bDialogEx);

	mov	ecx, DWORD PTR _bDialogEx$202252[ebp]
	push	ecx
	mov	edx, DWORD PTR _pItem$202254[ebp]
	push	edx
	call	?FindNextDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PAU3@H@Z ; ATL::_DialogSplitHelper::FindNextDlgItem
	add	esp, 8
	mov	DWORD PTR _pItem$202254[ebp], eax

; 3622 : 					}

	jmp	$L202259
$L202260:

; 3623 : 				}
; 3624 : 				else

	jmp	SHORT $L202411
$L202251:

; 3625 : 					hr = AtlHresultFromLastError();

	call	?AtlHresultFromLastError@ATL@@YAJXZ	; ATL::AtlHresultFromLastError
	mov	DWORD PTR _hr$[ebp], eax
$L202411:

; 3626 : 			}
; 3627 : 			else

	jmp	SHORT $L202246
$L202249:

; 3628 : 				hr = AtlHresultFromLastError();

	call	?AtlHresultFromLastError@ATL@@YAJXZ	; ATL::AtlHresultFromLastError
	mov	DWORD PTR _hr$[ebp], eax
$L202246:

; 3629 : 		}
; 3630 : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 3631 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L205624
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	add	esp, 200				; 000000c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$L205624:
	DD	5
	DD	$L205623
$L205623:
	DD	-76					; ffffffb4H
	DD	4
	DD	$L205617
	DD	-92					; ffffffa4H
	DD	4
	DD	$L205618
	DD	-116					; ffffff8cH
	DD	4
	DD	$L205619
	DD	-128					; ffffff80H
	DD	4
	DD	$L205620
	DD	-156					; ffffff64H
	DD	16					; 00000010H
	DD	$L205621
$L205621:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$L205620:
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$L205619:
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	75					; 0000004bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$L205618:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$L205617:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L205613:
	lea	ecx, DWORD PTR _spStream$202266[ebp]
	jmp	??1?$CComPtr@UIStream@@@ATL@@QAE@XZ
$L205614:
	lea	ecx, DWORD PTR _bstrLicKey$202275[ebp]
	jmp	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
__ehhandler$?CreateActiveXControls@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEJI@Z:
	mov	eax, OFFSET FLAT:$T205616
	jmp	___CxxFrameHandler
text$x	ENDS
?CreateActiveXControls@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEJI@Z ENDP ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::CreateActiveXControls
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcore.h
;	COMDAT ?GetResourceInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetResourceInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ PROC NEAR ; ATL::CAtlBaseModule::GetResourceInstance, COMDAT
; _this$ = ecx

; 210  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 211  : 		return m_hInstResource;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 212  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetResourceInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ENDP ; ATL::CAtlBaseModule::GetResourceInstance
_TEXT	ENDS
EXTRN	__imp__GetLastError@0:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ?AtlHresultFromLastError@ATL@@YAJXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_dwErr$ = -4						; size = 4
?AtlHresultFromLastError@ATL@@YAJXZ PROC NEAR		; ATL::AtlHresultFromLastError, COMDAT

; 26   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 27   : 	DWORD dwErr = ::GetLastError();

	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dwErr$[ebp], eax

; 28   : 	return HRESULT_FROM_WIN32(dwErr);

	cmp	DWORD PTR _dwErr$[ebp], 0
	jg	SHORT $L205632
	mov	eax, DWORD PTR _dwErr$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $L205633
$L205632:
	mov	ecx, DWORD PTR _dwErr$[ebp]
	and	ecx, 65535				; 0000ffffH
	or	ecx, 458752				; 00070000H
	or	ecx, -2147483648			; 80000000H
	mov	DWORD PTR tv69[ebp], ecx
$L205633:
	mov	eax, DWORD PTR tv69[ebp]

; 29   : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AtlHresultFromLastError@ATL@@YAJXZ ENDP		; ATL::AtlHresultFromLastError
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
_TEXT	ENDS
;	COMDAT ??0_U_RECT@ATL@@QAE@PAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpRect$ = 8						; size = 4
??0_U_RECT@ATL@@QAE@PAUtagRECT@@@Z PROC NEAR		; ATL::_U_RECT::_U_RECT, COMDAT
; _this$ = ecx

; 82   : 	{ }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _lpRect$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0_U_RECT@ATL@@QAE@PAUtagRECT@@@Z ENDP			; ATL::_U_RECT::_U_RECT
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0_U_MENUorID@ATL@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nID$ = 8						; size = 4
??0_U_MENUorID@ATL@@QAE@I@Z PROC NEAR			; ATL::_U_MENUorID::_U_MENUorID, COMDAT
; _this$ = ecx

; 94   : 	{ }	

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nID$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0_U_MENUorID@ATL@@QAE@I@Z ENDP			; ATL::_U_MENUorID::_U_MENUorID
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?IsDialogEx@_DialogSplitHelper@ATL@@SAHPBUDLGTEMPLATE@@@Z
_TEXT	SEGMENT
_pTemplate$ = 8						; size = 4
?IsDialogEx@_DialogSplitHelper@ATL@@SAHPBUDLGTEMPLATE@@@Z PROC NEAR ; ATL::_DialogSplitHelper::IsDialogEx, COMDAT

; 355  : 	{

	push	ebp
	mov	ebp, esp

; 356  : 		return ((DLGTEMPLATEEX*)pTemplate)->signature == 0xFFFF;

	mov	eax, DWORD PTR _pTemplate$[ebp]
	movzx	eax, WORD PTR [eax+2]
	sub	eax, 65535				; 0000ffffH
	neg	eax
	sbb	eax, eax
	inc	eax

; 357  : 	}

	pop	ebp
	ret	0
?IsDialogEx@_DialogSplitHelper@ATL@@SAHPBUDLGTEMPLATE@@@Z ENDP ; ATL::_DialogSplitHelper::IsDialogEx
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?DlgTemplateItemCount@_DialogSplitHelper@ATL@@SAAAGPAUDLGTEMPLATE@@@Z
_TEXT	SEGMENT
_pTemplate$ = 8						; size = 4
?DlgTemplateItemCount@_DialogSplitHelper@ATL@@SAAAGPAUDLGTEMPLATE@@@Z PROC NEAR ; ATL::_DialogSplitHelper::DlgTemplateItemCount, COMDAT

; 360  : 	{

	push	ebp
	mov	ebp, esp

; 361  : 		if (IsDialogEx(pTemplate))

	mov	eax, DWORD PTR _pTemplate$[ebp]
	push	eax
	call	?IsDialogEx@_DialogSplitHelper@ATL@@SAHPBUDLGTEMPLATE@@@Z ; ATL::_DialogSplitHelper::IsDialogEx
	add	esp, 4
	test	eax, eax
	je	SHORT $L98725

; 362  : 			return reinterpret_cast<DLGTEMPLATEEX*>(pTemplate)->cDlgItems;

	mov	eax, DWORD PTR _pTemplate$[ebp]
	add	eax, 16					; 00000010H
	jmp	SHORT $L98724
$L98725:

; 363  : 		else
; 364  : 			return pTemplate->cdit;

	mov	eax, DWORD PTR _pTemplate$[ebp]
	add	eax, 8
$L98724:

; 365  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DlgTemplateItemCount@_DialogSplitHelper@ATL@@SAAAGPAUDLGTEMPLATE@@@Z ENDP ; ATL::_DialogSplitHelper::DlgTemplateItemCount
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?FindFirstDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PBUDLGTEMPLATE@@@Z
_TEXT	SEGMENT
tv94 = -20						; size = 2
tv85 = -18						; size = 2
tv81 = -16						; size = 2
tv74 = -14						; size = 2
_dwStyle$ = -12						; size = 4
_pw$ = -8						; size = 4
_bDialogEx$ = -4					; size = 4
_pTemplate$ = 8						; size = 4
?FindFirstDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PBUDLGTEMPLATE@@@Z PROC NEAR ; ATL::_DialogSplitHelper::FindFirstDlgItem, COMDAT

; 376  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 377  : 		BOOL bDialogEx = IsDialogEx(pTemplate);

	mov	eax, DWORD PTR _pTemplate$[ebp]
	push	eax
	call	?IsDialogEx@_DialogSplitHelper@ATL@@SAHPBUDLGTEMPLATE@@@Z ; ATL::_DialogSplitHelper::IsDialogEx
	add	esp, 4
	mov	DWORD PTR _bDialogEx$[ebp], eax

; 378  : 
; 379  : 		WORD* pw;
; 380  : 		DWORD dwStyle;
; 381  : 		if (bDialogEx)

	cmp	DWORD PTR _bDialogEx$[ebp], 0
	je	SHORT $L98736

; 382  : 		{
; 383  : 			pw = (WORD*)((DLGTEMPLATEEX*)pTemplate + 1);

	mov	ecx, DWORD PTR _pTemplate$[ebp]
	add	ecx, 26					; 0000001aH
	mov	DWORD PTR _pw$[ebp], ecx

; 384  : 			dwStyle = ((DLGTEMPLATEEX*)pTemplate)->style;

	mov	edx, DWORD PTR _pTemplate$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR _dwStyle$[ebp], eax

; 385  : 		}
; 386  : 		else

	jmp	SHORT $L98740
$L98736:

; 387  : 		{
; 388  : 			pw = (WORD*)(pTemplate + 1);

	mov	ecx, DWORD PTR _pTemplate$[ebp]
	add	ecx, 18					; 00000012H
	mov	DWORD PTR _pw$[ebp], ecx

; 389  : 			dwStyle = pTemplate->style;

	mov	edx, DWORD PTR _pTemplate$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _dwStyle$[ebp], eax
$L98740:

; 390  : 		}
; 391  : 
; 392  : 		// Check for presence of menu and skip it if there is one
; 393  : 		// 0x0000 means there is no menu
; 394  : 		// 0xFFFF means there is a menu ID following
; 395  : 		// Everything else means that this is a NULL terminated Unicode string
; 396  : 		// which identifies the menu resource
; 397  : 		if (*pw == 0xFFFF)

	mov	ecx, DWORD PTR _pw$[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	edx, 65535				; 0000ffffH
	jne	SHORT $L98745

; 398  : 			pw += 2;				// Has menu ID, so skip 2 words

	mov	eax, DWORD PTR _pw$[ebp]
	add	eax, 4
	mov	DWORD PTR _pw$[ebp], eax

; 399  : 		else

	jmp	SHORT $L98743
$L98745:

; 400  : 			while (*pw++);			// Either No menu, or string, skip past terminating NULL

	mov	ecx, DWORD PTR _pw$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR tv74[ebp], dx
	mov	eax, DWORD PTR _pw$[ebp]
	add	eax, 2
	mov	DWORD PTR _pw$[ebp], eax
	movzx	ecx, WORD PTR tv74[ebp]
	test	ecx, ecx
	je	SHORT $L98743
	jmp	SHORT $L98745
$L98743:

; 401  : 
; 402  : 		// Check for presence of class name string
; 403  : 		// 0x0000 means "Use system dialog class name"
; 404  : 		// 0xFFFF means there is a window class (atom) specified
; 405  : 		// Everything else means that this is a NULL terminated Unicode string
; 406  : 		// which identifies the menu resource
; 407  : 		if (*pw == 0xFFFF)

	mov	edx, DWORD PTR _pw$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	eax, 65535				; 0000ffffH
	jne	SHORT $L98750

; 408  : 			pw += 2;				// Has class atom, so skip 2 words

	mov	ecx, DWORD PTR _pw$[ebp]
	add	ecx, 4
	mov	DWORD PTR _pw$[ebp], ecx

; 409  : 		else

	jmp	SHORT $L98753
$L98750:

; 410  : 			while (*pw++);			// Either No class, or string, skip past terminating NULL

	mov	edx, DWORD PTR _pw$[ebp]
	mov	ax, WORD PTR [edx]
	mov	WORD PTR tv81[ebp], ax
	mov	ecx, DWORD PTR _pw$[ebp]
	add	ecx, 2
	mov	DWORD PTR _pw$[ebp], ecx
	movzx	edx, WORD PTR tv81[ebp]
	test	edx, edx
	je	SHORT $L98753
	jmp	SHORT $L98750
$L98753:

; 411  : 
; 412  : 		// Skip caption string
; 413  : 		while (*pw++);

	mov	eax, DWORD PTR _pw$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR tv85[ebp], cx
	mov	edx, DWORD PTR _pw$[ebp]
	add	edx, 2
	mov	DWORD PTR _pw$[ebp], edx
	movzx	eax, WORD PTR tv85[ebp]
	test	eax, eax
	je	SHORT $L98754
	jmp	SHORT $L98753
$L98754:

; 414  : 
; 415  : 		// If we have DS_SETFONT, there is extra font information which we must now skip
; 416  : 		if (dwStyle & DS_SETFONT)

	mov	ecx, DWORD PTR _dwStyle$[ebp]
	and	ecx, 64					; 00000040H
	je	SHORT $L98755

; 417  : 		{
; 418  : 			// If it is a regular DLGTEMPLATE there is only a short for the point size
; 419  : 			// and a string specifying the font (typefacename).  If this is a DLGTEMPLATEEX
; 420  : 			// then there is also the font weight, and bItalic which must be skipped
; 421  : 			if (bDialogEx)

	cmp	DWORD PTR _bDialogEx$[ebp], 0
	je	SHORT $L98756

; 422  : 				pw += 3;			// Skip font size, weight, (italic, charset)

	mov	edx, DWORD PTR _pw$[ebp]
	add	edx, 6
	mov	DWORD PTR _pw$[ebp], edx

; 423  : 			else

	jmp	SHORT $L98759
$L98756:

; 424  : 				pw += 1;			// Skip font size

	mov	eax, DWORD PTR _pw$[ebp]
	add	eax, 2
	mov	DWORD PTR _pw$[ebp], eax
$L98759:

; 425  : 			while (*pw++);			// Skip typeface name

	mov	ecx, DWORD PTR _pw$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR tv94[ebp], dx
	mov	eax, DWORD PTR _pw$[ebp]
	add	eax, 2
	mov	DWORD PTR _pw$[ebp], eax
	movzx	ecx, WORD PTR tv94[ebp]
	test	ecx, ecx
	je	SHORT $L98755
	jmp	SHORT $L98759
$L98755:

; 426  : 		}
; 427  : 
; 428  : 		// Dword-align and return
; 429  : 		return (DLGITEMTEMPLATE*)(((DWORD_PTR)pw + 3) & ~3);

	mov	eax, DWORD PTR _pw$[ebp]
	add	eax, 3
	and	eax, -4					; fffffffcH

; 430  : 	}

	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FindFirstDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PBUDLGTEMPLATE@@@Z ENDP ; ATL::_DialogSplitHelper::FindFirstDlgItem
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?FindNextDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PAU3@H@Z
_TEXT	SEGMENT
tv78 = -12						; size = 2
tv71 = -10						; size = 2
_cbExtra$ = -8						; size = 2
_pw$ = -4						; size = 4
_pItem$ = 8						; size = 4
_bDialogEx$ = 12					; size = 4
?FindNextDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PAU3@H@Z PROC NEAR ; ATL::_DialogSplitHelper::FindNextDlgItem, COMDAT

; 435  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 436  : 		WORD* pw;
; 437  : 
; 438  : 		// First skip fixed size header information, size of which depends
; 439  : 		// if this is a DLGITEMTEMPLATE or DLGITEMTEMPLATEEX
; 440  : 		if (bDialogEx)

	cmp	DWORD PTR _bDialogEx$[ebp], 0
	je	SHORT $L98765

; 441  : 			pw = (WORD*)((DLGITEMTEMPLATEEX*)pItem + 1);

	mov	eax, DWORD PTR _pItem$[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR _pw$[ebp], eax

; 442  : 		else

	jmp	SHORT $L98768
$L98765:

; 443  : 			pw = (WORD*)(pItem + 1);

	mov	ecx, DWORD PTR _pItem$[ebp]
	add	ecx, 18					; 00000012H
	mov	DWORD PTR _pw$[ebp], ecx
$L98768:

; 444  : 
; 445  : 		if (*pw == 0xFFFF)			// Skip class name ordinal or string

	mov	edx, DWORD PTR _pw$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	eax, 65535				; 0000ffffH
	jne	SHORT $L98773

; 446  : 			pw += 2; // (WORDs)

	mov	ecx, DWORD PTR _pw$[ebp]
	add	ecx, 4
	mov	DWORD PTR _pw$[ebp], ecx

; 447  : 		else

	jmp	SHORT $L98771
$L98773:

; 448  : 			while (*pw++);

	mov	edx, DWORD PTR _pw$[ebp]
	mov	ax, WORD PTR [edx]
	mov	WORD PTR tv71[ebp], ax
	mov	ecx, DWORD PTR _pw$[ebp]
	add	ecx, 2
	mov	DWORD PTR _pw$[ebp], ecx
	movzx	edx, WORD PTR tv71[ebp]
	test	edx, edx
	je	SHORT $L98771
	jmp	SHORT $L98773
$L98771:

; 449  : 
; 450  : 		if (*pw == 0xFFFF)			// Skip title ordinal or string

	mov	eax, DWORD PTR _pw$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 65535				; 0000ffffH
	jne	SHORT $L98778

; 451  : 			pw += 2; // (WORDs)

	mov	edx, DWORD PTR _pw$[ebp]
	add	edx, 4
	mov	DWORD PTR _pw$[ebp], edx

; 452  : 		else

	jmp	SHORT $L98776
$L98778:

; 453  : 			while (*pw++);

	mov	eax, DWORD PTR _pw$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR tv78[ebp], cx
	mov	edx, DWORD PTR _pw$[ebp]
	add	edx, 2
	mov	DWORD PTR _pw$[ebp], edx
	movzx	eax, WORD PTR tv78[ebp]
	test	eax, eax
	je	SHORT $L98776
	jmp	SHORT $L98778
$L98776:

; 454  : 
; 455  : 		WORD cbExtra = *pw++;		// Skip extra data

	mov	ecx, DWORD PTR _pw$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR _cbExtra$[ebp], dx
	mov	eax, DWORD PTR _pw$[ebp]
	add	eax, 2
	mov	DWORD PTR _pw$[ebp], eax

; 456  : 
; 457  : 		// cbExtra includes the size WORD in DIALOG resource.
; 458  : 		if (cbExtra != 0 && !bDialogEx)

	movzx	ecx, WORD PTR _cbExtra$[ebp]
	test	ecx, ecx
	je	SHORT $L98781
	cmp	DWORD PTR _bDialogEx$[ebp], 0
	jne	SHORT $L98781

; 459  : 			cbExtra -= 2;

	movzx	edx, WORD PTR _cbExtra$[ebp]
	sub	edx, 2
	mov	WORD PTR _cbExtra$[ebp], dx
$L98781:

; 460  : 
; 461  : 		// Dword-align and return
; 462  : 		return (DLGITEMTEMPLATE*)(((DWORD_PTR)pw + cbExtra + 3) & ~3);

	movzx	eax, WORD PTR _cbExtra$[ebp]
	mov	ecx, DWORD PTR _pw$[ebp]
	lea	eax, DWORD PTR [ecx+eax+3]
	and	eax, -4					; fffffffcH

; 463  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?FindNextDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PAU3@H@Z ENDP ; ATL::_DialogSplitHelper::FindNextDlgItem
_TEXT	ENDS
PUBLIC	??_C@_0L@KAJDHFFC@dwLen?5?$DN?$DN?50?$AA@	; `string'
;	COMDAT ??_C@_0L@KAJDHFFC@dwLen?5?$DN?$DN?50?$AA@
CONST	SEGMENT
??_C@_0L@KAJDHFFC@dwLen?5?$DN?$DN?50?$AA@ DB 'dwLen == 0', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?FindCreateData@_DialogSplitHelper@ATL@@SAKKPAEPAPAE@Z
_TEXT	SEGMENT
_dwLen$98795 = -16					; size = 4
_nMsg$98792 = -12					; size = 2
_pTemp$98791 = -8					; size = 4
_nIDC$98788 = -4					; size = 2
_dwID$ = 8						; size = 4
_pInitData$ = 12					; size = 4
_pData$ = 16						; size = 4
?FindCreateData@_DialogSplitHelper@ATL@@SAKKPAEPAPAE@Z PROC NEAR ; ATL::_DialogSplitHelper::FindCreateData, COMDAT

; 468  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
$L98786:

; 469  : 		while (pInitData)

	cmp	DWORD PTR _pInitData$[ebp], 0
	je	$L98787

; 470  : 		{
; 471  : 			// Read the DLGINIT header
; 472  : 			WORD nIDC = *((UNALIGNED WORD*)pInitData);

	mov	eax, DWORD PTR _pInitData$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _nIDC$98788[ebp], cx

; 473  : 			pInitData += sizeof(WORD);

	mov	edx, DWORD PTR _pInitData$[ebp]
	add	edx, 2
	mov	DWORD PTR _pInitData$[ebp], edx

; 474  : 			BYTE* pTemp = pInitData;

	mov	eax, DWORD PTR _pInitData$[ebp]
	mov	DWORD PTR _pTemp$98791[ebp], eax

; 475  : 			WORD nMsg = *((UNALIGNED WORD*)pInitData);

	mov	ecx, DWORD PTR _pInitData$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR _nMsg$98792[ebp], dx

; 476  : 			pInitData += sizeof(WORD);

	mov	eax, DWORD PTR _pInitData$[ebp]
	add	eax, 2
	mov	DWORD PTR _pInitData$[ebp], eax

; 477  : 			DWORD dwLen = *((UNALIGNED DWORD*)pInitData);

	mov	ecx, DWORD PTR _pInitData$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _dwLen$98795[ebp], edx

; 478  : 			pInitData += sizeof(DWORD);

	mov	eax, DWORD PTR _pInitData$[ebp]
	add	eax, 4
	mov	DWORD PTR _pInitData$[ebp], eax

; 479  : 
; 480  : 			// If the header is for the control specified get the other info
; 481  : 			if (nIDC == dwID)

	movzx	ecx, WORD PTR _nIDC$98788[ebp]
	cmp	ecx, DWORD PTR _dwID$[ebp]
	jne	SHORT $L98798

; 482  : 			{
; 483  : 				if (nMsg == (WORD)ATL_WM_OCC_INITNEW)

	movzx	edx, WORD PTR _nMsg$98792[ebp]
	cmp	edx, 888				; 00000378H
	jne	SHORT $L98800

; 484  : 				{
; 485  : 					ATLASSERT(dwLen == 0);

	cmp	DWORD PTR _dwLen$98795[ebp], 0
	je	SHORT $L205648
	push	OFFSET FLAT:??_C@_0L@KAJDHFFC@dwLen?5?$DN?$DN?50?$AA@
	push	0
	push	485					; 000001e5H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205648
	int	3
$L205648:

; 486  : 					return 0;

	xor	eax, eax
	jmp	SHORT $L98784
$L98800:

; 487  : 				}
; 488  : 				*pData = pTemp;

	mov	ecx, DWORD PTR _pData$[ebp]
	mov	edx, DWORD PTR _pTemp$98791[ebp]
	mov	DWORD PTR [ecx], edx

; 489  : 				return dwLen + sizeof(WORD) + sizeof(DWORD);

	mov	eax, DWORD PTR _dwLen$98795[ebp]
	add	eax, 6
	jmp	SHORT $L98784
$L98798:

; 490  : 			}
; 491  : 
; 492  : 			// It's not the right control, skip past data
; 493  : 			pInitData += dwLen;

	mov	eax, DWORD PTR _pInitData$[ebp]
	add	eax, DWORD PTR _dwLen$98795[ebp]
	mov	DWORD PTR _pInitData$[ebp], eax

; 494  : 		}

	jmp	$L98786
$L98787:

; 495  : 		return 0;

	xor	eax, eax
$L98784:

; 496  : 	}

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FindCreateData@_DialogSplitHelper@ATL@@SAKKPAEPAPAE@Z ENDP ; ATL::_DialogSplitHelper::FindCreateData
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?IsActiveXControl@_DialogSplitHelper@ATL@@SA_NPAUDLGITEMTEMPLATE@@H@Z
_TEXT	SEGMENT
tv67 = -8						; size = 4
_pszClassName$ = -4					; size = 4
_pItem$ = 8						; size = 4
_bDialogEx$ = 12					; size = 4
?IsActiveXControl@_DialogSplitHelper@ATL@@SA_NPAUDLGITEMTEMPLATE@@H@Z PROC NEAR ; ATL::_DialogSplitHelper::IsActiveXControl, COMDAT

; 499  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 500  : 		LPWSTR pszClassName;
; 501  : 		pszClassName = bDialogEx ?
; 502  : 			(LPWSTR)(((DLGITEMTEMPLATEEX*)pItem) + 1) :
; 503  : 			(LPWSTR)(pItem + 1);

	cmp	DWORD PTR _bDialogEx$[ebp], 0
	je	SHORT $L205651
	mov	eax, DWORD PTR _pItem$[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR tv67[ebp], eax
	jmp	SHORT $L205652
$L205651:
	mov	ecx, DWORD PTR _pItem$[ebp]
	add	ecx, 18					; 00000012H
	mov	DWORD PTR tv67[ebp], ecx
$L205652:
	mov	edx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _pszClassName$[ebp], edx

; 504  : 		if (pszClassName[0] == L'{')

	mov	eax, DWORD PTR _pszClassName$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 123				; 0000007bH
	jne	SHORT $L98811

; 505  : 			return true;

	mov	al, 1
	jmp	SHORT $L98806
$L98811:

; 506  : 		return false;

	xor	al, al
$L98806:

; 507  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?IsActiveXControl@_DialogSplitHelper@ATL@@SA_NPAUDLGITEMTEMPLATE@@H@Z ENDP ; ATL::_DialogSplitHelper::IsActiveXControl
_TEXT	ENDS
PUBLIC	??0CComBSTR@ATL@@QAE@H@Z			; ATL::CComBSTR::CComBSTR
PUBLIC	?Length@CComBSTR@ATL@@QBEIXZ			; ATL::CComBSTR::Length
PUBLIC	?Detach@CComBSTR@ATL@@QAEPAGXZ			; ATL::CComBSTR::Detach
;	COMDAT xdata$x
xdata$x	SEGMENT
$T205674 DD	0ffffffffH
	DD	FLAT:$L205660
$T205662 DD	019930520H
	DD	01H
	DD	FLAT:$T205674
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?ParseInitData@_DialogSplitHelper@ATL@@SAJPAUIStream@@PAPAG@Z
_TEXT	SEGMENT
tv165 = -1112						; size = 4
$T205657 = -1108					; size = 4
$T205656 = -1104					; size = 4
_pTemp$98890 = -1096					; size = 1000
_cbOffset$98886 = -88					; size = 4
_bstr$98873 = -76					; size = 4
_cchLicKey$ = -64					; size = 4
_dwLen$ = -52						; size = 4
_nMsg$ = -40						; size = 2
_hr$ = -32						; size = 4
_uRead$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_pStream$ = 8						; size = 4
_pLicKey$ = 12						; size = 4
?ParseInitData@_DialogSplitHelper@ATL@@SAJPAUIStream@@PAPAG@Z PROC NEAR ; ATL::_DialogSplitHelper::ParseInitData, COMDAT

; 602  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ParseInitData@_DialogSplitHelper@ATL@@SAJPAUIStream@@PAPAG@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 1100				; 0000044cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1112]
	mov	ecx, 275				; 00000113H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 603  : 		*pLicKey = NULL;

	mov	eax, DWORD PTR _pLicKey$[ebp]
	mov	DWORD PTR [eax], 0

; 604  : 		if(pStream == NULL)

	cmp	DWORD PTR _pStream$[ebp], 0
	jne	SHORT $L98856

; 605  : 			return S_OK;	// nothing to do

	xor	eax, eax
	jmp	$L98855
$L98856:

; 606  : 
; 607  : 		ULONG uRead;
; 608  : 		HRESULT hr;
; 609  : 
; 610  : 		WORD nMsg;
; 611  : 		hr = pStream->Read(&nMsg, sizeof(WORD), &uRead);

	mov	esi, esp
	lea	ecx, DWORD PTR _uRead$[ebp]
	push	ecx
	push	2
	lea	edx, DWORD PTR _nMsg$[ebp]
	push	edx
	mov	eax, DWORD PTR _pStream$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pStream$[ebp]
	push	edx
	call	DWORD PTR [ecx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 612  : 		if (FAILED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L98863

; 613  : 			return hr;

	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$L98855
$L98863:

; 614  : 
; 615  : 		DWORD dwLen;
; 616  : 		hr = pStream->Read(&dwLen, sizeof(DWORD), &uRead);

	mov	esi, esp
	lea	eax, DWORD PTR _uRead$[ebp]
	push	eax
	push	4
	lea	ecx, DWORD PTR _dwLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pStream$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pStream$[ebp]
	push	ecx
	call	DWORD PTR [eax+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 617  : 		if (FAILED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L98867

; 618  : 			return hr;

	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$L98855
$L98867:

; 619  : 
; 620  : 		DWORD cchLicKey;
; 621  : 		hr = pStream->Read(&cchLicKey, sizeof(DWORD), &uRead);

	mov	esi, esp
	lea	edx, DWORD PTR _uRead$[ebp]
	push	edx
	push	4
	lea	eax, DWORD PTR _cchLicKey$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pStream$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pStream$[ebp]
	push	eax
	call	DWORD PTR [edx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 622  : 		if (FAILED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L98871

; 623  : 			return hr;

	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$L98855
$L98871:

; 624  : 
; 625  : 		if (cchLicKey > 0)

	cmp	DWORD PTR _cchLicKey$[ebp], 0
	jbe	$L98872

; 626  : 		{
; 627  : 			CComBSTR bstr(cchLicKey);

	mov	ecx, DWORD PTR _cchLicKey$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _bstr$98873[ebp]
	call	??0CComBSTR@ATL@@QAE@H@Z		; ATL::CComBSTR::CComBSTR
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 628  : 			if (bstr.Length() == 0)

	lea	ecx, DWORD PTR _bstr$98873[ebp]
	call	?Length@CComBSTR@ATL@@QBEIXZ		; ATL::CComBSTR::Length
	test	eax, eax
	jne	SHORT $L98874

; 629  : 				return E_OUTOFMEMORY;

	mov	DWORD PTR $T205656[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bstr$98873[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
	mov	eax, DWORD PTR $T205656[ebp]
	jmp	$L98855
$L98874:

; 630  : 			memset(bstr.m_str, 0, (cchLicKey + 1) * sizeof(OLECHAR));

	mov	edx, DWORD PTR _cchLicKey$[ebp]
	lea	eax, DWORD PTR [edx+edx+2]
	push	eax
	push	0
	mov	ecx, DWORD PTR _bstr$98873[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 631  : 			hr = pStream->Read(bstr.m_str, cchLicKey * sizeof(OLECHAR), &uRead);

	mov	esi, esp
	lea	edx, DWORD PTR _uRead$[ebp]
	push	edx
	mov	eax, DWORD PTR _cchLicKey$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _bstr$98873[ebp]
	push	ecx
	mov	edx, DWORD PTR _pStream$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pStream$[ebp]
	push	ecx
	call	DWORD PTR [eax+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 632  : 			if (FAILED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L98880

; 633  : 				return hr;

	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T205657[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bstr$98873[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
	mov	eax, DWORD PTR $T205657[ebp]
	jmp	$L98855
$L98880:

; 634  : 			*pLicKey = bstr.Detach();

	lea	ecx, DWORD PTR _bstr$98873[ebp]
	call	?Detach@CComBSTR@ATL@@QAEPAGXZ		; ATL::CComBSTR::Detach
	mov	ecx, DWORD PTR _pLicKey$[ebp]
	mov	DWORD PTR [ecx], eax

; 635  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bstr$98873[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
$L98872:

; 636  : 
; 637  : 		// Extended (DATABINDING) stream format is not supported,
; 638  : 		// we reject databinding info but preserve other information
; 639  : 		if (nMsg == (WORD)ATL_WM_OCC_LOADFROMSTREAM_EX ||
; 640  : 			nMsg == (WORD)ATL_WM_OCC_LOADFROMSTORAGE_EX)

	movzx	edx, WORD PTR _nMsg$[ebp]
	cmp	edx, 890				; 0000037aH
	je	SHORT $L98885
	movzx	eax, WORD PTR _nMsg$[ebp]
	cmp	eax, 891				; 0000037bH
	jne	$L98884
$L98885:

; 641  : 		{
; 642  : 			// Read the size of the section
; 643  : 			ULONG cbOffset;
; 644  : 			hr = pStream->Read(&cbOffset, sizeof(ULONG), &uRead);

	mov	esi, esp
	lea	ecx, DWORD PTR _uRead$[ebp]
	push	ecx
	push	4
	lea	edx, DWORD PTR _cbOffset$98886[ebp]
	push	edx
	mov	eax, DWORD PTR _pStream$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pStream$[ebp]
	push	edx
	call	DWORD PTR [ecx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 645  : 			if (FAILED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L98889

; 646  : 				return hr;

	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $L98855
$L98889:

; 647  : 			BYTE pTemp[1000];
; 648  : 			cbOffset -= sizeof(ULONG);

	mov	eax, DWORD PTR _cbOffset$98886[ebp]
	sub	eax, 4
	mov	DWORD PTR _cbOffset$98886[ebp], eax
$L98893:

; 649  : 
; 650  : 			while (cbOffset > 0)

	cmp	DWORD PTR _cbOffset$98886[ebp], 0
	jbe	SHORT $L98894

; 651  : 			{
; 652  : 				pStream->Read(pTemp, (cbOffset < 1000 ? cbOffset : 1000), &uRead);

	cmp	DWORD PTR _cbOffset$98886[ebp], 1000	; 000003e8H
	jae	SHORT $L205658
	mov	ecx, DWORD PTR _cbOffset$98886[ebp]
	mov	DWORD PTR tv165[ebp], ecx
	jmp	SHORT $L205659
$L205658:
	mov	DWORD PTR tv165[ebp], 1000		; 000003e8H
$L205659:
	mov	esi, esp
	lea	edx, DWORD PTR _uRead$[ebp]
	push	edx
	mov	eax, DWORD PTR tv165[ebp]
	push	eax
	lea	ecx, DWORD PTR _pTemp$98890[ebp]
	push	ecx
	mov	edx, DWORD PTR _pStream$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pStream$[ebp]
	push	ecx
	call	DWORD PTR [eax+12]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 653  : 				cbOffset -= uRead;

	mov	edx, DWORD PTR _cbOffset$98886[ebp]
	sub	edx, DWORD PTR _uRead$[ebp]
	mov	DWORD PTR _cbOffset$98886[ebp], edx

; 654  : 			}

	jmp	SHORT $L98893
$L98894:

; 655  : 			return S_OK;

	xor	eax, eax
	jmp	SHORT $L98855
$L98884:

; 656  : 		}
; 657  : 		if (nMsg == (WORD)ATL_WM_OCC_LOADFROMSTREAM)

	movzx	eax, WORD PTR _nMsg$[ebp]
	cmp	eax, 886				; 00000376H
	jne	SHORT $L98897

; 658  : 		{
; 659  : 			return S_OK;

	xor	eax, eax
	jmp	SHORT $L98855
$L98897:

; 660  : 		}
; 661  : 		return E_FAIL;

	mov	eax, -2147467259			; 80004005H
$L98855:

; 662  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L205673
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	add	esp, 1112				; 00000458H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L205673:
	DD	7
	DD	$L205672
$L205672:
	DD	-24					; ffffffe8H
	DD	4
	DD	$L205663
	DD	-40					; ffffffd8H
	DD	2
	DD	$L205664
	DD	-52					; ffffffccH
	DD	4
	DD	$L205665
	DD	-64					; ffffffc0H
	DD	4
	DD	$L205666
	DD	-76					; ffffffb4H
	DD	4
	DD	$L205667
	DD	-88					; ffffffa8H
	DD	4
	DD	$L205668
	DD	-1096					; fffffbb8H
	DD	1000					; 000003e8H
	DD	$L205669
$L205669:
	DB	112					; 00000070H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$L205668:
	DB	99					; 00000063H
	DB	98					; 00000062H
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$L205667:
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$L205666:
	DB	99					; 00000063H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	75					; 0000004bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$L205665:
	DB	100					; 00000064H
	DB	119					; 00000077H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$L205664:
	DB	110					; 0000006eH
	DB	77					; 0000004dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
$L205663:
	DB	117					; 00000075H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L205660:
	lea	ecx, DWORD PTR _bstr$98873[ebp]
	jmp	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
__ehhandler$?ParseInitData@_DialogSplitHelper@ATL@@SAJPAUIStream@@PAPAG@Z:
	mov	eax, OFFSET FLAT:$T205662
	jmp	___CxxFrameHandler
text$x	ENDS
?ParseInitData@_DialogSplitHelper@ATL@@SAJPAUIStream@@PAPAG@Z ENDP ; ATL::_DialogSplitHelper::ParseInitData
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ??0CComBSTR@ATL@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nSize$ = 8						; size = 4
??0CComBSTR@ATL@@QAE@H@Z PROC NEAR			; ATL::CComBSTR::CComBSTR, COMDAT
; _this$ = ecx

; 549  : 	CComBSTR(int nSize)

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 550  : 	{
; 551  : 		if (nSize == 0)

	cmp	DWORD PTR _nSize$[ebp], 0
	jne	SHORT $L81640

; 552  : 			m_str = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 553  : 		else

	jmp	SHORT $L81639
$L81640:

; 554  : 		{
; 555  : 			m_str = ::SysAllocStringLen(NULL, nSize);

	mov	esi, esp
	mov	ecx, DWORD PTR _nSize$[ebp]
	push	ecx
	push	0
	call	DWORD PTR __imp__SysAllocStringLen@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax

; 556  : 			if (m_str == NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L81639

; 557  : 				AtlThrow(E_OUTOFMEMORY);

	push	-2147024882				; 8007000eH
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L81639:

; 558  : 		}
; 559  : 	}

	mov	eax, DWORD PTR _this$[ebp]
$L205678:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CComBSTR@ATL@@QAE@H@Z ENDP				; ATL::CComBSTR::CComBSTR
_TEXT	ENDS
EXTRN	__imp__SysStringLen@4:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Length@CComBSTR@ATL@@QBEIXZ
_TEXT	SEGMENT
tv67 = -8						; size = 4
_this$ = -4						; size = 4
?Length@CComBSTR@ATL@@QBEIXZ PROC NEAR			; ATL::CComBSTR::Length, COMDAT
; _this$ = ecx

; 632  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 633  : 		return (m_str == NULL)? 0 : SysStringLen(m_str);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L205681
	mov	DWORD PTR tv67[ebp], 0
	jmp	SHORT $L205682
$L205681:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__SysStringLen@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv67[ebp], eax
$L205682:
	mov	eax, DWORD PTR tv67[ebp]

; 634  : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Length@CComBSTR@ATL@@QBEIXZ ENDP			; ATL::CComBSTR::Length
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Detach@CComBSTR@ATL@@QAEPAGXZ
_TEXT	SEGMENT
_s$ = -8						; size = 4
_this$ = -4						; size = 4
?Detach@CComBSTR@ATL@@QAEPAGXZ PROC NEAR		; ATL::CComBSTR::Detach, COMDAT
; _this$ = ecx

; 688  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		BSTR s = m_str;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _s$[ebp], ecx

; 690  : 		m_str = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 691  : 		return s;

	mov	eax, DWORD PTR _s$[ebp]

; 692  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?Detach@CComBSTR@ATL@@QAEPAGXZ ENDP			; ATL::CComBSTR::Detach
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
_TEXT	ENDS
;	COMDAT ?SetWindowPos@CWindow@ATL@@QAEHPAUHWND__@@HHHHI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hWndInsertAfter$ = 8					; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_cx$ = 20						; size = 4
_cy$ = 24						; size = 4
_nFlags$ = 28						; size = 4
?SetWindowPos@CWindow@ATL@@QAEHPAUHWND__@@HHHHI@Z PROC NEAR ; ATL::CWindow::SetWindowPos, COMDAT
; _this$ = ecx

; 915  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 916  : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L205687
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	916					; 00000394H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205687
	int	3
$L205687:

; 917  : 		return ::SetWindowPos(m_hWnd, hWndInsertAfter, x, y, cx, cy, nFlags);

	mov	esi, esp
	mov	eax, DWORD PTR _nFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cy$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cx$[ebp]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWndInsertAfter$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SetWindowPos@28
	cmp	esi, esp
	call	__RTC_CheckEsp

; 918  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?SetWindowPos@CWindow@ATL@@QAEHPAUHWND__@@HHHHI@Z ENDP	; ATL::CWindow::SetWindowPos
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?GetWindow@CWindow@ATL@@QBE?AV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_nCmd$ = 12						; size = 4
?GetWindow@CWindow@ATL@@QBE?AV12@I@Z PROC NEAR		; ATL::CWindow::GetWindow, COMDAT
; _this$ = ecx

; 1424 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1425 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L205690
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	1425					; 00000591H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205690
	int	3
$L205690:

; 1426 : 		return CWindow(::GetWindow(m_hWnd, nCmd));

	mov	esi, esp
	mov	eax, DWORD PTR _nCmd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__GetWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0CWindow@ATL@@QAE@PAUHWND__@@@Z	; ATL::CWindow::CWindow
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1427 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetWindow@CWindow@ATL@@QBE?AV12@I@Z ENDP		; ATL::CWindow::GetWindow
_TEXT	ENDS
EXTRN	__imp__SetWindowContextHelpId@8:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?SetWindowContextHelpId@CWindow@ATL@@QAEHK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwContextHelpId$ = 8					; size = 4
?SetWindowContextHelpId@CWindow@ATL@@QAEHK@Z PROC NEAR	; ATL::CWindow::SetWindowContextHelpId, COMDAT
; _this$ = ecx

; 1570 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1571 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L205693
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	1571					; 00000623H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205693
	int	3
$L205693:

; 1572 : 		return ::SetWindowContextHelpId(m_hWnd, dwContextHelpId);

	mov	esi, esp
	mov	eax, DWORD PTR _dwContextHelpId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__SetWindowContextHelpId@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1573 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetWindowContextHelpId@CWindow@ATL@@QAEHK@Z ENDP	; ATL::CWindow::SetWindowContextHelpId
_TEXT	ENDS
PUBLIC	?Init@?$CW2AEX@$0IA@@ATL@@AAEXPBGI@Z		; ATL::CW2AEX<128>::Init
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ??0?$CW2AEX@$0IA@@ATL@@QAE@PBG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_psz$ = 8						; size = 4
??0?$CW2AEX@$0IA@@ATL@@QAE@PBG@Z PROC NEAR		; ATL::CW2AEX<128>::CW2AEX<128>, COMDAT
; _this$ = ecx

; 419  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 420  : 		Init( psz, _AtlGetConversionACP() );

	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	push	eax
	mov	edx, DWORD PTR _psz$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init@?$CW2AEX@$0IA@@ATL@@AAEXPBGI@Z	; ATL::CW2AEX<128>::Init

; 421  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CW2AEX@$0IA@@ATL@@QAE@PBG@Z ENDP			; ATL::CW2AEX<128>::CW2AEX<128>
_TEXT	ENDS
EXTRN	_free:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CW2AEX@$0IA@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CW2AEX@$0IA@@ATL@@QAE@XZ PROC NEAR			; ATL::CW2AEX<128>::~CW2AEX<128>, COMDAT
; _this$ = ecx

; 428  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 429  : 		if( m_psz != m_szBuffer )

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $L202794

; 430  : 		{
; 431  : 			free( m_psz );

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_free
	add	esp, 4
$L202794:

; 432  : 		}
; 433  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CW2AEX@$0IA@@ATL@@QAE@XZ ENDP			; ATL::CW2AEX<128>::~CW2AEX<128>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ PROC NEAR		; ATL::CW2AEX<128>::operator char *, COMDAT
; _this$ = ecx

; 436  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 437  : 		return( m_psz );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 438  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ ENDP			; ATL::CW2AEX<128>::operator char *
_TEXT	ENDS
PUBLIC	??0?$CWindowImplRoot@VCWindow@ATL@@@ATL@@QAE@XZ	; ATL::CWindowImplRoot<ATL::CWindow>::CWindowImplRoot<ATL::CWindow>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CDialogImplBaseT<ATL::CWindow>::CDialogImplBaseT<ATL::CWindow>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CWindowImplRoot@VCWindow@ATL@@@ATL@@QAE@XZ ; ATL::CWindowImplRoot<ATL::CWindow>::CWindowImplRoot<ATL::CWindow>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CDialogImplBaseT<ATL::CWindow>::CDialogImplBaseT<ATL::CWindow>
_TEXT	ENDS
EXTRN	__imp__MapDialogRect@8:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
;	COMDAT ?MapDialogRect@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAEHPAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpRect$ = 8						; size = 4
?MapDialogRect@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAEHPAUtagRECT@@@Z PROC NEAR ; ATL::CDialogImplBaseT<ATL::CWindow>::MapDialogRect, COMDAT
; _this$ = ecx

; 3207 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 3208 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L205705
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	3208					; 00000c88H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205705
	int	3
$L205705:

; 3209 : 		return ::MapDialogRect(m_hWnd, lpRect);

	mov	esi, esp
	mov	eax, DWORD PTR _lpRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__MapDialogRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 3210 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?MapDialogRect@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAEHPAUtagRECT@@@Z ENDP ; ATL::CDialogImplBaseT<ATL::CWindow>::MapDialogRect
_TEXT	ENDS
PUBLIC	?AtlThrowLastWin32@ATL@@YGXXZ			; ATL::AtlThrowLastWin32
EXTRN	_malloc:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?Init@?$CW2AEX@$0IA@@ATL@@AAEXPBGI@Z
_TEXT	SEGMENT
_nLengthA$ = -12					; size = 4
_nLengthW$ = -8						; size = 4
_this$ = -4						; size = 4
_psz$ = 8						; size = 4
_nCodePage$ = 12					; size = 4
?Init@?$CW2AEX@$0IA@@ATL@@AAEXPBGI@Z PROC NEAR		; ATL::CW2AEX<128>::Init, COMDAT
; _this$ = ecx

; 442  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 443  : 		if (psz == NULL)

	cmp	DWORD PTR _psz$[ebp], 0
	jne	SHORT $L203340

; 444  : 		{
; 445  : 			m_psz = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 446  : 			return;

	jmp	$L205707
$L203340:

; 447  : 		}
; 448  : 		int nLengthW = lstrlenW( psz )+1;

	mov	esi, esp
	mov	ecx, DWORD PTR _psz$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	mov	DWORD PTR _nLengthW$[ebp], eax

; 449  : 		int nLengthA = nLengthW*2;

	mov	edx, DWORD PTR _nLengthW$[ebp]
	shl	edx, 1
	mov	DWORD PTR _nLengthA$[ebp], edx

; 450  : 
; 451  : 		if( nLengthA > t_nBufferLength )

	cmp	DWORD PTR _nLengthA$[ebp], 128		; 00000080H
	jle	SHORT $L203343

; 452  : 		{
; 453  : 			m_psz = static_cast< LPSTR >( malloc( nLengthA*sizeof( char ) ) );

	mov	eax, DWORD PTR _nLengthA$[ebp]
	push	eax
	call	_malloc
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 454  : 			if (m_psz == NULL)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $L203343

; 455  : 			{
; 456  : 				AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L203343:

; 457  : 			}
; 458  : 		}
; 459  : 
; 460  : 		if (::WideCharToMultiByte( nCodePage, 0, psz, nLengthW, m_psz, nLengthA, NULL, NULL ) == 0)

	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _nLengthA$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _nLengthW$[ebp]
	push	eax
	mov	ecx, DWORD PTR _psz$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _nCodePage$[ebp]
	push	edx
	call	DWORD PTR __imp__WideCharToMultiByte@32
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L205707

; 461  : 		{
; 462  : 			AtlThrowLastWin32();

	call	?AtlThrowLastWin32@ATL@@YGXXZ		; ATL::AtlThrowLastWin32
$L205707:

; 463  : 		}
; 464  : 	}

	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Init@?$CW2AEX@$0IA@@ATL@@AAEXPBGI@Z ENDP		; ATL::CW2AEX<128>::Init
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlexcept.h
_TEXT	ENDS
;	COMDAT ?AtlThrowLastWin32@ATL@@YGXXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_dwError$ = -4						; size = 4
?AtlThrowLastWin32@ATL@@YGXXZ PROC NEAR			; ATL::AtlThrowLastWin32, COMDAT

; 80   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 81   : 	DWORD dwError = ::GetLastError();

	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dwError$[ebp], eax

; 82   : 	AtlThrow( HRESULT_FROM_WIN32( dwError ) );

	cmp	DWORD PTR _dwError$[ebp], 0
	jg	SHORT $L205710
	mov	eax, DWORD PTR _dwError$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $L205711
$L205710:
	mov	ecx, DWORD PTR _dwError$[ebp]
	and	ecx, 65535				; 0000ffffH
	or	ecx, 458752				; 00070000H
	or	ecx, -2147483648			; 80000000H
	mov	DWORD PTR tv69[ebp], ecx
$L205711:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L205709:

; 83   : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AtlThrowLastWin32@ATL@@YGXXZ ENDP			; ATL::AtlThrowLastWin32
_TEXT	ENDS
PUBLIC	??0?$CAxWindowT@VCWindow@ATL@@@ATL@@QAE@PAUHWND__@@@Z ; ATL::CAxWindowT<ATL::CWindow>::CAxWindowT<ATL::CWindow>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
;	COMDAT ??0?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAE@PAUHWND__@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hWnd$ = 8						; size = 4
??0?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAE@PAUHWND__@@@Z PROC NEAR ; ATL::CAxWindow2T<ATL::CWindow>::CAxWindow2T<ATL::CWindow>, COMDAT
; _this$ = ecx

; 2126 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CAxWindowT@VCWindow@ATL@@@ATL@@QAE@PAUHWND__@@@Z ; ATL::CAxWindowT<ATL::CWindow>::CAxWindowT<ATL::CWindow>

; 2127 : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAE@PAUHWND__@@@Z ENDP ; ATL::CAxWindow2T<ATL::CWindow>::CAxWindow2T<ATL::CWindow>
_TEXT	ENDS
PUBLIC	?Create@CWindow@ATL@@QAEPAUHWND__@@PBDPAU3@V_U_RECT@2@0KKV_U_MENUorID@2@PAX@Z ; ATL::CWindow::Create
PUBLIC	?GetWndClassName@?$CAxWindow2T@VCWindow@ATL@@@ATL@@SAPBDXZ ; ATL::CAxWindow2T<ATL::CWindow>::GetWndClassName
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Create@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hWndParent$ = 8					; size = 4
_rect$ = 12						; size = 4
_szWindowName$ = 16					; size = 4
_dwStyle$ = 20						; size = 4
_dwExStyle$ = 24					; size = 4
_MenuOrID$ = 28						; size = 4
_lpCreateParam$ = 32					; size = 4
?Create@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z PROC NEAR ; ATL::CAxWindow2T<ATL::CWindow>::Create, COMDAT
; _this$ = ecx

; 2145 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2146 : 		return CWindow::Create(GetWndClassName(), hWndParent, rect, szWindowName, dwStyle, dwExStyle, MenuOrID, lpCreateParam);

	mov	eax, DWORD PTR _lpCreateParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _MenuOrID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dwExStyle$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwStyle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _szWindowName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rect$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWndParent$[ebp]
	push	eax
	call	?GetWndClassName@?$CAxWindow2T@VCWindow@ATL@@@ATL@@SAPBDXZ ; ATL::CAxWindow2T<ATL::CWindow>::GetWndClassName
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Create@CWindow@ATL@@QAEPAUHWND__@@PBDPAU3@V_U_RECT@2@0KKV_U_MENUorID@2@PAX@Z ; ATL::CWindow::Create

; 2147 : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?Create@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z ENDP ; ATL::CAxWindow2T<ATL::CWindow>::Create
_TEXT	ENDS
PUBLIC	??_C@_0M@MFNOGLO@m_hWnd?5?$DN?$DN?50?$AA@	; `string'
PUBLIC	?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
EXTRN	__imp__CreateWindowExA@48:NEAR
;	COMDAT ??_C@_0M@MFNOGLO@m_hWnd?5?$DN?$DN?50?$AA@
CONST	SEGMENT
??_C@_0M@MFNOGLO@m_hWnd?5?$DN?$DN?50?$AA@ DB 'm_hWnd == 0', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?Create@CWindow@ATL@@QAEPAUHWND__@@PBDPAU3@V_U_RECT@2@0KKV_U_MENUorID@2@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpstrWndClass$ = 8					; size = 4
_hWndParent$ = 12					; size = 4
_rect$ = 16						; size = 4
_szWindowName$ = 20					; size = 4
_dwStyle$ = 24						; size = 4
_dwExStyle$ = 28					; size = 4
_MenuOrID$ = 32						; size = 4
_lpCreateParam$ = 36					; size = 4
?Create@CWindow@ATL@@QAEPAUHWND__@@PBDPAU3@V_U_RECT@2@0KKV_U_MENUorID@2@PAX@Z PROC NEAR ; ATL::CWindow::Create, COMDAT
; _this$ = ecx

; 707  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 708  : 		ATLASSERT(m_hWnd == NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L205718
	push	OFFSET FLAT:??_C@_0M@MFNOGLO@m_hWnd?5?$DN?$DN?50?$AA@
	push	0
	push	708					; 000002c4H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205718
	int	3
$L205718:

; 709  : 		if(rect.m_lpRect == NULL)

	cmp	DWORD PTR _rect$[ebp], 0
	jne	SHORT $L99341

; 710  : 			rect.m_lpRect = &rcDefault;

	mov	DWORD PTR _rect$[ebp], OFFSET FLAT:?rcDefault@CWindow@ATL@@2UtagRECT@@A ; ATL::CWindow::rcDefault
$L99341:

; 711  : 		m_hWnd = ::CreateWindowEx(dwExStyle, lpstrWndClass, szWindowName,
; 712  : 			dwStyle, rect.m_lpRect->left, rect.m_lpRect->top, rect.m_lpRect->right - rect.m_lpRect->left,
; 713  : 			rect.m_lpRect->bottom - rect.m_lpRect->top, hWndParent, MenuOrID.m_hMenu,
; 714  : 			_AtlBaseModule.GetModuleInstance(), lpCreateParam);

	mov	esi, esp
	mov	edx, DWORD PTR _lpCreateParam$[ebp]
	push	edx
	mov	ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
	call	?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
	push	eax
	mov	eax, DWORD PTR _MenuOrID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWndParent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rect$[ebp]
	mov	eax, DWORD PTR _rect$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _rect$[ebp]
	mov	eax, DWORD PTR _rect$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _rect$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _rect$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _dwStyle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _szWindowName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpstrWndClass$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwExStyle$[ebp]
	push	eax
	call	DWORD PTR __imp__CreateWindowExA@48
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 715  : 		return m_hWnd;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 716  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?Create@CWindow@ATL@@QAEPAUHWND__@@PBDPAU3@V_U_RECT@2@0KKV_U_MENUorID@2@PAX@Z ENDP ; ATL::CWindow::Create
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcore.h
_TEXT	ENDS
;	COMDAT ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ PROC NEAR ; ATL::CAtlBaseModule::GetModuleInstance, COMDAT
; _this$ = ecx

; 206  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 207  : 		return m_hInst;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 208  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ENDP ; ATL::CAtlBaseModule::GetModuleInstance
_TEXT	ENDS
PUBLIC	?CreateControlLicEx@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@2ABU_GUID@@PAU4@PAG@Z ; ATL::CAxWindow2T<ATL::CWindow>::CreateControlLicEx
EXTRN	_GUID_NULL:BYTE
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
;	COMDAT ?CreateControlLic@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@PAG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszName$ = 8						; size = 4
_pStream$ = 12						; size = 4
_ppUnkContainer$ = 16					; size = 4
_bstrLicKey$ = 20					; size = 4
?CreateControlLic@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@PAG@Z PROC NEAR ; ATL::CAxWindow2T<ATL::CWindow>::CreateControlLic, COMDAT
; _this$ = ecx

; 2150 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2151 : 		return CreateControlLicEx(lpszName, pStream, ppUnkContainer, NULL, IID_NULL, NULL, bstrLicKey);

	mov	eax, DWORD PTR _bstrLicKey$[ebp]
	push	eax
	push	0
	push	OFFSET FLAT:_GUID_NULL
	push	0
	mov	ecx, DWORD PTR _ppUnkContainer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pStream$[ebp]
	push	edx
	mov	eax, DWORD PTR _lpszName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateControlLicEx@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@2ABU_GUID@@PAU4@PAG@Z ; ATL::CAxWindow2T<ATL::CWindow>::CreateControlLicEx

; 2152 : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?CreateControlLic@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@PAG@Z ENDP ; ATL::CAxWindow2T<ATL::CWindow>::CreateControlLic
_TEXT	ENDS
PUBLIC	??_C@_0O@HHPDHHJB@AtlAxWinLic71?$AA@		; `string'
;	COMDAT ??_C@_0O@HHPDHHJB@AtlAxWinLic71?$AA@
CONST	SEGMENT
??_C@_0O@HHPDHHJB@AtlAxWinLic71?$AA@ DB 'AtlAxWinLic71', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?GetWndClassName@?$CAxWindow2T@VCWindow@ATL@@@ATL@@SAPBDXZ
_TEXT	SEGMENT
?GetWndClassName@?$CAxWindow2T@VCWindow@ATL@@@ATL@@SAPBDXZ PROC NEAR ; ATL::CAxWindow2T<ATL::CWindow>::GetWndClassName, COMDAT

; 2137 : 	{

	push	ebp
	mov	ebp, esp

; 2138 : 		return _T(ATLAXWINLIC_CLASS);

	mov	eax, OFFSET FLAT:??_C@_0O@HHPDHHJB@AtlAxWinLic71?$AA@

; 2139 : 	}

	pop	ebp
	ret	0
?GetWndClassName@?$CAxWindow2T@VCWindow@ATL@@@ATL@@SAPBDXZ ENDP ; ATL::CAxWindow2T<ATL::CWindow>::GetWndClassName
_TEXT	ENDS
PUBLIC	??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator&
PUBLIC	?Detach@?$CComPtrBase@UIUnknown@@@ATL@@QAEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::Detach
PUBLIC	??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ		; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
PUBLIC	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ		; ATL::CComPtr<IUnknown>::~CComPtr<IUnknown>
PUBLIC	??I?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAEPAPAUIAxWinHostWindowLic@@XZ ; ATL::CComPtrBase<IAxWinHostWindowLic>::operator&
PUBLIC	??C?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIAxWinHostWindowLic@@@1@XZ ; ATL::CComPtrBase<IAxWinHostWindowLic>::operator->
PUBLIC	??0?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ	; ATL::CComPtr<IAxWinHostWindowLic>::CComPtr<IAxWinHostWindowLic>
PUBLIC	??1?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ	; ATL::CComPtr<IAxWinHostWindowLic>::~CComPtr<IAxWinHostWindowLic>
PUBLIC	??$QueryHost@UIAxWinHostWindowLic@@@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJPAPAUIAxWinHostWindowLic@@@Z ; ATL::CAxWindowT<ATL::CWindow>::QueryHost<IAxWinHostWindowLic>
PUBLIC	??$QueryInterface@UIUnknown@@@?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEJPAPAUIUnknown@@@Z ; ATL::CComPtrBase<IAxWinHostWindowLic>::QueryInterface<IUnknown>
PUBLIC	??_C@_0BF@CCFFBNDL@?$CI?$CIHRESULT?$CJ?$CIhr?$CJ?5?$DO?$DN?50?$CJ?$AA@ ; `string'
EXTRN	__imp__AtlAxCreateControlLicEx@32:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T205740 DD	0ffffffffH
	DD	FLAT:$L205731
	DD	00H
	DD	FLAT:$L205732
$T205734 DD	019930520H
	DD	02H
	DD	FLAT:$T205740
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BF@CCFFBNDL@?$CI?$CIHRESULT?$CJ?$CIhr?$CJ?5?$DO?$DN?50?$CJ?$AA@
CONST	SEGMENT
??_C@_0BF@CCFFBNDL@?$CI?$CIHRESULT?$CJ?$CIhr?$CJ?5?$DO?$DN?50?$CJ?$AA@ DB '('
	DB	'(HRESULT)(hr) >= 0)', 00H			; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?CreateControlLicEx@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@2ABU_GUID@@PAU4@PAG@Z
_TEXT	SEGMENT
tv132 = -56						; size = 4
$T205730 = -52						; size = 4
$T205728 = -48						; size = 4
_pControl$ = -40					; size = 4
_hr$ = -32						; size = 4
_spWinHost$ = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_lpszName$ = 8						; size = 4
_pStream$ = 12						; size = 4
_ppUnkContainer$ = 16					; size = 4
_ppUnkControl$ = 20					; size = 4
_iidSink$ = 24						; size = 4
_punkSink$ = 28						; size = 4
_bstrLicKey$ = 32					; size = 4
?CreateControlLicEx@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@2ABU_GUID@@PAU4@PAG@Z PROC NEAR ; ATL::CAxWindow2T<ATL::CWindow>::CreateControlLicEx, COMDAT
; _this$ = ecx

; 2162 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateControlLicEx@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@2ABU_GUID@@PAU4@PAG@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 44					; 0000002cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2163 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L205727
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	2163					; 00000873H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205727
	int	3
$L205727:

; 2164 : 		// We must have a valid window!
; 2165 : 
; 2166 : 		// Get a pointer to the container object connected to this window
; 2167 : 		CComPtr<IAxWinHostWindowLic> spWinHost;

	lea	ecx, DWORD PTR _spWinHost$[ebp]
	call	??0?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ ; ATL::CComPtr<IAxWinHostWindowLic>::CComPtr<IAxWinHostWindowLic>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2168 : 		HRESULT hr = QueryHost(&spWinHost);

	lea	ecx, DWORD PTR _spWinHost$[ebp]
	call	??I?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAEPAPAUIAxWinHostWindowLic@@XZ ; ATL::CComPtrBase<IAxWinHostWindowLic>::operator&
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$QueryHost@UIAxWinHostWindowLic@@@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJPAPAUIAxWinHostWindowLic@@@Z ; ATL::CAxWindowT<ATL::CWindow>::QueryHost<IAxWinHostWindowLic>
	mov	DWORD PTR _hr$[ebp], eax

; 2169 : 
; 2170 : 		// If QueryHost failed, there is no host attached to this window
; 2171 : 		// We assume that the user wants to create a new host and subclass the current window
; 2172 : 		if (FAILED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L203617

; 2173 : 			return AtlAxCreateControlLicEx(lpszName, m_hWnd, pStream, ppUnkContainer, ppUnkControl, iidSink, punkSink, bstrLicKey);

	mov	esi, esp
	mov	eax, DWORD PTR _bstrLicKey$[ebp]
	push	eax
	mov	ecx, DWORD PTR _punkSink$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iidSink$[ebp]
	push	edx
	mov	eax, DWORD PTR _ppUnkControl$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ppUnkContainer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pStream$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _lpszName$[ebp]
	push	edx
	call	DWORD PTR __imp__AtlAxCreateControlLicEx@32
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T205728[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spWinHost$[ebp]
	call	??1?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ
	mov	eax, DWORD PTR $T205728[ebp]
	jmp	$L203535
$L203617:

; 2174 : 
; 2175 : 		// Create the control requested by the caller
; 2176 : 		CComPtr<IUnknown> pControl;

	lea	ecx, DWORD PTR _pControl$[ebp]
	call	??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ	; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 2177 : 		if (SUCCEEDED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $L203621

; 2178 : 			hr = spWinHost->CreateControlLicEx(lpszName, m_hWnd, pStream, &pControl, iidSink, punkSink, bstrLicKey);

	lea	ecx, DWORD PTR _spWinHost$[ebp]
	call	??C?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIAxWinHostWindowLic@@@1@XZ ; ATL::CComPtrBase<IAxWinHostWindowLic>::operator->
	mov	DWORD PTR tv132[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _bstrLicKey$[ebp]
	push	eax
	mov	ecx, DWORD PTR _punkSink$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iidSink$[ebp]
	push	edx
	lea	ecx, DWORD PTR _pControl$[ebp]
	call	??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator&
	push	eax
	mov	eax, DWORD PTR _pStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _lpszName$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv132[ebp]
	push	ecx
	mov	edx, DWORD PTR tv132[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax+40]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$L203621:

; 2179 : 
; 2180 : 		// Send back the necessary interface pointers
; 2181 : 		if (SUCCEEDED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $L203634

; 2182 : 		{
; 2183 : 			if (ppUnkControl)

	cmp	DWORD PTR _ppUnkControl$[ebp], 0
	je	SHORT $L203635

; 2184 : 				*ppUnkControl = pControl.Detach();

	lea	ecx, DWORD PTR _pControl$[ebp]
	call	?Detach@?$CComPtrBase@UIUnknown@@@ATL@@QAEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::Detach
	mov	ecx, DWORD PTR _ppUnkControl$[ebp]
	mov	DWORD PTR [ecx], eax
$L203635:

; 2185 : 
; 2186 : 			if (ppUnkContainer)

	cmp	DWORD PTR _ppUnkContainer$[ebp], 0
	je	SHORT $L203634

; 2187 : 			{
; 2188 : 				hr = spWinHost.QueryInterface(ppUnkContainer);

	mov	edx, DWORD PTR _ppUnkContainer$[ebp]
	push	edx
	lea	ecx, DWORD PTR _spWinHost$[ebp]
	call	??$QueryInterface@UIUnknown@@@?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEJPAPAUIUnknown@@@Z ; ATL::CComPtrBase<IAxWinHostWindowLic>::QueryInterface<IUnknown>
	mov	DWORD PTR _hr$[ebp], eax

; 2189 : 				ATLASSERT(SUCCEEDED(hr)); // This should not fail!

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L203634
	push	OFFSET FLAT:??_C@_0BF@CCFFBNDL@?$CI?$CIHRESULT?$CJ?$CIhr?$CJ?5?$DO?$DN?50?$CJ?$AA@
	push	0
	push	2189					; 0000088dH
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L203634
	int	3
$L203634:

; 2190 : 			}
; 2191 : 		}
; 2192 : 
; 2193 : 		return hr;

	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T205730[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pControl$[ebp]
	call	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spWinHost$[ebp]
	call	??1?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ
	mov	eax, DWORD PTR $T205730[ebp]
$L203535:

; 2194 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L205739
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
$L205739:
	DD	2
	DD	$L205738
$L205738:
	DD	-24					; ffffffe8H
	DD	4
	DD	$L205735
	DD	-40					; ffffffd8H
	DD	4
	DD	$L205736
$L205736:
	DB	112					; 00000070H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	0
$L205735:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	87					; 00000057H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	72					; 00000048H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L205731:
	lea	ecx, DWORD PTR _spWinHost$[ebp]
	jmp	??1?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ
$L205732:
	lea	ecx, DWORD PTR _pControl$[ebp]
	jmp	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
__ehhandler$?CreateControlLicEx@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@2ABU_GUID@@PAU4@PAG@Z:
	mov	eax, OFFSET FLAT:$T205734
	jmp	___CxxFrameHandler
text$x	ENDS
?CreateControlLicEx@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@2ABU_GUID@@PAU4@PAG@Z ENDP ; ATL::CAxWindow2T<ATL::CWindow>::CreateControlLicEx
PUBLIC	??1?$CComPtrBase@UIUnknown@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IUnknown>::~CComPtrBase<IUnknown>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ PROC NEAR		; ATL::CComPtr<IUnknown>::~CComPtr<IUnknown>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIUnknown@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IUnknown>::~CComPtrBase<IUnknown>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IUnknown>::~CComPtr<IUnknown>
_TEXT	ENDS
EXTRN	__imp__AtlAxWinInit@0:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CAxWindowT@VCWindow@ATL@@@ATL@@QAE@PAUHWND__@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hWnd$ = 8						; size = 4
??0?$CAxWindowT@VCWindow@ATL@@@ATL@@QAE@PAUHWND__@@@Z PROC NEAR ; ATL::CAxWindowT<ATL::CWindow>::CAxWindowT<ATL::CWindow>, COMDAT
; _this$ = ecx

; 1941 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CWindow@ATL@@QAE@PAUHWND__@@@Z	; ATL::CWindow::CWindow

; 1942 : 		AtlAxWinInit();

	mov	esi, esp
	call	DWORD PTR __imp__AtlAxWinInit@0
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1943 : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CAxWindowT@VCWindow@ATL@@@ATL@@QAE@PAUHWND__@@@Z ENDP ; ATL::CAxWindowT<ATL::CWindow>::CAxWindowT<ATL::CWindow>
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IAxWinHostWindowLic>::~CComPtrBase<IAxWinHostWindowLic>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtr<IAxWinHostWindowLic>::~CComPtr<IAxWinHostWindowLic>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IAxWinHostWindowLic>::~CComPtrBase<IAxWinHostWindowLic>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IAxWinHostWindowLic>::~CComPtr<IAxWinHostWindowLic>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
_TEXT	ENDS
;	COMDAT ?Detach@?$CComPtrBase@UIUnknown@@@ATL@@QAEPAUIUnknown@@XZ
_TEXT	SEGMENT
_pt$ = -8						; size = 4
_this$ = -4						; size = 4
?Detach@?$CComPtrBase@UIUnknown@@@ATL@@QAEPAUIUnknown@@XZ PROC NEAR ; ATL::CComPtrBase<IUnknown>::Detach, COMDAT
; _this$ = ecx

; 198  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 199  : 		T* pt = p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pt$[ebp], ecx

; 200  : 		p = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 201  : 		return pt;

	mov	eax, DWORD PTR _pt$[ebp]

; 202  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?Detach@?$CComPtrBase@UIUnknown@@@ATL@@QAEPAUIUnknown@@XZ ENDP ; ATL::CComPtrBase<IUnknown>::Detach
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IAxWinHostWindowLic>::CComPtrBase<IAxWinHostWindowLic>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtr<IAxWinHostWindowLic>::CComPtr<IAxWinHostWindowLic>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IAxWinHostWindowLic>::CComPtrBase<IAxWinHostWindowLic>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IAxWinHostWindowLic>::CComPtr<IAxWinHostWindowLic>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtrBase<IAxWinHostWindowLic>::~CComPtrBase<IAxWinHostWindowLic>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L203697

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L203697:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAE@XZ ENDP ; ATL::CComPtrBase<IAxWinHostWindowLic>::~CComPtrBase<IAxWinHostWindowLic>
_TEXT	ENDS
PUBLIC	??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@		; `string'
;	COMDAT ??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
CONST	SEGMENT
??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@ DB 'p==0', 00H		; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ??I?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAEPAPAUIAxWinHostWindowLic@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAEPAPAUIAxWinHostWindowLic@@XZ PROC NEAR ; ATL::CComPtrBase<IAxWinHostWindowLic>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L205757
	push	OFFSET FLAT:??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
	push	0
	push	143					; 0000008fH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205757
	int	3
$L205757:

; 144  : 		return &p;

	mov	eax, DWORD PTR _this$[ebp]

; 145  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAEPAPAUIAxWinHostWindowLic@@XZ ENDP ; ATL::CComPtrBase<IAxWinHostWindowLic>::operator&
_TEXT	ENDS
PUBLIC	??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@		; `string'
;	COMDAT ??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
CONST	SEGMENT
??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@ DB 'p!=0', 00H		; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ??C?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIAxWinHostWindowLic@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIAxWinHostWindowLic@@@1@XZ PROC NEAR ; ATL::CComPtrBase<IAxWinHostWindowLic>::operator->, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 148  : 		ATLASSERT(p!=NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L205760
	push	OFFSET FLAT:??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
	push	0
	push	148					; 00000094H
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205760
	int	3
$L205760:

; 149  : 		return (_NoAddRefReleaseOnCComPtr<T>*)p;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 150  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIAxWinHostWindowLic@@@1@XZ ENDP ; ATL::CComPtrBase<IAxWinHostWindowLic>::operator->
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@IAE@XZ PROC NEAR ; ATL::CComPtrBase<IAxWinHostWindowLic>::CComPtrBase<IAxWinHostWindowLic>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@IAE@XZ ENDP ; ATL::CComPtrBase<IAxWinHostWindowLic>::CComPtrBase<IAxWinHostWindowLic>
_TEXT	ENDS
PUBLIC	?GetIDD@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHXZ ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::GetIDD
PUBLIC	?DestroyWindow@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHXZ ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::DestroyWindow
PUBLIC	?DialogProc@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z ; ATL::CDialogImplBaseT<ATL::CWindow>::DialogProc
EXTRN	__imp__SetLastError@4:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
;	COMDAT ?DialogProc@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_hr$203804 = -8						; size = 4
_pThis$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?DialogProc@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z PROC NEAR ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::DialogProc, COMDAT

; 3677 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 3678 : 	CAxDialogImpl< T, TBase >* pThis = (CAxDialogImpl< T, TBase >*)hWnd;

	mov	eax, DWORD PTR _hWnd$[ebp]
	mov	DWORD PTR _pThis$[ebp], eax

; 3679 : 	if (uMsg == WM_INITDIALOG)

	cmp	DWORD PTR _uMsg$[ebp], 272		; 00000110H
	jne	SHORT $L203803

; 3680 : 	{
; 3681 : 		HRESULT hr;
; 3682 : 		if (FAILED(hr = pThis->CreateActiveXControls(pThis->GetIDD())))

	mov	ecx, DWORD PTR _pThis$[ebp]
	call	?GetIDD@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHXZ ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::GetIDD
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pThis$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pThis$[ebp]
	call	DWORD PTR [edx+16]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$203804[ebp], eax
	cmp	DWORD PTR _hr$203804[ebp], 0
	jge	SHORT $L203803

; 3683 : 		{
; 3684 : 			pThis->DestroyWindow();

	mov	ecx, DWORD PTR _pThis$[ebp]
	call	?DestroyWindow@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHXZ ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::DestroyWindow

; 3685 : 			SetLastError(hr & 0x0000FFFF);

	mov	eax, DWORD PTR _hr$203804[ebp]
	and	eax, 65535				; 0000ffffH
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__SetLastError@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 3686 : 			return FALSE;

	xor	eax, eax
	jmp	SHORT $L203800
$L203803:

; 3687 : 		}
; 3688 : 	}
; 3689 : 	return CDialogImplBaseT< TBase >::DialogProc(hWnd, uMsg, wParam, lParam);

	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _uMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?DialogProc@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z ; ATL::CDialogImplBaseT<ATL::CWindow>::DialogProc
$L203800:

; 3690 : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?DialogProc@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z ENDP ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::DialogProc
_TEXT	ENDS
PUBLIC	__GUID_3935bda8_4ed9_495c_8650_e01fc1e38a4b
PUBLIC	?QueryHost@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CAxWindowT<ATL::CWindow>::QueryHost
;	COMDAT __GUID_3935bda8_4ed9_495c_8650_e01fc1e38a4b
CONST	SEGMENT
__GUID_3935bda8_4ed9_495c_8650_e01fc1e38a4b DD 03935bda8H
	DW	04ed9H
	DW	0495cH
	DB	086H
	DB	050H
	DB	0e0H
	DB	01fH
	DB	0c1H
	DB	0e3H
	DB	08aH
	DB	04bH
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ??$QueryHost@UIAxWinHostWindowLic@@@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJPAPAUIAxWinHostWindowLic@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppUnk$ = 8						; size = 4
??$QueryHost@UIAxWinHostWindowLic@@@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJPAPAUIAxWinHostWindowLic@@@Z PROC NEAR ; ATL::CAxWindowT<ATL::CWindow>::QueryHost<IAxWinHostWindowLic>, COMDAT
; _this$ = ecx

; 2076 : 	HRESULT QueryHost(Q** ppUnk)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2077 : 	{
; 2078 : 		return QueryHost(__uuidof(Q), (void**)ppUnk);

	mov	eax, DWORD PTR _ppUnk$[ebp]
	push	eax
	push	OFFSET FLAT:__GUID_3935bda8_4ed9_495c_8650_e01fc1e38a4b
	mov	ecx, DWORD PTR _this$[ebp]
	call	?QueryHost@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CAxWindowT<ATL::CWindow>::QueryHost

; 2079 : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$QueryHost@UIAxWinHostWindowLic@@@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJPAPAUIAxWinHostWindowLic@@@Z ENDP ; ATL::CAxWindowT<ATL::CWindow>::QueryHost<IAxWinHostWindowLic>
_TEXT	ENDS
PUBLIC	??_C@_07MEKCDCMA@pp?5?$CB?$DN?50?$AA@		; `string'
PUBLIC	__GUID_00000000_0000_0000_c000_000000000046
;	COMDAT ??_C@_07MEKCDCMA@pp?5?$CB?$DN?50?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
CONST	SEGMENT
??_C@_07MEKCDCMA@pp?5?$CB?$DN?50?$AA@ DB 'pp != 0', 00H	; `string'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000000_0000_0000_c000_000000000046 DD 00H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ??$QueryInterface@UIUnknown@@@?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEJPAPAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pp$ = 8						; size = 4
??$QueryInterface@UIUnknown@@@?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEJPAPAUIUnknown@@@Z PROC NEAR ; ATL::CComPtrBase<IAxWinHostWindowLic>::QueryInterface<IUnknown>, COMDAT
; _this$ = ecx

; 236  : 	HRESULT QueryInterface(Q** pp) const throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 237  : 	{
; 238  : 		ATLASSERT(pp != NULL);

	cmp	DWORD PTR _pp$[ebp], 0
	jne	SHORT $L205769
	push	OFFSET FLAT:??_C@_07MEKCDCMA@pp?5?$CB?$DN?50?$AA@
	push	0
	push	238					; 000000eeH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205769
	int	3
$L205769:

; 239  : 		return p->QueryInterface(__uuidof(Q), (void**)pp);

	mov	esi, esp
	mov	ecx, DWORD PTR _pp$[ebp]
	push	ecx
	push	OFFSET FLAT:__GUID_00000000_0000_0000_c000_000000000046
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	push	edx
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 240  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$QueryInterface@UIUnknown@@@?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEJPAPAUIUnknown@@@Z ENDP ; ATL::CComPtrBase<IAxWinHostWindowLic>::QueryInterface<IUnknown>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
_TEXT	ENDS
;	COMDAT ?GetIDD@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetIDD@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHXZ PROC NEAR ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::GetIDD, COMDAT
; _this$ = ecx

; 3411 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 3412 : 		return( static_cast<T*>(this)->IDD );

	mov	eax, 103				; 00000067H

; 3413 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetIDD@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHXZ ENDP ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::GetIDD
_TEXT	ENDS
PUBLIC	??_C@_09BNFEDJPE@?$CBm_bModal?$AA@		; `string'
EXTRN	__imp__DestroyWindow@4:NEAR
;	COMDAT ??_C@_09BNFEDJPE@?$CBm_bModal?$AA@
CONST	SEGMENT
??_C@_09BNFEDJPE@?$CBm_bModal?$AA@ DB '!m_bModal', 00H	; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?DestroyWindow@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DestroyWindow@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHXZ PROC NEAR ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::DestroyWindow, COMDAT
; _this$ = ecx

; 3457 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 3458 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L205774
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	3458					; 00000d82H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205774
	int	3
$L205774:

; 3459 : #ifdef _DEBUG
; 3460 : 		ATLASSERT(!m_bModal);	// must not be a modal dialog

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	je	SHORT $L205775
	push	OFFSET FLAT:??_C@_09BNFEDJPE@?$CBm_bModal?$AA@
	push	0
	push	3460					; 00000d84H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205775
	int	3
$L205775:

; 3461 : #endif //_DEBUG
; 3462 : 		return ::DestroyWindow(m_hWnd);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__DestroyWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 3463 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DestroyWindow@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHXZ ENDP ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::DestroyWindow
_TEXT	ENDS
PUBLIC	??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ ; ATL::CComPtrBase<IUnknown>::operator->
PUBLIC	??_C@_0L@PGEBGEDK@ppUnk?5?$CB?$DN?50?$AA@	; `string'
EXTRN	__imp__AtlAxGetHost@8:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T205787 DD	0ffffffffH
	DD	FLAT:$L205780
$T205782 DD	019930520H
	DD	01H
	DD	FLAT:$T205787
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0L@PGEBGEDK@ppUnk?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0L@PGEBGEDK@ppUnk?5?$CB?$DN?50?$AA@ DB 'ppUnk != 0', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?QueryHost@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv86 = -40						; size = 4
$T205779 = -36						; size = 4
_spUnk$ = -28						; size = 4
_hr$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_iid$ = 8						; size = 4
_ppUnk$ = 12						; size = 4
?QueryHost@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJABU_GUID@@PAPAX@Z PROC NEAR ; ATL::CAxWindowT<ATL::CWindow>::QueryHost, COMDAT
; _this$ = ecx

; 2063 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?QueryHost@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJABU_GUID@@PAPAX@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR _this$[ebp], ecx

; 2064 : 		ATLASSERT(ppUnk != NULL);

	cmp	DWORD PTR _ppUnk$[ebp], 0
	jne	SHORT $L205778
	push	OFFSET FLAT:??_C@_0L@PGEBGEDK@ppUnk?5?$CB?$DN?50?$AA@
	push	0
	push	2064					; 00000810H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205778
	int	3
$L205778:

; 2065 : 		if (ppUnk == NULL)

	cmp	DWORD PTR _ppUnk$[ebp], 0
	jne	SHORT $L203957

; 2066 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	$L203955
$L203957:

; 2067 : 		HRESULT hr;
; 2068 : 		*ppUnk = NULL;

	mov	ecx, DWORD PTR _ppUnk$[ebp]
	mov	DWORD PTR [ecx], 0

; 2069 : 		CComPtr<IUnknown> spUnk;

	lea	ecx, DWORD PTR _spUnk$[ebp]
	call	??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ	; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2070 : 		hr = AtlAxGetHost(m_hWnd, &spUnk);

	lea	ecx, DWORD PTR _spUnk$[ebp]
	call	??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator&
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__AtlAxGetHost@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 2071 : 		if (SUCCEEDED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $L203962

; 2072 : 			hr = spUnk->QueryInterface(iid, ppUnk);

	lea	ecx, DWORD PTR _spUnk$[ebp]
	call	??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ ; ATL::CComPtrBase<IUnknown>::operator->
	mov	DWORD PTR tv86[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _ppUnk$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	mov	eax, DWORD PTR tv86[ebp]
	push	eax
	mov	ecx, DWORD PTR tv86[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$L203962:

; 2073 : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T205779[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spUnk$[ebp]
	call	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
	mov	eax, DWORD PTR $T205779[ebp]
$L203955:

; 2074 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L205786
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$L205786:
	DD	1
	DD	$L205785
$L205785:
	DD	-28					; ffffffe4H
	DD	4
	DD	$L205783
$L205783:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	85					; 00000055H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L205780:
	lea	ecx, DWORD PTR _spUnk$[ebp]
	jmp	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
__ehhandler$?QueryHost@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJABU_GUID@@PAPAX@Z:
	mov	eax, OFFSET FLAT:$T205782
	jmp	___CxxFrameHandler
text$x	ENDS
?QueryHost@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJABU_GUID@@PAPAX@Z ENDP ; ATL::CAxWindowT<ATL::CWindow>::QueryHost
PUBLIC	??1?$CComPtrBase@UIStream@@@ATL@@QAE@XZ		; ATL::CComPtrBase<IStream>::~CComPtrBase<IStream>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIStream@@@ATL@@QAE@XZ PROC NEAR		; ATL::CComPtr<IStream>::~CComPtr<IStream>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIStream@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IStream>::~CComPtrBase<IStream>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIStream@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IStream>::~CComPtr<IStream>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
_TEXT	ENDS
;	COMDAT ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ PROC NEAR ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 373  : 	CAtlSafeAllocBufferManager() : m_pHead(NULL) {};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
_TEXT	ENDS
PUBLIC	?Allocate@CCRTAllocator@ATL@@SAPAXI@Z		; ATL::CCRTAllocator::Allocate
PUBLIC	?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode::GetData
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z
_TEXT	SEGMENT
_p$ = -8						; size = 4
_this$ = -4						; size = 4
_nRequestedSize$ = 8					; size = 4
?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z PROC NEAR ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate, COMDAT
; _this$ = ecx

; 375  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 376  : 		CAtlSafeAllocBufferNode *p = (CAtlSafeAllocBufferNode*)Allocator::Allocate(nRequestedSize + sizeof(CAtlSafeAllocBufferNode));

	mov	eax, DWORD PTR _nRequestedSize$[ebp]
	add	eax, 8
	push	eax
	call	?Allocate@CCRTAllocator@ATL@@SAPAXI@Z	; ATL::CCRTAllocator::Allocate
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 377  : 		if (p == NULL)

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $L159703

; 378  : 			return NULL;

	xor	eax, eax
	jmp	SHORT $L159690
$L159703:

; 379  : 		
; 380  : 		// Add buffer to the list
; 381  : 		p->m_pNext = m_pHead;

	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 382  : 		m_pHead = p;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx], edx

; 383  : 		
; 384  : 		return p->GetData();

	mov	ecx, DWORD PTR _p$[ebp]
	call	?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode::GetData
$L159690:

; 385  : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z
_TEXT	SEGMENT
_nBytes$ = 8						; size = 4
?Allocate@CCRTAllocator@ATL@@SAPAXI@Z PROC NEAR		; ATL::CCRTAllocator::Allocate, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		return malloc(nBytes);

	mov	eax, DWORD PTR _nBytes$[ebp]
	push	eax
	call	_malloc
	add	esp, 4

; 32   : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?Allocate@CCRTAllocator@ATL@@SAPAXI@Z ENDP		; ATL::CCRTAllocator::Allocate
_TEXT	ENDS
PUBLIC	?Free@CCRTAllocator@ATL@@SAXPAX@Z		; ATL::CCRTAllocator::Free
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT
_p$159709 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ PROC NEAR ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 387  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$L159707:

; 388  : 		// Walk the list and free the buffers
; 389  : 		while (m_pHead != NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L159705

; 390  : 		{
; 391  : 			CAtlSafeAllocBufferNode* p = m_pHead;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _p$159709[ebp], edx

; 392  : 			m_pHead = m_pHead->m_pNext;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax

; 393  : 			Allocator::Free(p);

	mov	ecx, DWORD PTR _p$159709[ebp]
	push	ecx
	call	?Free@CCRTAllocator@ATL@@SAXPAX@Z	; ATL::CCRTAllocator::Free
	add	esp, 4

; 394  : 		}

	jmp	SHORT $L159707
$L159705:

; 395  : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Free@CCRTAllocator@ATL@@SAXPAX@Z PROC NEAR		; ATL::CCRTAllocator::Free, COMDAT

; 35   : 	{

	push	ebp
	mov	ebp, esp

; 36   : 		free(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_free
	add	esp, 4

; 37   : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?Free@CCRTAllocator@ATL@@SAXPAX@Z ENDP			; ATL::CCRTAllocator::Free
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ PROC NEAR		; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIUnknown@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtrBase<IUnknown>::~CComPtrBase<IUnknown>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L159742

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L159742:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIUnknown@@@ATL@@QAE@XZ ENDP		; ATL::CComPtrBase<IUnknown>::~CComPtrBase<IUnknown>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ PROC NEAR ; ATL::CComPtrBase<IUnknown>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L205808
	push	OFFSET FLAT:??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
	push	0
	push	143					; 0000008fH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205808
	int	3
$L205808:

; 144  : 		return &p;

	mov	eax, DWORD PTR _this$[ebp]

; 145  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ ENDP ; ATL::CComPtrBase<IUnknown>::operator&
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ PROC NEAR ; ATL::CComPtrBase<IUnknown>::operator->, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 148  : 		ATLASSERT(p!=NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L205811
	push	OFFSET FLAT:??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
	push	0
	push	148					; 00000094H
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205811
	int	3
$L205811:

; 149  : 		return (_NoAddRefReleaseOnCComPtr<T>*)p;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 150  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ ENDP ; ATL::CComPtrBase<IUnknown>::operator->
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
_TEXT	ENDS
;	COMDAT ??0?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::CTempBuffer<char,128,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 216  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 217  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::CTempBuffer<char,128,ATL::CCRTAllocator>
_TEXT	ENDS
PUBLIC	?FreeHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::FreeHeap
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 225  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 226  : 		if( m_p != reinterpret_cast< T* >( m_abFixedBuffer ) )

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $L159763

; 227  : 		{
; 228  : 			FreeHeap();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::FreeHeap
$L159763:

; 229  : 		}
; 230  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ PROC NEAR ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::operator char *, COMDAT
; _this$ = ecx

; 233  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 234  : 		return( m_p );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 235  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ ENDP ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::operator char *
_TEXT	ENDS
PUBLIC	?AllocateBytes@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::AllocateBytes
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Allocate@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nElements$ = 8						; size = 4
?Allocate@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z PROC NEAR ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::Allocate, COMDAT
; _this$ = ecx

; 243  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 244  : 		return( AllocateBytes( nElements*sizeof( T ) ) );

	mov	eax, DWORD PTR _nElements$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AllocateBytes@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::AllocateBytes

; 245  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Allocate@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z ENDP ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::Allocate
_TEXT	ENDS
PUBLIC	??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UAE@XZ	; ATL::CWindowImplRoot<ATL::CWindow>::~CWindowImplRoot<ATL::CWindow>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
;	COMDAT ??1?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAE@XZ PROC NEAR ; ATL::CDialogImplBaseT<ATL::CWindow>::~CDialogImplBaseT<ATL::CWindow>, COMDAT
; _this$ = ecx

; 3197 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 3198 : 	}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UAE@XZ ; ATL::CWindowImplRoot<ATL::CWindow>::~CWindowImplRoot<ATL::CWindow>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAE@XZ ENDP	; ATL::CDialogImplBaseT<ATL::CWindow>::~CDialogImplBaseT<ATL::CWindow>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?OnFinalMessage@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAEXPAUHWND__@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?OnFinalMessage@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAEXPAUHWND__@@@Z PROC NEAR ; ATL::CDialogImplBaseT<ATL::CWindow>::OnFinalMessage, COMDAT
; _this$ = ecx

; 3212 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 3213 : 		// override to do something, if needed
; 3214 : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?OnFinalMessage@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAEXPAUHWND__@@@Z ENDP ; ATL::CDialogImplBaseT<ATL::CWindow>::OnFinalMessage
_TEXT	ENDS
PUBLIC	??_C@_0DE@JJEOCICO@ERROR?5?9?5Object?5deleted?5before?5wi@ ; `string'
PUBLIC	??1CWndProcThunk@ATL@@QAE@XZ			; ATL::CWndProcThunk::~CWndProcThunk
;	COMDAT xdata$x
xdata$x	SEGMENT
$T205833 DD	0ffffffffH
	DD	FLAT:$L205829
$T205831 DD	019930520H
	DD	01H
	DD	FLAT:$T205833
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DE@JJEOCICO@ERROR?5?9?5Object?5deleted?5before?5wi@
CONST	SEGMENT
??_C@_0DE@JJEOCICO@ERROR?5?9?5Object?5deleted?5before?5wi@ DB 'ERROR - Ob'
	DB	'ject deleted before window was destroyed', 0aH, 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT
$T205827 = -24						; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UAE@XZ PROC NEAR ; ATL::CWindowImplRoot<ATL::CWindow>::~CWindowImplRoot<ATL::CWindow>, COMDAT
; _this$ = ecx

; 2750 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2751 : #ifdef _DEBUG
; 2752 : 		if(m_hWnd != NULL)	// should be cleared in WindowProc

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $L159967

; 2753 : 		{
; 2754 : 			ATLTRACE(atlTraceWindowing, 0, _T("ERROR - Object deleted before window was destroyed\n"));

	push	OFFSET FLAT:??_C@_0DE@JJEOCICO@ERROR?5?9?5Object?5deleted?5before?5wi@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceWindowing@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceWindowing
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	2754					; 00000ac2H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T205827[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 16					; 00000010H

; 2755 : 			ATLASSERT(FALSE);

	xor	ecx, ecx
	jne	SHORT $L159967
	push	OFFSET FLAT:??_C@_01GBGANLPD@0?$AA@
	push	0
	push	2755					; 00000ac3H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L159967
	int	3
$L159967:

; 2756 : 		}
; 2757 : #endif //_DEBUG
; 2758 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1CWndProcThunk@ATL@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L205829:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CWndProcThunk@ATL@@QAE@XZ
__ehhandler$??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UAE@XZ:
	mov	eax, OFFSET FLAT:$T205831
	jmp	___CxxFrameHandler
text$x	ENDS
??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UAE@XZ ENDP	; ATL::CWindowImplRoot<ATL::CWindow>::~CWindowImplRoot<ATL::CWindow>
PUBLIC	??0?$CComPtrBase@UIStream@@@ATL@@IAE@XZ		; ATL::CComPtrBase<IStream>::CComPtrBase<IStream>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIStream@@@ATL@@QAE@XZ PROC NEAR		; ATL::CComPtr<IStream>::CComPtr<IStream>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIStream@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IStream>::CComPtrBase<IStream>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIStream@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IStream>::CComPtr<IStream>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIStream@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtrBase<IStream>::~CComPtrBase<IStream>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L160253

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L160253:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIStream@@@ATL@@QAE@XZ ENDP		; ATL::CComPtrBase<IStream>::~CComPtrBase<IStream>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIStream@@@ATL@@QBEPAUIStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIStream@@@ATL@@QBEPAUIStream@@XZ PROC NEAR ; ATL::CComPtrBase<IStream>::operator IStream *, COMDAT
; _this$ = ecx

; 131  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 132  : 		return p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 133  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UIStream@@@ATL@@QBEPAUIStream@@XZ ENDP	; ATL::CComPtrBase<IStream>::operator IStream *
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIStream@@@ATL@@QAEPAPAUIStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIStream@@@ATL@@QAEPAPAUIStream@@XZ PROC NEAR ; ATL::CComPtrBase<IStream>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L205844
	push	OFFSET FLAT:??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
	push	0
	push	143					; 0000008fH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205844
	int	3
$L205844:

; 144  : 		return &p;

	mov	eax, DWORD PTR _this$[ebp]

; 145  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UIStream@@@ATL@@QAEPAPAUIStream@@XZ ENDP ; ATL::CComPtrBase<IStream>::operator&
_TEXT	ENDS
PUBLIC	??1CDynamicStdCallThunk@ATL@@QAE@XZ		; ATL::CDynamicStdCallThunk::~CDynamicStdCallThunk
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1CWndProcThunk@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CWndProcThunk@ATL@@QAE@XZ PROC NEAR			; ATL::CWndProcThunk::~CWndProcThunk, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1CDynamicStdCallThunk@ATL@@QAE@XZ	; ATL::CDynamicStdCallThunk::~CDynamicStdCallThunk
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CWndProcThunk@ATL@@QAE@XZ ENDP			; ATL::CWndProcThunk::~CWndProcThunk
_TEXT	ENDS
EXTRN	__imp__HeapFree@12:NEAR
EXTRN	__imp__GetProcessHeap@0:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
;	COMDAT ??1CDynamicStdCallThunk@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDynamicStdCallThunk@ATL@@QAE@XZ PROC NEAR		; ATL::CDynamicStdCallThunk::~CDynamicStdCallThunk, COMDAT
; _this$ = ecx

; 627  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		if (pThunk)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L87667

; 629  : 			HeapFree(GetProcessHeap(), 0, pThunk);

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	0
	mov	edi, esp
	call	DWORD PTR __imp__GetProcessHeap@0
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__HeapFree@12
	cmp	esi, esp
	call	__RTC_CheckEsp
$L87667:

; 630  : 	}

	pop	edi
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CDynamicStdCallThunk@ATL@@QAE@XZ ENDP		; ATL::CDynamicStdCallThunk::~CDynamicStdCallThunk
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@XZ PROC NEAR	; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@XZ ENDP		; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>
_TEXT	ENDS
PUBLIC	??_C@_08GPODJFIN@m_p?5?$DN?$DN?50?$AA@		; `string'
PUBLIC	??_C@_0FB@IAFJMJBP@C?3?2Program?5Files?2Microsoft?5Visua@ ; `string'
PUBLIC	?AllocateHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::AllocateHeap
;	COMDAT ??_C@_08GPODJFIN@m_p?5?$DN?$DN?50?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
CONST	SEGMENT
??_C@_08GPODJFIN@m_p?5?$DN?$DN?50?$AA@ DB 'm_p == 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FB@IAFJMJBP@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT
??_C@_0FB@IAFJMJBP@C?3?2Program?5Files?2Microsoft?5Visua@ DB 'C:\Program '
	DB	'Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\include\at'
	DB	'lalloc.h', 00H				; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nBytes$ = 8						; size = 4
?AllocateBytes@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z PROC NEAR ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::AllocateBytes, COMDAT
; _this$ = ecx

; 276  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 277  : 		ATLASSERT( m_p == NULL );

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L205854
	push	OFFSET FLAT:??_C@_08GPODJFIN@m_p?5?$DN?$DN?50?$AA@
	push	0
	push	277					; 00000115H
	push	OFFSET FLAT:??_C@_0FB@IAFJMJBP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205854
	int	3
$L205854:

; 278  : 		if( nBytes > t_nFixedBytes )

	cmp	DWORD PTR _nBytes$[ebp], 128		; 00000080H
	jbe	SHORT $L160415

; 279  : 		{
; 280  : 			AllocateHeap( nBytes );

	mov	edx, DWORD PTR _nBytes$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AllocateHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::AllocateHeap

; 281  : 		}
; 282  : 		else

	jmp	SHORT $L160416
$L160415:

; 283  : 		{
; 284  : 			m_p = reinterpret_cast< T* >( m_abFixedBuffer );

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
$L160416:

; 285  : 		}
; 286  : 
; 287  : 		return( m_p );

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 288  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AllocateBytes@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z ENDP ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::AllocateBytes
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FreeHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ PROC NEAR ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::FreeHeap, COMDAT
; _this$ = ecx

; 312  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 313  : 		Allocator::Free( m_p );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?Free@CCRTAllocator@ATL@@SAXPAX@Z	; ATL::CCRTAllocator::Free
	add	esp, 4

; 314  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FreeHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ENDP ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::FreeHeap
_TEXT	ENDS
PUBLIC	??0CWndProcThunk@ATL@@QAE@XZ			; ATL::CWndProcThunk::CWndProcThunk
PUBLIC	??0CMessageMap@ATL@@QAE@XZ			; ATL::CMessageMap::CMessageMap
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
;	COMDAT ??0?$CWindowImplRoot@VCWindow@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWindowImplRoot@VCWindow@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CWindowImplRoot<ATL::CWindow>::CWindowImplRoot<ATL::CWindow>, COMDAT
; _this$ = ecx

; 2747 : 	{ }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CWindow@ATL@@QAE@PAUHWND__@@@Z	; ATL::CWindow::CWindow
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CMessageMap@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0CWndProcThunk@ATL@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CWindowImplRoot@VCWindow@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CWindowImplRoot<ATL::CWindow>::CWindowImplRoot<ATL::CWindow>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIStream@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIStream@@@ATL@@IAE@XZ PROC NEAR	; ATL::CComPtrBase<IStream>::CComPtrBase<IStream>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIStream@@@ATL@@IAE@XZ ENDP		; ATL::CComPtrBase<IStream>::CComPtrBase<IStream>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
_TEXT	ENDS
;	COMDAT ?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ PROC NEAR ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode::GetData, COMDAT
; _this$ = ecx

; 365  : 		{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 366  : 			return (this + 1);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8

; 367  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode::GetData
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0CMessageMap@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMessageMap@ATL@@QAE@XZ PROC NEAR			; ATL::CMessageMap::CMessageMap, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CMessageMap@ATL@@QAE@XZ ENDP				; ATL::CMessageMap::CMessageMap
_TEXT	ENDS
PUBLIC	??0CDynamicStdCallThunk@ATL@@QAE@XZ		; ATL::CDynamicStdCallThunk::CDynamicStdCallThunk
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0CWndProcThunk@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CWndProcThunk@ATL@@QAE@XZ PROC NEAR			; ATL::CWndProcThunk::CWndProcThunk, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0CDynamicStdCallThunk@ATL@@QAE@XZ	; ATL::CDynamicStdCallThunk::CDynamicStdCallThunk
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CWndProcThunk@ATL@@QAE@XZ ENDP			; ATL::CWndProcThunk::CWndProcThunk
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
_TEXT	ENDS
;	COMDAT ??0CDynamicStdCallThunk@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDynamicStdCallThunk@ATL@@QAE@XZ PROC NEAR		; ATL::CDynamicStdCallThunk::CDynamicStdCallThunk, COMDAT
; _this$ = ecx

; 621  : 	CDynamicStdCallThunk()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 	{
; 623  : 		pThunk = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 624  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CDynamicStdCallThunk@ATL@@QAE@XZ ENDP		; ATL::CDynamicStdCallThunk::CDynamicStdCallThunk
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT
_p$ = -8						; size = 4
_this$ = -4						; size = 4
_nBytes$ = 8						; size = 4
?AllocateHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z PROC NEAR ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::AllocateHeap, COMDAT
; _this$ = ecx

; 292  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 293  : 		T* p = static_cast< T* >( Allocator::Allocate( nBytes ) );

	mov	eax, DWORD PTR _nBytes$[ebp]
	push	eax
	call	?Allocate@CCRTAllocator@ATL@@SAPAXI@Z	; ATL::CCRTAllocator::Allocate
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 294  : 		if( p == NULL )

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $L160603

; 295  : 		{
; 296  : 			AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L160603:

; 297  : 		}
; 298  : 		m_p = p;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx], edx
$L205872:

; 299  : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AllocateHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ENDP ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::AllocateHeap
_TEXT	ENDS
PUBLIC	?SetWindowLongPtrA@@YAJPAUHWND__@@HJ@Z		; SetWindowLongPtrA
PUBLIC	??0_ATL_MSG@ATL@@QAE@PAUHWND__@@IIJH@Z		; ATL::_ATL_MSG::_ATL_MSG
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
;	COMDAT ?DialogProc@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
tv128 = -76						; size = 4
_hWnd$160721 = -72					; size = 4
_bRet$ = -68						; size = 4
_lRes$ = -60						; size = 4
_pOldMsg$ = -52						; size = 4
_msg$ = -44						; size = 36
_pThis$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?DialogProc@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z PROC NEAR ; ATL::CDialogImplBaseT<ATL::CWindow>::DialogProc, COMDAT

; 3287 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-76]
	mov	ecx, 19					; 00000013H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 3288 : 	CDialogImplBaseT< TBase >* pThis = (CDialogImplBaseT< TBase >*)hWnd;

	mov	eax, DWORD PTR _hWnd$[ebp]
	mov	DWORD PTR _pThis$[ebp], eax

; 3289 : 	// set a ptr to this message and save the old value
; 3290 : 	_ATL_MSG msg(pThis->m_hWnd, uMsg, wParam, lParam);

	push	1
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _uMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pThis$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	lea	ecx, DWORD PTR _msg$[ebp]
	call	??0_ATL_MSG@ATL@@QAE@PAUHWND__@@IIJH@Z	; ATL::_ATL_MSG::_ATL_MSG

; 3291 : 	const _ATL_MSG* pOldMsg = pThis->m_pCurrentMsg;

	mov	eax, DWORD PTR _pThis$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _pOldMsg$[ebp], ecx

; 3292 : 	pThis->m_pCurrentMsg = &msg;

	mov	edx, DWORD PTR _pThis$[ebp]
	lea	eax, DWORD PTR _msg$[ebp]
	mov	DWORD PTR [edx+24], eax

; 3293 : 	// pass to the message map to process
; 3294 : 	LRESULT lRes;
; 3295 : 	BOOL bRet = pThis->ProcessWindowMessage(pThis->m_hWnd, uMsg, wParam, lParam, lRes, 0);

	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _lRes$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _uMsg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pThis$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _pThis$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pThis$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _bRet$[ebp], eax

; 3296 : 	// restore saved value for the current message
; 3297 : 	ATLASSERT(pThis->m_pCurrentMsg == &msg);

	mov	eax, DWORD PTR _pThis$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	lea	edx, DWORD PTR _msg$[ebp]
	cmp	ecx, edx
	je	SHORT $L205875
	push	OFFSET FLAT:$SG160708
	push	0
	push	3297					; 00000ce1H
	push	OFFSET FLAT:$SG160709
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L205875
	int	3
$L205875:

; 3298 : 	pThis->m_pCurrentMsg = pOldMsg;

	mov	ecx, DWORD PTR _pThis$[ebp]
	mov	edx, DWORD PTR _pOldMsg$[ebp]
	mov	DWORD PTR [ecx+24], edx

; 3299 : 	// set result if message was handled
; 3300 : 	if(bRet)

	cmp	DWORD PTR _bRet$[ebp], 0
	je	SHORT $L160710

; 3301 : 	{
; 3302 : 		switch (uMsg)

	mov	eax, DWORD PTR _uMsg$[ebp]
	mov	DWORD PTR tv128[ebp], eax
	cmp	DWORD PTR tv128[ebp], 57		; 00000039H
	ja	SHORT $L205876
	cmp	DWORD PTR tv128[ebp], 57		; 00000039H
	je	SHORT $L160715
	cmp	DWORD PTR tv128[ebp], 46		; 0000002eH
	jb	SHORT $L160717
	cmp	DWORD PTR tv128[ebp], 47		; 0000002fH
	jbe	SHORT $L160715
	cmp	DWORD PTR tv128[ebp], 55		; 00000037H
	je	SHORT $L160715
	jmp	SHORT $L160717
$L205876:
	cmp	DWORD PTR tv128[ebp], 272		; 00000110H
	je	SHORT $L160715
	cmp	DWORD PTR tv128[ebp], 305		; 00000131H
	jbe	SHORT $L160717
	cmp	DWORD PTR tv128[ebp], 312		; 00000138H
	jbe	SHORT $L160715
	jmp	SHORT $L160717
$L160715:

; 3303 : 		{
; 3304 : 		case WM_COMPAREITEM:
; 3305 : 		case WM_VKEYTOITEM:
; 3306 : 		case WM_CHARTOITEM:
; 3307 : 		case WM_INITDIALOG:
; 3308 : 		case WM_QUERYDRAGICON:
; 3309 : 		case WM_CTLCOLORMSGBOX:
; 3310 : 		case WM_CTLCOLOREDIT:
; 3311 : 		case WM_CTLCOLORLISTBOX:
; 3312 : 		case WM_CTLCOLORBTN:
; 3313 : 		case WM_CTLCOLORDLG:
; 3314 : 		case WM_CTLCOLORSCROLLBAR:
; 3315 : 		case WM_CTLCOLORSTATIC:
; 3316 : 			// return directly
; 3317 : 			bRet = (BOOL)lRes;

	mov	ecx, DWORD PTR _lRes$[ebp]
	mov	DWORD PTR _bRet$[ebp], ecx

; 3318 : 			break;

	jmp	SHORT $L160712
$L160717:

; 3319 : 		default:
; 3320 : 			// return in DWL_MSGRESULT
; 3321 : 			::SetWindowLongPtr(pThis->m_hWnd, DWLP_MSGRESULT, lRes);

	mov	edx, DWORD PTR _lRes$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _pThis$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?SetWindowLongPtrA@@YAJPAUHWND__@@HJ@Z	; SetWindowLongPtrA
	add	esp, 12					; 0000000cH
$L160712:

; 3322 : 			break;
; 3323 : 		}
; 3324 : 	}
; 3325 : 	else if(uMsg == WM_NCDESTROY)

	jmp	SHORT $L160718
$L160710:
	cmp	DWORD PTR _uMsg$[ebp], 130		; 00000082H
	jne	SHORT $L160718

; 3326 : 	{
; 3327 : 		// mark dialog as destryed
; 3328 : 		pThis->m_dwState |= WINSTATE_DESTROYED;

	mov	edx, DWORD PTR _pThis$[ebp]
	mov	eax, DWORD PTR [edx+28]
	or	eax, 1
	mov	ecx, DWORD PTR _pThis$[ebp]
	mov	DWORD PTR [ecx+28], eax
$L160718:

; 3329 : 	}
; 3330 : 
; 3331 : 	if((pThis->m_dwState & WINSTATE_DESTROYED) && pThis->m_pCurrentMsg == NULL)

	mov	edx, DWORD PTR _pThis$[ebp]
	mov	eax, DWORD PTR [edx+28]
	and	eax, 1
	je	SHORT $L160720
	mov	ecx, DWORD PTR _pThis$[ebp]
	cmp	DWORD PTR [ecx+24], 0
	jne	SHORT $L160720

; 3332 : 	{
; 3333 : 		// clear out window handle
; 3334 : 		HWND hWnd = pThis->m_hWnd;

	mov	edx, DWORD PTR _pThis$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _hWnd$160721[ebp], eax

; 3335 : 		pThis->m_hWnd = NULL;

	mov	ecx, DWORD PTR _pThis$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 3336 : 		pThis->m_dwState &= ~WINSTATE_DESTROYED;

	mov	edx, DWORD PTR _pThis$[ebp]
	mov	eax, DWORD PTR [edx+28]
	and	eax, -2					; fffffffeH
	mov	ecx, DWORD PTR _pThis$[ebp]
	mov	DWORD PTR [ecx+28], eax

; 3337 : 		// clean up after dialog is destroyed
; 3338 : 		pThis->OnFinalMessage(hWnd);

	mov	esi, esp
	mov	edx, DWORD PTR _hWnd$160721[ebp]
	push	edx
	mov	eax, DWORD PTR _pThis$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pThis$[ebp]
	call	DWORD PTR [edx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L160720:

; 3339 : 	}
; 3340 : 	return bRet;

	mov	eax, DWORD PTR _bRet$[ebp]

; 3341 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L205880
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 76					; 0000004cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$L205880:
	DD	2
	DD	$L205879
$L205879:
	DD	-44					; ffffffd4H
	DD	36					; 00000024H
	DD	$L205877
	DD	-60					; ffffffc4H
	DD	4
	DD	$L205878
$L205878:
	DB	108					; 0000006cH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$L205877:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
?DialogProc@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z ENDP ; ATL::CDialogImplBaseT<ATL::CWindow>::DialogProc
_TEXT	ENDS
EXTRN	__imp__SetWindowLongA@12:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?SetWindowLongPtrA@@YAJPAUHWND__@@HJ@Z
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_nIndex$ = 12						; size = 4
_dwNewLong$ = 16					; size = 4
?SetWindowLongPtrA@@YAJPAUHWND__@@HJ@Z PROC NEAR	; SetWindowLongPtrA, COMDAT

; 41   : {

	push	ebp
	mov	ebp, esp
	push	esi

; 42   : 	return( ::SetWindowLongA( hWnd, nIndex, LONG( dwNewLong ) ) );

	mov	esi, esp
	mov	eax, DWORD PTR _dwNewLong$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SetWindowLongA@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 43   : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?SetWindowLongPtrA@@YAJPAUHWND__@@HJ@Z ENDP		; SetWindowLongPtrA
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0_ATL_MSG@ATL@@QAE@PAUHWND__@@IIJH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParamIn$ = 16						; size = 4
_lParamIn$ = 20						; size = 4
_bHandledIn$ = 24					; size = 4
??0_ATL_MSG@ATL@@QAE@PAUHWND__@@IIJH@Z PROC NEAR	; ATL::_ATL_MSG::_ATL_MSG, COMDAT
; _this$ = ecx

; 202  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 36			; 00000024H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _bHandledIn$[ebp]
	mov	DWORD PTR [ecx+32], edx

; 203  : 		hwnd = hWnd;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _hWnd$[ebp]
	mov	DWORD PTR [eax], ecx

; 204  : 		message = uMsg;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uMsg$[ebp]
	mov	DWORD PTR [edx+4], eax

; 205  : 		wParam = wParamIn;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _wParamIn$[ebp]
	mov	DWORD PTR [ecx+8], edx

; 206  : 		lParam = lParamIn;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _lParamIn$[ebp]
	mov	DWORD PTR [eax+12], ecx

; 207  : 		time = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], 0

; 208  : 		pt.x = pt.y = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 209  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??0_ATL_MSG@ATL@@QAE@PAUHWND__@@IIJH@Z ENDP		; ATL::_ATL_MSG::_ATL_MSG
_TEXT	ENDS
PUBLIC	??0CAtlWinModule@ATL@@QAE@XZ			; ATL::CAtlWinModule::CAtlWinModule
EXTRN	_atexit:NEAR
;	COMDAT CRT$XCU
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
CRT$XCU	SEGMENT
_$S3	DD	FLAT:_$E1
; Function compile flags: /Odt /RTCsu
CRT$XCU	ENDS
;	COMDAT _$E1
text$yc	SEGMENT
_$E1	PROC NEAR					; COMDAT

; 2602 : __declspec(selectany) CAtlWinModule _AtlWinModule;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET FLAT:?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
	call	??0CAtlWinModule@ATL@@QAE@XZ		; ATL::CAtlWinModule::CAtlWinModule
	push	OFFSET FLAT:_$E2
	call	_atexit
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_$E1	ENDP
text$yc	ENDS
PUBLIC	??0_ATL_WIN_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
EXTRN	__imp__AtlWinModuleInit@4:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
??0CAtlWinModule@ATL@@QAE@XZ PROC NEAR			; ATL::CAtlWinModule::CAtlWinModule, COMDAT
; _this$ = ecx

; 2573 : 	CAtlWinModule()

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_ATL_WIN_MODULE70@ATL@@QAE@XZ

; 2574 : 	{
; 2575 : 		cbSize = sizeof(_ATL_WIN_MODULE);

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 44			; 0000002cH

; 2576 : 		HRESULT hr = AtlWinModuleInit(this);

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	DWORD PTR __imp__AtlWinModuleInit@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 2577 : 		if (FAILED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L88081

; 2578 : 			CAtlBaseModule::m_bInitFailed = true;

	mov	BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed
$L88081:

; 2579 : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CAtlWinModule@ATL@@QAE@XZ ENDP			; ATL::CAtlWinModule::CAtlWinModule
_TEXT	ENDS
PUBLIC	??0CComCriticalSection@ATL@@QAE@XZ		; ATL::CComCriticalSection::CComCriticalSection
PUBLIC	??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_ATL_WIN_MODULE70@ATL@@QAE@XZ PROC NEAR		; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CComCriticalSection@ATL@@QAE@XZ	; ATL::CComCriticalSection::CComCriticalSection
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_ATL_WIN_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcore.h
_TEXT	ENDS
;	COMDAT ??0CComCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CComCriticalSection@ATL@@QAE@XZ PROC NEAR		; ATL::CComCriticalSection::CComCriticalSection, COMDAT
; _this$ = ecx

; 114  : 	CComCriticalSection() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 115  : 	{
; 116  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

	push	24					; 00000018H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 117  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CComCriticalSection@ATL@@QAE@XZ ENDP			; ATL::CComCriticalSection::CComCriticalSection
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpcoll.h
_TEXT	ENDS
;	COMDAT ??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT
; _this$ = ecx

; 97   : 	{ }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
_TEXT	ENDS
PUBLIC	??1CAtlWinModule@ATL@@QAE@XZ			; ATL::CAtlWinModule::~CAtlWinModule
; Function compile flags: /Odt /RTCsu
;	COMDAT _$E2
text$yd	SEGMENT
_$E2	PROC NEAR					; COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET FLAT:?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
	call	??1CAtlWinModule@ATL@@QAE@XZ		; ATL::CAtlWinModule::~CAtlWinModule
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_$E2	ENDP
text$yd	ENDS
PUBLIC	?Term@CAtlWinModule@ATL@@QAEXXZ			; ATL::CAtlWinModule::Term
PUBLIC	??1_ATL_WIN_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
xdata$x	SEGMENT
$T205905 DD	0ffffffffH
	DD	FLAT:$L205901
$T205903 DD	019930520H
	DD	01H
	DD	FLAT:$T205905
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ??1CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CAtlWinModule@ATL@@QAE@XZ PROC NEAR			; ATL::CAtlWinModule::~CAtlWinModule, COMDAT
; _this$ = ecx

; 2582 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CAtlWinModule@ATL@@QAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2583 : 		Term();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Term@CAtlWinModule@ATL@@QAEXXZ		; ATL::CAtlWinModule::Term

; 2584 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_ATL_WIN_MODULE70@ATL@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L205901:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_ATL_WIN_MODULE70@ATL@@QAE@XZ
__ehhandler$??1CAtlWinModule@ATL@@QAE@XZ:
	mov	eax, OFFSET FLAT:$T205903
	jmp	___CxxFrameHandler
text$x	ENDS
??1CAtlWinModule@ATL@@QAE@XZ ENDP			; ATL::CAtlWinModule::~CAtlWinModule
EXTRN	__imp__AtlWinModuleTerm@8:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Term@CAtlWinModule@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Term@CAtlWinModule@ATL@@QAEXXZ PROC NEAR		; ATL::CAtlWinModule::Term, COMDAT
; _this$ = ecx

; 2587 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2588 : 		AtlWinModuleTerm(this, _AtlBaseModule.GetModuleInstance());

	mov	ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
	call	?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__AtlWinModuleTerm@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2589 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Term@CAtlWinModule@ATL@@QAEXXZ ENDP			; ATL::CAtlWinModule::Term
_TEXT	ENDS
PUBLIC	??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_ATL_WIN_MODULE70@ATL@@QAE@XZ PROC NEAR		; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_ATL_WIN_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
_TEXT	ENDS
PUBLIC	?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpcoll.h
;	COMDAT ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT
; _this$ = ecx

; 100  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 101  : 		RemoveAll();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll

; 102  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_i$160433 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ PROC NEAR ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll, COMDAT
; _this$ = ecx

; 173  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 174  : 		if(m_aT != NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L160432

; 175  : 		{
; 176  : 			for(int i = 0; i < m_nSize; i++)

	mov	DWORD PTR _i$160433[ebp], 0
	jmp	SHORT $L160434
$L160435:
	mov	ecx, DWORD PTR _i$160433[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$160433[ebp], ecx
$L160434:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _i$160433[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jge	SHORT $L160436

; 177  : 				m_aT[i].~T();

	jmp	SHORT $L160435
$L160436:

; 178  : 			free(m_aT);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_free
	add	esp, 4

; 179  : 			m_aT = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$L160432:

; 180  : 		}
; 181  : 		m_nSize = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 182  : 		m_nAllocSize = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 183  : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
_TEXT	ENDS
PUBLIC	?_AtlWinModule@ATL@@3VCAtlWinModule@1@A		; ATL::_AtlWinModule
;	COMDAT ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
_BSS	SEGMENT
?_AtlWinModule@ATL@@3VCAtlWinModule@1@A DB 02cH DUP (?)	; ATL::_AtlWinModule
_BSS	ENDS
END
