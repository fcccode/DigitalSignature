; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\ShowSelectCert.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0CE@BJCBICOJ@c?3?2activex?2xmlsign?2ShowSelectCer@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FG@EOHGAEB@?3Sun?3Sunday?3Mon?3Monday?3Tue?3Tuesd@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0IH@HPGJLCCK@?3Jan?3January?3Feb?3February?3Mar?3Ma@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EH@NBFKEDIC@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CD@HFEEKIIE@mbstr?5?$DN?$DN?50?5?$HM?$HM?5result?5?$DM?$DN?5?$CIint?$CJcou@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FB@DNILBHEN@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CD@JADEDFCN@wcstr?5?$DN?$DN?50?5?$HM?$HM?5result?5?$DM?$DN?5?$CIint?$CJcou@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@CLMJJCOM@nSize?5?$DO?$DN?5nSizeW?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@DFFCODPF@m_pData?9?$DOnRefs?5?$DN?$DN?5?91?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BK@KFNMPDFA@m_pData?9?$DOnDataLength?5?$DN?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@JINHKJCC@pData?9?$DOnRefs?5?$DM?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@HNGMIMJM@pData?9?$DOnRefs?5?$DM?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FB@EIPLHBJE@CFixedStringMgr?3?3Allocate?$CI?$CJ?5spil@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FD@PINPFILO@CFixedStringMgr?3?3Reallocate?$CI?$CJ?5sp@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@MDHCGOCC@m_pMemMgr?5?$DN?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EP@ENACCIMA@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BK@KICONMKH@pData?9?$DOpStringMgr?5?$DN?$DN?5this?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CG@HPMMCKHL@?$CI?$CIWORD?$CJ?$CI?$CIDWORD_PTR?$CJ?$CIpsz?$CJ?5?$DO?$DO?516?$CJ?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@BDLMIBLB@pFormat?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FA@JGFACAOB@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05LLAMLEHD@?$CFI64d?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05KCADNOJC@?$CF02ld?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CB@FKADHJGH@strFormat?4LoadStringA?$CInFormatID?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EJ@DPIMAKHN@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CD@DIDNGAPJ@s?5?$DN?$DN?50?5?$HM?$HM?5?$CIconst?5char?$CK?$CJ?5?$CKthis?5?$CB?$DN@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CG@PAOIECBF@s?5?$DN?$DN?50?5?$HM?$HM?5?$CIconst?5wchar_t?$CK?$CJ?5?$CKthis@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DD@NCNHACCB@s?5?$DN?$DN?50?5?$HM?$HM?5m_Data?5?$DN?$DN?50?5?$HM?$HM?5m_Data?9@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CH@LJMJHPFK@m_Data?5?$CB?$DN?50?5?$CG?$CG?5m_Data?9?$DORefCount?$CI@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FG@GKIPNLEE@?$CI?$CIthis?$CJ?9?$DOvt?$CJ?5?$CB?$DN?5VT_BSTR?5?$HM?$HM?5?$CIBSTR@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EC@EDNDDDBI@?$CI?$CIthis?$CJ?9?$DOvt?$CJ?5?$CB?$DN?5VT_BSTR?5?$HM?$HM?5pSrc?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EL@EEEMIENH@?$CI?$CIthis?$CJ?9?$DOvt?$CJ?5?$CB?$DN?5?$CIVT_I1?5?$HM?5VT_BYRE@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EH@IHHPLLAD@?$CI?$CIthis?$CJ?9?$DOvt?$CJ?5?$CB?$DN?5VT_DISPATCH?5?$HM?$HM?5p@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EF@LJOMBHMP@?$CI?$CIthis?$CJ?9?$DOvt?$CJ?5?$CB?$DN?5VT_UNKNOWN?5?$HM?$HM?5pS@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@NNIJINN@IDispatch?5error?5?$CD?$CFd?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@IPPGFENJ@Unknown?5error?50x?$CF0lX?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BP@BEGENEN@c?3?2activex?2xmlsign?2signature?4h?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@KEHCEMNB@CSignature?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08LIEICNMC@m_bModal?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BO@OBIGOAOM@AtlIsValidString?$CI?5pszFormat?5?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@GOIMFHNK@pStringMgr?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CJ@FJEKGMMD@Warning?3?5implicit?5LoadString?$CI?$CFu?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@GNIEOBOF@nNewLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EE@PNDBCBIA@CAxDialogImpl?3?3AdviseSinkMap?5cal@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EG@DKHIMJLN@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09BNFEDJPE@?$CBm_bModal?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?ProcessWindowMessage@CShowSelectCert@@UAEHPAUHWND__@@IIJAAJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnInitDialog@CShowSelectCert@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnOK@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCancel@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateHeader@CShowSelectCert@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCell@CShowSelectCert@@QAEXPAGHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnClickList@CShowSelectCert@@QAEJHPAUtagNMHDR@@AAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?setSelection@CShowSelectCert@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCShowSelectCert@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCConfig@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _acosl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _asinl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _atanl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _atan2l
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ceill
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _cosl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _coshl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _expl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _fabsl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _floorl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _fmodl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _frexpl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ldexpl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _logl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _log10l
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _modfl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _powl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sinl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sinhl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sqrtl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tanl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tanhl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _frexpf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ldexpf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _acosf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _asinf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _atanf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _atan2f
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ceilf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _cosf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _coshf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _expf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _fabsf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _floorf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _fmodf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _logf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _log10f
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _modff
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _powf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sinf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sinhf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sqrtf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tanf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tanhf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBufferVariant@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBufferVariant@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CBufferVariant@@QAE@ABUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCBufferVariant@@QBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetLength@CBufferVariant@@QAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MyVariantCopy@CBufferVariant@@QAEXPAUtagVARIANT@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@CBufferVariant@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BuildByteArrayFromVariant@CBufferVariant@@AAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BuildByteArrayFromData@CBufferVariant@@AAEXPBXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendByteArrayFromVariant@CBufferVariant@@AAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendByteArrayFromData@CBufferVariant@@AAEXPBXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1bad_exception@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gbad_exception@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemchr
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemset
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@G@std@@SAPAGPAGPBGI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?to_char_type@?$char_traits@G@std@@SAGABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?to_int_type@?$char_traits@G@std@@SAGABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?eq_int_type@?$char_traits@G@std@@SA_NABG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?eof@?$char_traits@G@std@@SAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?to_char_type@?$char_traits@D@std@@SADABH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?to_int_type@?$char_traits@D@std@@SAHABD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1domain_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gdomain_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1invalid_argument@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Ginvalid_argument@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1runtime_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@runtime_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gruntime_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1overflow_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Goverflow_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1underflow_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gunderflow_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1range_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Grange_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_DebugHeapString@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Timevec@std@@QAE@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_Timevec@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4_Timevec@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getctype@_Locinfo@std@@QBE?AU_Ctypevec@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bid@locale@std@@QAEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Incref@facet@locale@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Decref@facet@locale@std@@QAEPAV123@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1facet@locale@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0facet@locale@std@@IAE@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0locale@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1locale@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gfacet@locale@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0codecvt_base@std@@QAE@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1codecvt_base@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_always_noconv@codecvt_base@std@@MBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_max_length@codecvt_base@std@@MBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_encoding@codecvt_base@std@@MBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gcodecvt_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$codecvt@GDH@std@@QAE@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$codecvt@GDH@std@@MAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$codecvt@GDH@std@@IAEXABV_Locinfo@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_in@?$codecvt@GDH@std@@MBEHAAHPBD1AAPBDPAG3AAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_out@?$codecvt@GDH@std@@MBEHAAHPBG1AAPBGPAD3AAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_unshift@?$codecvt@GDH@std@@MBEHAAHPAD1AAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_length@?$codecvt@GDH@std@@MBEHABHPBD1I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_always_noconv@?$codecvt@GDH@std@@MBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_max_length@?$codecvt@GDH@std@@MBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_encoding@?$codecvt@GDH@std@@MBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$codecvt@GDH@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ctype_base@std@@QAE@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1ctype_base@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gctype_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?is@?$ctype@D@std@@QBE_NFD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$ctype@D@std@@QAE@PBF_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$ctype@D@std@@MAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$ctype@D@std@@IAEXABV_Locinfo@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$ctype@D@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_tolower@?$ctype@D@std@@MBEDD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_tolower@?$ctype@D@std@@MBEPBDPADPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_toupper@?$ctype@D@std@@MBEDD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_toupper@?$ctype@D@std@@MBEPBDPADPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_widen@?$ctype@D@std@@MBEDD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_widen@?$ctype@D@std@@MBEPBDPBD0PAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_narrow@?$ctype@D@std@@MBEDDD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_narrow@?$ctype@D@std@@MBEPBDPBD0DPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?table@?$ctype@D@std@@IBEPBFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?is@?$ctype@G@std@@QBE_NFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$ctype@G@std@@QAE@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getcat@?$ctype@G@std@@SAIPAPBVfacet@locale@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$ctype@G@std@@MAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$ctype@G@std@@IAEXABV_Locinfo@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_is@?$ctype@G@std@@MBE_NFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_is@?$ctype@G@std@@MBEPBGPBG0PAF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_scan_is@?$ctype@G@std@@MBEPBGFPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_scan_not@?$ctype@G@std@@MBEPBGFPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_tolower@?$ctype@G@std@@MBEGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_tolower@?$ctype@G@std@@MBEPBGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_toupper@?$ctype@G@std@@MBEGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_toupper@?$ctype@G@std@@MBEPBGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dowiden@?$ctype@G@std@@IBEGD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_widen@?$ctype@G@std@@MBEGD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_widen@?$ctype@G@std@@MBEPBDPBD0PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Donarrow@?$ctype@G@std@@IBEDGD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_narrow@?$ctype@G@std@@MBEDGD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_narrow@?$ctype@G@std@@MBEPBGPBG0DPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@G@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1failure@ios_base@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@ios_base@std@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?rdstate@ios_base@std@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?setstate@ios_base@std@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?good@ios_base@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?eof@ios_base@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fail@ios_base@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?exceptions@ios_base@std@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?flags@ios_base@std@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?setf@ios_base@std@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?setf@ios_base@std@@QAEHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?unsetf@ios_base@std@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?width@ios_base@std@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?width@ios_base@std@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?getloc@ios_base@std@@QBE?AVlocale@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gfailure@ios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetEnvironmentVariableWFake@ATL@@YGKPBGPAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetEnvironmentVariableWThunk@ATL@@YGKPBGPAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CompareStringWFake@ATL@@YGHKKPBGH0H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CompareStringWThunk@ATL@@YGHKKPBGH0H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetStringTypeExWFake@ATL@@YGHKKPBGHPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetStringTypeExWThunk@ATL@@YGHKKPBGHPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lstrcmpiWFake@ATL@@YGHPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lstrcmpiWThunk@ATL@@YGHPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharLowerWFake@ATL@@YGPAGPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharLowerWThunk@ATL@@YGPAGPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharUpperWFake@ATL@@YGPAGPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharUpperWThunk@ATL@@YGPAGPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_GetEnvironmentVariableW@?$ChTraitsCRT@G@ATL@@CGKPBGPAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringFindString@?$ChTraitsCRT@G@ATL@@SAPBGPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFixedStringMgr@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@CFixedStringMgr@ATL@@UAEPAUCStringData@2@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@CFixedStringMgr@ATL@@UAEXPAUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reallocate@CFixedStringMgr@ATL@@UAEPAUCStringData@2@PAU32@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNilString@CFixedStringMgr@ATL@@UAEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clone@CFixedStringMgr@ATL@@UAEPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFixedStringMgr@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFixedStringLog@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnAllocateSpill@CFixedStringLog@ATL@@UAEXHHPBUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnReallocateSpill@CFixedStringLog@ATL@@UAEXHHPBUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFixedStringLog@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IFixedStringLog@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAtlStringMgr@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@PAU32@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAtlStringMgr@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CompareStringW@?$ChTraitsOS@G@ATL@@KGHKKPBGH0H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetStringTypeExW@?$ChTraitsOS@G@ATL@@KGHKKPBGHPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lstrcmpiW@?$ChTraitsOS@G@ATL@@KGHPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharLowerW@?$ChTraitsOS@G@ATL@@KGPAGPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharUpperW@?$ChTraitsOS@G@ATL@@KGPAGPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?strchr@?$ChTraitsOS@G@ATL@@SAPBGPBGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?strrchr@?$ChTraitsOS@G@ATL@@SAPBGPBGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_strrev@?$ChTraitsOS@G@ATL@@SAPAGPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?strstr@?$ChTraitsOS@G@ATL@@SAPBGPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?strspn@?$ChTraitsOS@G@ATL@@SAHPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?strcspn@?$ChTraitsOS@G@ATL@@SAHPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?strpbrk@?$ChTraitsOS@G@ATL@@SAPBGPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringFindString@?$ChTraitsOS@G@ATL@@SAPBGPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Format@CTimeSpan@ATL@@QBE?AV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@2@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Format@CTime@ATL@@QBE?AV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@2@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FormatGmt@CTime@ATL@@QBE?AV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@2@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckError@_com_util@@YAXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_bstr_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4_bstr_t@@QAEAAV0@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y_bstr_t@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7_bstr_t@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@_bstr_t@@QAEXPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Compare@_bstr_t@@ABEHABV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@ABV1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RefCount@Data_t@_bstr_t@@QBEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWString@Data_t@_bstr_t@@QAEAAPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@Data_t@_bstr_t@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@Data_t@_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@Data_t@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@Data_t@_bstr_t@@QBEHABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2Data_t@_bstr_t@@SAPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Data_t@_bstr_t@@AAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@Data_t@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4_variant_t@@QAEAAV0@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8_variant_t@@QBE_NPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@_variant_t@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@_variant_t@@QAEXGPBV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_com_error@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_com_error@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WCode@_com_error@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HRESULTToWCode@_com_error@@SAGJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GData_t@_bstr_t@@AAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G_com_error@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_GetRawUnknown@CSignature@@QAEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_GetEntries@CSignature@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ANSIToUnicode@CSignature@@QAEPAGPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@SigException@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GSigException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1SigException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Preallocate@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComObject@VCAxFrameWindow@ATL@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComObject@VCAxUIWindow@ATL@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$_CopyInterface@UIUnknown@@@ATL@@SAJPAPAUIUnknown@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?init@?$_CopyInterface@UIUnknown@@@ATL@@SAXPAPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$_CopyInterface@UIUnknown@@@ATL@@SAXPAPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDialogProc@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEP6GHPAUHWND__@@IIJ@ZXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoModal@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHPAUHWND__@@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndDialog@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ProcessWindowMessage@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEHPAUHWND__@@IIJAAJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateActiveXControls@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEJI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_ostream@GU?$char_traits@G@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?put@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAEAAV12@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?flush@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAEAAV12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_ios@GU?$char_traits@G@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?setstate@?$basic_ios@GU?$char_traits@G@std@@@std@@QAEXH_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?rdbuf@?$basic_ios@GU?$char_traits@G@std@@@std@@QBEPAV?$basic_streambuf@GU?$char_traits@G@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@?$basic_ios@GU?$char_traits@G@std@@@std@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_streambuf@GU?$char_traits@G@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sbumpc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sgetc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?snextc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sputc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QAEGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?overflow@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pbackfail@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?showmanyc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?underflow@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?uflow@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?xsgetn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEHPAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?xsputn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?seekoff@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAE?AV?$fpos@H@2@JHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?seekpos@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?setbuf@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEPAV12@PAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sync@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?imbue@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEXABVlocale@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_istream@GU?$char_traits@G@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_Sentry_base@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?overflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pbackfail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?underflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?seekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@JHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?seekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CW2AEX@$0IA@@ATL@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CW2AEX@$0IA@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendFormat@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAAXPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_DebugHeapAllocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_DebugHeapAllocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_ostream@GU?$char_traits@G@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_ios@GU?$char_traits@G@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_streambuf@GU?$char_traits@G@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_ostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_ios@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_istream@GU?$char_traits@G@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_istream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_D?$basic_ostream@GU?$char_traits@G@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_D?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_D?$basic_istream@GU?$char_traits@G@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_D?$basic_istream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MapDialogRect@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAEHPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAE@PAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateControlLic@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnInitDialog@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDestroy@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$_DebugHeapAllocator@D@std@@@std@@IAE@V?$_DebugHeapAllocator@D@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Osfx@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$basic_ios@GU?$char_traits@G@std@@@std@@QAEXH_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?tie@?$basic_ios@GU?$char_traits@G@std@@@std@@QBEPAV?$basic_ostream@GU?$char_traits@G@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Sentry_base@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_Sentry_base@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pubsync@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Unlock@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?gptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?egptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?gbump@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?epptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Gninc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IAEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pbump@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Pninc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IAEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ipfx@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE_N_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Sentry_base@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@?$CW2AEX@$0IA@@ATL@@AAEXPBGI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendFormatV@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEXPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckImplicitLoad@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@AAE_NPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindStringResourceInstance@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendChar@?$CSimpleStringT@D$0A@@ATL@@QAEXD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ExecuteDlgInit@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CAxWindowT@VCWindow@ATL@@@ATL@@QAE@PAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateControlLicEx@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@2ABU_GUID@@PAU4@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AdviseSinkMap@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEJ_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$_DebugHeapAllocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lock@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFormattedLength@?$ChTraitsCRT@D@ATL@@SAHPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Format@?$ChTraitsCRT@D@ATL@@SAHPADPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$_DebugHeapAllocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StartDialogProc@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateInstance@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SGJPAPAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DialogProc@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Pow_int@N@@YANNH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Pow_int@H@@YAHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Pow_int@M@@YAMMH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Pow_int@O@@YAOOH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_DebugHeapDelete@Vfacet@locale@std@@@std@@YAXPAVfacet@locale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@G@std@@@std@@YAABV?$ctype@G@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$AtlAlignUp@H@ATL@@YGHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_DebugHeapDelete@Vlocale@std@@@std@@YAXPAVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$QueryHost@UIAxWinHostWindowLic@@@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJPAPAUIAxWinHostWindowLic@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$QueryInterface@UIUnknown@@@?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEJPAPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_DebugHeapDelete@X@std@@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Glocale@std@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryHost@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIDD@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DestroyWindow@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnFinalMessage@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAEXPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _AtlAxGetHost@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BD@CFOEICJD@WM_ATLGETHOST?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?WM_ATLGETHOST@ATL@@3IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@PGEBGEDK@ppUnk?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07MEKCDCMA@pp?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3935bda8_4ed9_495c_8650_e01fc1e38a4b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_cast@@@8??0bad_cast@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_cast@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?DialogProc@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_ATL_MSG@ATL@@QAE@PAUHWND__@@IIJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0N@JELNCKOF@m_dwRef?5?$DN?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_AtlFinalConstruct@CComObjectRootBase@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FinalConstruct@CComObjectRootBase@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetVoid@CComObjectRootBase@ATL@@QAEXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IEnumUnknown@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComObjectRootBase@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?QueryInterface@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_InternalQueryInterface@?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_GetEntries@?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_09BEHAHIFA@_CComEnum?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000100_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_entries@?1??_GetEntries@?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AddRef@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Next@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJKPAPAUIUnknown@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Skip@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reset@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clone@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJPAPAUIEnumUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@QAEJPAPAUIUnknown@@0PAU3@W4CComEnumFlags@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIUnknown@@@ATL@@QAEPAUIUnknown@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetWindowLongPtrA@@YAJPAUHWND__@@HJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWNDPROC@CWndProcThunk@ATL@@QAEP6GJPAUHWND__@@IIJ@ZXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCodeAddress@CDynamicStdCallThunk@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_06CIAHICCP@pThunk?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetCodeAddress@_stdcallthunk@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@CWndProcThunk@ATL@@QAEXP6GJPAUHWND__@@IIJ@ZPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@CDynamicStdCallThunk@ATL@@QAEXKPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@_stdcallthunk@ATL@@QAEXKPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ExtractCreateWndData@CAtlWinModule@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FA@KBNNCCJL@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09HIEJFN@m_bLocked?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BF@CCFFBNDL@?$CI?$CIHRESULT?$CJ?$CIhr?$CJ?5?$DO?$DN?50?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Detach@?$CComPtrBase@UIUnknown@@@ATL@@QAEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??C?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIAxWinHostWindowLic@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _AtlAxCreateControlLicEx@32
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateInstance@?$CComCreator@V?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08NEPKAPOI@ppv?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?QueryInterface@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0P@BMHEGBAP@ppvObject?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?InlineIsEqualUnknown@ATL@@YGHABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_InternalQueryInterface@CAxHostWindow@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_GetEntries@CAxHostWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0O@IEKIGPOE@CAxHostWindow?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000118_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_922eada0_3424_11cf_b670_00aa004cd6d8
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_9c2cad80_3424_11cf_b670_00aa004cd6d8
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000119_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000114_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b196b289_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000011b_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_6d5140c1_7436_11ce_8034_00aa006009fa
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b6ea2051_048a_11d1_82b9_00c04fb9942e
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_bd3f23c0_d43e_11cf_893b_00aa00bdce1a
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000010f_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_entries@?1??_GetEntries@CAxHostWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AddRef@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FinalRelease@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FinalRelease@CAxHostWindow@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseAll@CAxHostWindow@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAUIViewObjectEx@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIViewObjectEx@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIOleObject@@@ATL@@QBEPAUIOleObject@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIObjectWithSite@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIObjectWithSite@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIObjectWithSite@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIObjectWithSite@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIObjectWithSite@@@ATL@@QAEPAPAUIObjectWithSite@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIObjectWithSite@@@ATL@@QBEPAUIObjectWithSite@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIObjectWithSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIObjectWithSite@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIViewObjectEx@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIOleObject@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIUnknown@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CAxHostWindow@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CWindowImpl@VCAxHostWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CWindowImpl@VCAxHostWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IAxWinHostWindowLic@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IAxWinHostWindow@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IOleClientSite@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IOleInPlaceSiteWindowless@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IOleInPlaceSiteEx@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IOleInPlaceSite@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IOleWindow@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IOleControlSite@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IOleContainer@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IParseDisplayName@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IObjectWithSite@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IServiceProvider@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IAdviseSink@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IDocHostUIHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IAxWinAmbientDispatchEx@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IAxWinAmbientDispatch@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IDispatch@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIOleObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIOleObject@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIOleObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIOleObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIViewObjectEx@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIViewObjectEx@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIViewObjectEx@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIViewObjectEx@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIOleInPlaceObjectWindowless@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIOleInPlaceObjectWindowless@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIDocHostUIHandlerDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIDocHostUIHandlerDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIFontDisp@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIFontDisp@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIFontDisp@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIFontDisp@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIServiceProvider@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIServiceProvider@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIServiceProvider@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIServiceProvider@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAxHostWindow@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6B?$CWindowImpl@VCAxHostWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@1@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ProcessWindowMessage@CAxHostWindow@ATL@@UAEHPAUHWND__@@IIJAAJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnEraseBackground@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8?$CComPtrBase@UIViewObjectEx@@@ATL@@QBE_NPAUIViewObjectEx@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnPaint@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClientRect@CWindow@ATL@@QBEHPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSize@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlPixelToHiMetric@ATL@@YGXPBUtagSIZE@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0P@MGJHNDPC@hDCScreen?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??B?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBEPAUIOleInPlaceObjectWindowless@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceObjectWindowless@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnMouseActivate@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIOleClientSite@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIOleClientSite@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIOleClientSite@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIOleClientSite@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIOleClientSite@@@ATL@@QAEPAPAUIOleClientSite@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSetFocus@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsChild@CWindow@ATL@@QBEHPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnKillFocus@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnWindowlessMouseMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnWindowMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDestroy@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DefWindowProcA@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEJIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReflectNotifications@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DefWindowProcA@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BG@FBJLDDEB@?3?3IsWindow?$CIhWndChild?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?OnGetUnknown@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WM_ATLGETCONTROL@ATL@@3IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?OnGetControl@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnForwardMsg@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0M@NJNLJPMN@lParam?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$CComQIPtr@UIOleInPlaceActiveObject@@$1?_GUID_00000117_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_00000117_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1?$CComQIPtr@UIOleInPlaceActiveObject@@$1?_GUID_00000117_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QBEPAUIOleInPlaceActiveObject@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceActiveObject@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEP6GJPAUHWND__@@IIJ@ZXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindowLongPtrA@@YAJPAUHWND__@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnFinalMessage@CAxHostWindow@ATL@@UAEXPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetControllingUnknown@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIAxWinHostWindowLic@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OuterQueryInterface@CComObjectRootBase@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OuterAddRef@CComObjectRootBase@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OuterRelease@CComObjectRootBase@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateControl@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateControlEx@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@PAPAUIUnknown@@ABU_GUID@@PAU5@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AttachControl@CAxHostWindow@ATL@@UAGJPAUIUnknown@@PAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SubclassWindow@CAxHostWindow@ATL@@QAEXPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SubclassWindow@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEHPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ActivateAx@CAxHostWindow@ATL@@QAEJPAUIUnknown@@_NPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIOleObject@@@ATL@@QAEPAPAUIOleObject@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_00000112_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$CComQIPtr@UIPersistStreamInit@@$1?_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIPersistStreamInit@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIPersistStreamInit@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1?$CComQIPtr@UIPersistStreamInit@@$1?_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713@@3U__s_GUID@@B@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBEPAUIPersistStreamInit@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStreamInit@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComQIPtr@UIPersistStream@@$1?_GUID_00000109_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIPersistStream@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_00000109_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1?$CComQIPtr@UIPersistStream@@$1?_GUID_00000109_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIPersistStream@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStream@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000127_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??I?$CComPtrBase@UIViewObjectEx@@@ATL@@QAEPAPAUIViewObjectEx@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_0000010d_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$CComQIPtr@UIAdviseSink@@$1?_GUID_0000010f_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIAdviseSink@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIAdviseSink@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIAdviseSink@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIAdviseSink@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComQIPtr@UIAdviseSink@@$1?_GUID_0000010f_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIAdviseSink@@@ATL@@QBEPAUIAdviseSink@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_1M@IJFAIKMG@?$AAA?$AAX?$AAW?$AAI?$AAN?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AtlHiMetricToPixel@ATL@@YGXPBUtagSIZE@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComQIPtr@UIOleClientSite@@$1?_GUID_00000118_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComQIPtr@UIOleClientSite@@$1?_GUID_00000118_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RedrawWindow@CWindow@ATL@@QAEHPBUtagRECT@@PAUHRGN__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseWindow@CAxHostWindow@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnsubclassWindow@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DestroyWindow@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryControl@CAxHostWindow@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetExternalDispatch@CAxHostWindow@ATL@@UAGJPAUIDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIDispatch@@@ATL@@QAEPAUIDispatch@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetExternalUIHandler@CAxHostWindow@ATL@@UAGJPAUIDocHostUIHandlerDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIDocHostUIHandlerDispatch@@@ATL@@QAEPAUIDocHostUIHandlerDispatch@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateControlLic@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateControlLicEx@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@PAPAUIUnknown@@ABU_GUID@@PAU5@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsParentDialog@CWindow@ATL@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetParent@CWindow@ATL@@QBE?AV12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_06FGFHJIJL@?$CD32770?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_25336920_03f9_11cf_8fd0_00aa00686f13
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?FindOneOf@CAtlModule@ATL@@SAPBDPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_8856f961_340a_11d0_a96b_00c04fd705a2
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$CComPtr@UIClassFactory2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIClassFactory2@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIClassFactory2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIClassFactory2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIClassFactory2@@@ATL@@QAEPAPAUIClassFactory2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_b196b28f_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??C?$CComPtrBase@UIClassFactory2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIClassFactory2@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetStyle@CWindow@ATL@@QBEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetWindowLongA@CWindow@ATL@@QAEJHJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocslen@@YAHPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIPersistStreamInit@@@ATL@@QAEPAPAUIPersistStreamInit@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIWebBrowser2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIWebBrowser2@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIWebBrowser2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIWebBrowser2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIWebBrowser2@@@ATL@@QAEPAPAUIWebBrowser2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_d30c1661_cdaf_11d0_8a3e_00c04fc9e26e
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??B?$CComPtrBase@UIWebBrowser2@@@ATL@@QBEPAUIWebBrowser2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComVariant@ATL@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIWebBrowser2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIWebBrowser2@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8?$CComPtrBase@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIOleClientSite@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W3AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W3AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SaveObject@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BL@CNPLMFBE@IOleClientSite?3?3SaveObject?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BK@HFBNDALM@ATL?3?5?$CFs?5not?5implemented?4?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetMoniker@CAxHostWindow@ATL@@UAGJKKPAPAUIMoniker@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BL@HDINKMHC@IOleClientSite?3?3GetMoniker?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetContainer@CAxHostWindow@ATL@@UAGJPAPAUIOleContainer@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BO@KEMGAJPK@IOleClientSite?3?3GetContainer?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@IKOGDFNC@ppContainer?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ShowObject@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BN@FMNOCGEC@IOleClientSite?3?3ShowObject?$AN?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetDC@CWindow@ATL@@QAEPAUHDC__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseDC@CWindow@ATL@@QAEHPAUHDC__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnShowWindow@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BN@BIBMKNOD@IOleClientSite?3?3OnShowWindow?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?RequestNewObjectLayout@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CH@INFDHCMD@IOleClientSite?3?3RequestNewObject@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIOleInPlaceSiteWindowless@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W7AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W7AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W7AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindow@CAxHostWindow@ATL@@UAGJPAPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ContextSensitiveHelp@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CG@NBALHJKL@IOleInPlaceSite?3?3ContextSensitiv@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?CanInPlaceActivate@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnInPlaceActivate@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BG@DFBPOHKH@m_bInPlaceActive?5?$DN?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??8?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBE_NPAUIOleInPlaceObjectWindowless@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CB@FKHKLPMP@m_spInPlaceObjectWindowless?5?$DN?$DN?50@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??I?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QAEPAPAUIOleInPlaceObjectWindowless@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_00000113_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?OnUIActivate@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BP@BDGDJPEF@IOleInPlaceSite?3?3OnUIActivate?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetWindowContext@CAxHostWindow@ATL@@UAGJPAPAUIOleInPlaceFrame@@PAPAUIOleInPlaceUIWindow@@PAUtagRECT@@2PAUtagOIFI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateInstance@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@SGJPAPAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEPAPAUIOleInPlaceFrame@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_00000116_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??B?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBEPAUIOleInPlaceFrame@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BB@OJFGBHML@m_spInPlaceFrame?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??7?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateInstance@?$CComObject@VCAxUIWindow@ATL@@@ATL@@SGJPAPAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEPAPAUIOleInPlaceUIWindow@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_00000115_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??B?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBEPAUIOleInPlaceUIWindow@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BE@OHNINIJH@m_spInPlaceUIWindow?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?CopyTo@?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEJPAPAUIOleInPlaceFrame@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08IMNICHFN@ppT?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?CopyTo@?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEJPAPAUIOleInPlaceUIWindow@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Scroll@CAxHostWindow@ATL@@UAGJUtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BI@LMFIJFLF@IOleInPlaceSite?3?3Scroll?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?OnUIDeactivate@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CB@DPJACDKI@IOleInPlaceSite?3?3OnUIDeactivate?6@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?OnInPlaceDeactivate@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DiscardUndoState@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CC@DHNOFCHL@IOleInPlaceSite?3?3DiscardUndoStat@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?DeactivateAndUndo@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CD@HDPLACCC@IOleInPlaceSite?3?3DeactivateAndUn@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?OnPosRectChange@CAxHostWindow@ATL@@UAGJPBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CB@EMPHOJEH@IOleInPlaceSite?3?3OnPosRectChange@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?OnInPlaceActivateEx@CAxHostWindow@ATL@@UAGJPAHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_1c2056cc_5ef4_101b_8bc8_00aa003e3b29
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?OnInPlaceDeactivateEx@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RequestUIActivate@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CanWindowlessActivate@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCapture@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCapture@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCapture@CWindow@ATL@@QAEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFocus@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFocus@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDC@CAxHostWindow@ATL@@UAGJPBUtagRECT@@KPAPAUHDC__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseDC@CAxHostWindow@ATL@@UAGJPAUHDC__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InvalidateRect@CAxHostWindow@ATL@@UAGJPBUtagRECT@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InvalidateRect@CWindow@ATL@@QAEHPBUtagRECT@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InvalidateRgn@CAxHostWindow@ATL@@UAGJPAUHRGN__@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InvalidateRgn@CWindow@ATL@@QAEXPAUHRGN__@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ScrollRect@CAxHostWindow@ATL@@UAGJHHPBUtagRECT@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AdjustRect@CAxHostWindow@ATL@@UAGJPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDefWindowMessage@CAxHostWindow@ATL@@UAGJIIJPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIOleControlSite@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WM@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WM@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnControlInfoChanged@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LockInPlaceActive@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetExtendedControl@CAxHostWindow@ATL@@UAGJPAPAUIDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$QueryInterface@UIDispatch@@@?$CComPtrBase@UIOleObject@@@ATL@@QBEJPAPAUIDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TransformCoords@CAxHostWindow@ATL@@UAGJPAU_POINTL@@PAUtagPOINTF@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BP@OACOCMEL@CAxHostWindow?3?3TransformCoords?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?TranslateAcceleratorA@CAxHostWindow@ATL@@UAGJPAUtagMSG@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnFocus@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ShowPropertyFrame@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CB@LHNPGPLG@CAxHostWindow?3?3ShowPropertyFrame@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIOleContainer@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBA@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBA@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ParseDisplayName@CAxHostWindow@ATL@@UAGJPAUIBindCtx@@PAGPAKPAPAUIMoniker@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CA@JLJFMEKB@CAxHostWindow?3?3ParseDisplayName?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?EnumObjects@CAxHostWindow@ATL@@UAGJKPAPAUIEnumUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LockContainer@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6B?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@1@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBE@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBE@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBE@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSite@CAxHostWindow@ATL@@UAGJPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSite@?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@UAGJPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BO@GGAAJPMM@IObjectWithSiteImpl?3?3SetSite?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??I?$CComPtrBase@UIServiceProvider@@@ATL@@QAEPAPAUIServiceProvider@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BE@MNNNBAEJ@No?5ServiceProvider?$CB?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BN@CCGAKCJM@?$CBhr?5?$CG?$CG?5?$CCNo?5ServiceProvider?$CB?$CC?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIServiceProvider@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSite@?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BO@JHCMIMLB@IObjectWithSiteImpl?3?3GetSite?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07HFHBNNAN@ppvSite?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_E?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WDI@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIServiceProvider@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBM@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBM@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryService@CAxHostWindow@ATL@@UAGJABU_GUID@@0PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0M@HHBDEBO@ppvObj?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??B?$CComPtrBase@UIServiceProvider@@@ATL@@QBEPAUIServiceProvider@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIServiceProvider@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIServiceProvider@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIAdviseSink@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCA@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCA@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDataChange@CAxHostWindow@ATL@@UAGXPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnViewChange@CAxHostWindow@ATL@@UAGXKJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnRename@CAxHostWindow@ATL@@UAGXPAUIMoniker@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSave@CAxHostWindow@ATL@@UAGXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnClose@CAxHostWindow@ATL@@UAGXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIDocHostUIHandler@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCE@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCE@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCE@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ShowContextMenu@CAxHostWindow@ATL@@UAGJKPAUtagPOINT@@PAUIUnknown@@PAUIDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAUIDocHostUIHandlerDispatch@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDocHostUIHandlerDispatch@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetHostInfo@CAxHostWindow@ATL@@UAGJPAU_DOCHOSTUIINFO@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ShowUI@CAxHostWindow@ATL@@UAGJKPAUIOleInPlaceActiveObject@@PAUIOleCommandTarget@@PAUIOleInPlaceFrame@@PAUIOleInPlaceUIWindow@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HideUI@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateUI@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnableModeless@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDocWindowActivate@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnFrameWindowActivate@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ResizeBorder@CAxHostWindow@ATL@@UAGJPBUtagRECT@@PAUIOleInPlaceUIWindow@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TranslateAcceleratorA@CAxHostWindow@ATL@@UAGJPAUtagMSG@@PBU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetOptionKeyPath@CAxHostWindow@ATL@@UAGJPAPAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ByteLength@CComBSTR@ATL@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocscpy@@YAPAGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDropTarget@CAxHostWindow@ATL@@UAGJPAUIDropTarget@@PAPAU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BC@PLOCGENL@ppDropTarget?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000122_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetExternal@CAxHostWindow@ATL@@UAGJPAPAUIDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@NNOLHPBE@ppDispatch?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?CopyTo@?$CComPtrBase@UIDispatch@@@ATL@@QAEJPAPAUIDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TranslateUrl@CAxHostWindow@ATL@@UAGJKPAGPAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@INEFCEPO@ppchURLOut?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??ICComBSTR@ATL@@QAEPAPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@CComBSTR@ATL@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FilterDataObject@CAxHostWindow@ATL@@UAGJPAUIDataObject@@PAPAU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0N@KFNKBCLH@ppDORet?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000010e_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6B?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@1@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCI@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCI@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCI@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTypeInfoCount@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTypeInfo@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJIKPAPAUITypeInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_tih@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?m_libid@CAtlModule@ATL@@2U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?GetIDsOfNames@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJABU_GUID@@PAPAGIKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Invoke@CAxHostWindow@ATL@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Invoke@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIDispatch@@@ATL@@QBEPAUIDispatch@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDispatch@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FireAmbientPropertyChange@CAxHostWindow@ATL@@QAEJJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComQIPtr@UIOleControl@@$1?_GUID_b196b288_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIOleControl@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIOleControl@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIOleControl@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIOleControl@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_b196b288_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1?$CComQIPtr@UIOleControl@@$1?_GUID_b196b288_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIOleControl@@@ATL@@QBEPAUIOleControl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIOleControl@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleControl@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?put_AllowWindowlessActivation@CAxHostWindow@ATL@@UAGJF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_AllowWindowlessActivation@CAxHostWindow@ATL@@UAGJPAF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BH@JHFFPENB@pbAllowWindowless?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?put_BackColor@CAxHostWindow@ATL@@UAGJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_BackColor@CAxHostWindow@ATL@@UAGJPAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BE@DDJGHAOM@pclrBackground?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?put_ForeColor@CAxHostWindow@ATL@@UAGJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_ForeColor@CAxHostWindow@ATL@@UAGJPAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BE@LIPPFLE@pclrForeground?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?put_LocaleID@CAxHostWindow@ATL@@UAGJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_LocaleID@CAxHostWindow@ATL@@UAGJPAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BD@GDKLOMEM@plcidLocaleID?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?put_UserMode@CAxHostWindow@ATL@@UAGJF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_UserMode@CAxHostWindow@ATL@@UAGJPAF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@OPEFOKNK@pbUserMode?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?put_DisplayAsDefault@CAxHostWindow@ATL@@UAGJF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_DisplayAsDefault@CAxHostWindow@ATL@@UAGJPAF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BI@NOFOIMNO@pbDisplayAsDefault?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?put_Font@CAxHostWindow@ATL@@UAGJPAUIFontDisp@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIFontDisp@@@ATL@@QAEPAUIFontDisp@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_Font@CAxHostWindow@ATL@@UAGJPAPAUIFontDisp@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0L@LJCFDACO@pFont?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??8?$CComPtrBase@UIFontDisp@@@ATL@@QBE_NPAUIFontDisp@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIFontDisp@@@ATL@@QAEPAPAUIFontDisp@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_bef6e003_a874_101a_8bba_00aa00300cab
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?CopyTo@?$CComPtrBase@UIFontDisp@@@ATL@@QAEJPAPAUIFontDisp@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?put_MessageReflect@CAxHostWindow@ATL@@UAGJF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_MessageReflect@CAxHostWindow@ATL@@UAGJPAF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BG@FLHHODIE@pbMessageReflect?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?get_ShowGrabHandles@CAxHostWindow@ATL@@UAGJPAF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_ShowHatching@CAxHostWindow@ATL@@UAGJPAF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BE@JEDDFNM@pbShowHatching?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?put_DocHostFlags@CAxHostWindow@ATL@@UAGJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_DocHostFlags@CAxHostWindow@ATL@@UAGJPAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BF@IJHKDPOI@pdwDocHostFlags?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?put_DocHostDoubleClickFlags@CAxHostWindow@ATL@@UAGJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_DocHostDoubleClickFlags@CAxHostWindow@ATL@@UAGJPAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CA@LFBHCFDK@pdwDocHostDoubleClickFlags?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?put_AllowContextMenu@CAxHostWindow@ATL@@UAGJF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_AllowContextMenu@CAxHostWindow@ATL@@UAGJPAF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BI@OGJLKJIH@pbAllowContextMenu?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?put_AllowShowUI@CAxHostWindow@ATL@@UAGJF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_AllowShowUI@CAxHostWindow@ATL@@UAGJPAF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BD@CGGOPJAM@pbAllowShowUI?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?put_OptionKeyPath@CAxHostWindow@ATL@@UAGJPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComBSTR@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_OptionKeyPath@CAxHostWindow@ATL@@UAGJPAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BI@IKNLNBPD@pbstrOptionKeyPath?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?SetAmbientDispatch@CAxHostWindow@ATL@@UAGJPAUIDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FinalConstruct@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_b6ea2050_048a_11d1_82b9_00c04fb9942e
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAEPAPAUIAxWinHostWindowLic@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _AtlAxWinInit@0
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@AAVCComCriticalSection@1@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0L@MPGHMANA@?$CBm_bLocked?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Lock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DJ@HGBKDMEN@ERROR?5?3?5Unable?5to?5lock?5critical?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@POPOELFC@WM_ATLGETHOST?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@ICJMLDDL@WM_ATLGETCONTROL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _AtlAxCreateControlLic@20
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndClassName@?$CAxWindowT@VCWindow@ATL@@@ATL@@SAPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0L@EFNCNKLF@AtlAxWin71?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CWindow@ATL@@QAE@PAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?A2T@@YAPADPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDlgItemMessageA@CWindow@ATL@@QAEJHIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0N@ILOMLJGA@nLength?5?$DO?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CD@EEFFJEGJ@nLength?5?$DM?$DN?5GetData?$CI?$CJ?9?$DOnAllocLeng@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Stz@?$fpos@H@std@@0HA
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT ?AtlFindStringResourceInstance@ATL@@YAPAUHINSTANCE__@@IG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@IG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrowLastWin32@ATL@@YGXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndClassName@?$CAxWindow2T@VCWindow@ATL@@@ATL@@SAPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0O@HHPDHHJB@AtlAxWinLic71?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Create@CWindow@ATL@@QAEPAUHWND__@@PBDPAU3@V_U_RECT@2@0KKV_U_MENUorID@2@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?rcDefault@CWindow@ATL@@2UtagRECT@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0L@OIIMFBNE@nRefs?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FD@MKDEOELP@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CWndProcThunk@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CDynamicStdCallThunk@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DE@JJEOCICO@ERROR?5?9?5Object?5deleted?5before?5wi@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$CWindowImplRoot@VCWindow@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CMessageMap@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CWndProcThunk@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CDynamicStdCallThunk@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Invoke@CComTypeInfoHolder@ATL@@QAEJPAUIDispatch@@JABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnsureTI@CComTypeInfoHolder@ATL@@QAEJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTI@CComTypeInfoHolder@ATL@@QAEJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BO@GHLKPFE@m_plibid?5?$CB?$DN?50?5?$CG?$CG?5m_pguid?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DG@CJCBGKEH@Did?5you?5forget?5to?5pass?5the?5LIBID@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0GE@MNEAPMLF@?$CBInlineIsEqualGUID?$CI?$CKm_plibid?0?5GU@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EG@JLAFHAGH@ERROR?5?3?5Unable?5to?5lock?5critical?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UITypeLib@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _InlineIsEqualGUID
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0GE@IPBGNBKO@Warning?5?3?5CComTypeInfoHolder?3?3Ge@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DN@OOAEELGE@?7See?5IDispatchImpl?5overview?5help@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??C?$CComPtrBase@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DG@JANIJOBP@ERROR?5?3?5Unable?5to?5load?5Typelibra@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DE@PFCDKHBK@?7Verify?5TypelibID?5and?5major?5vers@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FB@GGFNIACC@?7IDispatchImpl?0?5CStockPropImpl?0?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UITypeInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAPAUITypeInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UITypeInfo@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@PAUITypeInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UITypeInfo2@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UITypeInfo2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$QueryInterface@UITypeInfo2@@@IUnknown@@QAGJPAPAUITypeInfo2@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_00020412_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??C?$CComPtrBase@UITypeInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeInfo@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UITypeInfo2@@@ATL@@QAEPAPAUITypeInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?4UITypeInfo2@@@?$CComPtr@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@ABV?$CComPtr@UITypeInfo2@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_00020401_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Detach@?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddTermFunc@CAtlModule@ATL@@QAEJP6GXK@ZK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Cleanup@CComTypeInfoHolder@ATL@@SGXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_07PJPEDDJP@dw?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Estringdispid@CComTypeInfoHolder@ATL@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadNameCache@CComTypeInfoHolder@ATL@@QAEJPAUITypeInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CComBSTR@ATL@@QAEXPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CComBSTR@ATL@@QAEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPAGIKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_tih@?$IDispatchImpl@UISignature@@$1?IID_ISignature@@3U_GUID@@B$1?LIBID_XMLSIGNLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?GetTypeInfo@CComTypeInfoHolder@ATL@@QAEJIKPAPAUITypeInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTI@CComTypeInfoHolder@ATL@@QAEJKPAPAUITypeInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0M@NNHBFKBG@ppInfo?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AtlIsValidString@ATL@@YAHPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$basic_istream@GU?$char_traits@G@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$basic_streambuf@GU?$char_traits@G@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$basic_ios@GU?$char_traits@G@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$basic_ostream@GU?$char_traits@G@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$_DebugHeapAllocator@D@2@@std@@2IB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?FindNextDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PAU3@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlHresultFromLastError@ATL@@YAJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetWindowPos@CWindow@ATL@@QAEHPAUHWND__@@HHHHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetWindowContextHelpId@CWindow@ATL@@QAEHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_U_RECT@ATL@@QAE@PAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_U_MENUorID@ATL@@QAE@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIStream@@@ATL@@QBEPAUIStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ParseInitData@_DialogSplitHelper@ATL@@SAJPAUIStream@@PAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIStream@@@ATL@@QAEPAPAUIStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIStream@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindCreateData@_DialogSplitHelper@ATL@@SAKKPAEPAPAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0L@KAJDHFFC@dwLen?5?$DN?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?IsActiveXControl@_DialogSplitHelper@ATL@@SA_NPAUDLGITEMTEMPLATE@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindow@CWindow@ATL@@QBE?AV12@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindFirstDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PBUDLGTEMPLATE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DlgTemplateItemCount@_DialogSplitHelper@ATL@@SAAAGPAUDLGTEMPLATE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsDialogEx@_DialogSplitHelper@ATL@@SAHPBUDLGTEMPLATE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetResourceInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _AtlAxDialogBoxA@20
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$AtlAxDialogCreateT@PBDV_AtlDialogBoxIndirectParamHelper@ATL@@$1?DialogBoxIndirectParamA@@YGHPAUHINSTANCE__@@PBUDLGTEMPLATE@@PAUHWND__@@P6GH2IIJ@ZJ@Z@ATL@@YAHPAUHINSTANCE__@@PBDPAUHWND__@@P6GH2IIJ@ZJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetInvalidValue@_AtlDialogBoxIndirectParamHelper@ATL@@SAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlFindResource@ATL@@YAPAUHRSRC__@@PAUHINSTANCE__@@PBD1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SplitDialogTemplate@_DialogSplitHelper@ATL@@SAPAUDLGTEMPLATE@@PAU3@PAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EM@CKDPENDE@cbItem?5?$DO?$DN?5?$CIbDialogEx?5?$DP?5sizeof?$CIDL@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?IsValidReturnVal@_AtlDialogBoxIndirectParamHelper@ATL@@SA_NH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT _$E1
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
;	COMDAT ??0CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _$E2
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
;	COMDAT ??1CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Term@CAtlWinModule@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CA@CLKCNBMB@nIndex?5?$DO?$DN?50?5?$CG?$CG?5nIndex?5?$DM?5m_nSize?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FE@GCCFFNOH@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_AtlRaiseException@ATL@@YAXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Term@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
;	COMDAT ?AddCreateWndData@CAtlWinModule@ATL@@QAEXPAU_AtlCreateWndData@2@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@MFNOGLO@m_hWnd?5?$DN?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCAxUIWindow@ATL@@@ATL@@6BIOleInPlaceUIWindow@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?QueryInterface@?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_InternalQueryInterface@CAxUIWindow@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_GetEntries@CAxUIWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0M@EHKCMBND@CAxUIWindow?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_entries@?1??_GetEntries@CAxUIWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AddRef@?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindow@CAxUIWindow@ATL@@UAGJPAPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndClassName@CWindow@ATL@@SAPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Register@_ATL_WNDCLASSINFOA@ATL@@QAEGPAP6GJPAUHWND__@@IIJ@Z@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlWinModuleRegisterWndClassInfoA@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PAU_ATL_BASE_MODULE70@1@PAU_ATL_WNDCLASSINFOA@1@PAP6GJPAUHWND__@@IIJ@Z@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$AtlModuleRegisterWndClassInfoT@VAtlModuleRegisterWndClassInfoParamA@ATL@@@ATL@@YAGPAU_ATL_BASE_MODULE70@0@PAU_ATL_WIN_MODULE70@0@PAU_ATL_WNDCLASSINFOA@0@PAP6GJPAUHWND__@@IIJ@ZVAtlModuleRegisterWndClassInfoParamA@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DN@BIGELNIF@ERROR?5?3?5Invalid?5Arguments?5to?5Atl@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EL@KHCGDDHE@ERROR?5?3?5Unable?5to?5lock?5critical?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DK@EAELIHNL@ERROR?5?3?5Could?5not?5obtain?5Window?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?LoadCursorA@AtlModuleRegisterWndClassInfoParamA@ATL@@SAPAUHICON__@@PAUHINSTANCE__@@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FormatWindowClassName@AtlModuleRegisterWndClassInfoParamA@ATL@@SAXPADPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_09OOFFBKGI@ATL?3?$CF8?48X?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetClassInfoExA@AtlModuleRegisterWndClassInfoParamA@ATL@@SAHPAUHINSTANCE__@@PBDPAUtagWNDCLASSEXA@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassExA@AtlModuleRegisterWndClassInfoParamA@ATL@@SAGPAU_ATL_WIN_MODULE70@2@PBUtagWNDCLASSEXA@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlWinModuleRegisterClassExA@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PBUtagWNDCLASSEXA@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Add@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEHABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalSetAtIndex@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXHABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?2G@Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@SAPAXIPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?3G@Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@SAXPAXPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@ABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04LOGEFONP@bRet?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@KAMJMGHJ@pProc?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@BIGOECOI@p?9?$DOpWndProc?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetWndClassInfo@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StartWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?wc@?1??GetWndClassInfo@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@3@XZ@4U43@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?GetWndStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndExStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndExStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndCaption@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@GPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@FJBCDDKK@AXWIN?5UI?5Window?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ContextSensitiveHelp@CAxUIWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBorder@CAxUIWindow@ATL@@UAGJPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RequestBorderSpace@CAxUIWindow@ATL@@UAGJPBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBorderSpace@CAxUIWindow@ATL@@UAGJPBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetActiveObject@CAxUIWindow@ATL@@UAGJPAUIOleInPlaceActiveObject@@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAEPAUIOleInPlaceActiveObject@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$CComObject@VCAxUIWindow@ATL@@@ATL@@6B?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@1@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ProcessWindowMessage@CAxUIWindow@ATL@@UAEHPAUHWND__@@IIJAAJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FinalRelease@CAxUIWindow@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnFinalMessage@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEXPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAxUIWindow@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CAxUIWindow@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IOleInPlaceUIWindow@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7?$CComObject@VCAxFrameWindow@ATL@@@ATL@@6BIOleInPlaceFrame@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?QueryInterface@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_InternalQueryInterface@CAxFrameWindow@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_GetEntries@CAxFrameWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0P@MFMDEJMN@CAxFrameWindow?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_entries@?1??_GetEntries@CAxFrameWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AddRef@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindow@CAxFrameWindow@ATL@@UAGJPAPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0L@JIHHHPOK@phwnd?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Create@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndClassInfo@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?wc@?1??GetWndClassInfo@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@3@XZ@4U43@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?GetWndCaption@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BD@LIOMMJMF@AXWIN?5Frame?5Window?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ContextSensitiveHelp@CAxFrameWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBorder@CAxFrameWindow@ATL@@UAGJPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RequestBorderSpace@CAxFrameWindow@ATL@@UAGJPBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBorderSpace@CAxFrameWindow@ATL@@UAGJPBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetActiveObject@CAxFrameWindow@ATL@@UAGJPAUIOleInPlaceActiveObject@@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InsertMenus@CAxFrameWindow@ATL@@UAGJPAUHMENU__@@PAUtagOleMenuGroupWidths@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMenu@CAxFrameWindow@ATL@@UAGJPAUHMENU__@@PAXPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveMenus@CAxFrameWindow@ATL@@UAGJPAUHMENU__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatusText@CAxFrameWindow@ATL@@UAGJPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnableModeless@CAxFrameWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TranslateAcceleratorA@CAxFrameWindow@ATL@@UAGJPAUtagMSG@@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$CComObject@VCAxFrameWindow@ATL@@@ATL@@6B?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@1@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ProcessWindowMessage@CAxFrameWindow@ATL@@UAEHPAUHWND__@@IIJAAJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FinalRelease@CAxFrameWindow@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAxFrameWindow@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CAxFrameWindow@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IOleInPlaceFrame@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CB@GFHAPKDK@pOldData?9?$DOnAllocLength?5?$DM?5nLength@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Detach@CWindow@ATL@@QAEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7SigException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComVariant@ATL@@QAE@ABUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pMap@?1??GetCategoryMap@CSignature@@SAPBU_ATL_CATMAP_ENTRY@ATL@@XZ@4QBU34@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?UpdateRegistryFromResourceS@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateRegistryFromResourceS@CAtlModule@ATL@@QAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegObject@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IRegistrarBase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CRegObject@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?QueryInterface@CRegObject@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EO@FOFJGMBM@statically?5linked?5in?5CRegObject?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FA@KFANAKFG@?$CCstatically?5linked?5in?5CRegObject@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FA@NNGGBFPH@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AddRef@CRegObject@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CRegObject@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ClearReplacements@CRegObject@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lock@CComFakeCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ClearReplacements@CExpansionVector@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSize@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetKeyAt@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEAAPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetValueAt@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEAAPAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@CComFakeCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRegObject@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CExpansionVector@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CExpansionVector@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegObject@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BJ@MKNPNODP@0?5?$CB?$DN?5pMapEntries?9?$DOszData?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?EscapeSingleQuote@CAtlModule@ATL@@SAXPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_1O@MNLDABAF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AddReplacement@CRegObject@ATL@@UAGJPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Add@CExpansionVector@ATL@@QAEHPBDPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BP@DILLEFPO@lpszKey?5?$CB?$DN?50?5?$CG?$CG?5lpszValue?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Add@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEHABQADABQAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalSetAtIndex@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXHABQADABQAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?2PAD@?$Wrapper@PAD@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAPAXIPAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?3PAD@?$Wrapper@PAD@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAXPAXPAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$Wrapper@PAD@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@ABQAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?2PAG@?$Wrapper@PAG@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAPAXIPAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?3PAG@?$Wrapper@PAG@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAXPAXPAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$Wrapper@PAG@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@ABQAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_1BG@JBACFMF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA_?$AAR?$AAa?$AAw?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1BC@KAILKFFG@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ResourceRegister@CRegObject@ATL@@QAGJPBGI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterFromResource@CRegObject@ATL@@IAEJPBGPBD1H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegParser@ATL@@QAE@PAVCRegObject@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BN@HGJLNPOD@Failed?5to?5LoadLibrary?5on?5?$CFs?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CJ@KJDBLEOI@Failed?5to?5FindResource?5on?5ID?3?$CFd?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CJ@COPMGFKA@Failed?5to?5FindResource?5on?5ID?3?$CFs?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@LNHJMEOP@Failed?5to?5LoadResource?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08GPODJFIN@m_p?5?$DN?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FB@IAFJMJBP@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterBuffer@CRegParser@ATL@@QAEJPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PreProcessBuffer@CRegParser@ATL@@QAEJPADPAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0N@FCNKJMCG@lpszReg?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@HMGHIDAH@ppszReg?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0CParseBuffer@CRegParser@ATL@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CParseBuffer@CRegParser@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StrChrA@CRegParser@ATL@@KAPADPADD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BK@LLGNALDE@Error?5no?5closing?5?$CF?5found?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?StrFromMap@CRegObject@ATL@@QAEPBGPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lookup@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEPAGABQAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindKey@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHABQAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqualKey@CExpansionVectorEqualHelper@ATL@@SA_NQAD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BF@KHDDAOIJ@Map?5Entry?5not?5found?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AddString@CParseBuffer@CRegParser@ATL@@QAEHPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@CParseBuffer@CRegParser@ATL@@QAEHPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_06JALMKDEH@p?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AddChar@CParseBuffer@CRegParser@ATL@@QAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CParseBuffer@CRegParser@ATL@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04OHBKMIBJ@HKCR?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04KIFLFONO@HKCU?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04CBBMIBLK@HKLM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03DLBIJLAB@HKU?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04OFOCGAOH@HKPD?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04POMNGLEL@HKDD?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04LEMDOLAJ@HKCC?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@JBJOLKMF@HKEY_CLASSES_ROOT?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@GMMMKLBI@HKEY_CURRENT_USER?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@GIIFIKDM@HKEY_LOCAL_MACHINE?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@OEMMANAM@HKEY_USERS?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@IDBEHNDO@HKEY_PERFORMANCE_DATA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@MJDLIIGK@HKEY_DYN_DATA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@NLNNHLLF@HKEY_CURRENT_CONFIG?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?map@?2??HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PAD@Z@4QBUkeymap@23@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BN@HJIJAHEL@HKeyFromString?5failed?5on?5?$CFs?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?NextToken@CRegParser@ATL@@IAEJPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndOfVar@CRegParser@ATL@@IAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CE@HPLFHOFC@NextToken?5?3?5Unexpected?5End?5of?5Fi@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?IsSpace@CRegParser@ATL@@IAEHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CJ@JJEGIHLG@Syntax?5error?0?5expecting?5a?5?$HL?0?5fou@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GenerateError@CRegParser@ATL@@IAEJI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CC@MOJNOPNN@Failed?5to?5register?0?5cleaning?5up?$CB@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?RegisterSubkeys@CRegParser@ATL@@IAEJPADPAUHKEY__@@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0O@EHICPHFJ@Num?5Els?5?$DN?5?$CFd?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@GKIPNAL@Deleting?5?$CFs?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?DeleteValue@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0M@LINKMMAA@m_hKey?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@POOIJOEN@Creating?5key?5?$CFs?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@PCGOHLCP@hKeyParent?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AddValue@CRegParser@ATL@@IAEJAAVCRegKey@2@PBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?map@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4QBUtypemap@23@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?$S4@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4IA
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT ??_C@_0BH@IHOFLOMJ@?$CFs?5Type?5not?5supported?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?SetStringValue@CRegKey@ATL@@QAEJPBD0K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0O@DKGIOJGA@pszValue?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CH@EEDIHPHE@?$CIdwType?5?$DN?$DN?5?$CI?51?5?$CJ?$CJ?5?$HM?$HM?5?$CIdwType?5?$DN?$DN?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@MFJDFJCO@Setting?5Value?5?$CFs?5at?5?$CFs?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMultiStringValue@CRegKey@ATL@@QAEJPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetDWORDValue@CRegKey@ATL@@QAEJPBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_07DLHCIBDH@default?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@NDCHGJG@Setting?5Value?5?$CFd?5at?5?$CFs?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CN@BAKOHBFP@Binary?5Data?5does?5not?5fall?5on?5BYT@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPAEI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPAEI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChToByte@CRegParser@ATL@@KAED@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CL@PILPOMLI@Bogus?5value?5?$CFc?5passed?5as?5binary?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??B?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPAEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0L@LBABFFHO@lRes?5?$DN?$DN?50L?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@IONAJCEO@Opened?5Key?5?$CFs?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CM@LEFFDKCG@Ignoring?5Open?5key?5on?5?$CFs?5?3?5In?5Rec@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?SkipAssignment@CRegParser@ATL@@IAEJPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BG@OEFMOOAA@Ending?5Recovery?5Mode?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?HasSubKeys@CRegParser@ATL@@IAEHPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BG@OFKLEKA@Should?5not?5be?5here?$CB?$CB?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CanForceRemoveKey@CRegParser@ATL@@IAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?rgszNeverDelete@CRegParser@ATL@@1QBQBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CH@OEJDLABI@Deleting?5non?9empty?5subkey?5?$CFs?5by?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DP@JOHDIOJH@CRegKey?3?3RecurseDeleteKey?5?3?5Fail@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Close@CRegKey@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BB@FDAMNOMP@Deleting?5Key?5?$CFs?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0M@BNMKLGID@m_hKey?5?$DN?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CRegKey@ATL@@QAEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlHresultFromWin32@ATL@@YAJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ResourceUnregister@CRegObject@ATL@@QAGJPBGI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_entries@?1??_GetEntries@CSignature@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ@4QBU34@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b722bccb_4e68_101b_a2bc_00aa00404770
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020400_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_62ec64dc_b26d_46ce_9e33_24289bcf5f63
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0L@DBHNDLKF@pThis?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DC@BBKMJDPM@pEntries?9?$DOpFunc?5?$DN?$DN?5?$CI?$CIATL?3?3_ATL_C@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DJ@HNJMKNAP@_GetEntries?$CI?$CJ?$FL0?$FN?4pFunc?5?$DN?$DN?5?$CI?$CIATL?3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Cache@CComObjectRootBase@ATL@@SGJPAXABU_GUID@@PAPAXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Decrement@CComSingleThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EC@FOHBGNDM@0?5?$CG?$CG?5?$CCRelease?5called?5on?5a?5pointe@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0P@IDNKKMJE@m_dwRef?5?$CB?$DN?5?91L?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Increment@CComSingleThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_c8be4864_227a_4a1b_84ee_473681bd4872
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0d61aa35_48d5_47f5_8249_f685f75250fd
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_0000_000000000000
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7_com_error@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?licenseTimeout@CLicense@@0HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szInvalidDateTimeSpan@ATL@@3QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szInvalidDateTime@ATL@@3QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Week@CFileTime@ATL@@2_KB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Day@CFileTime@ATL@@2_KB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Hour@CFileTime@ATL@@2_KB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Minute@CFileTime@ATL@@2_KB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Second@CFileTime@ATL@@2_KB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Millisecond@CFileTime@ATL@@2_KB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@GV?$StrTraitATL@GV?$ChTraitsCRT@G@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09BBJEMDLA@nRet?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_09EEBKLCFA@nRefs?5?$DO?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?SetManager@CNilStringData@ATL@@QAEXPAUIAtlStringMgr@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BA@MLJMCNFJ@pStringMgr?5?$DN?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0CNilStringData@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CAtlStringMgr@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IFixedStringLog@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CFixedStringLog@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?s_pLog@CFixedStringMgr@ATL@@2PAVIFixedStringLog@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CFixedStringMgr@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_08DMHHBMMN@lpa?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08DIHJLFDJ@lpw?5?$CB?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FA@OHHMODBN@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FC@CFIFHLCH@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0CAtlException@ATL@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI1?AVCAtlException@ATL@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA1?AVCAtlException@ATL@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVCAtlException@ATL@@@84
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVCAtlException@ATL@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_strthunks@ATL@@3U_AtlStringThunks@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?s_bWin9x@?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@4_NA
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT ??_B?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@51
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7ios_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$ctype@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7ctype_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$codecvt@GDH@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7codecvt_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7facet@locale@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7range_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7underflow_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7overflow_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7invalid_argument@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7domain_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7bad_exception@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CBufferVariant@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CConfig@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWindow@ATL@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MessageBoxA@CWindow@ATL@@QAEHPBD0I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMessageA@CWindow@ATL@@QAEJIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDlgItem@CWindow@ATL@@QBE?AV12@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CenterWindow@CWindow@ATL@@QAEHPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BH@ENLIMLGL@?3?3IsWindow?$CIhWndParent?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@LBNLFONB@?3?3IsWindow?$CIhWndCenter?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?A2WBSTR@@YAPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BJ@OGJFCAD@nResult?5?$DN?$DN?5nConvertedLen?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??BCComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@CComBSTR@ATL@@QAE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringResource@CComBSTR@ATL@@SA_NIAAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0O@LPAFDJOF@bstrText?5?$DN?$DN?50?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_01GBGANLPD@0?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BN@BNLFFEBD@Invalid?5message?5map?5ID?5?$CI?$CFi?$CJ?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnableWindow@CWindow@ATL@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CShowSelectCert@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS, CRT$XCU
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?g_pfnGetThreadACP@ATL@@3P6GIXZA		; ATL::g_pfnGetThreadACP
PUBLIC	?_AtlGetThreadACPThunk@ATL@@YGIXZ		; ATL::_AtlGetThreadACPThunk
PUBLIC	?_pAtlModule@ATL@@3PAVCAtlModule@1@A		; ATL::_pAtlModule
PUBLIC	?m_libid@CAtlModule@ATL@@2U_GUID@@A		; ATL::CAtlModule::m_libid
PUBLIC	?_strthunks@ATL@@3U_AtlStringThunks@1@A		; ATL::_strthunks
PUBLIC	?GetEnvironmentVariableWThunk@ATL@@YGKPBGPAGK@Z	; ATL::GetEnvironmentVariableWThunk
PUBLIC	?licenseTimeout@CLicense@@0HB			; CLicense::licenseTimeout
PUBLIC	?CompareStringWThunk@ATL@@YGHKKPBGH0H@Z		; ATL::CompareStringWThunk
PUBLIC	?GetStringTypeExWThunk@ATL@@YGHKKPBGHPAG@Z	; ATL::GetStringTypeExWThunk
PUBLIC	?lstrcmpiWThunk@ATL@@YGHPBG0@Z			; ATL::lstrcmpiWThunk
PUBLIC	?CharLowerWThunk@ATL@@YGPAGPAG@Z		; ATL::CharLowerWThunk
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?CharUpperWThunk@ATL@@YGPAGPAG@Z		; ATL::CharUpperWThunk
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::c_bIsMFCDLLTraits
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?m_bInitFailed@CAtlBaseModule@ATL@@2_NA		; ATL::CAtlBaseModule::m_bInitFailed
PUBLIC	?Millisecond@CFileTime@ATL@@2_KB		; ATL::CFileTime::Millisecond
PUBLIC	?rgszNeverDelete@CRegParser@ATL@@1QBQBDB	; ATL::CRegParser::rgszNeverDelete
PUBLIC	?Second@CFileTime@ATL@@2_KB			; ATL::CFileTime::Second
PUBLIC	?Minute@CFileTime@ATL@@2_KB			; ATL::CFileTime::Minute
PUBLIC	?Hour@CFileTime@ATL@@2_KB			; ATL::CFileTime::Hour
PUBLIC	?Day@CFileTime@ATL@@2_KB			; ATL::CFileTime::Day
PUBLIC	?Week@CFileTime@ATL@@2_KB			; ATL::CFileTime::Week
PUBLIC	?szInvalidDateTime@ATL@@3QBDB			; ATL::szInvalidDateTime
PUBLIC	?szInvalidDateTimeSpan@ATL@@3QBDB		; ATL::szInvalidDateTimeSpan
PUBLIC	?s_pLog@CFixedStringMgr@ATL@@2PAVIFixedStringLog@2@A ; ATL::CFixedStringMgr::s_pLog
PUBLIC	?rcDefault@CWindow@ATL@@2UtagRECT@@A		; ATL::CWindow::rcDefault
PUBLIC	?WM_ATLGETHOST@ATL@@3IA				; ATL::WM_ATLGETHOST
PUBLIC	?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@GV?$StrTraitATL@GV?$ChTraitsCRT@G@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<unsigned short,ATL::StrTraitATL<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::c_bIsMFCDLLTraits
PUBLIC	?WM_ATLGETCONTROL@ATL@@3IA			; ATL::WM_ATLGETCONTROL
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_BSS	SEGMENT
?_pAtlModule@ATL@@3PAVCAtlModule@1@A DD 01H DUP (?)	; ATL::_pAtlModule
_BSS	ENDS
;	COMDAT ?m_libid@CAtlModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CAtlModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CAtlModule::m_libid
_BSS	ENDS
;	COMDAT ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA
_BSS	SEGMENT
?m_bInitFailed@CAtlBaseModule@ATL@@2_NA DB 01H DUP (?)	; ATL::CAtlBaseModule::m_bInitFailed
_BSS	ENDS
;	COMDAT ?s_pLog@CFixedStringMgr@ATL@@2PAVIFixedStringLog@2@A
_BSS	SEGMENT
?s_pLog@CFixedStringMgr@ATL@@2PAVIFixedStringLog@2@A DD 01H DUP (?) ; ATL::CFixedStringMgr::s_pLog
_BSS	ENDS
;	COMDAT ?WM_ATLGETHOST@ATL@@3IA
_BSS	SEGMENT
?WM_ATLGETHOST@ATL@@3IA DD 01H DUP (?)			; ATL::WM_ATLGETHOST
_BSS	ENDS
;	COMDAT ?WM_ATLGETCONTROL@ATL@@3IA
_BSS	SEGMENT
?WM_ATLGETCONTROL@ATL@@3IA DD 01H DUP (?)		; ATL::WM_ATLGETCONTROL
_BSS	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?_strthunks@ATL@@3U_AtlStringThunks@1@A
_DATA	SEGMENT
?_strthunks@ATL@@3U_AtlStringThunks@1@A DD FLAT:?CompareStringWThunk@ATL@@YGHKKPBGH0H@Z ; ATL::_strthunks
	DD	FLAT:?GetStringTypeExWThunk@ATL@@YGHKKPBGHPAG@Z
	DD	FLAT:?lstrcmpiWThunk@ATL@@YGHPBG0@Z
	DD	FLAT:?CharLowerWThunk@ATL@@YGPAGPAG@Z
	DD	FLAT:?CharUpperWThunk@ATL@@YGPAGPAG@Z
	DD	FLAT:?GetEnvironmentVariableWThunk@ATL@@YGKPBGPAGK@Z
_DATA	ENDS
;	COMDAT ?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB
CONST	SEGMENT
?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB DB 00H ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::c_bIsMFCDLLTraits
CONST	ENDS
;	COMDAT ?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@GV?$StrTraitATL@GV?$ChTraitsCRT@G@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB
CONST	SEGMENT
?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@GV?$StrTraitATL@GV?$ChTraitsCRT@G@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB DB 00H ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<unsigned short,ATL::StrTraitATL<unsigned short,ATL::ChTraitsCRT<unsigned short> > >::c_bIsMFCDLLTraits
CONST	ENDS
;	COMDAT ?Millisecond@CFileTime@ATL@@2_KB
CONST	SEGMENT
?Millisecond@CFileTime@ATL@@2_KB DQ 0000000000002710H	; ATL::CFileTime::Millisecond
CONST	ENDS
;	COMDAT ?Second@CFileTime@ATL@@2_KB
CONST	SEGMENT
?Second@CFileTime@ATL@@2_KB DQ 0000000000989680H	; ATL::CFileTime::Second
CONST	ENDS
;	COMDAT ?Minute@CFileTime@ATL@@2_KB
CONST	SEGMENT
?Minute@CFileTime@ATL@@2_KB DQ 0000000023c34600H	; ATL::CFileTime::Minute
CONST	ENDS
;	COMDAT ?Hour@CFileTime@ATL@@2_KB
CONST	SEGMENT
?Hour@CFileTime@ATL@@2_KB DQ 0000000861c46800H		; ATL::CFileTime::Hour
CONST	ENDS
;	COMDAT ?Day@CFileTime@ATL@@2_KB
CONST	SEGMENT
?Day@CFileTime@ATL@@2_KB DQ 000000c92a69c000H		; ATL::CFileTime::Day
CONST	ENDS
;	COMDAT ?Week@CFileTime@ATL@@2_KB
CONST	SEGMENT
?Week@CFileTime@ATL@@2_KB DQ 0000058028e44000H		; ATL::CFileTime::Week
CONST	ENDS
CONST	SEGMENT
$SG201430 DB	'Invalid DateTime', 00H
CONST	ENDS
;	COMDAT ?szInvalidDateTime@ATL@@3QBDB
CONST	SEGMENT
?szInvalidDateTime@ATL@@3QBDB DD FLAT:$SG201430		; ATL::szInvalidDateTime
CONST	ENDS
CONST	SEGMENT
	ORG $+3
$SG201432 DB	'Invalid DateTimeSpan', 00H
CONST	ENDS
;	COMDAT ?szInvalidDateTimeSpan@ATL@@3QBDB
CONST	SEGMENT
?szInvalidDateTimeSpan@ATL@@3QBDB DD FLAT:$SG201432	; ATL::szInvalidDateTimeSpan
CONST	ENDS
;	COMDAT ?licenseTimeout@CLicense@@0HB
CONST	SEGMENT
?licenseTimeout@CLicense@@0HB DD 01eH			; CLicense::licenseTimeout
CONST	ENDS
CONST	SEGMENT
	ORG $+3
$SG207802 DB	'%02x', 00H
	ORG $+3
$SG207803 DB	' ', 00H
	ORG $+2
$SG209068 DB	'pThis != 0', 00H
	ORG $+5
$SG209069 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlwin.h', 00H
	ORG $+1
$SG209079 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlwin.h', 00H
	ORG $+1
$SG209080 DB	'Subclassing through a hook discarded.', 0aH, 00H
	ORG $+1
$SG209086 DB	'pp != 0', 00H
$SG209087 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlcom.h', 00H
CONST	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT
?g_pfnGetThreadACP@ATL@@3P6GIXZA DD FLAT:?_AtlGetThreadACPThunk@ATL@@YGIXZ ; ATL::g_pfnGetThreadACP
_DATA	ENDS
CONST	SEGMENT
	ORG $+1
$SG89605 DB	'S', 00H
	ORG $+2
_szStringVal DD	FLAT:$SG89605
$SG89607 DB	'M', 00H
	ORG $+2
_multiszStringVal DD FLAT:$SG89607
$SG89609 DB	'D', 00H
	ORG $+2
_szDwordVal DD	FLAT:$SG89609
$SG89611 DB	'B', 00H
	ORG $+2
_szBinaryVal DD	FLAT:$SG89611
$SG89613 DB	'Val', 00H
_szValToken DD	FLAT:$SG89613
$SG89615 DB	'ForceRemove', 00H
_szForceRemove DD FLAT:$SG89615
$SG89617 DB	'NoRemove', 00H
	ORG $+3
_szNoRemove DD	FLAT:$SG89617
$SG89619 DB	'Delete', 00H
	ORG $+1
_szDelete DD	FLAT:$SG89619
$SG90266 DB	'AppID', 00H
	ORG $+2
$SG90267 DB	'CLSID', 00H
	ORG $+2
$SG90268 DB	'Component Categories', 00H
	ORG $+3
$SG90269 DB	'FileType', 00H
	ORG $+3
$SG90270 DB	'Interface', 00H
	ORG $+2
$SG90271 DB	'Hardware', 00H
	ORG $+3
$SG90272 DB	'Mime', 00H
	ORG $+3
$SG90273 DB	'SAM', 00H
$SG90274 DB	'SECURITY', 00H
	ORG $+3
$SG90275 DB	'SYSTEM', 00H
	ORG $+1
$SG90276 DB	'Software', 00H
	ORG $+3
$SG90277 DB	'TypeLib', 00H
CONST	ENDS
;	COMDAT ?rgszNeverDelete@CRegParser@ATL@@1QBQBDB
CONST	SEGMENT
?rgszNeverDelete@CRegParser@ATL@@1QBQBDB DD FLAT:$SG90266 ; ATL::CRegParser::rgszNeverDelete
	DD	FLAT:$SG90267
	DD	FLAT:$SG90268
	DD	FLAT:$SG90269
	DD	FLAT:$SG90270
	DD	FLAT:$SG90271
	DD	FLAT:$SG90272
	DD	FLAT:$SG90273
	DD	FLAT:$SG90274
	DD	FLAT:$SG90275
	DD	FLAT:$SG90276
	DD	FLAT:$SG90277
CONST	ENDS
;	COMDAT ?rcDefault@CWindow@ATL@@2UtagRECT@@A
_DATA	SEGMENT
?rcDefault@CWindow@ATL@@2UtagRECT@@A DD 080000000H	; ATL::CWindow::rcDefault
	DD	080000000H
	DD	00H
	DD	00H
_DATA	ENDS
CONST	SEGMENT
$SG147460 DB	'ppvObj', 00H
	ORG $+5
$SG147461 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlhost.h', 00H
$SG147486 DB	':', 00H
$SG151553 DB	00H
	ORG $+5
$SG151579 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlhost.h', 00H
$SG151580 DB	'Control creation failed for ''%s''', 0aH, 00H
	ORG $+6
$SG151582 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlhost.h', 00H
$SG151583 DB	'Error code: 0x%x - %s', 00H
	ORG $+2
$SG151598 DB	'lParam', 00H
	ORG $+1
$SG151599 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlhost.h', 00H
$SG151621 DB	00H
	ORG $+7
$SG151651 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlhost.h', 00H
$SG151652 DB	'Control creation failed for ''%s''', 0aH, 00H
	ORG $+6
$SG151654 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlhost.h', 00H
$SG151655 DB	'Error code: 0x%x - %s', 00H
	ORG $+2
$SG151670 DB	'lParam', 00H
	ORG $+1
$SG151671 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlhost.h', 00H
$SG164286 DB	'pThis->m_pCurrentMsg == &msg', 00H
	ORG $+3
$SG164287 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlwin.h', 00H
	ORG $+1
$SG164311 DB	'pThis != 0', 00H
	ORG $+5
$SG164312 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlwin.h', 00H
	ORG $+1
$SG164319 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlwin.h', 00H
	ORG $+1
$SG164320 DB	'Subclassing through a hook discarded.', 0aH, 00H
	ORG $+1
$SG164336 DB	'pThis->m_pCurrentMsg == &msg', 00H
	ORG $+3
$SG164337 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlwin.h', 00H
	ORG $+1
$SG164360 DB	'm_hWnd == 0', 00H
	ORG $+4
$SG164361 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlwin.h', 00H
	ORG $+1
$SG164372 DB	'm_hWnd == hWnd', 00H
	ORG $+1
$SG164373 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlwin.h', 00H
	ORG $+1
$SG164381 DB	'm_hWnd == 0', 00H
	ORG $+4
$SG164382 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlwin.h', 00H
	ORG $+1
$SG164384 DB	'::IsWindow(hWnd)', 00H
	ORG $+7
$SG164385 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlwin.h', 00H
	ORG $+1
$SG164398 DB	'm_hWnd != 0', 00H
	ORG $+4
$SG164399 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlwin.h', 00H
	ORG $+1
$SG164419 DB	'pp != 0', 00H
$SG164420 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlcom.h', 00H
	ORG $+1
$SG164441 DB	'pp != 0', 00H
$SG164442 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlcom.h', 00H
	ORG $+1
$SG164583 DB	'm_begin == 0', 00H
	ORG $+3
$SG164584 DB	'C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\a'
	DB	'tlmfc\include\atlcom.h', 00H
CONST	ENDS
PUBLIC	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z	; InterlockedExchangePointer
PUBLIC	?_AtlGetThreadACPFake@ATL@@YGIXZ		; ATL::_AtlGetThreadACPFake
PUBLIC	?_AtlGetThreadACPReal@ATL@@YGIXZ		; ATL::_AtlGetThreadACPReal
EXTRN	__imp__GetVersionExA@4:NEAR
EXTRN	__RTC_InitBase:NEAR
EXTRN	__RTC_Shutdown:NEAR
EXTRN	__RTC_CheckEsp:NEAR
EXTRN	___security_cookie:DWORD
EXTRN	@_RTC_CheckStackVars@8:NEAR
EXTRN	@__security_check_cookie@4:NEAR
;	COMDAT rtc$IMZ
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
; Function compile flags: /Odt /RTCsu
rtc$TMZ	ENDS
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT
_pfnGetThreadACP$ = -164				; size = 4
_ver$ = -156						; size = 148
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPThunk@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPThunk, COMDAT

; 134  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 164				; 000000a4H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-164]
	mov	ecx, 41					; 00000029H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 135  : 	OSVERSIONINFO ver;
; 136  : 	ATLGETTHREADACP pfnGetThreadACP;
; 137  : 
; 138  : 	ver.dwOSVersionInfoSize = sizeof( ver );

	mov	DWORD PTR _ver$[ebp], 148		; 00000094H

; 139  : 	::GetVersionEx( &ver );

	mov	esi, esp
	lea	eax, DWORD PTR _ver$[ebp]
	push	eax
	call	DWORD PTR __imp__GetVersionExA@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 140  : 	if( (ver.dwPlatformId == VER_PLATFORM_WIN32_NT) && (ver.dwMajorVersion >= 5) )

	cmp	DWORD PTR _ver$[ebp+16], 2
	jne	SHORT $L75781
	cmp	DWORD PTR _ver$[ebp+4], 5
	jb	SHORT $L75781

; 141  : 	{
; 142  : 		// On Win2K, CP_THREAD_ACP is supported
; 143  : 		pfnGetThreadACP = _AtlGetThreadACPReal;

	mov	DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPReal@ATL@@YGIXZ ; ATL::_AtlGetThreadACPReal

; 144  : 	}
; 145  : 	else

	jmp	SHORT $L75782
$L75781:

; 146  : 	{
; 147  : 		pfnGetThreadACP = _AtlGetThreadACPFake;

	mov	DWORD PTR _pfnGetThreadACP$[ebp], OFFSET FLAT:?_AtlGetThreadACPFake@ATL@@YGIXZ ; ATL::_AtlGetThreadACPFake
$L75782:

; 148  : 	}
; 149  : 	InterlockedExchangePointer( reinterpret_cast< void** >(&g_pfnGetThreadACP), pfnGetThreadACP );

	mov	ecx, DWORD PTR _pfnGetThreadACP$[ebp]
	push	ecx
	push	OFFSET FLAT:?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	call	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ; InterlockedExchangePointer

; 150  : 
; 151  : 	return( g_pfnGetThreadACP() );

	mov	esi, esp
	call	DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	cmp	esi, esp
	call	__RTC_CheckEsp

; 152  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L211238
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	add	esp, 164				; 000000a4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L211238:
	DD	1
	DD	$L211237
$L211237:
	DD	-156					; ffffff64H
	DD	148					; 00000094H
	DD	$L211234
$L211234:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?_AtlGetThreadACPThunk@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPThunk
_TEXT	ENDS
EXTRN	__imp__InterlockedExchange@8:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_pNew$ = 12						; size = 4
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z PROC NEAR	; InterlockedExchangePointer, COMDAT

; 91   : {

	push	ebp
	mov	ebp, esp
	push	esi

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(::InterlockedExchange(reinterpret_cast<LONG*>(pp), static_cast<LONG>(reinterpret_cast<LONG_PTR>(pNew))))) );

	mov	esi, esp
	mov	eax, DWORD PTR _pNew$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pp$[ebp]
	push	ecx
	call	DWORD PTR __imp__InterlockedExchange@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 93   : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ENDP	; InterlockedExchangePointer
_TEXT	ENDS
EXTRN	__imp__GetACP@0:NEAR
EXTRN	__imp__GetLocaleInfoA@16:NEAR
EXTRN	__imp__GetThreadLocale@0:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT
_pch$75769 = -32					; size = 4
_szACP$ = -24						; size = 7
_lcidThread$ = -12					; size = 4
_nACP$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPFake@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPFake, COMDAT

; 101  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 102  : 	UINT nACP = 0;

	mov	DWORD PTR _nACP$[ebp], 0

; 103  : 
; 104  : 	LCID lcidThread = ::GetThreadLocale();

	mov	esi, esp
	call	DWORD PTR __imp__GetThreadLocale@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lcidThread$[ebp], eax

; 105  : 
; 106  : 	char szACP[7];
; 107  : 	// GetLocaleInfoA will fail for a Unicode-only LCID, but those are only supported on 
; 108  : 	// Windows 2000.  Since Windows 2000 supports CP_THREAD_ACP, this code path is never
; 109  : 	// executed on Windows 2000.
; 110  : 	if (::GetLocaleInfoA(lcidThread, LOCALE_IDEFAULTANSICODEPAGE, szACP, 7) != 0)

	mov	esi, esp
	push	7
	lea	eax, DWORD PTR _szACP$[ebp]
	push	eax
	push	4100					; 00001004H
	mov	ecx, DWORD PTR _lcidThread$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetLocaleInfoA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $L75768

; 111  : 	{
; 112  : 		char* pch = szACP;

	lea	edx, DWORD PTR _szACP$[ebp]
	mov	DWORD PTR _pch$75769[ebp], edx
$L75771:

; 113  : 		while (*pch != '\0')

	mov	eax, DWORD PTR _pch$75769[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $L75768

; 114  : 		{
; 115  : 			nACP *= 10;

	mov	edx, DWORD PTR _nACP$[ebp]
	imul	edx, 10					; 0000000aH
	mov	DWORD PTR _nACP$[ebp], edx

; 116  : 			nACP += *pch++ - '0';

	mov	eax, DWORD PTR _pch$75769[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _nACP$[ebp]
	lea	eax, DWORD PTR [edx+ecx-48]
	mov	DWORD PTR _nACP$[ebp], eax
	mov	ecx, DWORD PTR _pch$75769[ebp]
	add	ecx, 1
	mov	DWORD PTR _pch$75769[ebp], ecx

; 117  : 		}

	jmp	SHORT $L75771
$L75768:

; 118  : 	}
; 119  : 	// Use the Default ANSI Code Page if we were unable to get the thread ACP or if one does not exist.
; 120  : 	if (nACP == 0)

	cmp	DWORD PTR _nACP$[ebp], 0
	jne	SHORT $L75773

; 121  : 		nACP = ::GetACP();

	mov	esi, esp
	call	DWORD PTR __imp__GetACP@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nACP$[ebp], eax
$L75773:

; 122  : 
; 123  : 	return nACP;

	mov	eax, DWORD PTR _nACP$[ebp]

; 124  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L211251
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L211251:
	DD	1
	DD	$L211250
$L211250:
	DD	-24					; ffffffe8H
	DD	7
	DD	$L211248
$L211248:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	65					; 00000041H
	DB	67					; 00000043H
	DB	80					; 00000050H
	DB	0
?_AtlGetThreadACPFake@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPFake
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetThreadACPReal@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPReal, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp

; 128  : 	return( CP_THREAD_ACP );

	mov	eax, 3

; 129  : }

	pop	ebp
	ret	0
?_AtlGetThreadACPReal@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPReal
_TEXT	ENDS
PUBLIC	?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z	; ATL::_AtlInstallStringThunk
PUBLIC	?GetEnvironmentVariableWFake@ATL@@YGKPBGPAGK@Z	; ATL::GetEnvironmentVariableWFake
EXTRN	__imp__GetEnvironmentVariableW@12:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?GetEnvironmentVariableWThunk@ATL@@YGKPBGPAGK@Z
_TEXT	SEGMENT
_pszName$ = 8						; size = 4
_pszBuffer$ = 12					; size = 4
_nSize$ = 16						; size = 4
?GetEnvironmentVariableWThunk@ATL@@YGKPBGPAGK@Z PROC NEAR ; ATL::GetEnvironmentVariableWThunk, COMDAT

; 183  : {

	push	ebp
	mov	ebp, esp
	push	esi

; 184  : 	_AtlInstallStringThunk(reinterpret_cast<void**>(&_strthunks.pfnGetEnvironmentVariableW), 
; 185  : 		GetEnvironmentVariableWFake, ::GetEnvironmentVariableW);

	mov	eax, DWORD PTR __imp__GetEnvironmentVariableW@12
	push	eax
	push	OFFSET FLAT:?GetEnvironmentVariableWFake@ATL@@YGKPBGPAGK@Z ; ATL::GetEnvironmentVariableWFake
	push	OFFSET FLAT:?_strthunks@ATL@@3U_AtlStringThunks@1@A+20
	call	?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z ; ATL::_AtlInstallStringThunk
	add	esp, 12					; 0000000cH

; 186  : 
; 187  : 	return _strthunks.pfnGetEnvironmentVariableW(pszName, pszBuffer, nSize);

	mov	esi, esp
	mov	ecx, DWORD PTR _nSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _pszName$[ebp]
	push	eax
	call	DWORD PTR ?_strthunks@ATL@@3U_AtlStringThunks@1@A+20
	cmp	esi, esp
	call	__RTC_CheckEsp

; 188  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?GetEnvironmentVariableWThunk@ATL@@YGKPBGPAGK@Z ENDP	; ATL::GetEnvironmentVariableWThunk
_TEXT	ENDS
PUBLIC	?s_bWin9x@?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@4_NA ; `ATL::_AtlInstallStringThunk'::`2'::s_bWin9x
PUBLIC	??_B?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@51 ; `ATL::_AtlInstallStringThunk'::`2'::`local static guard'
EXTRN	__imp__GetVersion@0:NEAR
;	COMDAT ?s_bWin9x@?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@4_NA
_BSS	SEGMENT
?s_bWin9x@?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@4_NA DB 01H DUP (?) ; `ATL::_AtlInstallStringThunk'::`2'::s_bWin9x
_BSS	ENDS
;	COMDAT ??_B?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@51
_BSS	SEGMENT
??_B?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@51 DD 01H DUP (?) ; `ATL::_AtlInstallStringThunk'::`2'::`local static guard'
; Function compile flags: /Odt /RTCsu
_BSS	ENDS
;	COMDAT ?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z
_TEXT	SEGMENT
_pfn$ = -4						; size = 4
_ppThunk$ = 8						; size = 4
_pfnWin9x$ = 12						; size = 4
_pfnNT$ = 16						; size = 4
?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z PROC NEAR	; ATL::_AtlInstallStringThunk, COMDAT

; 115  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 116  : #pragma warning (push)
; 117  : #pragma warning (disable : 4640)	// construction of local static object is not thread-safe
; 118  : 
; 119  : 	static bool s_bWin9x = (::GetVersion()&0x80000000) != 0;

	mov	eax, DWORD PTR ??_B?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@51
	and	eax, 1
	jne	SHORT $L198710
	mov	ecx, DWORD PTR ??_B?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@51
	or	ecx, 1
	mov	DWORD PTR ??_B?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@51, ecx
	mov	esi, esp
	call	DWORD PTR __imp__GetVersion@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	and	eax, -2147483648			; 80000000H
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	BYTE PTR ?s_bWin9x@?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@4_NA, al ; `ATL::_AtlInstallStringThunk'::`2'::s_bWin9x
$L198710:

; 120  : 	
; 121  : #pragma warning (pop)
; 122  : 
; 123  : 	void* pfn;
; 124  : 	if (s_bWin9x)

	movzx	edx, BYTE PTR ?s_bWin9x@?1??_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z@4_NA ; `ATL::_AtlInstallStringThunk'::`2'::s_bWin9x
	test	edx, edx
	je	SHORT $L198712

; 125  : 		pfn = pfnWin9x;

	mov	eax, DWORD PTR _pfnWin9x$[ebp]
	mov	DWORD PTR _pfn$[ebp], eax

; 126  : 	else

	jmp	SHORT $L198713
$L198712:

; 127  : 	{
; 128  : #ifdef _CSTRING_ALWAYS_THUNK
; 129  : 		pfn = pfnWin9x;
; 130  : 		(void)pfnNT;
; 131  : #else
; 132  : 		pfn = pfnNT;

	mov	ecx, DWORD PTR _pfnNT$[ebp]
	mov	DWORD PTR _pfn$[ebp], ecx
$L198713:

; 133  : #endif
; 134  : 	}
; 135  : 	InterlockedExchangePointer(ppThunk, pfn);

	mov	edx, DWORD PTR _pfn$[ebp]
	push	edx
	mov	eax, DWORD PTR _ppThunk$[ebp]
	push	eax
	call	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ; InterlockedExchangePointer

; 136  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z ENDP	; ATL::_AtlInstallStringThunk
_TEXT	ENDS
PUBLIC	?_AtlGetConversionACP@ATL@@YGIXZ		; ATL::_AtlGetConversionACP
PUBLIC	??_C@_0FB@DNILBHEN@C?3?2Program?5Files?2Microsoft?5Visua@ ; `string'
PUBLIC	??0?$CW2AEX@$0IA@@ATL@@QAE@PBG@Z		; ATL::CW2AEX<128>::CW2AEX<128>
PUBLIC	??1?$CW2AEX@$0IA@@ATL@@QAE@XZ			; ATL::CW2AEX<128>::~CW2AEX<128>
PUBLIC	??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ			; ATL::CW2AEX<128>::operator char *
PUBLIC	??_C@_0BA@CLMJJCOM@nSize?5?$DO?$DN?5nSizeW?$AA@	; `string'
PUBLIC	??0?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::CTempBuffer<char,128,ATL::CCRTAllocator>
PUBLIC	??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>
PUBLIC	??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::operator char *
PUBLIC	?Allocate@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::Allocate
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	__imp__MultiByteToWideChar@24:NEAR
EXTRN	__imp__GetEnvironmentVariableA@12:NEAR
EXTRN	__CrtDbgReport:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T211278 DD	0ffffffffH
	DD	FLAT:$L211265
	DD	00H
	DD	FLAT:$L211266
$T211270 DD	019930520H
	DD	02H
	DD	FLAT:$T211278
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BA@CLMJJCOM@nSize?5?$DO?$DN?5nSizeW?$AA@
CONST	SEGMENT
??_C@_0BA@CLMJJCOM@nSize?5?$DO?$DN?5nSizeW?$AA@ DB 'nSize >= nSizeW', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FB@DNILBHEN@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT
??_C@_0FB@DNILBHEN@C?3?2Program?5Files?2Microsoft?5Visua@ DB 'C:\Program '
	DB	'Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\include\cs'
	DB	'tringt.h', 00H				; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?GetEnvironmentVariableWFake@ATL@@YGKPBGPAGK@Z
_TEXT	SEGMENT
$T211264 = -316						; size = 4
$T211262 = -312						; size = 4
$T211261 = -308						; size = 4
_pszNameA$ = -300					; size = 132
_pszBufferA$ = -160					; size = 132
_nSizeW$ = -24						; size = 4
_nSizeA$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_pszName$ = 8						; size = 4
_pszBuffer$ = 12					; size = 4
_nSize$ = 16						; size = 4
?GetEnvironmentVariableWFake@ATL@@YGKPBGPAGK@Z PROC NEAR ; ATL::GetEnvironmentVariableWFake, COMDAT

; 159  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetEnvironmentVariableWFake@ATL@@YGKPBGPAGK@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 304				; 00000130H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 160  : 	ULONG nSizeA;
; 161  : 	ULONG nSizeW;
; 162  : 	CTempBuffer<char> pszBufferA;

	lea	ecx, DWORD PTR _pszBufferA$[ebp]
	call	??0?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::CTempBuffer<char,128,ATL::CCRTAllocator>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 163  : 	CW2A pszNameA(pszName);

	mov	eax, DWORD PTR _pszName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pszNameA$[ebp]
	call	??0?$CW2AEX@$0IA@@ATL@@QAE@PBG@Z	; ATL::CW2AEX<128>::CW2AEX<128>
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 164  : 
; 165  : 	nSizeA = ::GetEnvironmentVariableA(pszNameA, NULL, 0);

	mov	esi, esp
	push	0
	push	0
	lea	ecx, DWORD PTR _pszNameA$[ebp]
	call	??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ		; ATL::CW2AEX<128>::operator char *
	push	eax
	call	DWORD PTR __imp__GetEnvironmentVariableA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nSizeA$[ebp], eax

; 166  : 	if (nSizeA == 0)

	cmp	DWORD PTR _nSizeA$[ebp], 0
	jne	SHORT $L198784

; 167  : 		return 0;

	mov	DWORD PTR $T211261[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pszNameA$[ebp]
	call	??1?$CW2AEX@$0IA@@ATL@@QAE@XZ		; ATL::CW2AEX<128>::~CW2AEX<128>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pszBufferA$[ebp]
	call	??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>
	mov	eax, DWORD PTR $T211261[ebp]
	jmp	$L198756
$L198784:

; 168  : 
; 169  : 	pszBufferA.Allocate(nSizeA*2);

	mov	ecx, DWORD PTR _nSizeA$[ebp]
	shl	ecx, 1
	push	ecx
	lea	ecx, DWORD PTR _pszBufferA$[ebp]
	call	?Allocate@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::Allocate

; 170  : 	::GetEnvironmentVariableA(pszNameA, pszBufferA, nSizeA);

	mov	esi, esp
	mov	edx, DWORD PTR _nSizeA$[ebp]
	push	edx
	lea	ecx, DWORD PTR _pszBufferA$[ebp]
	call	??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::operator char *
	push	eax
	lea	ecx, DWORD PTR _pszNameA$[ebp]
	call	??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ		; ATL::CW2AEX<128>::operator char *
	push	eax
	call	DWORD PTR __imp__GetEnvironmentVariableA@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 171  : 
; 172  : 	nSizeW = ::MultiByteToWideChar(_AtlGetConversionACP(), 0, pszBufferA, -1, NULL, 0);

	mov	esi, esp
	push	0
	push	0
	push	-1
	lea	ecx, DWORD PTR _pszBufferA$[ebp]
	call	??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::operator char *
	push	eax
	push	0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	push	eax
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nSizeW$[ebp], eax

; 173  : 	if (nSize == 0)

	cmp	DWORD PTR _nSize$[ebp], 0
	jne	SHORT $L198786

; 174  : 		return nSizeW;

	mov	eax, DWORD PTR _nSizeW$[ebp]
	mov	DWORD PTR $T211262[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pszNameA$[ebp]
	call	??1?$CW2AEX@$0IA@@ATL@@QAE@XZ		; ATL::CW2AEX<128>::~CW2AEX<128>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pszBufferA$[ebp]
	call	??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>
	mov	eax, DWORD PTR $T211262[ebp]
	jmp	$L198756
$L198786:

; 175  : 	ATLASSERT(nSize >= nSizeW);

	mov	ecx, DWORD PTR _nSize$[ebp]
	cmp	ecx, DWORD PTR _nSizeW$[ebp]
	jae	SHORT $L211263
	push	OFFSET FLAT:??_C@_0BA@CLMJJCOM@nSize?5?$DO?$DN?5nSizeW?$AA@
	push	0
	push	175					; 000000afH
	push	OFFSET FLAT:??_C@_0FB@DNILBHEN@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211263
	int	3
$L211263:

; 176  : 	::MultiByteToWideChar(_AtlGetConversionACP(), 0, pszBufferA, -1, pszBuffer, nSizeW);

	mov	esi, esp
	mov	eax, DWORD PTR _nSizeW$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszBuffer$[ebp]
	push	ecx
	push	-1
	lea	ecx, DWORD PTR _pszBufferA$[ebp]
	call	??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::operator char *
	push	eax
	push	0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	push	eax
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp

; 177  : 
; 178  : 	return nSizeW;

	mov	edx, DWORD PTR _nSizeW$[ebp]
	mov	DWORD PTR $T211264[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pszNameA$[ebp]
	call	??1?$CW2AEX@$0IA@@ATL@@QAE@XZ		; ATL::CW2AEX<128>::~CW2AEX<128>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pszBufferA$[ebp]
	call	??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>
	mov	eax, DWORD PTR $T211264[ebp]
$L198756:

; 179  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L211277
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$L211277:
	DD	2
	DD	$L211276
$L211276:
	DD	-160					; ffffff60H
	DD	132					; 00000084H
	DD	$L211271
	DD	-300					; fffffed4H
	DD	132					; 00000084H
	DD	$L211272
$L211272:
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	65					; 00000041H
	DB	0
$L211271:
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	65					; 00000041H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L211265:
	lea	ecx, DWORD PTR _pszBufferA$[ebp]
	jmp	??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>
$L211266:
	lea	ecx, DWORD PTR _pszNameA$[ebp]
	jmp	??1?$CW2AEX@$0IA@@ATL@@QAE@XZ		; ATL::CW2AEX<128>::~CW2AEX<128>
__ehhandler$?GetEnvironmentVariableWFake@ATL@@YGKPBGPAGK@Z:
	mov	eax, OFFSET FLAT:$T211270
	jmp	___CxxFrameHandler
text$x	ENDS
?GetEnvironmentVariableWFake@ATL@@YGKPBGPAGK@Z ENDP	; ATL::GetEnvironmentVariableWFake
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetConversionACP@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetConversionACP, COMDAT

; 157  : {

	push	ebp
	mov	ebp, esp
	push	esi

; 158  : 	return( g_pfnGetThreadACP() );

	mov	esi, esp
	call	DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	cmp	esi, esp
	call	__RTC_CheckEsp

; 159  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?_AtlGetConversionACP@ATL@@YGIXZ ENDP			; ATL::_AtlGetConversionACP
_TEXT	ENDS
PUBLIC	?CompareStringWFake@ATL@@YGHKKPBGH0H@Z		; ATL::CompareStringWFake
EXTRN	__imp__CompareStringW@24:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?CompareStringWThunk@ATL@@YGHKKPBGH0H@Z
_TEXT	SEGMENT
_lcid$ = 8						; size = 4
_dwFlags$ = 12						; size = 4
_pszString1$ = 16					; size = 4
_nLength1$ = 20						; size = 4
_pszString2$ = 24					; size = 4
_nLength2$ = 28						; size = 4
?CompareStringWThunk@ATL@@YGHKKPBGH0H@Z PROC NEAR	; ATL::CompareStringWThunk, COMDAT

; 216  : {

	push	ebp
	mov	ebp, esp
	push	esi

; 217  : 	_AtlInstallStringThunk(reinterpret_cast<void**>(&_strthunks.pfnCompareStringW), CompareStringWFake, ::CompareStringW);

	mov	eax, DWORD PTR __imp__CompareStringW@24
	push	eax
	push	OFFSET FLAT:?CompareStringWFake@ATL@@YGHKKPBGH0H@Z ; ATL::CompareStringWFake
	push	OFFSET FLAT:?_strthunks@ATL@@3U_AtlStringThunks@1@A ; ATL::_strthunks
	call	?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z ; ATL::_AtlInstallStringThunk
	add	esp, 12					; 0000000cH

; 218  : 
; 219  : 	return _strthunks.pfnCompareStringW(lcid, dwFlags, pszString1, nLength1, pszString2, nLength2);

	mov	esi, esp
	mov	ecx, DWORD PTR _nLength2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszString2$[ebp]
	push	edx
	mov	eax, DWORD PTR _nLength1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszString1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dwFlags$[ebp]
	push	edx
	mov	eax, DWORD PTR _lcid$[ebp]
	push	eax
	call	DWORD PTR ?_strthunks@ATL@@3U_AtlStringThunks@1@A
	cmp	esi, esp
	call	__RTC_CheckEsp

; 220  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	24					; 00000018H
?CompareStringWThunk@ATL@@YGHKKPBGH0H@Z ENDP		; ATL::CompareStringWThunk
_TEXT	ENDS
PUBLIC	?AtlW2AHelper@@YGPADPADPBGHI@Z			; AtlW2AHelper
PUBLIC	??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
PUBLIC	?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate
PUBLIC	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
PUBLIC	?AtlThrow@ATL@@YGXJ@Z				; ATL::AtlThrow
PUBLIC	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
EXTRN	__imp__lstrlenW@4:NEAR
EXTRN	__alloca_probe:NEAR
EXTRN	__imp__CompareStringA@24:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T211305 DD	0ffffffffH
	DD	FLAT:$L211297
$T211299 DD	019930520H
	DD	01H
	DD	FLAT:$T211305
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?CompareStringWFake@ATL@@YGHKKPBGH0H@Z
_TEXT	SEGMENT
tv147 = -76						; size = 4
tv142 = -72						; size = 4
tv149 = -68						; size = 4
tv89 = -64						; size = 4
tv84 = -60						; size = 4
tv91 = -56						; size = 4
$T211296 = -52						; size = 4
_pszAString2$ = -48					; size = 4
_pszAString1$ = -44					; size = 4
__AtlSafeAllocaManager$ = -36				; size = 4
__lpa_ex$ = -28						; size = 4
__lpw_ex$ = -24						; size = 4
__acp_ex$ = -20						; size = 4
__convert_ex$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_lcid$ = 8						; size = 4
_dwFlags$ = 12						; size = 4
_pszString1$ = 16					; size = 4
_nLength1$ = 20						; size = 4
_pszString2$ = 24					; size = 4
_nLength2$ = 28						; size = 4
?CompareStringWFake@ATL@@YGHKKPBGH0H@Z PROC NEAR	; ATL::CompareStringWFake, COMDAT

; 192  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CompareStringWFake@ATL@@YGHKKPBGH0H@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 64					; 00000040H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-76]
	mov	ecx, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 193  : 	USES_CONVERSION_EX;

	mov	DWORD PTR __convert_ex$[ebp], 0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	mov	DWORD PTR __acp_ex$[ebp], eax
	mov	DWORD PTR __lpw_ex$[ebp], 0
	mov	DWORD PTR __lpa_ex$[ebp], 0
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	call	??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 194  : 	
; 195  : 	LPCSTR pszAString1 = NULL;

	mov	DWORD PTR _pszAString1$[ebp], 0

; 196  : 	if(pszString1 != NULL)

	cmp	DWORD PTR _pszString1$[ebp], 0
	je	$L198811

; 197  : 	{
; 198  : 		pszAString1 = W2A_EX(pszString1,_ATL_SAFE_ALLOCA_DEF_THRESHOLD);

	mov	eax, DWORD PTR _pszString1$[ebp]
	mov	DWORD PTR __lpw_ex$[ebp], eax
	cmp	DWORD PTR __lpw_ex$[ebp], 0
	jne	SHORT $L211290
	mov	DWORD PTR tv91[ebp], 0
	jmp	SHORT $L211291
$L211290:
	mov	esi, esp
	mov	ecx, DWORD PTR __lpw_ex$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	lea	edx, DWORD PTR [eax+eax+2]
	mov	DWORD PTR __convert_ex$[ebp], edx
	cmp	DWORD PTR __convert_ex$[ebp], 1024	; 00000400H
	jg	SHORT $L211288
	mov	eax, DWORD PTR __convert_ex$[ebp]
	push	eax
	call	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $L211288
	mov	eax, DWORD PTR __convert_ex$[ebp]
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv84[ebp], esp
	mov	edx, DWORD PTR tv84[ebp]
	mov	DWORD PTR tv89[ebp], edx
	jmp	SHORT $L211289
$L211288:
	mov	eax, DWORD PTR __convert_ex$[ebp]
	push	eax
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	call	?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate
	mov	DWORD PTR tv89[ebp], eax
$L211289:
	mov	ecx, DWORD PTR __acp_ex$[ebp]
	push	ecx
	mov	edx, DWORD PTR __convert_ex$[ebp]
	push	edx
	mov	eax, DWORD PTR __lpw_ex$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv89[ebp]
	push	ecx
	call	?AtlW2AHelper@@YGPADPADPBGHI@Z		; AtlW2AHelper
	mov	DWORD PTR tv91[ebp], eax
$L211291:
	mov	edx, DWORD PTR tv91[ebp]
	mov	DWORD PTR _pszAString1$[ebp], edx

; 199  : 		if(pszAString1 == NULL)

	cmp	DWORD PTR _pszAString1$[ebp], 0
	jne	SHORT $L198811

; 200  : 			AtlThrow(E_OUTOFMEMORY);

	push	-2147024882				; 8007000eH
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L198811:

; 201  : 	}
; 202  : 
; 203  : 	LPCSTR pszAString2 = NULL;

	mov	DWORD PTR _pszAString2$[ebp], 0

; 204  : 	if(pszString2 != NULL)

	cmp	DWORD PTR _pszString2$[ebp], 0
	je	$L198817

; 205  : 	{
; 206  : 		pszAString2 = W2A_EX(pszString2,_ATL_SAFE_ALLOCA_DEF_THRESHOLD);

	mov	eax, DWORD PTR _pszString2$[ebp]
	mov	DWORD PTR __lpw_ex$[ebp], eax
	cmp	DWORD PTR __lpw_ex$[ebp], 0
	jne	SHORT $L211294
	mov	DWORD PTR tv149[ebp], 0
	jmp	SHORT $L211295
$L211294:
	mov	esi, esp
	mov	ecx, DWORD PTR __lpw_ex$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	lea	edx, DWORD PTR [eax+eax+2]
	mov	DWORD PTR __convert_ex$[ebp], edx
	cmp	DWORD PTR __convert_ex$[ebp], 1024	; 00000400H
	jg	SHORT $L211292
	mov	eax, DWORD PTR __convert_ex$[ebp]
	push	eax
	call	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $L211292
	mov	eax, DWORD PTR __convert_ex$[ebp]
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv142[ebp], esp
	mov	edx, DWORD PTR tv142[ebp]
	mov	DWORD PTR tv147[ebp], edx
	jmp	SHORT $L211293
$L211292:
	mov	eax, DWORD PTR __convert_ex$[ebp]
	push	eax
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	call	?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate
	mov	DWORD PTR tv147[ebp], eax
$L211293:
	mov	ecx, DWORD PTR __acp_ex$[ebp]
	push	ecx
	mov	edx, DWORD PTR __convert_ex$[ebp]
	push	edx
	mov	eax, DWORD PTR __lpw_ex$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv147[ebp]
	push	ecx
	call	?AtlW2AHelper@@YGPADPADPBGHI@Z		; AtlW2AHelper
	mov	DWORD PTR tv149[ebp], eax
$L211295:
	mov	edx, DWORD PTR tv149[ebp]
	mov	DWORD PTR _pszAString2$[ebp], edx

; 207  : 		if(pszAString2 == NULL)

	cmp	DWORD PTR _pszAString2$[ebp], 0
	jne	SHORT $L198817

; 208  : 			AtlThrow(E_OUTOFMEMORY);

	push	-2147024882				; 8007000eH
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L198817:

; 209  : 	}
; 210  : 
; 211  : 	return ::CompareStringA(lcid, dwFlags, pszAString1, nLength1, pszAString2, nLength2);

	mov	esi, esp
	mov	eax, DWORD PTR _nLength2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszAString2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nLength1$[ebp]
	push	edx
	mov	eax, DWORD PTR _pszAString1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dwFlags$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lcid$[ebp]
	push	edx
	call	DWORD PTR __imp__CompareStringA@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T211296[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	call	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
	mov	eax, DWORD PTR $T211296[ebp]
$L211287:

; 212  : }

	lea	esp, DWORD PTR [ebp-84]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L211304
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
$L211304:
	DD	1
	DD	$L211303
$L211303:
	DD	-36					; ffffffdcH
	DD	4
	DD	$L211301
$L211301:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	116					; 00000074H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	97					; 00000061H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	77					; 0000004dH
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L211297:
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	jmp	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
__ehhandler$?CompareStringWFake@ATL@@YGHKKPBGH0H@Z:
	mov	eax, OFFSET FLAT:$T211299
	jmp	___CxxFrameHandler
text$x	ENDS
?CompareStringWFake@ATL@@YGHKKPBGH0H@Z ENDP		; ATL::CompareStringWFake
EXTRN	__resetstkoflw:NEAR
EXTRN	__except_handler3:NEAR
;	COMDAT CONST
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
CONST	SEGMENT
$T211316 DD	0ffffffffH
	DD	FLAT:$L211311
	DD	FLAT:$L211312
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z
_TEXT	SEGMENT
tv65 = -48						; size = 4
$T211315 = -44						; size = 4
_p$75736 = -36						; size = 4
_bStackAvailable$ = -25					; size = 1
__$SEHRec$ = -24					; size = 24
_Size$ = 8						; size = 4
?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z PROC NEAR ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable, COMDAT

; 331  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	OFFSET FLAT:$T211316
	push	OFFSET FLAT:__except_handler3
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	add	esp, -32				; ffffffe0H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-48], eax
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR __$SEHRec$[ebp], esp

; 332  :     bool bStackAvailable = true;

	mov	BYTE PTR _bStackAvailable$[ebp], 1

; 333  : 
; 334  :     __try

	mov	DWORD PTR __$SEHRec$[ebp+20], 0

; 335  :     {
; 336  :         PVOID p = _alloca(Size + _ATL_STACK_MARGIN);

	mov	eax, DWORD PTR _Size$[ebp]
	add	eax, 8195				; 00002003H
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv65[ebp], esp
	mov	DWORD PTR __$SEHRec$[ebp], esp
	mov	eax, DWORD PTR tv65[ebp]
	mov	DWORD PTR _p$75736[ebp], eax
	mov	DWORD PTR __$SEHRec$[ebp+20], -1
	jmp	SHORT $L211314
$L211311:
$L211323:

; 337  :         (p);
; 338  :     }
; 339  :     __except ((EXCEPTION_STACK_OVERFLOW == GetExceptionCode()) ?
; 340  :                    EXCEPTION_EXECUTE_HANDLER :
; 341  :                    EXCEPTION_CONTINUE_SEARCH)

	mov	ecx, DWORD PTR __$SEHRec$[ebp+4]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T211315[ebp], eax
	mov	eax, DWORD PTR $T211315[ebp]
	sub	eax, -1073741571			; c00000fdH
	neg	eax
	sbb	eax, eax
	inc	eax
$L211313:
$L211322:
	ret	0
$L211312:
	mov	esp, DWORD PTR __$SEHRec$[ebp]

; 342  :     {
; 343  :         bStackAvailable = false;

	mov	BYTE PTR _bStackAvailable$[ebp], 0

; 344  :         _resetstkoflw();

	call	__resetstkoflw
	mov	DWORD PTR __$SEHRec$[ebp+20], -1
$L211314:

; 345  :     }
; 346  :     return bStackAvailable;

	mov	al, BYTE PTR _bStackAvailable$[ebp]
$L211310:

; 347  : }

	lea	esp, DWORD PTR [ebp-60]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L211321
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$SEHRec$[ebp+8]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$L211321:
	DD	1
	DD	$L211320
$L211320:
	DD	-36					; ffffffdcH
	DD	4
	DD	$L211318
$L211318:
	DB	112					; 00000070H
	DB	0
?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
_TEXT	ENDS
PUBLIC	??_C@_08DMHHBMMN@lpa?5?$CB?$DN?50?$AA@		; `string'
PUBLIC	??_C@_0FA@OHHMODBN@C?3?2Program?5Files?2Microsoft?5Visua@ ; `string'
PUBLIC	??_C@_08DIHJLFDJ@lpw?5?$CB?$DN?50?$AA@		; `string'
PUBLIC	??_C@_01GBGANLPD@0?$AA@				; `string'
EXTRN	__imp__WideCharToMultiByte@32:NEAR
;	COMDAT ??_C@_08DIHJLFDJ@lpw?5?$CB?$DN?50?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
CONST	SEGMENT
??_C@_08DIHJLFDJ@lpw?5?$CB?$DN?50?$AA@ DB 'lpw != 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FA@OHHMODBN@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT
??_C@_0FA@OHHMODBN@C?3?2Program?5Files?2Microsoft?5Visua@ DB 'C:\Program '
	DB	'Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\include\at'
	DB	'lconv.h', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08DMHHBMMN@lpa?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_08DMHHBMMN@lpa?5?$CB?$DN?50?$AA@ DB 'lpa != 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01GBGANLPD@0?$AA@
CONST	SEGMENT
??_C@_01GBGANLPD@0?$AA@ DB '0', 00H			; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGHI@Z
_TEXT	SEGMENT
_ret$ = -4						; size = 4
_lpa$ = 8						; size = 4
_lpw$ = 12						; size = 4
_nChars$ = 16						; size = 4
_acp$ = 20						; size = 4
?AtlW2AHelper@@YGPADPADPBGHI@Z PROC NEAR		; AtlW2AHelper, COMDAT

; 573  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 574  : 	ATLASSERT(lpw != NULL);

	cmp	DWORD PTR _lpw$[ebp], 0
	jne	SHORT $L211328
	push	OFFSET FLAT:??_C@_08DIHJLFDJ@lpw?5?$CB?$DN?50?$AA@
	push	0
	push	574					; 0000023eH
	push	OFFSET FLAT:??_C@_0FA@OHHMODBN@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211328
	int	3
$L211328:

; 575  : 	ATLASSERT(lpa != NULL);

	cmp	DWORD PTR _lpa$[ebp], 0
	jne	SHORT $L211329
	push	OFFSET FLAT:??_C@_08DMHHBMMN@lpa?5?$CB?$DN?50?$AA@
	push	0
	push	575					; 0000023fH
	push	OFFSET FLAT:??_C@_0FA@OHHMODBN@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211329
	int	3
$L211329:

; 576  : 	if (lpa == NULL || lpw == NULL)

	cmp	DWORD PTR _lpa$[ebp], 0
	je	SHORT $L75957
	cmp	DWORD PTR _lpw$[ebp], 0
	jne	SHORT $L75956
$L75957:

; 577  : 		return NULL;

	xor	eax, eax
	jmp	SHORT $L75953
$L75956:

; 578  : 	// verify that no illegal character present
; 579  : 	// since lpa was allocated based on the size of lpw
; 580  : 	// don't worry about the number of chars
; 581  : 	lpa[0] = '\0';

	mov	edx, DWORD PTR _lpa$[ebp]
	mov	BYTE PTR [edx], 0

; 582  : 	int ret = WideCharToMultiByte(acp, 0, lpw, -1, lpa, nChars, NULL, NULL);

	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _nChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpa$[ebp]
	push	ecx
	push	-1
	mov	edx, DWORD PTR _lpw$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _acp$[ebp]
	push	eax
	call	DWORD PTR __imp__WideCharToMultiByte@32
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ret$[ebp], eax

; 583  : 	if(ret == 0)

	cmp	DWORD PTR _ret$[ebp], 0
	jne	SHORT $L75959

; 584  : 	{
; 585  : 		ATLASSERT(FALSE);

	xor	ecx, ecx
	jne	SHORT $L211330
	push	OFFSET FLAT:??_C@_01GBGANLPD@0?$AA@
	push	0
	push	585					; 00000249H
	push	OFFSET FLAT:??_C@_0FA@OHHMODBN@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211330
	int	3
$L211330:

; 586  : 		return NULL;

	xor	eax, eax
	jmp	SHORT $L75953
$L75959:

; 587  : 	}
; 588  : 	return lpa;

	mov	eax, DWORD PTR _lpa$[ebp]
$L75953:

; 589  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?AtlW2AHelper@@YGPADPADPBGHI@Z ENDP			; AtlW2AHelper
_TEXT	ENDS
PUBLIC	??BCTraceCategory@ATL@@QBEKXZ			; ATL::CTraceCategory::operator unsigned long
PUBLIC	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
PUBLIC	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ	; ATL::CTraceFileAndLineInfo::operator()
PUBLIC	??0CAtlException@ATL@@QAE@J@Z			; ATL::CAtlException::CAtlException
PUBLIC	??_C@_0FC@CFIFHLCH@C?3?2Program?5Files?2Microsoft?5Visua@ ; `string'
PUBLIC	??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@ ; `string'
PUBLIC	__TI1?AVCAtlException@ATL@@
PUBLIC	__CTA1?AVCAtlException@ATL@@
PUBLIC	??_R0?AVCAtlException@ATL@@@8			; ATL::CAtlException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVCAtlException@ATL@@@84
EXTRN	?atlTraceException@ATL@@3VCTraceCategory@1@A:DWORD ; ATL::atlTraceException
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
EXTRN	__CxxThrowException@8:NEAR
;	COMDAT ??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlexcept.h
CONST	SEGMENT
??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@ DB 'AtlThrow: hr '
	DB	'= 0x%x', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FC@CFIFHLCH@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT
??_C@_0FC@CFIFHLCH@C?3?2Program?5Files?2Microsoft?5Visua@ DB 'C:\Program '
	DB	'Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\include\at'
	DB	'lexcept.h', 00H				; `string'
CONST	ENDS
;	COMDAT __TI1?AVCAtlException@ATL@@
xdata$x	SEGMENT
__TI1?AVCAtlException@ATL@@ DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA1?AVCAtlException@ATL@@
xdata$x	ENDS
;	COMDAT __CTA1?AVCAtlException@ATL@@
xdata$x	SEGMENT
__CTA1?AVCAtlException@ATL@@ DD 01H
	DD	FLAT:__CT??_R0?AVCAtlException@ATL@@@84
xdata$x	ENDS
;	COMDAT __CT??_R0?AVCAtlException@ATL@@@84
xdata$x	SEGMENT
__CT??_R0?AVCAtlException@ATL@@@84 DD 00H
	DD	FLAT:??_R0?AVCAtlException@ATL@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0?AVCAtlException@ATL@@@8
_DATA	SEGMENT
??_R0?AVCAtlException@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::CAtlException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAtlException@ATL@@', 00H
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT
$T211335 = -16						; size = 4
$T211334 = -12						; size = 4
$T211333 = -8						; size = 8
_hr$ = 8						; size = 4
?AtlThrow@ATL@@YGXJ@Z PROC NEAR				; ATL::AtlThrow, COMDAT

; 61   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 62   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );

	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6?$AA@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceException@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceException
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	62					; 0000003eH
	push	OFFSET FLAT:??_C@_0FC@CFIFHLCH@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T211333[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H

; 63   : #ifdef _AFX
; 64   : 	if( hr == E_OUTOFMEMORY )
; 65   : 	{
; 66   : 		AfxThrowMemoryException();
; 67   : 	}
; 68   : 	else
; 69   : 	{
; 70   : 		AfxThrowOleException( hr );
; 71   : 	}
; 72   : #else
; 73   : 	throw CAtlException( hr );

	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T211335[ebp]
	call	??0CAtlException@ATL@@QAE@J@Z		; ATL::CAtlException::CAtlException
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T211334[ebp], edx
	push	OFFSET FLAT:__TI1?AVCAtlException@ATL@@
	lea	eax, DWORD PTR $T211334[ebp]
	push	eax
	call	__CxxThrowException@8
$L211332:

; 74   : #endif
; 75   : };

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AtlThrow@ATL@@YGXJ@Z ENDP				; ATL::AtlThrow
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atltrace.h
_TEXT	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszFileName$ = 8					; size = 4
_nLineNo$ = 12						; size = 4
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z PROC NEAR	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo, COMDAT
; _this$ = ecx

; 158  : 	{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pszFileName$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _nLineNo$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ENDP		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
_TEXT	ENDS
PUBLIC	?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z		; ATL::CTrace::TraceV
EXTRN	?s_trace@CTrace@ATL@@2V12@A:QWORD		; ATL::CTrace::s_trace
; Function compile flags: /Odt /RTCsu
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ
_TEXT	SEGMENT
_ptr$ = -4						; size = 4
_this$ = 8						; size = 4
_dwCategory$ = 12					; size = 4
_nLevel$ = 16						; size = 4
_pszFmt$ = 20						; size = 4
??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ PROC NEAR	; ATL::CTraceFileAndLineInfo::operator(), COMDAT

; 161  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 162  : 		va_list ptr; va_start(ptr, pszFmt);

	lea	eax, DWORD PTR _pszFmt$[ebp+4]
	mov	DWORD PTR _ptr$[ebp], eax

; 163  : 		ATL::CTrace::s_trace.TraceV(m_pszFileName, m_nLineNo, dwCategory, nLevel, pszFmt, ptr);

	mov	ecx, DWORD PTR _ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszFmt$[ebp]
	push	edx
	mov	eax, DWORD PTR _nLevel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dwCategory$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET FLAT:?s_trace@CTrace@ATL@@2V12@A
	call	?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z	; ATL::CTrace::TraceV
	add	esp, 28					; 0000001cH

; 164  : 		va_end(ptr);

	mov	DWORD PTR _ptr$[ebp], 0

; 165  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ENDP		; ATL::CTraceFileAndLineInfo::operator()
_TEXT	ENDS
EXTRN	_AtlTraceVA:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pszFileName$ = 12					; size = 4
_nLine$ = 16						; size = 4
_dwCategory$ = 20					; size = 4
_nLevel$ = 24						; size = 4
_pszFmt$ = 28						; size = 4
_args$ = 32						; size = 4
?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z PROC NEAR		; ATL::CTrace::TraceV, COMDAT

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		AtlTraceVA(m_dwModule, pszFileName, nLine, dwCategory, nLevel, pszFmt, args);

	mov	eax, DWORD PTR _args$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszFmt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nLevel$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwCategory$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nLine$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszFileName$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_AtlTraceVA
	add	esp, 28					; 0000001cH

; 123  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?TraceV@CTrace@ATL@@QBAXPBDHKI0PAD@Z ENDP		; ATL::CTrace::TraceV
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BCTraceCategory@ATL@@QBEKXZ PROC NEAR			; ATL::CTraceCategory::operator unsigned long, COMDAT
; _this$ = ecx

; 202  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 203  : 	return( m_dwCategory );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 204  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??BCTraceCategory@ATL@@QBEKXZ ENDP			; ATL::CTraceCategory::operator unsigned long
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlexcept.h
_TEXT	ENDS
;	COMDAT ??0CAtlException@ATL@@QAE@J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hr$ = 8						; size = 4
??0CAtlException@ATL@@QAE@J@Z PROC NEAR			; ATL::CAtlException::CAtlException, COMDAT
; _this$ = ecx

; 40   : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR [eax], ecx

; 41   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CAtlException@ATL@@QAE@J@Z ENDP			; ATL::CAtlException::CAtlException
_TEXT	ENDS
PUBLIC	?GetStringTypeExWFake@ATL@@YGHKKPBGHPAG@Z	; ATL::GetStringTypeExWFake
EXTRN	__imp__GetStringTypeExW@20:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?GetStringTypeExWThunk@ATL@@YGHKKPBGHPAG@Z
_TEXT	SEGMENT
_lcid$ = 8						; size = 4
_dwInfoType$ = 12					; size = 4
_pszSrc$ = 16						; size = 4
_nLength$ = 20						; size = 4
_pwCharType$ = 24					; size = 4
?GetStringTypeExWThunk@ATL@@YGHKKPBGHPAG@Z PROC NEAR	; ATL::GetStringTypeExWThunk, COMDAT

; 240  : {

	push	ebp
	mov	ebp, esp
	push	esi

; 241  : 	_AtlInstallStringThunk(reinterpret_cast<void**>(&_strthunks.pfnGetStringTypeExW), GetStringTypeExWFake, ::GetStringTypeExW);

	mov	eax, DWORD PTR __imp__GetStringTypeExW@20
	push	eax
	push	OFFSET FLAT:?GetStringTypeExWFake@ATL@@YGHKKPBGHPAG@Z ; ATL::GetStringTypeExWFake
	push	OFFSET FLAT:?_strthunks@ATL@@3U_AtlStringThunks@1@A+4
	call	?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z ; ATL::_AtlInstallStringThunk
	add	esp, 12					; 0000000cH

; 242  : 
; 243  : 	return _strthunks.pfnGetStringTypeExW(lcid, dwInfoType, pszSrc, nLength, pwCharType);

	mov	esi, esp
	mov	ecx, DWORD PTR _pwCharType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dwInfoType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lcid$[ebp]
	push	edx
	call	DWORD PTR ?_strthunks@ATL@@3U_AtlStringThunks@1@A+4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 244  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	20					; 00000014H
?GetStringTypeExWThunk@ATL@@YGHKKPBGHPAG@Z ENDP		; ATL::GetStringTypeExWThunk
_TEXT	ENDS
EXTRN	__imp__GetStringTypeExA@20:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T211361 DD	0ffffffffH
	DD	FLAT:$L211353
$T211355 DD	019930520H
	DD	01H
	DD	FLAT:$T211361
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?GetStringTypeExWFake@ATL@@YGHKKPBGHPAG@Z
_TEXT	SEGMENT
$T211352 = -164						; size = 4
_pszA$ = -156						; size = 132
_nLengthA$ = -20					; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_lcid$ = 8						; size = 4
_dwInfoType$ = 12					; size = 4
_pszSrc$ = 16						; size = 4
_nLength$ = 20						; size = 4
_pwCharType$ = 24					; size = 4
?GetStringTypeExWFake@ATL@@YGHKKPBGHPAG@Z PROC NEAR	; ATL::GetStringTypeExWFake, COMDAT

; 224  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetStringTypeExWFake@ATL@@YGHKKPBGHPAG@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 152				; 00000098H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-164]
	mov	ecx, 38					; 00000026H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 225  : 	int nLengthA;
; 226  : 	CTempBuffer<char> pszA;

	lea	ecx, DWORD PTR _pszA$[ebp]
	call	??0?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::CTempBuffer<char,128,ATL::CCRTAllocator>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 227  : 
; 228  : 	nLengthA = ::WideCharToMultiByte(_AtlGetConversionACP(), 0, pszSrc, nLength, NULL, 0, NULL, NULL);

	mov	esi, esp
	push	0
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _nLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszSrc$[ebp]
	push	ecx
	push	0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	push	eax
	call	DWORD PTR __imp__WideCharToMultiByte@32
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nLengthA$[ebp], eax

; 229  : 	pszA.Allocate(nLengthA);

	mov	edx, DWORD PTR _nLengthA$[ebp]
	push	edx
	lea	ecx, DWORD PTR _pszA$[ebp]
	call	?Allocate@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::Allocate

; 230  : 	::WideCharToMultiByte(_AtlGetConversionACP(), 0, pszSrc, nLength, pszA, nLengthA, NULL, NULL);

	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _nLengthA$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pszA$[ebp]
	call	??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::operator char *
	push	eax
	mov	ecx, DWORD PTR _nLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszSrc$[ebp]
	push	edx
	push	0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	push	eax
	call	DWORD PTR __imp__WideCharToMultiByte@32
	cmp	esi, esp
	call	__RTC_CheckEsp

; 231  : 
; 232  : 	if (nLength == -1)

	cmp	DWORD PTR _nLength$[ebp], -1
	jne	SHORT $L198843

; 233  : 		nLengthA = -1;

	mov	DWORD PTR _nLengthA$[ebp], -1
$L198843:

; 234  : 
; 235  : 	return ::GetStringTypeExA(lcid, dwInfoType, pszA, nLengthA, pwCharType);

	mov	esi, esp
	mov	eax, DWORD PTR _pwCharType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nLengthA$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _pszA$[ebp]
	call	??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::operator char *
	push	eax
	mov	edx, DWORD PTR _dwInfoType$[ebp]
	push	edx
	mov	eax, DWORD PTR _lcid$[ebp]
	push	eax
	call	DWORD PTR __imp__GetStringTypeExA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T211352[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pszA$[ebp]
	call	??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>
	mov	eax, DWORD PTR $T211352[ebp]

; 236  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L211360
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	add	esp, 164				; 000000a4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$L211360:
	DD	1
	DD	$L211359
$L211359:
	DD	-156					; ffffff64H
	DD	132					; 00000084H
	DD	$L211356
$L211356:
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	65					; 00000041H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L211353:
	lea	ecx, DWORD PTR _pszA$[ebp]
	jmp	??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>
__ehhandler$?GetStringTypeExWFake@ATL@@YGHKKPBGHPAG@Z:
	mov	eax, OFFSET FLAT:$T211355
	jmp	___CxxFrameHandler
text$x	ENDS
?GetStringTypeExWFake@ATL@@YGHKKPBGHPAG@Z ENDP		; ATL::GetStringTypeExWFake
PUBLIC	?lstrcmpiWFake@ATL@@YGHPBG0@Z			; ATL::lstrcmpiWFake
EXTRN	__imp__lstrcmpiW@8:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?lstrcmpiWThunk@ATL@@YGHPBG0@Z
_TEXT	SEGMENT
_psz1$ = 8						; size = 4
_psz2$ = 12						; size = 4
?lstrcmpiWThunk@ATL@@YGHPBG0@Z PROC NEAR		; ATL::lstrcmpiWThunk, COMDAT

; 254  : {

	push	ebp
	mov	ebp, esp
	push	esi

; 255  : 	_AtlInstallStringThunk(reinterpret_cast<void**>(&_strthunks.pfnlstrcmpiW), lstrcmpiWFake, ::lstrcmpiW);

	mov	eax, DWORD PTR __imp__lstrcmpiW@8
	push	eax
	push	OFFSET FLAT:?lstrcmpiWFake@ATL@@YGHPBG0@Z ; ATL::lstrcmpiWFake
	push	OFFSET FLAT:?_strthunks@ATL@@3U_AtlStringThunks@1@A+8
	call	?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z ; ATL::_AtlInstallStringThunk
	add	esp, 12					; 0000000cH

; 256  : 
; 257  : 	return _strthunks.pfnlstrcmpiW(psz1, psz2);

	mov	esi, esp
	mov	ecx, DWORD PTR _psz2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _psz1$[ebp]
	push	edx
	call	DWORD PTR ?_strthunks@ATL@@3U_AtlStringThunks@1@A+8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 258  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?lstrcmpiWThunk@ATL@@YGHPBG0@Z ENDP			; ATL::lstrcmpiWThunk
_TEXT	ENDS
EXTRN	__imp__lstrcmpiA@8:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?lstrcmpiWFake@ATL@@YGHPBG0@Z
_TEXT	SEGMENT
tv91 = -32						; size = 4
tv94 = -28						; size = 4
tv76 = -24						; size = 4
tv79 = -20						; size = 4
__lpa$ = -16						; size = 4
__lpw$ = -12						; size = 4
__acp$ = -8						; size = 4
__convert$ = -4						; size = 4
_psz1$ = 8						; size = 4
_psz2$ = 12						; size = 4
?lstrcmpiWFake@ATL@@YGHPBG0@Z PROC NEAR			; ATL::lstrcmpiWFake, COMDAT

; 247  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 248  : 	USES_CONVERSION;

	mov	DWORD PTR __convert$[ebp], 0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	mov	DWORD PTR __acp$[ebp], eax
	mov	DWORD PTR __lpw$[ebp], 0
	mov	DWORD PTR __lpa$[ebp], 0

; 249  : 
; 250  : 	return ::lstrcmpiA(W2A(psz1), W2A(psz2));

	mov	eax, DWORD PTR _psz2$[ebp]
	mov	DWORD PTR __lpw$[ebp], eax
	cmp	DWORD PTR __lpw$[ebp], 0
	jne	SHORT $L211368
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $L211369
$L211368:
	mov	esi, esp
	mov	ecx, DWORD PTR __lpw$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	lea	edx, DWORD PTR [eax+eax+2]
	mov	DWORD PTR __convert$[ebp], edx
	mov	eax, DWORD PTR __convert$[ebp]
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv76[ebp], esp
	mov	eax, DWORD PTR __acp$[ebp]
	push	eax
	mov	ecx, DWORD PTR __convert$[ebp]
	push	ecx
	mov	edx, DWORD PTR __lpw$[ebp]
	push	edx
	mov	eax, DWORD PTR tv76[ebp]
	push	eax
	call	?AtlW2AHelper@@YGPADPADPBGHI@Z		; AtlW2AHelper
	mov	DWORD PTR tv79[ebp], eax
$L211369:
	mov	ecx, DWORD PTR _psz1$[ebp]
	mov	DWORD PTR __lpw$[ebp], ecx
	cmp	DWORD PTR __lpw$[ebp], 0
	jne	SHORT $L211370
	mov	DWORD PTR tv94[ebp], 0
	jmp	SHORT $L211371
$L211370:
	mov	esi, esp
	mov	edx, DWORD PTR __lpw$[ebp]
	push	edx
	call	DWORD PTR __imp__lstrlenW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	lea	eax, DWORD PTR [eax+eax+2]
	mov	DWORD PTR __convert$[ebp], eax
	mov	eax, DWORD PTR __convert$[ebp]
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv91[ebp], esp
	mov	ecx, DWORD PTR __acp$[ebp]
	push	ecx
	mov	edx, DWORD PTR __convert$[ebp]
	push	edx
	mov	eax, DWORD PTR __lpw$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv91[ebp]
	push	ecx
	call	?AtlW2AHelper@@YGPADPADPBGHI@Z		; AtlW2AHelper
	mov	DWORD PTR tv94[ebp], eax
$L211371:
	mov	esi, esp
	mov	edx, DWORD PTR tv79[ebp]
	push	edx
	mov	eax, DWORD PTR tv94[ebp]
	push	eax
	call	DWORD PTR __imp__lstrcmpiA@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 251  : }

	lea	esp, DWORD PTR [ebp-36]
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?lstrcmpiWFake@ATL@@YGHPBG0@Z ENDP			; ATL::lstrcmpiWFake
_TEXT	ENDS
PUBLIC	?CharLowerWFake@ATL@@YGPAGPAG@Z			; ATL::CharLowerWFake
EXTRN	__imp__CharLowerW@4:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?CharLowerWThunk@ATL@@YGPAGPAG@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
?CharLowerWThunk@ATL@@YGPAGPAG@Z PROC NEAR		; ATL::CharLowerWThunk, COMDAT

; 273  : {

	push	ebp
	mov	ebp, esp
	push	esi

; 274  : 	_AtlInstallStringThunk(reinterpret_cast<void**>(&_strthunks.pfnCharLowerW), CharLowerWFake, ::CharLowerW);

	mov	eax, DWORD PTR __imp__CharLowerW@4
	push	eax
	push	OFFSET FLAT:?CharLowerWFake@ATL@@YGPAGPAG@Z ; ATL::CharLowerWFake
	push	OFFSET FLAT:?_strthunks@ATL@@3U_AtlStringThunks@1@A+12
	call	?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z ; ATL::_AtlInstallStringThunk
	add	esp, 12					; 0000000cH

; 275  : 
; 276  : 	return _strthunks.pfnCharLowerW(psz);

	mov	esi, esp
	mov	ecx, DWORD PTR _psz$[ebp]
	push	ecx
	call	DWORD PTR ?_strthunks@ATL@@3U_AtlStringThunks@1@A+12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 277  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?CharLowerWThunk@ATL@@YGPAGPAG@Z ENDP			; ATL::CharLowerWThunk
_TEXT	ENDS
PUBLIC	?AtlA2WHelper@@YGPAGPAGPBDHI@Z			; AtlA2WHelper
EXTRN	__imp__CharLowerA@4:NEAR
EXTRN	__imp__lstrlenA@4:NEAR
EXTRN	_wcscpy:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?CharLowerWFake@ATL@@YGPAGPAG@Z
_TEXT	SEGMENT
tv90 = -36						; size = 4
tv94 = -32						; size = 4
tv75 = -28						; size = 4
tv78 = -24						; size = 4
_pszA$ = -20						; size = 4
__lpa$ = -16						; size = 4
__lpw$ = -12						; size = 4
__acp$ = -8						; size = 4
__convert$ = -4						; size = 4
_psz$ = 8						; size = 4
?CharLowerWFake@ATL@@YGPAGPAG@Z PROC NEAR		; ATL::CharLowerWFake, COMDAT

; 261  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 262  : 	USES_CONVERSION;

	mov	DWORD PTR __convert$[ebp], 0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	mov	DWORD PTR __acp$[ebp], eax
	mov	DWORD PTR __lpw$[ebp], 0
	mov	DWORD PTR __lpa$[ebp], 0

; 263  : 	LPSTR pszA;
; 264  : 
; 265  : 	pszA = W2A(psz);

	mov	eax, DWORD PTR _psz$[ebp]
	mov	DWORD PTR __lpw$[ebp], eax
	cmp	DWORD PTR __lpw$[ebp], 0
	jne	SHORT $L211376
	mov	DWORD PTR tv78[ebp], 0
	jmp	SHORT $L211377
$L211376:
	mov	esi, esp
	mov	ecx, DWORD PTR __lpw$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	lea	edx, DWORD PTR [eax+eax+2]
	mov	DWORD PTR __convert$[ebp], edx
	mov	eax, DWORD PTR __convert$[ebp]
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv75[ebp], esp
	mov	eax, DWORD PTR __acp$[ebp]
	push	eax
	mov	ecx, DWORD PTR __convert$[ebp]
	push	ecx
	mov	edx, DWORD PTR __lpw$[ebp]
	push	edx
	mov	eax, DWORD PTR tv75[ebp]
	push	eax
	call	?AtlW2AHelper@@YGPADPADPBGHI@Z		; AtlW2AHelper
	mov	DWORD PTR tv78[ebp], eax
$L211377:
	mov	ecx, DWORD PTR tv78[ebp]
	mov	DWORD PTR _pszA$[ebp], ecx

; 266  : 	::CharLowerA(pszA);

	mov	esi, esp
	mov	edx, DWORD PTR _pszA$[ebp]
	push	edx
	call	DWORD PTR __imp__CharLowerA@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 267  : 	wcscpy(psz, A2W(pszA));

	mov	eax, DWORD PTR _pszA$[ebp]
	mov	DWORD PTR __lpa$[ebp], eax
	cmp	DWORD PTR __lpa$[ebp], 0
	jne	SHORT $L211378
	mov	DWORD PTR tv94[ebp], 0
	jmp	SHORT $L211379
$L211378:
	mov	esi, esp
	mov	ecx, DWORD PTR __lpa$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	mov	DWORD PTR __convert$[ebp], eax
	mov	eax, DWORD PTR __convert$[ebp]
	shl	eax, 1
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv90[ebp], esp
	mov	edx, DWORD PTR __acp$[ebp]
	push	edx
	mov	eax, DWORD PTR __convert$[ebp]
	push	eax
	mov	ecx, DWORD PTR __lpa$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv90[ebp]
	push	edx
	call	?AtlA2WHelper@@YGPAGPAGPBDHI@Z		; AtlA2WHelper
	mov	DWORD PTR tv94[ebp], eax
$L211379:
	mov	eax, DWORD PTR tv94[ebp]
	push	eax
	mov	ecx, DWORD PTR _psz$[ebp]
	push	ecx
	call	_wcscpy
	add	esp, 8

; 268  : 
; 269  : 	return psz;

	mov	eax, DWORD PTR _psz$[ebp]

; 270  : }

	lea	esp, DWORD PTR [ebp-40]
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?CharLowerWFake@ATL@@YGPAGPAG@Z ENDP			; ATL::CharLowerWFake
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDHI@Z
_TEXT	SEGMENT
_ret$ = -4						; size = 4
_lpw$ = 8						; size = 4
_lpa$ = 12						; size = 4
_nChars$ = 16						; size = 4
_acp$ = 20						; size = 4
?AtlA2WHelper@@YGPAGPAGPBDHI@Z PROC NEAR		; AtlA2WHelper, COMDAT

; 554  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 555  : 	ATLASSERT(lpa != NULL);

	cmp	DWORD PTR _lpa$[ebp], 0
	jne	SHORT $L211382
	push	OFFSET FLAT:??_C@_08DMHHBMMN@lpa?5?$CB?$DN?50?$AA@
	push	0
	push	555					; 0000022bH
	push	OFFSET FLAT:??_C@_0FA@OHHMODBN@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211382
	int	3
$L211382:

; 556  : 	ATLASSERT(lpw != NULL);

	cmp	DWORD PTR _lpw$[ebp], 0
	jne	SHORT $L211383
	push	OFFSET FLAT:??_C@_08DIHJLFDJ@lpw?5?$CB?$DN?50?$AA@
	push	0
	push	556					; 0000022cH
	push	OFFSET FLAT:??_C@_0FA@OHHMODBN@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211383
	int	3
$L211383:

; 557  : 	if (lpw == NULL || lpa == NULL)

	cmp	DWORD PTR _lpw$[ebp], 0
	je	SHORT $L75943
	cmp	DWORD PTR _lpa$[ebp], 0
	jne	SHORT $L75942
$L75943:

; 558  : 		return NULL;

	xor	eax, eax
	jmp	SHORT $L75936
$L75942:

; 559  : 	// verify that no illegal character present
; 560  : 	// since lpw was allocated based on the size of lpa
; 561  : 	// don't worry about the number of chars
; 562  : 	lpw[0] = '\0';

	mov	edx, DWORD PTR _lpw$[ebp]
	mov	WORD PTR [edx], 0

; 563  : 	int ret = MultiByteToWideChar(acp, 0, lpa, -1, lpw, nChars);

	mov	esi, esp
	mov	eax, DWORD PTR _nChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpw$[ebp]
	push	ecx
	push	-1
	mov	edx, DWORD PTR _lpa$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _acp$[ebp]
	push	eax
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ret$[ebp], eax

; 564  : 	if(ret == 0)

	cmp	DWORD PTR _ret$[ebp], 0
	jne	SHORT $L75945

; 565  : 	{
; 566  : 		ATLASSERT(FALSE);

	xor	ecx, ecx
	jne	SHORT $L211384
	push	OFFSET FLAT:??_C@_01GBGANLPD@0?$AA@
	push	0
	push	566					; 00000236H
	push	OFFSET FLAT:??_C@_0FA@OHHMODBN@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211384
	int	3
$L211384:

; 567  : 		return NULL;

	xor	eax, eax
	jmp	SHORT $L75936
$L75945:

; 568  : 	}		
; 569  : 	return lpw;

	mov	eax, DWORD PTR _lpw$[ebp]
$L75936:

; 570  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?AtlA2WHelper@@YGPAGPAGPBDHI@Z ENDP			; AtlA2WHelper
_TEXT	ENDS
PUBLIC	?CharUpperWFake@ATL@@YGPAGPAG@Z			; ATL::CharUpperWFake
EXTRN	__imp__CharUpperW@4:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?CharUpperWThunk@ATL@@YGPAGPAG@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
?CharUpperWThunk@ATL@@YGPAGPAG@Z PROC NEAR		; ATL::CharUpperWThunk, COMDAT

; 292  : {

	push	ebp
	mov	ebp, esp
	push	esi

; 293  : 	_AtlInstallStringThunk(reinterpret_cast<void**>(&_strthunks.pfnCharUpperW), CharUpperWFake, ::CharUpperW);

	mov	eax, DWORD PTR __imp__CharUpperW@4
	push	eax
	push	OFFSET FLAT:?CharUpperWFake@ATL@@YGPAGPAG@Z ; ATL::CharUpperWFake
	push	OFFSET FLAT:?_strthunks@ATL@@3U_AtlStringThunks@1@A+16
	call	?_AtlInstallStringThunk@ATL@@YAXPAPAXPAX1@Z ; ATL::_AtlInstallStringThunk
	add	esp, 12					; 0000000cH

; 294  : 
; 295  : 	return _strthunks.pfnCharUpperW(psz);

	mov	esi, esp
	mov	ecx, DWORD PTR _psz$[ebp]
	push	ecx
	call	DWORD PTR ?_strthunks@ATL@@3U_AtlStringThunks@1@A+16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 296  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?CharUpperWThunk@ATL@@YGPAGPAG@Z ENDP			; ATL::CharUpperWThunk
_TEXT	ENDS
EXTRN	__imp__CharUpperA@4:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?CharUpperWFake@ATL@@YGPAGPAG@Z
_TEXT	SEGMENT
tv90 = -36						; size = 4
tv94 = -32						; size = 4
tv75 = -28						; size = 4
tv78 = -24						; size = 4
_pszA$ = -20						; size = 4
__lpa$ = -16						; size = 4
__lpw$ = -12						; size = 4
__acp$ = -8						; size = 4
__convert$ = -4						; size = 4
_psz$ = 8						; size = 4
?CharUpperWFake@ATL@@YGPAGPAG@Z PROC NEAR		; ATL::CharUpperWFake, COMDAT

; 280  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 281  : 	USES_CONVERSION;

	mov	DWORD PTR __convert$[ebp], 0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	mov	DWORD PTR __acp$[ebp], eax
	mov	DWORD PTR __lpw$[ebp], 0
	mov	DWORD PTR __lpa$[ebp], 0

; 282  : 	LPSTR pszA;
; 283  : 
; 284  : 	pszA = W2A(psz);

	mov	eax, DWORD PTR _psz$[ebp]
	mov	DWORD PTR __lpw$[ebp], eax
	cmp	DWORD PTR __lpw$[ebp], 0
	jne	SHORT $L211389
	mov	DWORD PTR tv78[ebp], 0
	jmp	SHORT $L211390
$L211389:
	mov	esi, esp
	mov	ecx, DWORD PTR __lpw$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	lea	edx, DWORD PTR [eax+eax+2]
	mov	DWORD PTR __convert$[ebp], edx
	mov	eax, DWORD PTR __convert$[ebp]
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv75[ebp], esp
	mov	eax, DWORD PTR __acp$[ebp]
	push	eax
	mov	ecx, DWORD PTR __convert$[ebp]
	push	ecx
	mov	edx, DWORD PTR __lpw$[ebp]
	push	edx
	mov	eax, DWORD PTR tv75[ebp]
	push	eax
	call	?AtlW2AHelper@@YGPADPADPBGHI@Z		; AtlW2AHelper
	mov	DWORD PTR tv78[ebp], eax
$L211390:
	mov	ecx, DWORD PTR tv78[ebp]
	mov	DWORD PTR _pszA$[ebp], ecx

; 285  : 	::CharUpperA(pszA);

	mov	esi, esp
	mov	edx, DWORD PTR _pszA$[ebp]
	push	edx
	call	DWORD PTR __imp__CharUpperA@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 286  : 	wcscpy(psz, A2W(pszA));

	mov	eax, DWORD PTR _pszA$[ebp]
	mov	DWORD PTR __lpa$[ebp], eax
	cmp	DWORD PTR __lpa$[ebp], 0
	jne	SHORT $L211391
	mov	DWORD PTR tv94[ebp], 0
	jmp	SHORT $L211392
$L211391:
	mov	esi, esp
	mov	ecx, DWORD PTR __lpa$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	mov	DWORD PTR __convert$[ebp], eax
	mov	eax, DWORD PTR __convert$[ebp]
	shl	eax, 1
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv90[ebp], esp
	mov	edx, DWORD PTR __acp$[ebp]
	push	edx
	mov	eax, DWORD PTR __convert$[ebp]
	push	eax
	mov	ecx, DWORD PTR __lpa$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv90[ebp]
	push	edx
	call	?AtlA2WHelper@@YGPAGPAGPBDHI@Z		; AtlA2WHelper
	mov	DWORD PTR tv94[ebp], eax
$L211392:
	mov	eax, DWORD PTR tv94[ebp]
	push	eax
	mov	ecx, DWORD PTR _psz$[ebp]
	push	ecx
	call	_wcscpy
	add	esp, 8

; 287  : 
; 288  : 	return psz;

	mov	eax, DWORD PTR _psz$[ebp]

; 289  : }

	lea	esp, DWORD PTR [ebp-40]
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?CharUpperWFake@ATL@@YGPAGPAG@Z ENDP			; ATL::CharUpperWFake
_TEXT	ENDS
PUBLIC	??0?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAE@XZ ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::CAxDialogImpl<CShowSelectCert,ATL::CWindow>
PUBLIC	?GetDialogProc@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEP6GHPAUHWND__@@IIJ@ZXZ ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::GetDialogProc
PUBLIC	?CreateActiveXControls@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEJI@Z ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::CreateActiveXControls
PUBLIC	??0CShowSelectCert@@QAE@PAEPAPAU_CERT_DESCR@@J@Z ; CShowSelectCert::CShowSelectCert
PUBLIC	?ProcessWindowMessage@CShowSelectCert@@UAEHPAUHWND__@@IIJAAJK@Z ; CShowSelectCert::ProcessWindowMessage
PUBLIC	??_7CShowSelectCert@@6B@			; CShowSelectCert::`vftable'
PUBLIC	??_GCShowSelectCert@@UAEPAXI@Z			; CShowSelectCert::`scalar deleting destructor'
PUBLIC	?OnFinalMessage@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAEXPAUHWND__@@@Z ; ATL::CDialogImplBaseT<ATL::CWindow>::OnFinalMessage
EXTRN	_rFree:NEAR
EXTRN	_base64decodeSize:NEAR
EXTRN	_base64decode:NEAR
EXTRN	??_ECShowSelectCert@@UAEPAXI@Z:NEAR		; CShowSelectCert::`vector deleting destructor'
EXTRN	_malloc:NEAR
EXTRN	_memset:NEAR
EXTRN	_strcpy:NEAR
EXTRN	_strcat:NEAR
EXTRN	_strlen:NEAR
EXTRN	_sprintf:NEAR
;	COMDAT ??_7CShowSelectCert@@6B@
; File c:\activex\xmlsign\showselectcert.cpp
CONST	SEGMENT
??_7CShowSelectCert@@6B@ DD FLAT:?ProcessWindowMessage@CShowSelectCert@@UAEHPAUHWND__@@IIJAAJK@Z ; CShowSelectCert::`vftable'
	DD	FLAT:??_ECShowSelectCert@@UAEPAXI@Z
	DD	FLAT:?GetDialogProc@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEP6GHPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?OnFinalMessage@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAEXPAUHWND__@@@Z
	DD	FLAT:?CreateActiveXControls@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEJI@Z
; Function compile flags: /Odt /RTCsu
CONST	ENDS
_TEXT	SEGMENT
_j$207797 = -68						; size = 4
_i$207788 = -64						; size = 4
_d$ = -60						; size = 4
_s$ = -52						; size = 30
_buff$ = -16						; size = 4
_dwSizeBuf$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_storeName$ = 8						; size = 4
_certList$ = 12						; size = 4
_certCount$ = 16					; size = 4
??0CShowSelectCert@@QAE@PAEPAPAU_CERT_DESCR@@J@Z PROC NEAR ; CShowSelectCert::CShowSelectCert
; _this$ = ecx

; 18   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-68]
	mov	ecx, 17					; 00000011H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAE@XZ ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::CAxDialogImpl<CShowSelectCert,ATL::CWindow>
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CShowSelectCert@@6B@

; 19   : 	DWORD dwSizeBuf=0;

	mov	DWORD PTR _dwSizeBuf$[ebp], 0

; 20   : 	BYTE *buff=NULL;

	mov	DWORD PTR _buff$[ebp], 0

; 21   : 	char s[30];
; 22   : 	char *d;
; 23   : 
; 24   : 	certSelected = FALSE;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+72], 0

; 25   : 
; 26   : 	issuer = (WCHAR **) zMalloc(certCount * sizeof(char *));

	mov	edx, DWORD PTR _certCount$[ebp]
	shl	edx, 2
	push	edx
	call	_malloc
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+44], eax

; 27   : 	subject = (WCHAR **) zMalloc(certCount * sizeof(char *));

	mov	edx, DWORD PTR _certCount$[ebp]
	shl	edx, 2
	push	edx
	call	_malloc
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+48], eax

; 28   : 	notAfter = (char **) zMalloc(certCount * sizeof(char *));

	mov	edx, DWORD PTR _certCount$[ebp]
	shl	edx, 2
	push	edx
	call	_malloc
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+52], eax

; 29   : 	decodedDataPtr = (char **) zMalloc(certCount * sizeof(char *));

	mov	edx, DWORD PTR _certCount$[ebp]
	shl	edx, 2
	push	edx
	call	_malloc
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], eax

; 30   : 	memset(issuer, 0, certCount * sizeof(char *));

	mov	edx, DWORD PTR _certCount$[ebp]
	shl	edx, 2
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 31   : 	memset(subject, 0, certCount * sizeof(char *));

	mov	edx, DWORD PTR _certCount$[ebp]
	shl	edx, 2
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 32   : 	memset(notAfter, 0, certCount * sizeof(char *));

	mov	edx, DWORD PTR _certCount$[ebp]
	shl	edx, 2
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 33   : 	memset(decodedDataPtr, 0, certCount * sizeof(char *));

	mov	edx, DWORD PTR _certCount$[ebp]
	shl	edx, 2
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 34   : 
; 35   : 	strcpy((char *)StoreName, (const char *)storeName);

	mov	edx, DWORD PTR _storeName$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 76					; 0000004cH
	push	eax
	call	_strcpy
	add	esp, 8

; 36   : 
; 37   : 	nCurrentRow = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+68], 0

; 38   : 	count = certCount;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _certCount$[ebp]
	mov	DWORD PTR [edx+64], eax

; 39   : 	cV = certList;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _certList$[ebp]
	mov	DWORD PTR [ecx+36], edx

; 40   : 
; 41   : 	for (int i=0; i<count; i++)

	mov	DWORD PTR _i$207788[ebp], 0
	jmp	SHORT $L207789
$L207790:
	mov	eax, DWORD PTR _i$207788[ebp]
	add	eax, 1
	mov	DWORD PTR _i$207788[ebp], eax
$L207789:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$207788[ebp]
	cmp	edx, DWORD PTR [ecx+64]
	jge	$L207769

; 42   : 	{
; 43   : 		serialNo = cV[i]->serialNumber;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _i$207788[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR [edx+40], ecx

; 44   : 		dwSizeBuf = base64decodeSize(strlen((const char *)serialNo));

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	call	_base64decodeSize
	add	esp, 4
	mov	DWORD PTR _dwSizeBuf$[ebp], eax

; 45   : 		buff = (unsigned char *)zMalloc(dwSizeBuf+1);

	mov	ecx, DWORD PTR _dwSizeBuf$[ebp]
	add	ecx, 1
	push	ecx
	call	_malloc
	add	esp, 4
	mov	DWORD PTR _buff$[ebp], eax

; 46   : 		memset(buff,0,dwSizeBuf+1);

	mov	edx, DWORD PTR _dwSizeBuf$[ebp]
	add	edx, 1
	push	edx
	push	0
	mov	eax, DWORD PTR _buff$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 47   : 		if ((dwSizeBuf = base64decode(serialNo,buff,dwSizeBuf+1))==-1) 

	mov	ecx, DWORD PTR _dwSizeBuf$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _buff$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	call	_base64decode
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _dwSizeBuf$[ebp], eax
	cmp	DWORD PTR _dwSizeBuf$[ebp], -1
	jne	SHORT $L207794

; 48   : 		{	
; 49   : 			if (buff) zFree(buff);

	cmp	DWORD PTR _buff$[ebp], 0
	je	SHORT $L207795
	mov	edx, DWORD PTR _buff$[ebp]
	push	edx
	call	_rFree
	add	esp, 4
$L207795:

; 50   : 			buff = NULL;

	mov	DWORD PTR _buff$[ebp], 0
$L207794:

; 51   : 		}
; 52   : 		d = (char *)zMalloc(256);

	push	256					; 00000100H
	call	_malloc
	add	esp, 4
	mov	DWORD PTR _d$[ebp], eax

; 53   : 		memset(d,0,256);

	push	256					; 00000100H
	push	0
	mov	eax, DWORD PTR _d$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 54   : 		for(int j=dwSizeBuf;j>0;j--){

	mov	ecx, DWORD PTR _dwSizeBuf$[ebp]
	mov	DWORD PTR _j$207797[ebp], ecx
	jmp	SHORT $L207798
$L207799:
	mov	edx, DWORD PTR _j$207797[ebp]
	sub	edx, 1
	mov	DWORD PTR _j$207797[ebp], edx
$L207798:
	cmp	DWORD PTR _j$207797[ebp], 0
	jle	SHORT $L207800

; 55   : 			sprintf(s,"%02x",(int)buff[j-1]);

	mov	eax, DWORD PTR _buff$[ebp]
	add	eax, DWORD PTR _j$207797[ebp]
	movzx	ecx, BYTE PTR [eax-1]
	push	ecx
	push	OFFSET FLAT:$SG207802
	lea	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 56   : 			strcat(d,s);

	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _d$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8

; 57   : 			strcat(d," ");

	push	OFFSET FLAT:$SG207803
	mov	edx, DWORD PTR _d$[ebp]
	push	edx
	call	_strcat
	add	esp, 8

; 58   : 		}

	jmp	SHORT $L207799
$L207800:

; 59   : 		if (buff)

	cmp	DWORD PTR _buff$[ebp], 0
	je	SHORT $L207804

; 60   : 			zFree(buff);

	mov	eax, DWORD PTR _buff$[ebp]
	push	eax
	call	_rFree
	add	esp, 4
$L207804:

; 61   : 		buff=NULL;

	mov	DWORD PTR _buff$[ebp], 0

; 62   : 
; 63   : 		decodedDataPtr[i] = d;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	mov	eax, DWORD PTR _i$207788[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR [edx+eax*4], ecx

; 64   : 		
; 65   : 		issuer[i] = (WCHAR *)cV[i]->issuer;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	ecx, DWORD PTR _i$207788[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	add	edx, 256				; 00000100H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	eax, DWORD PTR _i$207788[ebp]
	mov	DWORD PTR [ecx+eax*4], edx

; 66   : 		subject[i] = (WCHAR *)cV[i]->shortSubject;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR _i$207788[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	add	ecx, 1280				; 00000500H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	mov	edx, DWORD PTR _i$207788[ebp]
	mov	DWORD PTR [eax+edx*4], ecx

; 67   : 		notAfter[i] = (char *)cV[i]->notAfter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR _i$207788[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	add	eax, 1792				; 00000700H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	mov	ecx, DWORD PTR _i$207788[ebp]
	mov	DWORD PTR [edx+ecx*4], eax

; 68   : 	}	

	jmp	$L207790
$L207769:

; 69   : }

	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L211400
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	add	esp, 68					; 00000044H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$L211400:
	DD	1
	DD	$L211399
$L211399:
	DD	-52					; ffffffccH
	DD	30					; 0000001eH
	DD	$L211397
$L211397:
	DB	115					; 00000073H
	DB	0
??0CShowSelectCert@@QAE@PAEPAPAU_CERT_DESCR@@J@Z ENDP	; CShowSelectCert::CShowSelectCert
_TEXT	ENDS
PUBLIC	??_C@_0BN@BNLFFEBD@Invalid?5message?5map?5ID?5?$CI?$CFi?$CJ?6?$AA@ ; `string'
PUBLIC	?OnInitDialog@CShowSelectCert@@QAEJIIJAAH@Z	; CShowSelectCert::OnInitDialog
PUBLIC	?OnOK@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z	; CShowSelectCert::OnOK
PUBLIC	?OnCancel@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z ; CShowSelectCert::OnCancel
PUBLIC	?OnClickList@CShowSelectCert@@QAEJHPAUtagNMHDR@@AAH@Z ; CShowSelectCert::OnClickList
PUBLIC	?OnClickedButton1@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z ; CShowSelectCert::OnClickedButton1
PUBLIC	??_C@_0CE@BJCBICOJ@c?3?2activex?2xmlsign?2ShowSelectCer@ ; `string'
EXTRN	?atlTraceWindowing@ATL@@3VCTraceCategory@1@A:DWORD ; ATL::atlTraceWindowing
;	COMDAT ??_C@_0BN@BNLFFEBD@Invalid?5message?5map?5ID?5?$CI?$CFi?$CJ?6?$AA@
; File c:\activex\xmlsign\showselectcert.h
CONST	SEGMENT
??_C@_0BN@BNLFFEBD@Invalid?5message?5map?5ID?5?$CI?$CFi?$CJ?6?$AA@ DB 'In'
	DB	'valid message map ID (%i)', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@BJCBICOJ@c?3?2activex?2xmlsign?2ShowSelectCer@
CONST	SEGMENT
??_C@_0CE@BJCBICOJ@c?3?2activex?2xmlsign?2ShowSelectCer@ DB 'c:\activex\x'
	DB	'mlsign\ShowSelectCert.h', 00H		; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?ProcessWindowMessage@CShowSelectCert@@UAEHPAUHWND__@@IIJAAJK@Z
_TEXT	SEGMENT
tv64 = -28						; size = 4
$T211402 = -24						; size = 8
_bHandled$ = -12					; size = 4
_this$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
_lResult$ = 24						; size = 4
_dwMsgMapID$ = 28					; size = 4
?ProcessWindowMessage@CShowSelectCert@@UAEHPAUHWND__@@IIJAAJK@Z PROC NEAR ; CShowSelectCert::ProcessWindowMessage, COMDAT
; _this$ = ecx

; 59   : BEGIN_MSG_MAP(CShowSelectCert)

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR _bHandled$[ebp], 1
	mov	eax, DWORD PTR _dwMsgMapID$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 0
	je	SHORT $L181432
	jmp	$L181470
$L181432:

; 60   : 	MESSAGE_HANDLER(WM_INITDIALOG, OnInitDialog)

	cmp	DWORD PTR _uMsg$[ebp], 272		; 00000110H
	jne	SHORT $L181433
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	ecx, DWORD PTR _bHandled$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _uMsg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnInitDialog@CShowSelectCert@@QAEJIIJAAH@Z ; CShowSelectCert::OnInitDialog
	mov	edx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [edx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L181433
	mov	eax, 1
	jmp	$L181426
$L181433:

; 61   : 	COMMAND_ID_HANDLER(IDOK, OnOK)

	cmp	DWORD PTR _uMsg$[ebp], 273		; 00000111H
	jne	SHORT $L181437
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cmp	ecx, 1
	jne	SHORT $L181437
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	and	ecx, 65535				; 0000ffffH
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnOK@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z ; CShowSelectCert::OnOK
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L181437
	mov	eax, 1
	jmp	$L181426
$L181437:

; 62   : 	COMMAND_ID_HANDLER(IDCANCEL, OnCancel)		

	cmp	DWORD PTR _uMsg$[ebp], 273		; 00000111H
	jne	SHORT $L181446
	mov	edx, DWORD PTR _wParam$[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	cmp	eax, 2
	jne	SHORT $L181446
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	ecx, DWORD PTR _bHandled$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnCancel@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z ; CShowSelectCert::OnCancel
	mov	edx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [edx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L181446
	mov	eax, 1
	jmp	$L181426
$L181446:

; 63   : 	NOTIFY_HANDLER(IDC_LIST2, NM_CLICK, OnClickList)

	cmp	DWORD PTR _uMsg$[ebp], 78		; 0000004eH
	jne	SHORT $L181455
	mov	eax, DWORD PTR _lParam$[ebp]
	cmp	DWORD PTR [eax+4], 202			; 000000caH
	jne	SHORT $L181455
	mov	ecx, DWORD PTR _lParam$[ebp]
	cmp	DWORD PTR [ecx+8], -2			; fffffffeH
	jne	SHORT $L181455
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnClickList@CShowSelectCert@@QAEJHPAUtagNMHDR@@AAH@Z ; CShowSelectCert::OnClickList
	mov	edx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [edx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L181455
	mov	eax, 1
	jmp	$L181426
$L181455:

; 64   : 	COMMAND_HANDLER(IDC_BUTTON1, BN_CLICKED, OnClickedButton1)		

	cmp	DWORD PTR _uMsg$[ebp], 273		; 00000111H
	jne	SHORT $L181463
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cmp	ecx, 203				; 000000cbH
	jne	SHORT $L181463
	mov	edx, DWORD PTR _wParam$[ebp]
	shr	edx, 16					; 00000010H
	movzx	eax, dx
	test	eax, eax
	jne	SHORT $L181463
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	ecx, DWORD PTR _bHandled$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnClickedButton1@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z ; CShowSelectCert::OnClickedButton1
	mov	edx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [edx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L181463
	mov	eax, 1
	jmp	SHORT $L181426
$L181463:

; 65   : END_MSG_MAP()

	jmp	SHORT $L181429
$L181470:
	mov	eax, DWORD PTR _dwMsgMapID$[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_0BN@BNLFFEBD@Invalid?5message?5map?5ID?5?$CI?$CFi?$CJ?6?$AA@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceWindowing@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceWindowing
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	65					; 00000041H
	push	OFFSET FLAT:??_C@_0CE@BJCBICOJ@c?3?2activex?2xmlsign?2ShowSelectCer@
	lea	ecx, DWORD PTR $T211402[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $L181429
	push	OFFSET FLAT:??_C@_01GBGANLPD@0?$AA@
	push	0
	push	65					; 00000041H
	push	OFFSET FLAT:??_C@_0CE@BJCBICOJ@c?3?2activex?2xmlsign?2ShowSelectCer@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L181429
	int	3
$L181429:
	xor	eax, eax
$L181426:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L211406
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
$L211406:
	DD	1
	DD	$L211405
$L211405:
	DD	-12					; fffffff4H
	DD	4
	DD	$L211404
$L211404:
	DB	98					; 00000062H
	DB	72					; 00000048H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
?ProcessWindowMessage@CShowSelectCert@@UAEHPAUHWND__@@IIJAAJK@Z ENDP ; CShowSelectCert::ProcessWindowMessage
_TEXT	ENDS
PUBLIC	?CreateHeader@CShowSelectCert@@QAEXXZ		; CShowSelectCert::CreateHeader
PUBLIC	?SetCell@CShowSelectCert@@QAEXPAGHH@Z		; CShowSelectCert::SetCell
PUBLIC	?setSelection@CShowSelectCert@@QAEXXZ		; CShowSelectCert::setSelection
PUBLIC	?A2WBSTR@@YAPAGPBDH@Z				; A2WBSTR
PUBLIC	?CenterWindow@CWindow@ATL@@QAEHPAUHWND__@@@Z	; ATL::CWindow::CenterWindow
PUBLIC	??0CComBSTR@ATL@@QAE@XZ				; ATL::CComBSTR::CComBSTR
PUBLIC	??1CComBSTR@ATL@@QAE@XZ				; ATL::CComBSTR::~CComBSTR
PUBLIC	??BCComBSTR@ATL@@QBEPAGXZ			; ATL::CComBSTR::operator unsigned short *
PUBLIC	?LoadStringA@CComBSTR@ATL@@QAE_NI@Z		; ATL::CComBSTR::LoadStringA
EXTRN	__imp__SetWindowTextW@8:NEAR
EXTRN	__imp__SysFreeString@4:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T211417 DD	0ffffffffH
	DD	FLAT:$L211410
$T211412 DD	019930520H
	DD	01H
	DD	FLAT:$T211417
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?OnInitDialog@CShowSelectCert@@QAEJIIJAAH@Z
_TEXT	SEGMENT
$T211409 = -40						; size = 4
_tmpBstr$181484 = -36					; size = 4
_i$181478 = -32						; size = 4
_caption$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_uMsg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
_bHandled$ = 20						; size = 4
?OnInitDialog@CShowSelectCert@@QAEJIIJAAH@Z PROC NEAR	; CShowSelectCert::OnInitDialog, COMDAT
; _this$ = ecx

; 68   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnInitDialog@CShowSelectCert@@QAEJIIJAAH@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR _this$[ebp], ecx

; 69   : 		CComBSTR caption;

	lea	ecx, DWORD PTR _caption$[ebp]
	call	??0CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::CComBSTR
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 70   : 
; 71   : 		caption.LoadString(IDS_CAPTION);

	push	109					; 0000006dH
	lea	ecx, DWORD PTR _caption$[ebp]
	call	?LoadStringA@CComBSTR@ATL@@QAE_NI@Z	; ATL::CComBSTR::LoadStringA

; 72   : 		if (count != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 0
	je	$L181477

; 73   : 		{
; 74   : 			::SetWindowTextW(m_hWnd,caption);

	lea	ecx, DWORD PTR _caption$[ebp]
	call	??BCComBSTR@ATL@@QBEPAGXZ		; ATL::CComBSTR::operator unsigned short *
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__SetWindowTextW@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 75   : 			//Insert header		
; 76   : 			CreateHeader();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateHeader@CShowSelectCert@@QAEXXZ	; CShowSelectCert::CreateHeader

; 77   : 			
; 78   : 			// Inserts first Row with four columns .		
; 79   : 
; 80   : 			for(int i=0;i<count;i++){		

	mov	DWORD PTR _i$181478[ebp], 0
	jmp	SHORT $L181479
$L181480:
	mov	eax, DWORD PTR _i$181478[ebp]
	add	eax, 1
	mov	DWORD PTR _i$181478[ebp], eax
$L181479:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$181478[ebp]
	cmp	edx, DWORD PTR [ecx+64]
	jge	$L181481

; 81   : 				SetCell((LPWSTR)subject[i],i,0);

	push	0
	mov	eax, DWORD PTR _i$181478[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	eax, DWORD PTR _i$181478[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetCell@CShowSelectCert@@QAEXPAGHH@Z	; CShowSelectCert::SetCell

; 82   : 				SetCell((LPWSTR)issuer[i],i,1);

	push	1
	mov	edx, DWORD PTR _i$181478[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR _i$181478[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetCell@CShowSelectCert@@QAEXPAGHH@Z	; CShowSelectCert::SetCell

; 83   : 				BSTR tmpBstr;
; 84   : 				tmpBstr = A2WBSTR((LPCSTR)notAfter[i]);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR _i$181478[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	?A2WBSTR@@YAPAGPBDH@Z			; A2WBSTR
	add	esp, 8
	mov	DWORD PTR _tmpBstr$181484[ebp], eax

; 85   : 				SetCell((LPWSTR)tmpBstr,i,2);

	push	2
	mov	edx, DWORD PTR _i$181478[ebp]
	push	edx
	mov	eax, DWORD PTR _tmpBstr$181484[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetCell@CShowSelectCert@@QAEXPAGHH@Z	; CShowSelectCert::SetCell

; 86   : 				SysFreeString(tmpBstr);

	mov	esi, esp
	mov	ecx, DWORD PTR _tmpBstr$181484[ebp]
	push	ecx
	call	DWORD PTR __imp__SysFreeString@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 87   : 				tmpBstr = A2WBSTR((LPCSTR)decodedDataPtr[i]);

	push	-1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	mov	ecx, DWORD PTR _i$181478[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	push	edx
	call	?A2WBSTR@@YAPAGPBDH@Z			; A2WBSTR
	add	esp, 8
	mov	DWORD PTR _tmpBstr$181484[ebp], eax

; 88   : 				SetCell((LPWSTR)tmpBstr,i,3);

	push	3
	mov	eax, DWORD PTR _i$181478[ebp]
	push	eax
	mov	ecx, DWORD PTR _tmpBstr$181484[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetCell@CShowSelectCert@@QAEXPAGHH@Z	; CShowSelectCert::SetCell

; 89   : 				SysFreeString(tmpBstr);

	mov	esi, esp
	mov	edx, DWORD PTR _tmpBstr$181484[ebp]
	push	edx
	call	DWORD PTR __imp__SysFreeString@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 90   : 			}

	jmp	$L181480
$L181481:

; 91   : 			CenterWindow();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?CenterWindow@CWindow@ATL@@QAEHPAUHWND__@@@Z ; ATL::CWindow::CenterWindow

; 92   : 			nCurrentRow = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+68], 0

; 93   : 			setSelection();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?setSelection@CShowSelectCert@@QAEXXZ	; CShowSelectCert::setSelection
$L181477:

; 94   : 
; 95   : 		}
; 96   : 				
; 97   : 		return 1;  // Let the system set the focus

	mov	DWORD PTR $T211409[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _caption$[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
	mov	eax, DWORD PTR $T211409[ebp]

; 98   : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L211416
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$L211416:
	DD	1
	DD	$L211415
$L211415:
	DD	-24					; ffffffe8H
	DD	4
	DD	$L211413
$L211413:
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L211410:
	lea	ecx, DWORD PTR _caption$[ebp]
	jmp	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
__ehhandler$?OnInitDialog@CShowSelectCert@@QAEJIIJAAH@Z:
	mov	eax, OFFSET FLAT:$T211412
	jmp	___CxxFrameHandler
text$x	ENDS
?OnInitDialog@CShowSelectCert@@QAEJIIJAAH@Z ENDP	; CShowSelectCert::OnInitDialog
PUBLIC	?EndDialog@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHH@Z ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::EndDialog
; Function compile flags: /Odt /RTCsu
;	COMDAT ?OnOK@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wNotifyCode$ = 8					; size = 2
_wID$ = 12						; size = 2
_hWndCtl$ = 16						; size = 4
_bHandled$ = 20						; size = 4
?OnOK@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z PROC NEAR	; CShowSelectCert::OnOK, COMDAT
; _this$ = ecx

; 101  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 102  : 		if (nCurrentRow != -1)

	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+68]
	cmp	ecx, -1
	je	SHORT $L181492

; 103  : 			certSelected = TRUE;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+72], 1
$L181492:

; 104  : 		EndDialog(wID);

	movzx	eax, WORD PTR _wID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EndDialog@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHH@Z ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::EndDialog

; 105  : 		return 0;

	xor	eax, eax

; 106  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?OnOK@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z ENDP	; CShowSelectCert::OnOK
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?OnCancel@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wNotifyCode$ = 8					; size = 2
_wID$ = 12						; size = 2
_hWndCtl$ = 16						; size = 4
_bHandled$ = 20						; size = 4
?OnCancel@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z PROC NEAR ; CShowSelectCert::OnCancel, COMDAT
; _this$ = ecx

; 109  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 110  : 		certSelected = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0

; 111  : 		EndDialog(wID);

	movzx	ecx, WORD PTR _wID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EndDialog@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHH@Z ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::EndDialog

; 112  : 		return 0;

	xor	eax, eax

; 113  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?OnCancel@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z ENDP	; CShowSelectCert::OnCancel
_TEXT	ENDS
PUBLIC	?GetDlgItem@CWindow@ATL@@QBE?AV12@H@Z		; ATL::CWindow::GetDlgItem
PUBLIC	?SendMessageA@CWindow@ATL@@QAEJIIJ@Z		; ATL::CWindow::SendMessageA
EXTRN	__imp__SendMessageA@16:NEAR
EXTRN	__imp__SendMessageW@16:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?CreateHeader@CShowSelectCert@@QAEXXZ
_TEXT	SEGMENT
_list1$ = -64						; size = 32
_cstr$ = -24						; size = 4
_listControl$ = -12					; size = 4
_this$ = -4						; size = 4
?CreateHeader@CShowSelectCert@@QAEXXZ PROC NEAR		; CShowSelectCert::CreateHeader, COMDAT
; _this$ = ecx

; 115  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-68]
	mov	ecx, 17					; 00000011H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 116  : 		CWindow listControl(GetDlgItem(IDC_LIST2));

	push	202					; 000000caH
	lea	eax, DWORD PTR _listControl$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetDlgItem@CWindow@ATL@@QBE?AV12@H@Z	; ATL::CWindow::GetDlgItem

; 117  : 		CComBSTR cstr;

	lea	ecx, DWORD PTR _cstr$[ebp]
	call	??0CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::CComBSTR

; 118  : 		
; 119  : 		listControl.SendMessage(LVM_SETEXTENDEDLISTVIEWSTYLE,LVS_EX_FULLROWSELECT, LVS_EX_FULLROWSELECT);

	push	32					; 00000020H
	push	32					; 00000020H
	push	4150					; 00001036H
	lea	ecx, DWORD PTR _listControl$[ebp]
	call	?SendMessageA@CWindow@ATL@@QAEJIIJ@Z	; ATL::CWindow::SendMessageA

; 120  : 
; 121  : 		LVCOLUMNW list1;
; 122  : 		list1.mask =  LVCF_TEXT |LVCF_WIDTH| 
; 123  :         LVCF_FMT |LVCF_SUBITEM;

	mov	DWORD PTR _list1$[ebp], 15		; 0000000fH

; 124  : 		list1.fmt = LVCFMT_LEFT;

	mov	DWORD PTR _list1$[ebp+4], 0

; 125  : 		
; 126  : 		cstr.LoadString(IDS_SERIALNO);

	push	103					; 00000067H
	lea	ecx, DWORD PTR _cstr$[ebp]
	call	?LoadStringA@CComBSTR@ATL@@QAE_NI@Z	; ATL::CComBSTR::LoadStringA

; 127  : 		list1.cx = 100;

	mov	DWORD PTR _list1$[ebp+8], 100		; 00000064H

; 128  : 		list1.pszText   = (LPWSTR) cstr;

	lea	ecx, DWORD PTR _cstr$[ebp]
	call	??BCComBSTR@ATL@@QBEPAGXZ		; ATL::CComBSTR::operator unsigned short *
	mov	DWORD PTR _list1$[ebp+12], eax

; 129  : 			//L"Serial No";
; 130  : 		list1.iSubItem = 0;		

	mov	DWORD PTR _list1$[ebp+20], 0

; 131  : //		listControl.SendMessage(LVM_INSERTCOLUMN, (WPARAM)0,(WPARAM)&list1);
; 132  : 		::SendMessageW(listControl.m_hWnd, LVM_INSERTCOLUMNW, 0, (LPARAM)(const LV_ITEMW *)(&list1));

	mov	esi, esp
	lea	ecx, DWORD PTR _list1$[ebp]
	push	ecx
	push	0
	push	4193					; 00001061H
	mov	edx, DWORD PTR _listControl$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 133  : 		
; 134  : 		cstr.LoadString(IDS_EXPDATE);

	push	104					; 00000068H
	lea	ecx, DWORD PTR _cstr$[ebp]
	call	?LoadStringA@CComBSTR@ATL@@QAE_NI@Z	; ATL::CComBSTR::LoadStringA

; 135  : 		list1.cx = 100;

	mov	DWORD PTR _list1$[ebp+8], 100		; 00000064H

; 136  : 		list1.pszText   = (LPWSTR) cstr;

	lea	ecx, DWORD PTR _cstr$[ebp]
	call	??BCComBSTR@ATL@@QBEPAGXZ		; ATL::CComBSTR::operator unsigned short *
	mov	DWORD PTR _list1$[ebp+12], eax

; 137  : 			//L"Expiration Date";
; 138  : 		list1.iSubItem = 1;

	mov	DWORD PTR _list1$[ebp+20], 1

; 139  : //		listControl.SendMessage(LVM_INSERTCOLUMN, (WPARAM)0,(WPARAM)&list1);	
; 140  : 		SNDMSG(listControl.m_hWnd, LVM_INSERTCOLUMNW, 0, (LPARAM)(const LV_ITEMW *)(&list1));

	mov	esi, esp
	lea	eax, DWORD PTR _list1$[ebp]
	push	eax
	push	0
	push	4193					; 00001061H
	mov	ecx, DWORD PTR _listControl$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 141  : 
; 142  : 		cstr.LoadString(IDS_ISSUEDBY);

	push	105					; 00000069H
	lea	ecx, DWORD PTR _cstr$[ebp]
	call	?LoadStringA@CComBSTR@ATL@@QAE_NI@Z	; ATL::CComBSTR::LoadStringA

; 143  : 		list1.cx = 100;

	mov	DWORD PTR _list1$[ebp+8], 100		; 00000064H

; 144  : 		list1.pszText   = (LPWSTR) cstr;

	lea	ecx, DWORD PTR _cstr$[ebp]
	call	??BCComBSTR@ATL@@QBEPAGXZ		; ATL::CComBSTR::operator unsigned short *
	mov	DWORD PTR _list1$[ebp+12], eax

; 145  : 			//L"Issued by";
; 146  : 		list1.iSubItem = 2;

	mov	DWORD PTR _list1$[ebp+20], 2

; 147  : //		listControl.SendMessage(LVM_INSERTCOLUMN, (WPARAM)0,(WPARAM)&list1);
; 148  : 		SNDMSG(listControl.m_hWnd, LVM_INSERTCOLUMNW, 0, (LPARAM)(const LV_ITEMW *)(&list1));

	mov	esi, esp
	lea	edx, DWORD PTR _list1$[ebp]
	push	edx
	push	0
	push	4193					; 00001061H
	mov	eax, DWORD PTR _listControl$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 149  : 		
; 150  : 		cstr.LoadString(IDS_ISSUEDTO);

	push	106					; 0000006aH
	lea	ecx, DWORD PTR _cstr$[ebp]
	call	?LoadStringA@CComBSTR@ATL@@QAE_NI@Z	; ATL::CComBSTR::LoadStringA

; 151  : 		list1.cx = 100;

	mov	DWORD PTR _list1$[ebp+8], 100		; 00000064H

; 152  : 		list1.pszText   = (LPWSTR) cstr;

	lea	ecx, DWORD PTR _cstr$[ebp]
	call	??BCComBSTR@ATL@@QBEPAGXZ		; ATL::CComBSTR::operator unsigned short *
	mov	DWORD PTR _list1$[ebp+12], eax

; 153  : 			//L"Issued To";
; 154  : 		list1.iSubItem = 3;

	mov	DWORD PTR _list1$[ebp+20], 3

; 155  : //		listControl.SendMessage(LVM_INSERTCOLUMN, (WPARAM)0,(WPARAM)&list1);
; 156  : 		SNDMSG(listControl.m_hWnd, LVM_INSERTCOLUMNW, 0, (LPARAM)(const LV_ITEMW *)(&list1));

	mov	esi, esp
	lea	ecx, DWORD PTR _list1$[ebp]
	push	ecx
	push	0
	push	4193					; 00001061H
	mov	edx, DWORD PTR _listControl$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 157  : 	}

	lea	ecx, DWORD PTR _cstr$[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L211431
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 68					; 00000044H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L211431:
	DD	3
	DD	$L211430
$L211430:
	DD	-12					; fffffff4H
	DD	4
	DD	$L211427
	DD	-24					; ffffffe8H
	DD	4
	DD	$L211428
	DD	-64					; ffffffc0H
	DD	32					; 00000020H
	DD	$L211429
$L211429:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	49					; 00000031H
	DB	0
$L211428:
	DB	99					; 00000063H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$L211427:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	0
?CreateHeader@CShowSelectCert@@QAEXXZ ENDP		; CShowSelectCert::CreateHeader
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?SetCell@CShowSelectCert@@QAEXPAGHH@Z
_TEXT	SEGMENT
_lvItem$ = -60						; size = 40
_listControl$ = -12					; size = 4
_this$ = -4						; size = 4
_value$ = 8						; size = 4
_nRow$ = 12						; size = 4
_nCol$ = 16						; size = 4
?SetCell@CShowSelectCert@@QAEXPAGHH@Z PROC NEAR		; CShowSelectCert::SetCell, COMDAT
; _this$ = ecx

; 159  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 160  :     
; 161  : 	CWindow listControl(GetDlgItem(IDC_LIST2));

	push	202					; 000000caH
	lea	eax, DWORD PTR _listControl$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetDlgItem@CWindow@ATL@@QBE?AV12@H@Z	; ATL::CWindow::GetDlgItem

; 162  : 
; 163  :     //Fill the LVITEM structure with the 
; 164  :     //values given as parameters.
; 165  : 	
; 166  :     LVITEMW lvItem;
; 167  :     lvItem.mask = LVIF_TEXT;

	mov	DWORD PTR _lvItem$[ebp], 1

; 168  :     lvItem.iItem = nRow;

	mov	ecx, DWORD PTR _nRow$[ebp]
	mov	DWORD PTR _lvItem$[ebp+4], ecx

; 169  :     lvItem.pszText = value;

	mov	edx, DWORD PTR _value$[ebp]
	mov	DWORD PTR _lvItem$[ebp+20], edx

; 170  :     lvItem.iSubItem = nCol;

	mov	eax, DWORD PTR _nCol$[ebp]
	mov	DWORD PTR _lvItem$[ebp+8], eax

; 171  : 	lvItem.lParam = (LPARAM) value;

	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR _lvItem$[ebp+32], ecx

; 172  :     if(nCol >0)

	cmp	DWORD PTR _nCol$[ebp], 0
	jle	SHORT $L181519

; 173  :         
; 174  : //		ListView_SetItem(listControl.m_hWnd,&lvItem);
; 175  : 		SNDMSG(listControl.m_hWnd, LVM_SETITEMW, 0, (LPARAM)(const LV_ITEMW *)(&lvItem));

	mov	esi, esp
	lea	edx, DWORD PTR _lvItem$[ebp]
	push	edx
	push	0
	push	4172					; 0000104cH
	mov	eax, DWORD PTR _listControl$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 176  : 		
; 177  :     else

	jmp	SHORT $L181514
$L181519:

; 178  :         //Insert the value into List
; 179  : //        ListView_InsertItem(listControl.m_hWnd,&lvItem);
; 180  : 		  SNDMSG((listControl.m_hWnd), LVM_INSERTITEMW, 0, (LPARAM)(const LV_ITEMW *)(&lvItem));

	mov	esi, esp
	lea	ecx, DWORD PTR _lvItem$[ebp]
	push	ecx
	push	0
	push	4173					; 0000104dH
	mov	edx, DWORD PTR _listControl$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$L181514:

; 181  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L211437
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$L211437:
	DD	2
	DD	$L211436
$L211436:
	DD	-12					; fffffff4H
	DD	4
	DD	$L211434
	DD	-60					; ffffffc4H
	DD	40					; 00000028H
	DD	$L211435
$L211435:
	DB	108					; 0000006cH
	DB	118					; 00000076H
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	0
$L211434:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	0
?SetCell@CShowSelectCert@@QAEXPAGHH@Z ENDP		; CShowSelectCert::SetCell
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?OnClickList@CShowSelectCert@@QAEJHPAUtagNMHDR@@AAH@Z
_TEXT	SEGMENT
_temp$ = -8						; size = 4
_this$ = -4						; size = 4
_idCtrl$ = 8						; size = 4
_pnmh$ = 12						; size = 4
_bHandled$ = 16						; size = 4
?OnClickList@CShowSelectCert@@QAEJHPAUtagNMHDR@@AAH@Z PROC NEAR ; CShowSelectCert::OnClickList, COMDAT
; _this$ = ecx

; 184  : 	{		

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 	
; 186  : 		LPNMITEMACTIVATE temp = (LPNMITEMACTIVATE) pnmh;

	mov	eax, DWORD PTR _pnmh$[ebp]
	mov	DWORD PTR _temp$[ebp], eax

; 187  : 		
; 188  : 		nCurrentRow = temp->iItem;	

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _temp$[ebp]
	mov	ax, WORD PTR [edx+12]
	mov	WORD PTR [ecx+68], ax

; 189  : 		
; 190  : 		return 0;

	xor	eax, eax

; 191  : 	}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?OnClickList@CShowSelectCert@@QAEJHPAUtagNMHDR@@AAH@Z ENDP ; CShowSelectCert::OnClickList
_TEXT	ENDS
PUBLIC	??BCWindow@ATL@@QBEPAUHWND__@@XZ		; ATL::CWindow::operator HWND__ *
; Function compile flags: /Odt /RTCsu
;	COMDAT ?setSelection@CShowSelectCert@@QAEXXZ
_TEXT	SEGMENT
__ms_lvi$181546 = -60					; size = 40
_listControl$ = -12					; size = 4
_this$ = -4						; size = 4
?setSelection@CShowSelectCert@@QAEXXZ PROC NEAR		; CShowSelectCert::setSelection, COMDAT
; _this$ = ecx

; 217  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 218  : 	CWindow listControl(GetDlgItem(IDC_LIST2));

	push	202					; 000000caH
	lea	eax, DWORD PTR _listControl$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetDlgItem@CWindow@ATL@@QBE?AV12@H@Z	; ATL::CWindow::GetDlgItem

; 219  : 	ListView_SetItemState(listControl, nCurrentRow, LVIS_SELECTED| LVIS_FOCUSED, LVIS_SELECTED| LVIS_FOCUSED); 

	mov	DWORD PTR __ms_lvi$181546[ebp+16], 3
	mov	DWORD PTR __ms_lvi$181546[ebp+12], 3
	mov	esi, esp
	lea	ecx, DWORD PTR __ms_lvi$181546[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+68]
	push	eax
	push	4139					; 0000102bH
	lea	ecx, DWORD PTR _listControl$[ebp]
	call	??BCWindow@ATL@@QBEPAUHWND__@@XZ	; ATL::CWindow::operator HWND__ *
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 220  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L211445
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L211445:
	DD	2
	DD	$L211444
$L211444:
	DD	-12					; fffffff4H
	DD	4
	DD	$L211442
	DD	-60					; ffffffc4H
	DD	40					; 00000028H
	DD	$L211443
$L211443:
	DB	95					; 0000005fH
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	95					; 0000005fH
	DB	108					; 0000006cH
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	0
$L211442:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	0
?setSelection@CShowSelectCert@@QAEXXZ ENDP		; CShowSelectCert::setSelection
_TEXT	ENDS
PUBLIC	??1CShowSelectCert@@UAE@XZ			; CShowSelectCert::~CShowSelectCert
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Odt /RTCsu
;	COMDAT ??_GCShowSelectCert@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCShowSelectCert@@UAEPAXI@Z PROC NEAR		; CShowSelectCert::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CShowSelectCert@@UAE@XZ		; CShowSelectCert::~CShowSelectCert
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L181553
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L181553:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCShowSelectCert@@UAEPAXI@Z ENDP			; CShowSelectCert::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_0BJ@OGJFCAD@nResult?5?$DN?$DN?5nConvertedLen?$AA@ ; `string'
EXTRN	__imp__SysAllocStringLen@8:NEAR
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
xdata$x	SEGMENT
$T211460 DD	0ffffffffH
	DD	FLAT:$L211453
$T211455 DD	019930520H
	DD	01H
	DD	FLAT:$T211460
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BJ@OGJFCAD@nResult?5?$DN?$DN?5nConvertedLen?$AA@
CONST	SEGMENT
??_C@_0BJ@OGJFCAD@nResult?5?$DN?$DN?5nConvertedLen?$AA@ DB 'nResult == nC'
	DB	'onvertedLen', 00H				; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?A2WBSTR@@YAPAGPBDH@Z
_TEXT	SEGMENT
$T211452 = -64						; size = 4
$T211451 = -60						; size = 4
_nResult$76112 = -56					; size = 4
_nAllocLen$ = -52					; size = 4
_nConvertedLen$ = -48					; size = 4
_str$ = -44						; size = 4
__AtlSafeAllocaManager$ = -36				; size = 4
__lpa_ex$ = -28						; size = 4
__lpw_ex$ = -24						; size = 4
__acp_ex$ = -20						; size = 4
__convert_ex$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_lp$ = 8						; size = 4
_nLen$ = 12						; size = 4
?A2WBSTR@@YAPAGPBDH@Z PROC NEAR				; A2WBSTR, COMDAT

; 775  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?A2WBSTR@@YAPAGPBDH@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 52					; 00000034H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 776  : 	if (lp == NULL || nLen == 0)

	cmp	DWORD PTR _lp$[ebp], 0
	je	SHORT $L76085
	cmp	DWORD PTR _nLen$[ebp], 0
	jne	SHORT $L76084
$L76085:

; 777  : 		return NULL;

	xor	eax, eax
	jmp	$L76083
$L76084:

; 778  : 	USES_CONVERSION_EX;

	mov	DWORD PTR __convert_ex$[ebp], 0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	mov	DWORD PTR __acp_ex$[ebp], eax
	mov	DWORD PTR __lpw_ex$[ebp], 0
	mov	DWORD PTR __lpa_ex$[ebp], 0
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	call	??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 779  : 	BSTR str = NULL;

	mov	DWORD PTR _str$[ebp], 0

; 780  : 	int nConvertedLen = MultiByteToWideChar(_acp_ex, 0, lp,
; 781  : 		nLen, NULL, NULL);

	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _nLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lp$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __acp_ex$[ebp]
	push	edx
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nConvertedLen$[ebp], eax

; 782  : 	int nAllocLen = nConvertedLen;

	mov	eax, DWORD PTR _nConvertedLen$[ebp]
	mov	DWORD PTR _nAllocLen$[ebp], eax

; 783  : 	if (nLen == -1)

	cmp	DWORD PTR _nLen$[ebp], -1
	jne	SHORT $L76110

; 784  : 		nAllocLen -= 1;  // Don't allocate terminating '\0'

	mov	ecx, DWORD PTR _nAllocLen$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _nAllocLen$[ebp], ecx
$L76110:

; 785  : 	str = ::SysAllocStringLen(NULL, nAllocLen);

	mov	esi, esp
	mov	edx, DWORD PTR _nAllocLen$[ebp]
	push	edx
	push	0
	call	DWORD PTR __imp__SysAllocStringLen@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _str$[ebp], eax

; 786  : 
; 787  : 	if (str != NULL)

	cmp	DWORD PTR _str$[ebp], 0
	je	$L76111

; 788  : 	{
; 789  : 		int nResult;
; 790  : 		nResult = MultiByteToWideChar(_acp_ex, 0, lp, nLen, str, nConvertedLen);

	mov	esi, esp
	mov	eax, DWORD PTR _nConvertedLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nLen$[ebp]
	push	edx
	mov	eax, DWORD PTR _lp$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __acp_ex$[ebp]
	push	ecx
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nResult$76112[ebp], eax

; 791  : 		ATLASSERT(nResult == nConvertedLen);

	mov	edx, DWORD PTR _nResult$76112[ebp]
	cmp	edx, DWORD PTR _nConvertedLen$[ebp]
	je	SHORT $L211450
	push	OFFSET FLAT:??_C@_0BJ@OGJFCAD@nResult?5?$DN?$DN?5nConvertedLen?$AA@
	push	0
	push	791					; 00000317H
	push	OFFSET FLAT:??_C@_0FA@OHHMODBN@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211450
	int	3
$L211450:

; 792  : 		if(nResult != nConvertedLen)

	mov	ecx, DWORD PTR _nResult$76112[ebp]
	cmp	ecx, DWORD PTR _nConvertedLen$[ebp]
	je	SHORT $L76111

; 793  : 		{
; 794  : 			SysFreeString(str);

	mov	esi, esp
	mov	edx, DWORD PTR _str$[ebp]
	push	edx
	call	DWORD PTR __imp__SysFreeString@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 795  : 			return NULL;

	mov	DWORD PTR $T211451[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	call	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
	mov	eax, DWORD PTR $T211451[ebp]
	jmp	SHORT $L76083
$L76111:

; 796  : 		}
; 797  : 
; 798  : 	}
; 799  : 	return str;

	mov	eax, DWORD PTR _str$[ebp]
	mov	DWORD PTR $T211452[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	call	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
	mov	eax, DWORD PTR $T211452[ebp]
$L76083:

; 800  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L211459
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L211459:
	DD	1
	DD	$L211458
$L211458:
	DD	-36					; ffffffdcH
	DD	4
	DD	$L211456
$L211456:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	116					; 00000074H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	97					; 00000061H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	77					; 0000004dH
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L211453:
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	jmp	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
__ehhandler$?A2WBSTR@@YAPAGPBDH@Z:
	mov	eax, OFFSET FLAT:$T211455
	jmp	___CxxFrameHandler
text$x	ENDS
?A2WBSTR@@YAPAGPBDH@Z ENDP				; A2WBSTR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ??0CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CComBSTR@ATL@@QAE@XZ PROC NEAR			; ATL::CComBSTR::CComBSTR, COMDAT
; _this$ = ecx

; 545  : 	CComBSTR() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 546  : 	{
; 547  : 		m_str = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 548  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CComBSTR@ATL@@QAE@XZ ENDP				; ATL::CComBSTR::CComBSTR
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CComBSTR@ATL@@QAE@XZ PROC NEAR			; ATL::CComBSTR::~CComBSTR, COMDAT
; _this$ = ecx

; 628  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 629  : 		::SysFreeString(m_str);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SysFreeString@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 630  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CComBSTR@ATL@@QAE@XZ ENDP				; ATL::CComBSTR::~CComBSTR
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??BCComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BCComBSTR@ATL@@QBEPAGXZ PROC NEAR			; ATL::CComBSTR::operator unsigned short *, COMDAT
; _this$ = ecx

; 640  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 641  : 		return m_str;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 642  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??BCComBSTR@ATL@@QBEPAGXZ ENDP				; ATL::CComBSTR::operator unsigned short *
_TEXT	ENDS
PUBLIC	?LoadStringResource@CComBSTR@ATL@@SA_NIAAPAG@Z	; ATL::CComBSTR::LoadStringResource
; Function compile flags: /Odt /RTCsu
;	COMDAT ?LoadStringA@CComBSTR@ATL@@QAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nID$ = 8						; size = 4
?LoadStringA@CComBSTR@ATL@@QAE_NI@Z PROC NEAR		; ATL::CComBSTR::LoadStringA, COMDAT
; _this$ = ecx

; 890  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 891  : 		::SysFreeString(m_str);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SysFreeString@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 892  : 		m_str = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 893  : 		return LoadStringResource(nID, m_str);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nID$[ebp]
	push	ecx
	call	?LoadStringResource@CComBSTR@ATL@@SA_NIAAPAG@Z ; ATL::CComBSTR::LoadStringResource
	add	esp, 8

; 894  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?LoadStringA@CComBSTR@ATL@@QAE_NI@Z ENDP		; ATL::CComBSTR::LoadStringA
_TEXT	ENDS
PUBLIC	??_C@_0O@LPAFDJOF@bstrText?5?$DN?$DN?50?$AA@	; `string'
PUBLIC	??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@ ; `string'
PUBLIC	?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@I@Z ; ATL::AtlGetStringResourceImage
;	COMDAT ??_C@_0O@LPAFDJOF@bstrText?5?$DN?$DN?50?$AA@
CONST	SEGMENT
??_C@_0O@LPAFDJOF@bstrText?5?$DN?$DN?50?$AA@ DB 'bstrText == 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT
??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@ DB 'C:\Program '
	DB	'Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\include\at'
	DB	'lcomcli.h', 00H				; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?LoadStringResource@CComBSTR@ATL@@SA_NIAAPAG@Z
_TEXT	SEGMENT
_pImage$ = -4						; size = 4
_uID$ = 8						; size = 4
_bstrText$ = 12						; size = 4
?LoadStringResource@CComBSTR@ATL@@SA_NIAAPAG@Z PROC NEAR ; ATL::CComBSTR::LoadStringResource, COMDAT

; 1106 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1107 : 		const ATLSTRINGRESOURCEIMAGE* pImage;
; 1108 : 
; 1109 : 		ATLASSERT(bstrText == NULL);

	mov	eax, DWORD PTR _bstrText$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L211473
	push	OFFSET FLAT:??_C@_0O@LPAFDJOF@bstrText?5?$DN?$DN?50?$AA@
	push	0
	push	1109					; 00000455H
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211473
	int	3
$L211473:

; 1110 : 
; 1111 : 		pImage = AtlGetStringResourceImage(uID);

	mov	edx, DWORD PTR _uID$[ebp]
	push	edx
	call	?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@I@Z ; ATL::AtlGetStringResourceImage
	add	esp, 4
	mov	DWORD PTR _pImage$[ebp], eax

; 1112 : 		if (pImage != NULL)

	cmp	DWORD PTR _pImage$[ebp], 0
	je	SHORT $L82110

; 1113 : 		{
; 1114 : 			bstrText = ::SysAllocStringLen(pImage->achString, pImage->nLength);

	mov	eax, DWORD PTR _pImage$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _pImage$[ebp]
	add	edx, 2
	push	edx
	call	DWORD PTR __imp__SysAllocStringLen@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _bstrText$[ebp]
	mov	DWORD PTR [ecx], eax
$L82110:

; 1115 : 		}
; 1116 : 
; 1117 : 		return (bstrText != NULL) ? true : false;

	mov	edx, DWORD PTR _bstrText$[ebp]
	cmp	DWORD PTR [edx], 0
	setne	al

; 1118 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?LoadStringResource@CComBSTR@ATL@@SA_NIAAPAG@Z ENDP	; ATL::CComBSTR::LoadStringResource
_TEXT	ENDS
PUBLIC	?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ; ATL::AtlGetStringResourceImage
EXTRN	?GetHInstanceAt@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@H@Z:NEAR ; ATL::CAtlBaseModule::GetHInstanceAt
EXTRN	?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A:BYTE	; ATL::_AtlBaseModule
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcore.h
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@I@Z
_TEXT	SEGMENT
tv70 = -16						; size = 4
_i$77561 = -12						; size = 4
_hInst$ = -8						; size = 4
_p$ = -4						; size = 4
_id$ = 8						; size = 4
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@I@Z PROC NEAR ; ATL::AtlGetStringResourceImage, COMDAT

; 306  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 307  : 	const ATLSTRINGRESOURCEIMAGE* p = NULL;

	mov	DWORD PTR _p$[ebp], 0

; 308  : 	HINSTANCE hInst = _AtlBaseModule.GetHInstanceAt(0);

	push	0
	mov	ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
	call	?GetHInstanceAt@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@H@Z ; ATL::CAtlBaseModule::GetHInstanceAt
	mov	DWORD PTR _hInst$[ebp], eax

; 309  : 
; 310  : 	for (int i = 1; hInst != NULL && p == NULL; hInst = _AtlBaseModule.GetHInstanceAt(i++))

	mov	DWORD PTR _i$77561[ebp], 1
	jmp	SHORT $L77562
$L77563:
	mov	eax, DWORD PTR _i$77561[ebp]
	mov	DWORD PTR tv70[ebp], eax
	mov	ecx, DWORD PTR _i$77561[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$77561[ebp], ecx
	mov	edx, DWORD PTR tv70[ebp]
	push	edx
	mov	ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
	call	?GetHInstanceAt@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@H@Z ; ATL::CAtlBaseModule::GetHInstanceAt
	mov	DWORD PTR _hInst$[ebp], eax
$L77562:
	cmp	DWORD PTR _hInst$[ebp], 0
	je	SHORT $L77564
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $L77564

; 311  : 	{
; 312  : 		p = AtlGetStringResourceImage(hInst, id);

	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInst$[ebp]
	push	ecx
	call	?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ; ATL::AtlGetStringResourceImage
	add	esp, 8
	mov	DWORD PTR _p$[ebp], eax

; 313  : 	}

	jmp	SHORT $L77563
$L77564:

; 314  : 	return p;

	mov	eax, DWORD PTR _p$[ebp]

; 315  : }

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@I@Z ENDP ; ATL::AtlGetStringResourceImage
_TEXT	ENDS
PUBLIC	?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
EXTRN	__imp__FindResourceA@12:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_hResource$ = -4					; size = 4
_hInstance$ = 8						; size = 4
_id$ = 12						; size = 4
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z PROC NEAR ; ATL::AtlGetStringResourceImage, COMDAT

; 280  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 281  : 	HRSRC hResource;
; 282  : 
; 283  : 	hResource = ::FindResource( hInstance, MAKEINTRESOURCE( ((id>>4)+1) ), RT_STRING );

	mov	esi, esp
	push	6
	mov	eax, DWORD PTR _id$[ebp]
	shr	eax, 4
	add	eax, 1
	movzx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR _hInstance$[ebp]
	push	edx
	call	DWORD PTR __imp__FindResourceA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hResource$[ebp], eax

; 284  : 	if( hResource == NULL )

	cmp	DWORD PTR _hResource$[ebp], 0
	jne	SHORT $L77540

; 285  : 	{
; 286  : 		return( NULL );

	xor	eax, eax
	jmp	SHORT $L77532
$L77540:

; 287  : 	}
; 288  : 
; 289  : 	return _AtlGetStringResourceImage( hInstance, hResource, id );

	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hResource$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hInstance$[ebp]
	push	edx
	call	?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
	add	esp, 12					; 0000000cH
$L77532:

; 290  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ENDP ; ATL::AtlGetStringResourceImage
_TEXT	ENDS
EXTRN	__imp__LockResource@4:NEAR
EXTRN	__imp__LoadResource@8:NEAR
EXTRN	__imp__SizeofResource@8:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT
_iIndex$ = -20						; size = 4
_hGlobal$ = -16						; size = 4
_nResourceSize$ = -12					; size = 4
_pImageEnd$ = -8					; size = 4
_pImage$ = -4						; size = 4
_hInstance$ = 8						; size = 4
_hResource$ = 12					; size = 4
_id$ = 16						; size = 4
?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z PROC NEAR ; ATL::_AtlGetStringResourceImage, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 240  : 	const ATLSTRINGRESOURCEIMAGE* pImage;
; 241  : 	const ATLSTRINGRESOURCEIMAGE* pImageEnd;
; 242  : 	ULONG nResourceSize;
; 243  : 	HGLOBAL hGlobal;
; 244  : 	UINT iIndex;
; 245  : 
; 246  : 	hGlobal = ::LoadResource( hInstance, hResource );

	mov	esi, esp
	mov	eax, DWORD PTR _hResource$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	DWORD PTR __imp__LoadResource@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hGlobal$[ebp], eax

; 247  : 	if( hGlobal == NULL )

	cmp	DWORD PTR _hGlobal$[ebp], 0
	jne	SHORT $L77517

; 248  : 	{
; 249  : 		return( NULL );

	xor	eax, eax
	jmp	$L77511
$L77517:

; 250  : 	}
; 251  : 
; 252  : 	pImage = (const ATLSTRINGRESOURCEIMAGE*)::LockResource( hGlobal );

	mov	esi, esp
	mov	edx, DWORD PTR _hGlobal$[ebp]
	push	edx
	call	DWORD PTR __imp__LockResource@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pImage$[ebp], eax

; 253  : 	if( pImage == NULL )

	cmp	DWORD PTR _pImage$[ebp], 0
	jne	SHORT $L77519

; 254  : 	{
; 255  : 		return( NULL );

	xor	eax, eax
	jmp	SHORT $L77511
$L77519:

; 256  : 	}
; 257  : 
; 258  : 	nResourceSize = ::SizeofResource( hInstance, hResource );

	mov	esi, esp
	mov	eax, DWORD PTR _hResource$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	DWORD PTR __imp__SizeofResource@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nResourceSize$[ebp], eax

; 259  : 	pImageEnd = (const ATLSTRINGRESOURCEIMAGE*)(LPBYTE( pImage )+nResourceSize);

	mov	edx, DWORD PTR _pImage$[ebp]
	add	edx, DWORD PTR _nResourceSize$[ebp]
	mov	DWORD PTR _pImageEnd$[ebp], edx

; 260  : 	iIndex = id&0x000f;

	mov	eax, DWORD PTR _id$[ebp]
	and	eax, 15					; 0000000fH
	mov	DWORD PTR _iIndex$[ebp], eax
$L77522:

; 261  : 
; 262  : 	while( (iIndex > 0) && (pImage < pImageEnd) )

	cmp	DWORD PTR _iIndex$[ebp], 0
	jbe	SHORT $L77523
	mov	ecx, DWORD PTR _pImage$[ebp]
	cmp	ecx, DWORD PTR _pImageEnd$[ebp]
	jae	SHORT $L77523

; 263  : 	{
; 264  : 		pImage = (const ATLSTRINGRESOURCEIMAGE*)(LPBYTE( pImage )+(sizeof( ATLSTRINGRESOURCEIMAGE )+(pImage->nLength*sizeof( WCHAR ))));

	mov	edx, DWORD PTR _pImage$[ebp]
	movzx	eax, WORD PTR [edx]
	mov	ecx, DWORD PTR _pImage$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2+2]
	mov	DWORD PTR _pImage$[ebp], edx

; 265  : 		iIndex--;

	mov	eax, DWORD PTR _iIndex$[ebp]
	sub	eax, 1
	mov	DWORD PTR _iIndex$[ebp], eax

; 266  : 	}

	jmp	SHORT $L77522
$L77523:

; 267  : 	if( pImage >= pImageEnd )

	mov	ecx, DWORD PTR _pImage$[ebp]
	cmp	ecx, DWORD PTR _pImageEnd$[ebp]
	jb	SHORT $L77527

; 268  : 	{
; 269  : 		return( NULL );

	xor	eax, eax
	jmp	SHORT $L77511
$L77527:

; 270  : 	}
; 271  : 	if( pImage->nLength == 0 )

	mov	edx, DWORD PTR _pImage$[ebp]
	movzx	eax, WORD PTR [edx]
	test	eax, eax
	jne	SHORT $L77528

; 272  : 	{
; 273  : 		return( NULL );

	xor	eax, eax
	jmp	SHORT $L77511
$L77528:

; 274  : 	}
; 275  : 
; 276  : 	return( pImage );

	mov	eax, DWORD PTR _pImage$[ebp]
$L77511:

; 277  : }

	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ENDP ; ATL::_AtlGetStringResourceImage
_TEXT	ENDS
PUBLIC	??1?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAE@XZ ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::~CAxDialogImpl<CShowSelectCert,ATL::CWindow>
PUBLIC	?Detach@CWindow@ATL@@QAEPAUHWND__@@XZ		; ATL::CWindow::Detach
; Function compile flags: /Odt /RTCsu
; File c:\activex\xmlsign\showselectcert.cpp
_TEXT	SEGMENT
_i$207811 = -8						; size = 4
_this$ = -4						; size = 4
??1CShowSelectCert@@UAE@XZ PROC NEAR			; CShowSelectCert::~CShowSelectCert
; _this$ = ecx

; 73   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CShowSelectCert@@6B@

; 74   : 	for (int i=0; i<count;i++)

	mov	DWORD PTR _i$207811[ebp], 0
	jmp	SHORT $L207812
$L207813:
	mov	ecx, DWORD PTR _i$207811[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$207811[ebp], ecx
$L207812:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _i$207811[ebp]
	cmp	eax, DWORD PTR [edx+64]
	jge	SHORT $L207814

; 75   : 	{
; 76   : 		if (decodedDataPtr[i])

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	mov	eax, DWORD PTR _i$207811[ebp]
	cmp	DWORD PTR [edx+eax*4], 0
	je	SHORT $L207815

; 77   : 		{
; 78   : 			zFree(decodedDataPtr[i]);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	mov	eax, DWORD PTR _i$207811[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_rFree
	add	esp, 4
$L207815:

; 79   : 		}
; 80   : 	}

	jmp	SHORT $L207813
$L207814:

; 81   : 	zFree(issuer);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	_rFree
	add	esp, 4

; 82   : 	zFree(subject);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	_rFree
	add	esp, 4

; 83   : 	zFree(notAfter);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	call	_rFree
	add	esp, 4

; 84   : 	zFree(decodedDataPtr);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	push	eax
	call	_rFree
	add	esp, 4

; 85   : 	Detach();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Detach@CWindow@ATL@@QAEPAUHWND__@@XZ	; ATL::CWindow::Detach

; 86   : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAE@XZ
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CShowSelectCert@@UAE@XZ ENDP				; CShowSelectCert::~CShowSelectCert
_TEXT	ENDS
PUBLIC	??1?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAE@XZ ; ATL::CDialogImplBaseT<ATL::CWindow>::~CDialogImplBaseT<ATL::CWindow>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAE@XZ PROC NEAR ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::~CAxDialogImpl<CShowSelectCert,ATL::CWindow>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAE@XZ ; ATL::CDialogImplBaseT<ATL::CWindow>::~CDialogImplBaseT<ATL::CWindow>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAE@XZ ENDP ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::~CAxDialogImpl<CShowSelectCert,ATL::CWindow>
_TEXT	ENDS
PUBLIC	?getCertificateData@CShowSelectCert@@QAEPADH@Z	; CShowSelectCert::getCertificateData
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?getCertificateData@CShowSelectCert@@QAEPADH@Z PROC NEAR ; CShowSelectCert::getCertificateData
; _this$ = ecx

; 89   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 90   : 	certificate = (char *)cV[index]->certificate;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+2048]
	mov	DWORD PTR [ecx+60], edx

; 91   : 	return certificate;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+60]

; 92   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?getCertificateData@CShowSelectCert@@QAEPADH@Z ENDP	; CShowSelectCert::getCertificateData
_TEXT	ENDS
EXTRN	_axViewAnyCertificate:NEAR
; Function compile flags: /Odt /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wNotifyCode$ = 8					; size = 2
_wID$ = 12						; size = 2
_hWndCtl$ = 16						; size = 4
_bHandled$ = 20						; size = 4
?OnClickedButton1@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z PROC NEAR ; CShowSelectCert::OnClickedButton1
; _this$ = ecx

; 95   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 96   : 	axViewAnyCertificate(cV[nCurrentRow]->certificate);

	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+68]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	ecx, DWORD PTR [eax+ecx*4]
	mov	edx, DWORD PTR [ecx+2048]
	push	edx
	call	_axViewAnyCertificate
	add	esp, 4

; 97   : 	return 0;

	xor	eax, eax

; 98   : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?OnClickedButton1@CShowSelectCert@@QAEJGGPAUHWND__@@AAH@Z ENDP ; CShowSelectCert::OnClickedButton1
_TEXT	ENDS
PUBLIC	??0?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAE@XZ ; ATL::CDialogImplBaseT<ATL::CWindow>::CDialogImplBaseT<ATL::CWindow>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
;	COMDAT ??0?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::CAxDialogImpl<CShowSelectCert,ATL::CWindow>, COMDAT
; _this$ = ecx

; 3408 : 	CAxDialogImpl() : m_bModal(false) { }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::CAxDialogImpl<CShowSelectCert,ATL::CWindow>
_TEXT	ENDS
PUBLIC	?DialogProc@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::DialogProc
; Function compile flags: /Odt /RTCsu
;	COMDAT ?GetDialogProc@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEP6GHPAUHWND__@@IIJ@ZXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDialogProc@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEP6GHPAUHWND__@@IIJ@ZXZ PROC NEAR ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::GetDialogProc, COMDAT
; _this$ = ecx

; 3415 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 3416 : 		return DialogProc;

	mov	eax, OFFSET FLAT:?DialogProc@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::DialogProc

; 3417 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetDialogProc@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEP6GHPAUHWND__@@IIJ@ZXZ ENDP ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::GetDialogProc
_TEXT	ENDS
PUBLIC	??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@ ; `string'
PUBLIC	??_C@_08LIEICNMC@m_bModal?$AA@			; `string'
EXTRN	__imp__IsWindow@4:NEAR
EXTRN	__imp__EndDialog@8:NEAR
;	COMDAT ??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
CONST	SEGMENT
??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@ DB '::IsWindow(m_hWnd)'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT
??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@ DB 'C:\Program '
	DB	'Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\include\at'
	DB	'lwin.h', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08LIEICNMC@m_bModal?$AA@
CONST	SEGMENT
??_C@_08LIEICNMC@m_bModal?$AA@ DB 'm_bModal', 00H	; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?EndDialog@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nRetCode$ = 8						; size = 4
?EndDialog@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHH@Z PROC NEAR ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::EndDialog, COMDAT
; _this$ = ecx

; 3431 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 3432 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L211494
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	3432					; 00000d68H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211494
	int	3
$L211494:

; 3433 : #ifdef _DEBUG
; 3434 : 		ATLASSERT(m_bModal);	// must be a modal dialog

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	jne	SHORT $L211495
	push	OFFSET FLAT:??_C@_08LIEICNMC@m_bModal?$AA@
	push	0
	push	3434					; 00000d6aH
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211495
	int	3
$L211495:

; 3435 : #endif //_DEBUG
; 3436 : 		return ::EndDialog(m_hWnd, nRetCode);

	mov	esi, esp
	mov	eax, DWORD PTR _nRetCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__EndDialog@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 3437 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?EndDialog@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHH@Z ENDP ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::EndDialog
_TEXT	ENDS
PUBLIC	?SetWindowPos@CWindow@ATL@@QAEHPAUHWND__@@HHHHI@Z ; ATL::CWindow::SetWindowPos
PUBLIC	?AtlHresultFromLastError@ATL@@YAJXZ		; ATL::AtlHresultFromLastError
PUBLIC	?GetWindow@CWindow@ATL@@QBE?AV12@I@Z		; ATL::CWindow::GetWindow
PUBLIC	?SetWindowContextHelpId@CWindow@ATL@@QAEHK@Z	; ATL::CWindow::SetWindowContextHelpId
PUBLIC	??B?$CComPtrBase@UIStream@@@ATL@@QBEPAUIStream@@XZ ; ATL::CComPtrBase<IStream>::operator IStream *
PUBLIC	??I?$CComPtrBase@UIStream@@@ATL@@QAEPAPAUIStream@@XZ ; ATL::CComPtrBase<IStream>::operator&
PUBLIC	??0?$CComPtr@UIStream@@@ATL@@QAE@XZ		; ATL::CComPtr<IStream>::CComPtr<IStream>
PUBLIC	??0_U_RECT@ATL@@QAE@PAUtagRECT@@@Z		; ATL::_U_RECT::_U_RECT
PUBLIC	??1?$CComPtr@UIStream@@@ATL@@QAE@XZ		; ATL::CComPtr<IStream>::~CComPtr<IStream>
PUBLIC	??0_U_MENUorID@ATL@@QAE@I@Z			; ATL::_U_MENUorID::_U_MENUorID
PUBLIC	?GetResourceInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetResourceInstance
PUBLIC	?IsDialogEx@_DialogSplitHelper@ATL@@SAHPBUDLGTEMPLATE@@@Z ; ATL::_DialogSplitHelper::IsDialogEx
PUBLIC	?DlgTemplateItemCount@_DialogSplitHelper@ATL@@SAAAGPAUDLGTEMPLATE@@@Z ; ATL::_DialogSplitHelper::DlgTemplateItemCount
PUBLIC	?FindFirstDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PBUDLGTEMPLATE@@@Z ; ATL::_DialogSplitHelper::FindFirstDlgItem
PUBLIC	?FindNextDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PAU3@H@Z ; ATL::_DialogSplitHelper::FindNextDlgItem
PUBLIC	?FindCreateData@_DialogSplitHelper@ATL@@SAKKPAEPAPAE@Z ; ATL::_DialogSplitHelper::FindCreateData
PUBLIC	?IsActiveXControl@_DialogSplitHelper@ATL@@SA_NPAUDLGITEMTEMPLATE@@H@Z ; ATL::_DialogSplitHelper::IsActiveXControl
PUBLIC	?ParseInitData@_DialogSplitHelper@ATL@@SAJPAUIStream@@PAPAG@Z ; ATL::_DialogSplitHelper::ParseInitData
PUBLIC	?MapDialogRect@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAEHPAUtagRECT@@@Z ; ATL::CDialogImplBaseT<ATL::CWindow>::MapDialogRect
PUBLIC	??0?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAE@PAUHWND__@@@Z ; ATL::CAxWindow2T<ATL::CWindow>::CAxWindow2T<ATL::CWindow>
PUBLIC	?Create@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z ; ATL::CAxWindow2T<ATL::CWindow>::Create
PUBLIC	?CreateControlLic@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@PAG@Z ; ATL::CAxWindow2T<ATL::CWindow>::CreateControlLic
EXTRN	__imp__GlobalAlloc@8:NEAR
EXTRN	__imp__GlobalLock@4:NEAR
EXTRN	__imp__GlobalUnlock@4:NEAR
EXTRN	__imp__CreateStreamOnHGlobal@12:NEAR
EXTRN	_memcpy:NEAR
EXTRN	__imp__GetWindow@8:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T211531 DD	0ffffffffH
	DD	FLAT:$L211519
	DD	00H
	DD	FLAT:$L211520
$T211522 DD	019930520H
	DD	02H
	DD	FLAT:$T211531
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?CreateActiveXControls@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEJI@Z
_TEXT	SEGMENT
tv275 = -200						; size = 4
tv271 = -196						; size = 4
tv265 = -192						; size = 4
tv213 = -188						; size = 2
tv207 = -186						; size = 2
tv202 = -184						; size = 2
tv197 = -182						; size = 2
tv193 = -180						; size = 4
tv150 = -176						; size = 4
$T211518 = -172						; size = 4
$T211511 = -168						; size = 4
$T211498 = -164						; size = 4
_rect$207938 = -156					; size = 16
_pszClassName$207934 = -136				; size = 4
_wnd$207933 = -128					; size = 4
_bstrLicKey$207930 = -116				; size = 4
_pSource$207927 = -108					; size = 4
_pBytes$207925 = -104					; size = 4
_h$207923 = -100					; size = 4
_spStream$207921 = -92					; size = 4
_dwLen$207920 = -84					; size = 4
_pData$207919 = -76					; size = 4
_wID$207916 = -68					; size = 4
_nItem$207912 = -64					; size = 2
_hWndPrev$207910 = -60					; size = 4
_pItem$207909 = -56					; size = 4
_nItems$207908 = -52					; size = 2
_bDialogEx$207907 = -48					; size = 4
_pDlg$207903 = -44					; size = 4
_hResource$207902 = -40					; size = 4
_hDlg$ = -36						; size = 4
_hr$ = -32						; size = 4
_hData$ = -28						; size = 4
_pInitData$ = -24					; size = 4
_hDlgInit$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nID$ = 8						; size = 4
?CreateActiveXControls@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEJI@Z PROC NEAR ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::CreateActiveXControls, COMDAT
; _this$ = ecx

; 3490 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateActiveXControls@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEJI@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 188				; 000000bcH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-200]
	mov	ecx, 47					; 0000002fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3491 : 		// Load dialog template and InitData
; 3492 : 		HRSRC hDlgInit = ::FindResource(_AtlBaseModule.GetResourceInstance(), MAKEINTRESOURCE(nID), (LPTSTR)_ATL_RT_DLGINIT);

	mov	esi, esp
	push	240					; 000000f0H
	movzx	eax, WORD PTR _nID$[ebp]
	push	eax
	mov	ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
	call	?GetResourceInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetResourceInstance
	push	eax
	call	DWORD PTR __imp__FindResourceA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hDlgInit$[ebp], eax

; 3493 : 		BYTE* pInitData = NULL;

	mov	DWORD PTR _pInitData$[ebp], 0

; 3494 : 		HGLOBAL hData = NULL;

	mov	DWORD PTR _hData$[ebp], 0

; 3495 : 		HRESULT hr = S_OK;

	mov	DWORD PTR _hr$[ebp], 0

; 3496 : 		if (hDlgInit != NULL)

	cmp	DWORD PTR _hDlgInit$[ebp], 0
	je	SHORT $L207890

; 3497 : 		{
; 3498 : 			hData = ::LoadResource(_AtlBaseModule.GetResourceInstance(), hDlgInit);

	mov	esi, esp
	mov	ecx, DWORD PTR _hDlgInit$[ebp]
	push	ecx
	mov	ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
	call	?GetResourceInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetResourceInstance
	push	eax
	call	DWORD PTR __imp__LoadResource@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hData$[ebp], eax

; 3499 : 			if (hData != NULL)

	cmp	DWORD PTR _hData$[ebp], 0
	je	SHORT $L207890

; 3500 : 				pInitData = (BYTE*) ::LockResource(hData);

	mov	esi, esp
	mov	edx, DWORD PTR _hData$[ebp]
	push	edx
	call	DWORD PTR __imp__LockResource@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pInitData$[ebp], eax
$L207890:

; 3501 : 		}
; 3502 : 
; 3503 : 		HRSRC hDlg = ::FindResource(_AtlBaseModule.GetResourceInstance(), MAKEINTRESOURCE(nID), (LPTSTR)RT_DIALOG);

	mov	esi, esp
	push	5
	movzx	eax, WORD PTR _nID$[ebp]
	push	eax
	mov	ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
	call	?GetResourceInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetResourceInstance
	push	eax
	call	DWORD PTR __imp__FindResourceA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hDlg$[ebp], eax

; 3504 : 		if (hDlg != NULL)

	cmp	DWORD PTR _hDlg$[ebp], 0
	je	$L207901

; 3505 : 		{
; 3506 : 			HGLOBAL hResource = ::LoadResource(_AtlBaseModule.GetResourceInstance(), hDlg);

	mov	esi, esp
	mov	ecx, DWORD PTR _hDlg$[ebp]
	push	ecx
	mov	ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
	call	?GetResourceInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetResourceInstance
	push	eax
	call	DWORD PTR __imp__LoadResource@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hResource$207902[ebp], eax

; 3507 : 			DLGTEMPLATE* pDlg = NULL;

	mov	DWORD PTR _pDlg$207903[ebp], 0

; 3508 : 			if (hResource != NULL)

	cmp	DWORD PTR _hResource$207902[ebp], 0
	je	$L207904

; 3509 : 			{
; 3510 : 				pDlg = (DLGTEMPLATE*) ::LockResource(hResource);

	mov	esi, esp
	mov	edx, DWORD PTR _hResource$207902[ebp]
	push	edx
	call	DWORD PTR __imp__LockResource@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pDlg$207903[ebp], eax

; 3511 : 				if (pDlg != NULL)

	cmp	DWORD PTR _pDlg$207903[ebp], 0
	je	$L207906

; 3512 : 				{
; 3513 : 					// Get first control on the template
; 3514 : 					BOOL bDialogEx = _DialogSplitHelper::IsDialogEx(pDlg);

	mov	eax, DWORD PTR _pDlg$207903[ebp]
	push	eax
	call	?IsDialogEx@_DialogSplitHelper@ATL@@SAHPBUDLGTEMPLATE@@@Z ; ATL::_DialogSplitHelper::IsDialogEx
	add	esp, 4
	mov	DWORD PTR _bDialogEx$207907[ebp], eax

; 3515 : 					WORD nItems = _DialogSplitHelper::DlgTemplateItemCount(pDlg);

	mov	ecx, DWORD PTR _pDlg$207903[ebp]
	push	ecx
	call	?DlgTemplateItemCount@_DialogSplitHelper@ATL@@SAAAGPAUDLGTEMPLATE@@@Z ; ATL::_DialogSplitHelper::DlgTemplateItemCount
	add	esp, 4
	mov	dx, WORD PTR [eax]
	mov	WORD PTR _nItems$207908[ebp], dx

; 3516 : 
; 3517 : 					// Get first control on the dialog
; 3518 : 					DLGITEMTEMPLATE* pItem = _DialogSplitHelper::FindFirstDlgItem(pDlg);

	mov	eax, DWORD PTR _pDlg$207903[ebp]
	push	eax
	call	?FindFirstDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PBUDLGTEMPLATE@@@Z ; ATL::_DialogSplitHelper::FindFirstDlgItem
	add	esp, 4
	mov	DWORD PTR _pItem$207909[ebp], eax

; 3519 : 					HWND hWndPrev = GetWindow(GW_CHILD);

	push	5
	lea	ecx, DWORD PTR $T211498[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetWindow@CWindow@ATL@@QBE?AV12@I@Z	; ATL::CWindow::GetWindow
	mov	ecx, eax
	call	??BCWindow@ATL@@QBEPAUHWND__@@XZ	; ATL::CWindow::operator HWND__ *
	mov	DWORD PTR _hWndPrev$207910[ebp], eax

; 3520 : 
; 3521 : 					// Create all ActiveX cotnrols in the dialog template and place them in the correct tab order (z-order)
; 3522 : 					for (WORD nItem = 0; nItem < nItems; nItem++)

	mov	WORD PTR _nItem$207912[ebp], 0
	jmp	SHORT $L207913
$L207914:
	mov	dx, WORD PTR _nItem$207912[ebp]
	add	dx, 1
	mov	WORD PTR _nItem$207912[ebp], dx
$L207913:
	movzx	eax, WORD PTR _nItem$207912[ebp]
	movzx	ecx, WORD PTR _nItems$207908[ebp]
	cmp	eax, ecx
	jge	$L207915

; 3523 : 					{
; 3524 : 						DWORD wID = bDialogEx ? ((_DialogSplitHelper::DLGITEMTEMPLATEEX*)pItem)->id : pItem->id;

	cmp	DWORD PTR _bDialogEx$207907[ebp], 0
	je	SHORT $L211499
	mov	edx, DWORD PTR _pItem$207909[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR tv150[ebp], eax
	jmp	SHORT $L211500
$L211499:
	mov	ecx, DWORD PTR _pItem$207909[ebp]
	movzx	edx, WORD PTR [ecx+16]
	mov	DWORD PTR tv150[ebp], edx
$L211500:
	mov	eax, DWORD PTR tv150[ebp]
	mov	DWORD PTR _wID$207916[ebp], eax

; 3525 : 						if (_DialogSplitHelper::IsActiveXControl(pItem, bDialogEx))

	mov	ecx, DWORD PTR _bDialogEx$207907[ebp]
	push	ecx
	mov	edx, DWORD PTR _pItem$207909[ebp]
	push	edx
	call	?IsActiveXControl@_DialogSplitHelper@ATL@@SA_NPAUDLGITEMTEMPLATE@@H@Z ; ATL::_DialogSplitHelper::IsActiveXControl
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$L207918

; 3526 : 						{
; 3527 : 							BYTE* pData = NULL;

	mov	DWORD PTR _pData$207919[ebp], 0

; 3528 : 							DWORD dwLen = _DialogSplitHelper::FindCreateData(wID, pInitData, &pData);

	lea	ecx, DWORD PTR _pData$207919[ebp]
	push	ecx
	mov	edx, DWORD PTR _pInitData$[ebp]
	push	edx
	mov	eax, DWORD PTR _wID$207916[ebp]
	push	eax
	call	?FindCreateData@_DialogSplitHelper@ATL@@SAKKPAEPAPAE@Z ; ATL::_DialogSplitHelper::FindCreateData
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _dwLen$207920[ebp], eax

; 3529 : 							CComPtr<IStream> spStream;

	lea	ecx, DWORD PTR _spStream$207921[ebp]
	call	??0?$CComPtr@UIStream@@@ATL@@QAE@XZ	; ATL::CComPtr<IStream>::CComPtr<IStream>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3530 : 							if (dwLen != 0)

	cmp	DWORD PTR _dwLen$207920[ebp], 0
	je	$L207922

; 3531 : 							{
; 3532 : 								HGLOBAL h = GlobalAlloc(GHND, dwLen);

	mov	esi, esp
	mov	ecx, DWORD PTR _dwLen$207920[ebp]
	push	ecx
	push	66					; 00000042H
	call	DWORD PTR __imp__GlobalAlloc@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _h$207923[ebp], eax

; 3533 : 								if (h != NULL)

	cmp	DWORD PTR _h$207923[ebp], 0
	je	SHORT $L207924

; 3534 : 								{
; 3535 : 									BYTE* pBytes = (BYTE*) GlobalLock(h);

	mov	esi, esp
	mov	edx, DWORD PTR _h$207923[ebp]
	push	edx
	call	DWORD PTR __imp__GlobalLock@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pBytes$207925[ebp], eax

; 3536 : 									BYTE* pSource = pData; 

	mov	eax, DWORD PTR _pData$207919[ebp]
	mov	DWORD PTR _pSource$207927[ebp], eax

; 3537 : 									memcpy(pBytes, pSource, dwLen);

	mov	ecx, DWORD PTR _dwLen$207920[ebp]
	push	ecx
	mov	edx, DWORD PTR _pSource$207927[ebp]
	push	edx
	mov	eax, DWORD PTR _pBytes$207925[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 3538 : 									GlobalUnlock(h);

	mov	esi, esp
	mov	ecx, DWORD PTR _h$207923[ebp]
	push	ecx
	call	DWORD PTR __imp__GlobalUnlock@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 3539 : 									CreateStreamOnHGlobal(h, TRUE, &spStream);

	lea	ecx, DWORD PTR _spStream$207921[ebp]
	call	??I?$CComPtrBase@UIStream@@@ATL@@QAEPAPAUIStream@@XZ ; ATL::CComPtrBase<IStream>::operator&
	mov	esi, esp
	push	eax
	push	1
	mov	edx, DWORD PTR _h$207923[ebp]
	push	edx
	call	DWORD PTR __imp__CreateStreamOnHGlobal@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 3540 : 								}
; 3541 : 								else

	jmp	SHORT $L207922
$L207924:

; 3542 : 								{
; 3543 : 									hr = E_OUTOFMEMORY;

	mov	DWORD PTR _hr$[ebp], -2147024882	; 8007000eH

; 3544 : 									break;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spStream$207921[ebp]
	call	??1?$CComPtr@UIStream@@@ATL@@QAE@XZ
	jmp	$L207915
$L207922:

; 3545 : 								}
; 3546 : 							}
; 3547 : 
; 3548 : 							CComBSTR bstrLicKey;

	lea	ecx, DWORD PTR _bstrLicKey$207930[ebp]
	call	??0CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::CComBSTR
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 3549 : 							hr = _DialogSplitHelper::ParseInitData(spStream, &bstrLicKey.m_str);

	lea	eax, DWORD PTR _bstrLicKey$207930[ebp]
	push	eax
	lea	ecx, DWORD PTR _spStream$207921[ebp]
	call	??B?$CComPtrBase@UIStream@@@ATL@@QBEPAUIStream@@XZ ; ATL::CComPtrBase<IStream>::operator IStream *
	push	eax
	call	?ParseInitData@_DialogSplitHelper@ATL@@SAJPAUIStream@@PAPAG@Z ; ATL::_DialogSplitHelper::ParseInitData
	add	esp, 8
	mov	DWORD PTR _hr$[ebp], eax

; 3550 : 							if (SUCCEEDED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jl	$L207932

; 3551 : 							{
; 3552 : 								CAxWindow2 wnd;

	push	0
	lea	ecx, DWORD PTR _wnd$207933[ebp]
	call	??0?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAE@PAUHWND__@@@Z ; ATL::CAxWindow2T<ATL::CWindow>::CAxWindow2T<ATL::CWindow>

; 3553 : 								// Get control caption.
; 3554 : 								LPWSTR pszClassName = 
; 3555 : 									bDialogEx ? 
; 3556 : 										(LPWSTR)(((_DialogSplitHelper::DLGITEMTEMPLATEEX*)pItem) + 1) :
; 3557 : 										(LPWSTR)(pItem + 1);

	cmp	DWORD PTR _bDialogEx$207907[ebp], 0
	je	SHORT $L211501
	mov	ecx, DWORD PTR _pItem$207909[ebp]
	add	ecx, 24					; 00000018H
	mov	DWORD PTR tv193[ebp], ecx
	jmp	SHORT $L211502
$L211501:
	mov	edx, DWORD PTR _pItem$207909[ebp]
	add	edx, 18					; 00000012H
	mov	DWORD PTR tv193[ebp], edx
$L211502:
	mov	eax, DWORD PTR tv193[ebp]
	mov	DWORD PTR _pszClassName$207934[ebp], eax

; 3558 : 								// Get control rect.
; 3559 : 								RECT rect;
; 3560 : 								rect.left = 
; 3561 : 									bDialogEx ? 
; 3562 : 										((_DialogSplitHelper::DLGITEMTEMPLATEEX*)pItem)->x : 
; 3563 : 										pItem->x;

	cmp	DWORD PTR _bDialogEx$207907[ebp], 0
	je	SHORT $L211503
	mov	ecx, DWORD PTR _pItem$207909[ebp]
	mov	dx, WORD PTR [ecx+12]
	mov	WORD PTR tv197[ebp], dx
	jmp	SHORT $L211504
$L211503:
	mov	eax, DWORD PTR _pItem$207909[ebp]
	mov	cx, WORD PTR [eax+8]
	mov	WORD PTR tv197[ebp], cx
$L211504:
	movsx	edx, WORD PTR tv197[ebp]
	mov	DWORD PTR _rect$207938[ebp], edx

; 3564 : 								rect.top = 
; 3565 : 									bDialogEx ? 
; 3566 : 										((_DialogSplitHelper::DLGITEMTEMPLATEEX*)pItem)->y : 
; 3567 : 										pItem->y;

	cmp	DWORD PTR _bDialogEx$207907[ebp], 0
	je	SHORT $L211505
	mov	eax, DWORD PTR _pItem$207909[ebp]
	mov	cx, WORD PTR [eax+14]
	mov	WORD PTR tv202[ebp], cx
	jmp	SHORT $L211506
$L211505:
	mov	edx, DWORD PTR _pItem$207909[ebp]
	mov	ax, WORD PTR [edx+10]
	mov	WORD PTR tv202[ebp], ax
$L211506:
	movsx	ecx, WORD PTR tv202[ebp]
	mov	DWORD PTR _rect$207938[ebp+4], ecx

; 3568 : 								rect.right = rect.left + 
; 3569 : 									(bDialogEx ? 
; 3570 : 										((_DialogSplitHelper::DLGITEMTEMPLATEEX*)pItem)->cx : 
; 3571 : 										pItem->cx);

	cmp	DWORD PTR _bDialogEx$207907[ebp], 0
	je	SHORT $L211507
	mov	edx, DWORD PTR _pItem$207909[ebp]
	mov	ax, WORD PTR [edx+16]
	mov	WORD PTR tv207[ebp], ax
	jmp	SHORT $L211508
$L211507:
	mov	ecx, DWORD PTR _pItem$207909[ebp]
	mov	dx, WORD PTR [ecx+12]
	mov	WORD PTR tv207[ebp], dx
$L211508:
	movsx	eax, WORD PTR tv207[ebp]
	add	eax, DWORD PTR _rect$207938[ebp]
	mov	DWORD PTR _rect$207938[ebp+8], eax

; 3572 : 								rect.bottom = rect.top + 
; 3573 : 									(bDialogEx ? 
; 3574 : 										((_DialogSplitHelper::DLGITEMTEMPLATEEX*)pItem)->cy : 
; 3575 : 										pItem->cy);

	cmp	DWORD PTR _bDialogEx$207907[ebp], 0
	je	SHORT $L211509
	mov	ecx, DWORD PTR _pItem$207909[ebp]
	mov	dx, WORD PTR [ecx+18]
	mov	WORD PTR tv213[ebp], dx
	jmp	SHORT $L211510
$L211509:
	mov	eax, DWORD PTR _pItem$207909[ebp]
	mov	cx, WORD PTR [eax+14]
	mov	WORD PTR tv213[ebp], cx
$L211510:
	movsx	edx, WORD PTR tv213[ebp]
	add	edx, DWORD PTR _rect$207938[ebp+4]
	mov	DWORD PTR _rect$207938[ebp+12], edx

; 3576 : 
; 3577 : 								// Convert from dialog units to screen units
; 3578 : 								MapDialogRect(&rect);

	lea	eax, DWORD PTR _rect$207938[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MapDialogRect@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAEHPAUtagRECT@@@Z ; ATL::CDialogImplBaseT<ATL::CWindow>::MapDialogRect

; 3579 : 
; 3580 : 								// Create AxWindow with a NULL caption.
; 3581 : 								wnd.Create(m_hWnd, 
; 3582 : 									&rect, 
; 3583 : 									NULL, 
; 3584 : 									(bDialogEx ? 
; 3585 : 										((_DialogSplitHelper::DLGITEMTEMPLATEEX*)pItem)->style : 
; 3586 : 										pItem->style) | WS_TABSTOP, 
; 3587 : 									bDialogEx ? 
; 3588 : 										((_DialogSplitHelper::DLGITEMTEMPLATEEX*)pItem)->exStyle : 
; 3589 : 										0,
; 3590 : 									bDialogEx ? 
; 3591 : 										((_DialogSplitHelper::DLGITEMTEMPLATEEX*)pItem)->id : 
; 3592 : 										pItem->id,
; 3593 : 									NULL);

	cmp	DWORD PTR _bDialogEx$207907[ebp], 0
	je	SHORT $L211512
	mov	ecx, DWORD PTR _pItem$207909[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR tv265[ebp], edx
	jmp	SHORT $L211513
$L211512:
	mov	eax, DWORD PTR _pItem$207909[ebp]
	movzx	ecx, WORD PTR [eax+16]
	mov	DWORD PTR tv265[ebp], ecx
$L211513:
	cmp	DWORD PTR _bDialogEx$207907[ebp], 0
	je	SHORT $L211514
	mov	edx, DWORD PTR _pItem$207909[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR tv271[ebp], eax
	jmp	SHORT $L211515
$L211514:
	mov	DWORD PTR tv271[ebp], 0
$L211515:
	cmp	DWORD PTR _bDialogEx$207907[ebp], 0
	je	SHORT $L211516
	mov	ecx, DWORD PTR _pItem$207909[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv275[ebp], edx
	jmp	SHORT $L211517
$L211516:
	mov	eax, DWORD PTR _pItem$207909[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv275[ebp], ecx
$L211517:
	push	0
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T211511[ebp], esp
	mov	edx, DWORD PTR tv265[ebp]
	push	edx
	call	??0_U_MENUorID@ATL@@QAE@I@Z		; ATL::_U_MENUorID::_U_MENUorID
	mov	eax, DWORD PTR tv271[ebp]
	push	eax
	mov	ecx, DWORD PTR tv275[ebp]
	or	ecx, 65536				; 00010000H
	push	ecx
	push	0
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T211518[ebp], esp
	lea	edx, DWORD PTR _rect$207938[ebp]
	push	edx
	call	??0_U_RECT@ATL@@QAE@PAUtagRECT@@@Z	; ATL::_U_RECT::_U_RECT
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	ecx, DWORD PTR _wnd$207933[ebp]
	call	?Create@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z ; ATL::CAxWindow2T<ATL::CWindow>::Create

; 3594 : 
; 3595 : 								if (wnd != NULL)

	lea	ecx, DWORD PTR _wnd$207933[ebp]
	call	??BCWindow@ATL@@QBEPAUHWND__@@XZ	; ATL::CWindow::operator HWND__ *
	test	eax, eax
	je	$L207948

; 3596 : 								{
; 3597 : 									// Set the Help ID
; 3598 : 									if (bDialogEx && ((_DialogSplitHelper::DLGITEMTEMPLATEEX*)pItem)->helpID != 0)

	cmp	DWORD PTR _bDialogEx$207907[ebp], 0
	je	SHORT $L207950
	mov	edx, DWORD PTR _pItem$207909[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $L207950

; 3599 : 										wnd.SetWindowContextHelpId(((_DialogSplitHelper::DLGITEMTEMPLATEEX*)pItem)->helpID);

	mov	eax, DWORD PTR _pItem$207909[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR _wnd$207933[ebp]
	call	?SetWindowContextHelpId@CWindow@ATL@@QAEHK@Z ; ATL::CWindow::SetWindowContextHelpId
$L207950:

; 3600 : 									// Try to create the ActiveX control.
; 3601 : 									hr = wnd.CreateControlLic(pszClassName, spStream, NULL, bstrLicKey);

	lea	ecx, DWORD PTR _bstrLicKey$207930[ebp]
	call	??BCComBSTR@ATL@@QBEPAGXZ		; ATL::CComBSTR::operator unsigned short *
	push	eax
	push	0
	lea	ecx, DWORD PTR _spStream$207921[ebp]
	call	??B?$CComPtrBase@UIStream@@@ATL@@QBEPAUIStream@@XZ ; ATL::CComPtrBase<IStream>::operator IStream *
	push	eax
	mov	edx, DWORD PTR _pszClassName$207934[ebp]
	push	edx
	lea	ecx, DWORD PTR _wnd$207933[ebp]
	call	?CreateControlLic@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@PAG@Z ; ATL::CAxWindow2T<ATL::CWindow>::CreateControlLic
	mov	DWORD PTR _hr$[ebp], eax

; 3602 : 									if (FAILED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L207953

; 3603 : 										break;

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _bstrLicKey$207930[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spStream$207921[ebp]
	call	??1?$CComPtr@UIStream@@@ATL@@QAE@XZ
	jmp	$L207915
$L207953:

; 3604 : 									// Set the correct tab position.
; 3605 : 									if (nItem == 0)

	movzx	eax, WORD PTR _nItem$207912[ebp]
	test	eax, eax
	jne	SHORT $L207954

; 3606 : 										hWndPrev = HWND_TOP;

	mov	DWORD PTR _hWndPrev$207910[ebp], 0
$L207954:

; 3607 : 									wnd.SetWindowPos(hWndPrev, 0,0,0,0,SWP_NOACTIVATE | SWP_NOMOVE | SWP_NOSIZE);

	push	19					; 00000013H
	push	0
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _hWndPrev$207910[ebp]
	push	ecx
	lea	ecx, DWORD PTR _wnd$207933[ebp]
	call	?SetWindowPos@CWindow@ATL@@QAEHPAUHWND__@@HHHHI@Z ; ATL::CWindow::SetWindowPos

; 3608 : 									hWndPrev = wnd;

	lea	ecx, DWORD PTR _wnd$207933[ebp]
	call	??BCWindow@ATL@@QBEPAUHWND__@@XZ	; ATL::CWindow::operator HWND__ *
	mov	DWORD PTR _hWndPrev$207910[ebp], eax

; 3609 : 								}
; 3610 : 								else

	jmp	SHORT $L207932
$L207948:

; 3611 : 								{
; 3612 : 									hr = AtlHresultFromLastError();

	call	?AtlHresultFromLastError@ATL@@YAJXZ	; ATL::AtlHresultFromLastError
	mov	DWORD PTR _hr$[ebp], eax
$L207932:

; 3613 : 								}
; 3614 : 							}
; 3615 : 						}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _bstrLicKey$207930[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spStream$207921[ebp]
	call	??1?$CComPtr@UIStream@@@ATL@@QAE@XZ

; 3616 : 						else

	jmp	SHORT $L207957
$L207918:

; 3617 : 						{
; 3618 : 							if (nItem != 0)

	movzx	edx, WORD PTR _nItem$207912[ebp]
	test	edx, edx
	je	SHORT $L207957

; 3619 : 								hWndPrev = ::GetWindow(hWndPrev, GW_HWNDNEXT);

	mov	esi, esp
	push	2
	mov	eax, DWORD PTR _hWndPrev$207910[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hWndPrev$207910[ebp], eax
$L207957:

; 3620 : 						}
; 3621 : 						pItem = _DialogSplitHelper::FindNextDlgItem(pItem, bDialogEx);

	mov	ecx, DWORD PTR _bDialogEx$207907[ebp]
	push	ecx
	mov	edx, DWORD PTR _pItem$207909[ebp]
	push	edx
	call	?FindNextDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PAU3@H@Z ; ATL::_DialogSplitHelper::FindNextDlgItem
	add	esp, 8
	mov	DWORD PTR _pItem$207909[ebp], eax

; 3622 : 					}

	jmp	$L207914
$L207915:

; 3623 : 				}
; 3624 : 				else

	jmp	SHORT $L207959
$L207906:

; 3625 : 					hr = AtlHresultFromLastError();

	call	?AtlHresultFromLastError@ATL@@YAJXZ	; ATL::AtlHresultFromLastError
	mov	DWORD PTR _hr$[ebp], eax
$L207959:

; 3626 : 			}
; 3627 : 			else

	jmp	SHORT $L207901
$L207904:

; 3628 : 				hr = AtlHresultFromLastError();

	call	?AtlHresultFromLastError@ATL@@YAJXZ	; ATL::AtlHresultFromLastError
	mov	DWORD PTR _hr$[ebp], eax
$L207901:

; 3629 : 		}
; 3630 : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 3631 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L211530
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	add	esp, 200				; 000000c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$L211530:
	DD	5
	DD	$L211529
$L211529:
	DD	-76					; ffffffb4H
	DD	4
	DD	$L211523
	DD	-92					; ffffffa4H
	DD	4
	DD	$L211524
	DD	-116					; ffffff8cH
	DD	4
	DD	$L211525
	DD	-128					; ffffff80H
	DD	4
	DD	$L211526
	DD	-156					; ffffff64H
	DD	16					; 00000010H
	DD	$L211527
$L211527:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$L211526:
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$L211525:
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	75					; 0000004bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$L211524:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$L211523:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L211519:
	lea	ecx, DWORD PTR _spStream$207921[ebp]
	jmp	??1?$CComPtr@UIStream@@@ATL@@QAE@XZ
$L211520:
	lea	ecx, DWORD PTR _bstrLicKey$207930[ebp]
	jmp	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
__ehhandler$?CreateActiveXControls@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEJI@Z:
	mov	eax, OFFSET FLAT:$T211522
	jmp	___CxxFrameHandler
text$x	ENDS
?CreateActiveXControls@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@UAEJI@Z ENDP ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::CreateActiveXControls
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcore.h
;	COMDAT ?GetResourceInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetResourceInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ PROC NEAR ; ATL::CAtlBaseModule::GetResourceInstance, COMDAT
; _this$ = ecx

; 210  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 211  : 		return m_hInstResource;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 212  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetResourceInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ENDP ; ATL::CAtlBaseModule::GetResourceInstance
_TEXT	ENDS
EXTRN	__imp__GetLastError@0:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ?AtlHresultFromLastError@ATL@@YAJXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_dwErr$ = -4						; size = 4
?AtlHresultFromLastError@ATL@@YAJXZ PROC NEAR		; ATL::AtlHresultFromLastError, COMDAT

; 26   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 27   : 	DWORD dwErr = ::GetLastError();

	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dwErr$[ebp], eax

; 28   : 	return HRESULT_FROM_WIN32(dwErr);

	cmp	DWORD PTR _dwErr$[ebp], 0
	jg	SHORT $L211538
	mov	eax, DWORD PTR _dwErr$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $L211539
$L211538:
	mov	ecx, DWORD PTR _dwErr$[ebp]
	and	ecx, 65535				; 0000ffffH
	or	ecx, 458752				; 00070000H
	or	ecx, -2147483648			; 80000000H
	mov	DWORD PTR tv69[ebp], ecx
$L211539:
	mov	eax, DWORD PTR tv69[ebp]

; 29   : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AtlHresultFromLastError@ATL@@YAJXZ ENDP		; ATL::AtlHresultFromLastError
_TEXT	ENDS
PUBLIC	?Init@?$CW2AEX@$0IA@@ATL@@AAEXPBGI@Z		; ATL::CW2AEX<128>::Init
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ??0?$CW2AEX@$0IA@@ATL@@QAE@PBG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_psz$ = 8						; size = 4
??0?$CW2AEX@$0IA@@ATL@@QAE@PBG@Z PROC NEAR		; ATL::CW2AEX<128>::CW2AEX<128>, COMDAT
; _this$ = ecx

; 419  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 420  : 		Init( psz, _AtlGetConversionACP() );

	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	push	eax
	mov	edx, DWORD PTR _psz$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init@?$CW2AEX@$0IA@@ATL@@AAEXPBGI@Z	; ATL::CW2AEX<128>::Init

; 421  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CW2AEX@$0IA@@ATL@@QAE@PBG@Z ENDP			; ATL::CW2AEX<128>::CW2AEX<128>
_TEXT	ENDS
EXTRN	_free:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CW2AEX@$0IA@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CW2AEX@$0IA@@ATL@@QAE@XZ PROC NEAR			; ATL::CW2AEX<128>::~CW2AEX<128>, COMDAT
; _this$ = ecx

; 428  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 429  : 		if( m_psz != m_szBuffer )

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $L208282

; 430  : 		{
; 431  : 			free( m_psz );

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_free
	add	esp, 4
$L208282:

; 432  : 		}
; 433  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CW2AEX@$0IA@@ATL@@QAE@XZ ENDP			; ATL::CW2AEX<128>::~CW2AEX<128>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ PROC NEAR		; ATL::CW2AEX<128>::operator char *, COMDAT
; _this$ = ecx

; 436  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 437  : 		return( m_psz );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 438  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ ENDP			; ATL::CW2AEX<128>::operator char *
_TEXT	ENDS
PUBLIC	??0?$CWindowImplRoot@VCWindow@ATL@@@ATL@@QAE@XZ	; ATL::CWindowImplRoot<ATL::CWindow>::CWindowImplRoot<ATL::CWindow>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CDialogImplBaseT<ATL::CWindow>::CDialogImplBaseT<ATL::CWindow>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CWindowImplRoot@VCWindow@ATL@@@ATL@@QAE@XZ ; ATL::CWindowImplRoot<ATL::CWindow>::CWindowImplRoot<ATL::CWindow>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CDialogImplBaseT<ATL::CWindow>::CDialogImplBaseT<ATL::CWindow>
_TEXT	ENDS
EXTRN	__imp__MapDialogRect@8:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
;	COMDAT ?MapDialogRect@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAEHPAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpRect$ = 8						; size = 4
?MapDialogRect@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAEHPAUtagRECT@@@Z PROC NEAR ; ATL::CDialogImplBaseT<ATL::CWindow>::MapDialogRect, COMDAT
; _this$ = ecx

; 3207 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 3208 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L211551
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	3208					; 00000c88H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211551
	int	3
$L211551:

; 3209 : 		return ::MapDialogRect(m_hWnd, lpRect);

	mov	esi, esp
	mov	eax, DWORD PTR _lpRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__MapDialogRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 3210 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?MapDialogRect@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@QAEHPAUtagRECT@@@Z ENDP ; ATL::CDialogImplBaseT<ATL::CWindow>::MapDialogRect
_TEXT	ENDS
PUBLIC	??0?$CAxWindowT@VCWindow@ATL@@@ATL@@QAE@PAUHWND__@@@Z ; ATL::CAxWindowT<ATL::CWindow>::CAxWindowT<ATL::CWindow>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAE@PAUHWND__@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hWnd$ = 8						; size = 4
??0?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAE@PAUHWND__@@@Z PROC NEAR ; ATL::CAxWindow2T<ATL::CWindow>::CAxWindow2T<ATL::CWindow>, COMDAT
; _this$ = ecx

; 2126 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CAxWindowT@VCWindow@ATL@@@ATL@@QAE@PAUHWND__@@@Z ; ATL::CAxWindowT<ATL::CWindow>::CAxWindowT<ATL::CWindow>

; 2127 : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAE@PAUHWND__@@@Z ENDP ; ATL::CAxWindow2T<ATL::CWindow>::CAxWindow2T<ATL::CWindow>
_TEXT	ENDS
PUBLIC	?Create@CWindow@ATL@@QAEPAUHWND__@@PBDPAU3@V_U_RECT@2@0KKV_U_MENUorID@2@PAX@Z ; ATL::CWindow::Create
PUBLIC	?GetWndClassName@?$CAxWindow2T@VCWindow@ATL@@@ATL@@SAPBDXZ ; ATL::CAxWindow2T<ATL::CWindow>::GetWndClassName
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Create@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hWndParent$ = 8					; size = 4
_rect$ = 12						; size = 4
_szWindowName$ = 16					; size = 4
_dwStyle$ = 20						; size = 4
_dwExStyle$ = 24					; size = 4
_MenuOrID$ = 28						; size = 4
_lpCreateParam$ = 32					; size = 4
?Create@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z PROC NEAR ; ATL::CAxWindow2T<ATL::CWindow>::Create, COMDAT
; _this$ = ecx

; 2145 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2146 : 		return CWindow::Create(GetWndClassName(), hWndParent, rect, szWindowName, dwStyle, dwExStyle, MenuOrID, lpCreateParam);

	mov	eax, DWORD PTR _lpCreateParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _MenuOrID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dwExStyle$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwStyle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _szWindowName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rect$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWndParent$[ebp]
	push	eax
	call	?GetWndClassName@?$CAxWindow2T@VCWindow@ATL@@@ATL@@SAPBDXZ ; ATL::CAxWindow2T<ATL::CWindow>::GetWndClassName
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Create@CWindow@ATL@@QAEPAUHWND__@@PBDPAU3@V_U_RECT@2@0KKV_U_MENUorID@2@PAX@Z ; ATL::CWindow::Create

; 2147 : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?Create@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z ENDP ; ATL::CAxWindow2T<ATL::CWindow>::Create
_TEXT	ENDS
PUBLIC	?CreateControlLicEx@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@2ABU_GUID@@PAU4@PAG@Z ; ATL::CAxWindow2T<ATL::CWindow>::CreateControlLicEx
EXTRN	_GUID_NULL:BYTE
; Function compile flags: /Odt /RTCsu
;	COMDAT ?CreateControlLic@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@PAG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszName$ = 8						; size = 4
_pStream$ = 12						; size = 4
_ppUnkContainer$ = 16					; size = 4
_bstrLicKey$ = 20					; size = 4
?CreateControlLic@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@PAG@Z PROC NEAR ; ATL::CAxWindow2T<ATL::CWindow>::CreateControlLic, COMDAT
; _this$ = ecx

; 2150 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2151 : 		return CreateControlLicEx(lpszName, pStream, ppUnkContainer, NULL, IID_NULL, NULL, bstrLicKey);

	mov	eax, DWORD PTR _bstrLicKey$[ebp]
	push	eax
	push	0
	push	OFFSET FLAT:_GUID_NULL
	push	0
	mov	ecx, DWORD PTR _ppUnkContainer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pStream$[ebp]
	push	edx
	mov	eax, DWORD PTR _lpszName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateControlLicEx@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@2ABU_GUID@@PAU4@PAG@Z ; ATL::CAxWindow2T<ATL::CWindow>::CreateControlLicEx

; 2152 : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?CreateControlLic@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@PAG@Z ENDP ; ATL::CAxWindow2T<ATL::CWindow>::CreateControlLic
_TEXT	ENDS
PUBLIC	?AtlThrowLastWin32@ATL@@YGXXZ			; ATL::AtlThrowLastWin32
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?Init@?$CW2AEX@$0IA@@ATL@@AAEXPBGI@Z
_TEXT	SEGMENT
_nLengthA$ = -12					; size = 4
_nLengthW$ = -8						; size = 4
_this$ = -4						; size = 4
_psz$ = 8						; size = 4
_nCodePage$ = 12					; size = 4
?Init@?$CW2AEX@$0IA@@ATL@@AAEXPBGI@Z PROC NEAR		; ATL::CW2AEX<128>::Init, COMDAT
; _this$ = ecx

; 442  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 443  : 		if (psz == NULL)

	cmp	DWORD PTR _psz$[ebp], 0
	jne	SHORT $L208762

; 444  : 		{
; 445  : 			m_psz = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 446  : 			return;

	jmp	$L211559
$L208762:

; 447  : 		}
; 448  : 		int nLengthW = lstrlenW( psz )+1;

	mov	esi, esp
	mov	ecx, DWORD PTR _psz$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	mov	DWORD PTR _nLengthW$[ebp], eax

; 449  : 		int nLengthA = nLengthW*2;

	mov	edx, DWORD PTR _nLengthW$[ebp]
	shl	edx, 1
	mov	DWORD PTR _nLengthA$[ebp], edx

; 450  : 
; 451  : 		if( nLengthA > t_nBufferLength )

	cmp	DWORD PTR _nLengthA$[ebp], 128		; 00000080H
	jle	SHORT $L208765

; 452  : 		{
; 453  : 			m_psz = static_cast< LPSTR >( malloc( nLengthA*sizeof( char ) ) );

	mov	eax, DWORD PTR _nLengthA$[ebp]
	push	eax
	call	_malloc
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 454  : 			if (m_psz == NULL)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $L208765

; 455  : 			{
; 456  : 				AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L208765:

; 457  : 			}
; 458  : 		}
; 459  : 
; 460  : 		if (::WideCharToMultiByte( nCodePage, 0, psz, nLengthW, m_psz, nLengthA, NULL, NULL ) == 0)

	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _nLengthA$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _nLengthW$[ebp]
	push	eax
	mov	ecx, DWORD PTR _psz$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _nCodePage$[ebp]
	push	edx
	call	DWORD PTR __imp__WideCharToMultiByte@32
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L211559

; 461  : 		{
; 462  : 			AtlThrowLastWin32();

	call	?AtlThrowLastWin32@ATL@@YGXXZ		; ATL::AtlThrowLastWin32
$L211559:

; 463  : 		}
; 464  : 	}

	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Init@?$CW2AEX@$0IA@@ATL@@AAEXPBGI@Z ENDP		; ATL::CW2AEX<128>::Init
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlexcept.h
_TEXT	ENDS
;	COMDAT ?AtlThrowLastWin32@ATL@@YGXXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_dwError$ = -4						; size = 4
?AtlThrowLastWin32@ATL@@YGXXZ PROC NEAR			; ATL::AtlThrowLastWin32, COMDAT

; 80   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 81   : 	DWORD dwError = ::GetLastError();

	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dwError$[ebp], eax

; 82   : 	AtlThrow( HRESULT_FROM_WIN32( dwError ) );

	cmp	DWORD PTR _dwError$[ebp], 0
	jg	SHORT $L211562
	mov	eax, DWORD PTR _dwError$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $L211563
$L211562:
	mov	ecx, DWORD PTR _dwError$[ebp]
	and	ecx, 65535				; 0000ffffH
	or	ecx, 458752				; 00070000H
	or	ecx, -2147483648			; 80000000H
	mov	DWORD PTR tv69[ebp], ecx
$L211563:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L211561:

; 83   : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AtlThrowLastWin32@ATL@@YGXXZ ENDP			; ATL::AtlThrowLastWin32
_TEXT	ENDS
PUBLIC	_AtlAxWinInit@0
PUBLIC	??0CWindow@ATL@@QAE@PAUHWND__@@@Z		; ATL::CWindow::CWindow
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
;	COMDAT ??0?$CAxWindowT@VCWindow@ATL@@@ATL@@QAE@PAUHWND__@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hWnd$ = 8						; size = 4
??0?$CAxWindowT@VCWindow@ATL@@@ATL@@QAE@PAUHWND__@@@Z PROC NEAR ; ATL::CAxWindowT<ATL::CWindow>::CAxWindowT<ATL::CWindow>, COMDAT
; _this$ = ecx

; 1941 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CWindow@ATL@@QAE@PAUHWND__@@@Z	; ATL::CWindow::CWindow

; 1942 : 		AtlAxWinInit();

	call	_AtlAxWinInit@0

; 1943 : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CAxWindowT@VCWindow@ATL@@@ATL@@QAE@PAUHWND__@@@Z ENDP ; ATL::CAxWindowT<ATL::CWindow>::CAxWindowT<ATL::CWindow>
_TEXT	ENDS
PUBLIC	??I?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAEPAPAUIAxWinHostWindowLic@@XZ ; ATL::CComPtrBase<IAxWinHostWindowLic>::operator&
PUBLIC	??C?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIAxWinHostWindowLic@@@1@XZ ; ATL::CComPtrBase<IAxWinHostWindowLic>::operator->
PUBLIC	??0?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ	; ATL::CComPtr<IAxWinHostWindowLic>::CComPtr<IAxWinHostWindowLic>
PUBLIC	??1?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ	; ATL::CComPtr<IAxWinHostWindowLic>::~CComPtr<IAxWinHostWindowLic>
PUBLIC	_AtlAxCreateControlLicEx@32
PUBLIC	??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator&
PUBLIC	?Detach@?$CComPtrBase@UIUnknown@@@ATL@@QAEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::Detach
PUBLIC	??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ		; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
PUBLIC	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ		; ATL::CComPtr<IUnknown>::~CComPtr<IUnknown>
PUBLIC	??_C@_0BF@CCFFBNDL@?$CI?$CIHRESULT?$CJ?$CIhr?$CJ?5?$DO?$DN?50?$CJ?$AA@ ; `string'
PUBLIC	??$QueryHost@UIAxWinHostWindowLic@@@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJPAPAUIAxWinHostWindowLic@@@Z ; ATL::CAxWindowT<ATL::CWindow>::QueryHost<IAxWinHostWindowLic>
PUBLIC	??$QueryInterface@UIUnknown@@@?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEJPAPAUIUnknown@@@Z ; ATL::CComPtrBase<IAxWinHostWindowLic>::QueryInterface<IUnknown>
;	COMDAT xdata$x
xdata$x	SEGMENT
$T211581 DD	0ffffffffH
	DD	FLAT:$L211572
	DD	00H
	DD	FLAT:$L211573
$T211575 DD	019930520H
	DD	02H
	DD	FLAT:$T211581
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BF@CCFFBNDL@?$CI?$CIHRESULT?$CJ?$CIhr?$CJ?5?$DO?$DN?50?$CJ?$AA@
CONST	SEGMENT
??_C@_0BF@CCFFBNDL@?$CI?$CIHRESULT?$CJ?$CIhr?$CJ?5?$DO?$DN?50?$CJ?$AA@ DB '('
	DB	'(HRESULT)(hr) >= 0)', 00H			; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?CreateControlLicEx@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@2ABU_GUID@@PAU4@PAG@Z
_TEXT	SEGMENT
tv132 = -56						; size = 4
$T211571 = -52						; size = 4
$T211569 = -48						; size = 4
_pControl$ = -40					; size = 4
_hr$ = -32						; size = 4
_spWinHost$ = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_lpszName$ = 8						; size = 4
_pStream$ = 12						; size = 4
_ppUnkContainer$ = 16					; size = 4
_ppUnkControl$ = 20					; size = 4
_iidSink$ = 24						; size = 4
_punkSink$ = 28						; size = 4
_bstrLicKey$ = 32					; size = 4
?CreateControlLicEx@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@2ABU_GUID@@PAU4@PAG@Z PROC NEAR ; ATL::CAxWindow2T<ATL::CWindow>::CreateControlLicEx, COMDAT
; _this$ = ecx

; 2162 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateControlLicEx@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@2ABU_GUID@@PAU4@PAG@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 44					; 0000002cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2163 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L211568
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	2163					; 00000873H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211568
	int	3
$L211568:

; 2164 : 		// We must have a valid window!
; 2165 : 
; 2166 : 		// Get a pointer to the container object connected to this window
; 2167 : 		CComPtr<IAxWinHostWindowLic> spWinHost;

	lea	ecx, DWORD PTR _spWinHost$[ebp]
	call	??0?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ ; ATL::CComPtr<IAxWinHostWindowLic>::CComPtr<IAxWinHostWindowLic>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2168 : 		HRESULT hr = QueryHost(&spWinHost);

	lea	ecx, DWORD PTR _spWinHost$[ebp]
	call	??I?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAEPAPAUIAxWinHostWindowLic@@XZ ; ATL::CComPtrBase<IAxWinHostWindowLic>::operator&
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$QueryHost@UIAxWinHostWindowLic@@@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJPAPAUIAxWinHostWindowLic@@@Z ; ATL::CAxWindowT<ATL::CWindow>::QueryHost<IAxWinHostWindowLic>
	mov	DWORD PTR _hr$[ebp], eax

; 2169 : 
; 2170 : 		// If QueryHost failed, there is no host attached to this window
; 2171 : 		// We assume that the user wants to create a new host and subclass the current window
; 2172 : 		if (FAILED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L208879

; 2173 : 			return AtlAxCreateControlLicEx(lpszName, m_hWnd, pStream, ppUnkContainer, ppUnkControl, iidSink, punkSink, bstrLicKey);

	mov	eax, DWORD PTR _bstrLicKey$[ebp]
	push	eax
	mov	ecx, DWORD PTR _punkSink$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iidSink$[ebp]
	push	edx
	mov	eax, DWORD PTR _ppUnkControl$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ppUnkContainer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pStream$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _lpszName$[ebp]
	push	edx
	call	_AtlAxCreateControlLicEx@32
	mov	DWORD PTR $T211569[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spWinHost$[ebp]
	call	??1?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ
	mov	eax, DWORD PTR $T211569[ebp]
	jmp	$L208871
$L208879:

; 2174 : 
; 2175 : 		// Create the control requested by the caller
; 2176 : 		CComPtr<IUnknown> pControl;

	lea	ecx, DWORD PTR _pControl$[ebp]
	call	??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ	; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 2177 : 		if (SUCCEEDED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $L208883

; 2178 : 			hr = spWinHost->CreateControlLicEx(lpszName, m_hWnd, pStream, &pControl, iidSink, punkSink, bstrLicKey);

	lea	ecx, DWORD PTR _spWinHost$[ebp]
	call	??C?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIAxWinHostWindowLic@@@1@XZ ; ATL::CComPtrBase<IAxWinHostWindowLic>::operator->
	mov	DWORD PTR tv132[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _bstrLicKey$[ebp]
	push	eax
	mov	ecx, DWORD PTR _punkSink$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iidSink$[ebp]
	push	edx
	lea	ecx, DWORD PTR _pControl$[ebp]
	call	??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator&
	push	eax
	mov	eax, DWORD PTR _pStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _lpszName$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv132[ebp]
	push	ecx
	mov	edx, DWORD PTR tv132[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax+40]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$L208883:

; 2179 : 
; 2180 : 		// Send back the necessary interface pointers
; 2181 : 		if (SUCCEEDED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $L208885

; 2182 : 		{
; 2183 : 			if (ppUnkControl)

	cmp	DWORD PTR _ppUnkControl$[ebp], 0
	je	SHORT $L208886

; 2184 : 				*ppUnkControl = pControl.Detach();

	lea	ecx, DWORD PTR _pControl$[ebp]
	call	?Detach@?$CComPtrBase@UIUnknown@@@ATL@@QAEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::Detach
	mov	ecx, DWORD PTR _ppUnkControl$[ebp]
	mov	DWORD PTR [ecx], eax
$L208886:

; 2185 : 
; 2186 : 			if (ppUnkContainer)

	cmp	DWORD PTR _ppUnkContainer$[ebp], 0
	je	SHORT $L208885

; 2187 : 			{
; 2188 : 				hr = spWinHost.QueryInterface(ppUnkContainer);

	mov	edx, DWORD PTR _ppUnkContainer$[ebp]
	push	edx
	lea	ecx, DWORD PTR _spWinHost$[ebp]
	call	??$QueryInterface@UIUnknown@@@?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEJPAPAUIUnknown@@@Z ; ATL::CComPtrBase<IAxWinHostWindowLic>::QueryInterface<IUnknown>
	mov	DWORD PTR _hr$[ebp], eax

; 2189 : 				ATLASSERT(SUCCEEDED(hr)); // This should not fail!

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L208885
	push	OFFSET FLAT:??_C@_0BF@CCFFBNDL@?$CI?$CIHRESULT?$CJ?$CIhr?$CJ?5?$DO?$DN?50?$CJ?$AA@
	push	0
	push	2189					; 0000088dH
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L208885
	int	3
$L208885:

; 2190 : 			}
; 2191 : 		}
; 2192 : 
; 2193 : 		return hr;

	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T211571[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pControl$[ebp]
	call	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spWinHost$[ebp]
	call	??1?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ
	mov	eax, DWORD PTR $T211571[ebp]
$L208871:

; 2194 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L211580
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
$L211580:
	DD	2
	DD	$L211579
$L211579:
	DD	-24					; ffffffe8H
	DD	4
	DD	$L211576
	DD	-40					; ffffffd8H
	DD	4
	DD	$L211577
$L211577:
	DB	112					; 00000070H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	0
$L211576:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	87					; 00000057H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	72					; 00000048H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L211572:
	lea	ecx, DWORD PTR _spWinHost$[ebp]
	jmp	??1?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ
$L211573:
	lea	ecx, DWORD PTR _pControl$[ebp]
	jmp	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
__ehhandler$?CreateControlLicEx@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@2ABU_GUID@@PAU4@PAG@Z:
	mov	eax, OFFSET FLAT:$T211575
	jmp	___CxxFrameHandler
text$x	ENDS
?CreateControlLicEx@?$CAxWindow2T@VCWindow@ATL@@@ATL@@QAEJPBGPAUIStream@@PAPAUIUnknown@@2ABU_GUID@@PAU4@PAG@Z ENDP ; ATL::CAxWindow2T<ATL::CWindow>::CreateControlLicEx
PUBLIC	??1?$CComPtrBase@UIUnknown@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IUnknown>::~CComPtrBase<IUnknown>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ PROC NEAR		; ATL::CComPtr<IUnknown>::~CComPtr<IUnknown>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIUnknown@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IUnknown>::~CComPtrBase<IUnknown>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IUnknown>::~CComPtr<IUnknown>
_TEXT	ENDS
PUBLIC	??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ	; ATL::CComTypeInfoHolder::stringdispid::~stringdispid
PUBLIC	??_Estringdispid@CComTypeInfoHolder@ATL@@QAEPAXI@Z ; ATL::CComTypeInfoHolder::stringdispid::`vector deleting destructor'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:NEAR			; `eh vector destructor iterator'
EXTRN	??_V@YAXPAX@Z:NEAR				; operator delete[]
; Function compile flags: /Odt /RTCsu
;	COMDAT ??_Estringdispid@CComTypeInfoHolder@ATL@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Estringdispid@CComTypeInfoHolder@ATL@@QAEPAXI@Z PROC NEAR ; ATL::CComTypeInfoHolder::stringdispid::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $L93948
	push	OFFSET FLAT:??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-4]
	push	edx
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $L93949
	mov	edx, DWORD PTR _this$[ebp]
	sub	edx, 4
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L93949:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $L93947
$L93948:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L93951
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L93951:
	mov	eax, DWORD PTR _this$[ebp]
$L93947:
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Estringdispid@CComTypeInfoHolder@ATL@@QAEPAXI@Z ENDP	; ATL::CComTypeInfoHolder::stringdispid::`vector deleting destructor'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ PROC NEAR ; ATL::CComTypeInfoHolder::stringdispid::~stringdispid, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ ENDP	; ATL::CComTypeInfoHolder::stringdispid::~stringdispid
_TEXT	ENDS
PUBLIC	?GetIDD@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHXZ ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::GetIDD
PUBLIC	?DestroyWindow@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHXZ ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::DestroyWindow
PUBLIC	?DialogProc@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z ; ATL::CDialogImplBaseT<ATL::CWindow>::DialogProc
EXTRN	__imp__SetLastError@4:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?DialogProc@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_hr$209114 = -8						; size = 4
_pThis$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?DialogProc@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z PROC NEAR ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::DialogProc, COMDAT

; 3677 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 3678 : 	CAxDialogImpl< T, TBase >* pThis = (CAxDialogImpl< T, TBase >*)hWnd;

	mov	eax, DWORD PTR _hWnd$[ebp]
	mov	DWORD PTR _pThis$[ebp], eax

; 3679 : 	if (uMsg == WM_INITDIALOG)

	cmp	DWORD PTR _uMsg$[ebp], 272		; 00000110H
	jne	SHORT $L209113

; 3680 : 	{
; 3681 : 		HRESULT hr;
; 3682 : 		if (FAILED(hr = pThis->CreateActiveXControls(pThis->GetIDD())))

	mov	ecx, DWORD PTR _pThis$[ebp]
	call	?GetIDD@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHXZ ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::GetIDD
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pThis$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pThis$[ebp]
	call	DWORD PTR [edx+16]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$209114[ebp], eax
	cmp	DWORD PTR _hr$209114[ebp], 0
	jge	SHORT $L209113

; 3683 : 		{
; 3684 : 			pThis->DestroyWindow();

	mov	ecx, DWORD PTR _pThis$[ebp]
	call	?DestroyWindow@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHXZ ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::DestroyWindow

; 3685 : 			SetLastError(hr & 0x0000FFFF);

	mov	eax, DWORD PTR _hr$209114[ebp]
	and	eax, 65535				; 0000ffffH
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__SetLastError@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 3686 : 			return FALSE;

	xor	eax, eax
	jmp	SHORT $L209110
$L209113:

; 3687 : 		}
; 3688 : 	}
; 3689 : 	return CDialogImplBaseT< TBase >::DialogProc(hWnd, uMsg, wParam, lParam);

	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _uMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?DialogProc@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z ; ATL::CDialogImplBaseT<ATL::CWindow>::DialogProc
$L209110:

; 3690 : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?DialogProc@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z ENDP ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::DialogProc
_TEXT	ENDS
PUBLIC	__GUID_3935bda8_4ed9_495c_8650_e01fc1e38a4b
PUBLIC	?QueryHost@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CAxWindowT<ATL::CWindow>::QueryHost
;	COMDAT __GUID_3935bda8_4ed9_495c_8650_e01fc1e38a4b
CONST	SEGMENT
__GUID_3935bda8_4ed9_495c_8650_e01fc1e38a4b DD 03935bda8H
	DW	04ed9H
	DW	0495cH
	DB	086H
	DB	050H
	DB	0e0H
	DB	01fH
	DB	0c1H
	DB	0e3H
	DB	08aH
	DB	04bH
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ??$QueryHost@UIAxWinHostWindowLic@@@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJPAPAUIAxWinHostWindowLic@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppUnk$ = 8						; size = 4
??$QueryHost@UIAxWinHostWindowLic@@@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJPAPAUIAxWinHostWindowLic@@@Z PROC NEAR ; ATL::CAxWindowT<ATL::CWindow>::QueryHost<IAxWinHostWindowLic>, COMDAT
; _this$ = ecx

; 2076 : 	HRESULT QueryHost(Q** ppUnk)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2077 : 	{
; 2078 : 		return QueryHost(__uuidof(Q), (void**)ppUnk);

	mov	eax, DWORD PTR _ppUnk$[ebp]
	push	eax
	push	OFFSET FLAT:__GUID_3935bda8_4ed9_495c_8650_e01fc1e38a4b
	mov	ecx, DWORD PTR _this$[ebp]
	call	?QueryHost@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CAxWindowT<ATL::CWindow>::QueryHost

; 2079 : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$QueryHost@UIAxWinHostWindowLic@@@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJPAPAUIAxWinHostWindowLic@@@Z ENDP ; ATL::CAxWindowT<ATL::CWindow>::QueryHost<IAxWinHostWindowLic>
_TEXT	ENDS
PUBLIC	??_C@_07MEKCDCMA@pp?5?$CB?$DN?50?$AA@		; `string'
PUBLIC	__GUID_00000000_0000_0000_c000_000000000046
;	COMDAT ??_C@_07MEKCDCMA@pp?5?$CB?$DN?50?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
CONST	SEGMENT
??_C@_07MEKCDCMA@pp?5?$CB?$DN?50?$AA@ DB 'pp != 0', 00H	; `string'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000000_0000_0000_c000_000000000046 DD 00H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ??$QueryInterface@UIUnknown@@@?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEJPAPAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pp$ = 8						; size = 4
??$QueryInterface@UIUnknown@@@?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEJPAPAUIUnknown@@@Z PROC NEAR ; ATL::CComPtrBase<IAxWinHostWindowLic>::QueryInterface<IUnknown>, COMDAT
; _this$ = ecx

; 236  : 	HRESULT QueryInterface(Q** pp) const throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 237  : 	{
; 238  : 		ATLASSERT(pp != NULL);

	cmp	DWORD PTR _pp$[ebp], 0
	jne	SHORT $L211596
	push	OFFSET FLAT:??_C@_07MEKCDCMA@pp?5?$CB?$DN?50?$AA@
	push	0
	push	238					; 000000eeH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211596
	int	3
$L211596:

; 239  : 		return p->QueryInterface(__uuidof(Q), (void**)pp);

	mov	esi, esp
	mov	ecx, DWORD PTR _pp$[ebp]
	push	ecx
	push	OFFSET FLAT:__GUID_00000000_0000_0000_c000_000000000046
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	push	edx
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 240  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$QueryInterface@UIUnknown@@@?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEJPAPAUIUnknown@@@Z ENDP ; ATL::CComPtrBase<IAxWinHostWindowLic>::QueryInterface<IUnknown>
_TEXT	ENDS
PUBLIC	??_C@_0L@PGEBGEDK@ppUnk?5?$CB?$DN?50?$AA@	; `string'
PUBLIC	_AtlAxGetHost@8
PUBLIC	??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ ; ATL::CComPtrBase<IUnknown>::operator->
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
xdata$x	SEGMENT
$T211608 DD	0ffffffffH
	DD	FLAT:$L211601
$T211603 DD	019930520H
	DD	01H
	DD	FLAT:$T211608
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0L@PGEBGEDK@ppUnk?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0L@PGEBGEDK@ppUnk?5?$CB?$DN?50?$AA@ DB 'ppUnk != 0', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?QueryHost@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv86 = -40						; size = 4
$T211600 = -36						; size = 4
_spUnk$ = -28						; size = 4
_hr$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_iid$ = 8						; size = 4
_ppUnk$ = 12						; size = 4
?QueryHost@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJABU_GUID@@PAPAX@Z PROC NEAR ; ATL::CAxWindowT<ATL::CWindow>::QueryHost, COMDAT
; _this$ = ecx

; 2063 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?QueryHost@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJABU_GUID@@PAPAX@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR _this$[ebp], ecx

; 2064 : 		ATLASSERT(ppUnk != NULL);

	cmp	DWORD PTR _ppUnk$[ebp], 0
	jne	SHORT $L211599
	push	OFFSET FLAT:??_C@_0L@PGEBGEDK@ppUnk?5?$CB?$DN?50?$AA@
	push	0
	push	2064					; 00000810H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211599
	int	3
$L211599:

; 2065 : 		if (ppUnk == NULL)

	cmp	DWORD PTR _ppUnk$[ebp], 0
	jne	SHORT $L209259

; 2066 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L209257
$L209259:

; 2067 : 		HRESULT hr;
; 2068 : 		*ppUnk = NULL;

	mov	ecx, DWORD PTR _ppUnk$[ebp]
	mov	DWORD PTR [ecx], 0

; 2069 : 		CComPtr<IUnknown> spUnk;

	lea	ecx, DWORD PTR _spUnk$[ebp]
	call	??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ	; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2070 : 		hr = AtlAxGetHost(m_hWnd, &spUnk);

	lea	ecx, DWORD PTR _spUnk$[ebp]
	call	??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator&
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_AtlAxGetHost@8
	mov	DWORD PTR _hr$[ebp], eax

; 2071 : 		if (SUCCEEDED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $L209264

; 2072 : 			hr = spUnk->QueryInterface(iid, ppUnk);

	lea	ecx, DWORD PTR _spUnk$[ebp]
	call	??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ ; ATL::CComPtrBase<IUnknown>::operator->
	mov	DWORD PTR tv86[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _ppUnk$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	mov	eax, DWORD PTR tv86[ebp]
	push	eax
	mov	ecx, DWORD PTR tv86[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$L209264:

; 2073 : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T211600[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spUnk$[ebp]
	call	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
	mov	eax, DWORD PTR $T211600[ebp]
$L209257:

; 2074 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L211607
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$L211607:
	DD	1
	DD	$L211606
$L211606:
	DD	-28					; ffffffe4H
	DD	4
	DD	$L211604
$L211604:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	85					; 00000055H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L211601:
	lea	ecx, DWORD PTR _spUnk$[ebp]
	jmp	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
__ehhandler$?QueryHost@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJABU_GUID@@PAPAX@Z:
	mov	eax, OFFSET FLAT:$T211603
	jmp	___CxxFrameHandler
text$x	ENDS
?QueryHost@?$CAxWindowT@VCWindow@ATL@@@ATL@@QAEJABU_GUID@@PAPAX@Z ENDP ; ATL::CAxWindowT<ATL::CWindow>::QueryHost
; Function compile flags: /Odt /RTCsu
;	COMDAT ?GetIDD@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetIDD@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHXZ PROC NEAR ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::GetIDD, COMDAT
; _this$ = ecx

; 3411 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 3412 : 		return( static_cast<T*>(this)->IDD );

	mov	eax, 103				; 00000067H

; 3413 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetIDD@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHXZ ENDP ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::GetIDD
_TEXT	ENDS
PUBLIC	??_C@_09BNFEDJPE@?$CBm_bModal?$AA@		; `string'
EXTRN	__imp__DestroyWindow@4:NEAR
;	COMDAT ??_C@_09BNFEDJPE@?$CBm_bModal?$AA@
CONST	SEGMENT
??_C@_09BNFEDJPE@?$CBm_bModal?$AA@ DB '!m_bModal', 00H	; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?DestroyWindow@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DestroyWindow@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHXZ PROC NEAR ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::DestroyWindow, COMDAT
; _this$ = ecx

; 3457 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 3458 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L211615
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	3458					; 00000d82H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211615
	int	3
$L211615:

; 3459 : #ifdef _DEBUG
; 3460 : 		ATLASSERT(!m_bModal);	// must not be a modal dialog

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	je	SHORT $L211616
	push	OFFSET FLAT:??_C@_09BNFEDJPE@?$CBm_bModal?$AA@
	push	0
	push	3460					; 00000d84H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211616
	int	3
$L211616:

; 3461 : #endif //_DEBUG
; 3462 : 		return ::DestroyWindow(m_hWnd);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__DestroyWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 3463 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DestroyWindow@?$CAxDialogImpl@VCShowSelectCert@@VCWindow@ATL@@@ATL@@QAEHXZ ENDP ; ATL::CAxDialogImpl<CShowSelectCert,ATL::CWindow>::DestroyWindow
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0_U_RECT@ATL@@QAE@PAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpRect$ = 8						; size = 4
??0_U_RECT@ATL@@QAE@PAUtagRECT@@@Z PROC NEAR		; ATL::_U_RECT::_U_RECT, COMDAT
; _this$ = ecx

; 82   : 	{ }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _lpRect$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0_U_RECT@ATL@@QAE@PAUtagRECT@@@Z ENDP			; ATL::_U_RECT::_U_RECT
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0_U_MENUorID@ATL@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nID$ = 8						; size = 4
??0_U_MENUorID@ATL@@QAE@I@Z PROC NEAR			; ATL::_U_MENUorID::_U_MENUorID, COMDAT
; _this$ = ecx

; 94   : 	{ }	

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nID$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0_U_MENUorID@ATL@@QAE@I@Z ENDP			; ATL::_U_MENUorID::_U_MENUorID
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?IsDialogEx@_DialogSplitHelper@ATL@@SAHPBUDLGTEMPLATE@@@Z
_TEXT	SEGMENT
_pTemplate$ = 8						; size = 4
?IsDialogEx@_DialogSplitHelper@ATL@@SAHPBUDLGTEMPLATE@@@Z PROC NEAR ; ATL::_DialogSplitHelper::IsDialogEx, COMDAT

; 355  : 	{

	push	ebp
	mov	ebp, esp

; 356  : 		return ((DLGTEMPLATEEX*)pTemplate)->signature == 0xFFFF;

	mov	eax, DWORD PTR _pTemplate$[ebp]
	movzx	eax, WORD PTR [eax+2]
	sub	eax, 65535				; 0000ffffH
	neg	eax
	sbb	eax, eax
	inc	eax

; 357  : 	}

	pop	ebp
	ret	0
?IsDialogEx@_DialogSplitHelper@ATL@@SAHPBUDLGTEMPLATE@@@Z ENDP ; ATL::_DialogSplitHelper::IsDialogEx
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?DlgTemplateItemCount@_DialogSplitHelper@ATL@@SAAAGPAUDLGTEMPLATE@@@Z
_TEXT	SEGMENT
_pTemplate$ = 8						; size = 4
?DlgTemplateItemCount@_DialogSplitHelper@ATL@@SAAAGPAUDLGTEMPLATE@@@Z PROC NEAR ; ATL::_DialogSplitHelper::DlgTemplateItemCount, COMDAT

; 360  : 	{

	push	ebp
	mov	ebp, esp

; 361  : 		if (IsDialogEx(pTemplate))

	mov	eax, DWORD PTR _pTemplate$[ebp]
	push	eax
	call	?IsDialogEx@_DialogSplitHelper@ATL@@SAHPBUDLGTEMPLATE@@@Z ; ATL::_DialogSplitHelper::IsDialogEx
	add	esp, 4
	test	eax, eax
	je	SHORT $L101124

; 362  : 			return reinterpret_cast<DLGTEMPLATEEX*>(pTemplate)->cDlgItems;

	mov	eax, DWORD PTR _pTemplate$[ebp]
	add	eax, 16					; 00000010H
	jmp	SHORT $L101123
$L101124:

; 363  : 		else
; 364  : 			return pTemplate->cdit;

	mov	eax, DWORD PTR _pTemplate$[ebp]
	add	eax, 8
$L101123:

; 365  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?DlgTemplateItemCount@_DialogSplitHelper@ATL@@SAAAGPAUDLGTEMPLATE@@@Z ENDP ; ATL::_DialogSplitHelper::DlgTemplateItemCount
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?FindFirstDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PBUDLGTEMPLATE@@@Z
_TEXT	SEGMENT
tv94 = -20						; size = 2
tv85 = -18						; size = 2
tv81 = -16						; size = 2
tv74 = -14						; size = 2
_dwStyle$ = -12						; size = 4
_pw$ = -8						; size = 4
_bDialogEx$ = -4					; size = 4
_pTemplate$ = 8						; size = 4
?FindFirstDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PBUDLGTEMPLATE@@@Z PROC NEAR ; ATL::_DialogSplitHelper::FindFirstDlgItem, COMDAT

; 376  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 377  : 		BOOL bDialogEx = IsDialogEx(pTemplate);

	mov	eax, DWORD PTR _pTemplate$[ebp]
	push	eax
	call	?IsDialogEx@_DialogSplitHelper@ATL@@SAHPBUDLGTEMPLATE@@@Z ; ATL::_DialogSplitHelper::IsDialogEx
	add	esp, 4
	mov	DWORD PTR _bDialogEx$[ebp], eax

; 378  : 
; 379  : 		WORD* pw;
; 380  : 		DWORD dwStyle;
; 381  : 		if (bDialogEx)

	cmp	DWORD PTR _bDialogEx$[ebp], 0
	je	SHORT $L101135

; 382  : 		{
; 383  : 			pw = (WORD*)((DLGTEMPLATEEX*)pTemplate + 1);

	mov	ecx, DWORD PTR _pTemplate$[ebp]
	add	ecx, 26					; 0000001aH
	mov	DWORD PTR _pw$[ebp], ecx

; 384  : 			dwStyle = ((DLGTEMPLATEEX*)pTemplate)->style;

	mov	edx, DWORD PTR _pTemplate$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR _dwStyle$[ebp], eax

; 385  : 		}
; 386  : 		else

	jmp	SHORT $L101139
$L101135:

; 387  : 		{
; 388  : 			pw = (WORD*)(pTemplate + 1);

	mov	ecx, DWORD PTR _pTemplate$[ebp]
	add	ecx, 18					; 00000012H
	mov	DWORD PTR _pw$[ebp], ecx

; 389  : 			dwStyle = pTemplate->style;

	mov	edx, DWORD PTR _pTemplate$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _dwStyle$[ebp], eax
$L101139:

; 390  : 		}
; 391  : 
; 392  : 		// Check for presence of menu and skip it if there is one
; 393  : 		// 0x0000 means there is no menu
; 394  : 		// 0xFFFF means there is a menu ID following
; 395  : 		// Everything else means that this is a NULL terminated Unicode string
; 396  : 		// which identifies the menu resource
; 397  : 		if (*pw == 0xFFFF)

	mov	ecx, DWORD PTR _pw$[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	edx, 65535				; 0000ffffH
	jne	SHORT $L101144

; 398  : 			pw += 2;				// Has menu ID, so skip 2 words

	mov	eax, DWORD PTR _pw$[ebp]
	add	eax, 4
	mov	DWORD PTR _pw$[ebp], eax

; 399  : 		else

	jmp	SHORT $L101142
$L101144:

; 400  : 			while (*pw++);			// Either No menu, or string, skip past terminating NULL

	mov	ecx, DWORD PTR _pw$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR tv74[ebp], dx
	mov	eax, DWORD PTR _pw$[ebp]
	add	eax, 2
	mov	DWORD PTR _pw$[ebp], eax
	movzx	ecx, WORD PTR tv74[ebp]
	test	ecx, ecx
	je	SHORT $L101142
	jmp	SHORT $L101144
$L101142:

; 401  : 
; 402  : 		// Check for presence of class name string
; 403  : 		// 0x0000 means "Use system dialog class name"
; 404  : 		// 0xFFFF means there is a window class (atom) specified
; 405  : 		// Everything else means that this is a NULL terminated Unicode string
; 406  : 		// which identifies the menu resource
; 407  : 		if (*pw == 0xFFFF)

	mov	edx, DWORD PTR _pw$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	eax, 65535				; 0000ffffH
	jne	SHORT $L101149

; 408  : 			pw += 2;				// Has class atom, so skip 2 words

	mov	ecx, DWORD PTR _pw$[ebp]
	add	ecx, 4
	mov	DWORD PTR _pw$[ebp], ecx

; 409  : 		else

	jmp	SHORT $L101152
$L101149:

; 410  : 			while (*pw++);			// Either No class, or string, skip past terminating NULL

	mov	edx, DWORD PTR _pw$[ebp]
	mov	ax, WORD PTR [edx]
	mov	WORD PTR tv81[ebp], ax
	mov	ecx, DWORD PTR _pw$[ebp]
	add	ecx, 2
	mov	DWORD PTR _pw$[ebp], ecx
	movzx	edx, WORD PTR tv81[ebp]
	test	edx, edx
	je	SHORT $L101152
	jmp	SHORT $L101149
$L101152:

; 411  : 
; 412  : 		// Skip caption string
; 413  : 		while (*pw++);

	mov	eax, DWORD PTR _pw$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR tv85[ebp], cx
	mov	edx, DWORD PTR _pw$[ebp]
	add	edx, 2
	mov	DWORD PTR _pw$[ebp], edx
	movzx	eax, WORD PTR tv85[ebp]
	test	eax, eax
	je	SHORT $L101153
	jmp	SHORT $L101152
$L101153:

; 414  : 
; 415  : 		// If we have DS_SETFONT, there is extra font information which we must now skip
; 416  : 		if (dwStyle & DS_SETFONT)

	mov	ecx, DWORD PTR _dwStyle$[ebp]
	and	ecx, 64					; 00000040H
	je	SHORT $L101154

; 417  : 		{
; 418  : 			// If it is a regular DLGTEMPLATE there is only a short for the point size
; 419  : 			// and a string specifying the font (typefacename).  If this is a DLGTEMPLATEEX
; 420  : 			// then there is also the font weight, and bItalic which must be skipped
; 421  : 			if (bDialogEx)

	cmp	DWORD PTR _bDialogEx$[ebp], 0
	je	SHORT $L101155

; 422  : 				pw += 3;			// Skip font size, weight, (italic, charset)

	mov	edx, DWORD PTR _pw$[ebp]
	add	edx, 6
	mov	DWORD PTR _pw$[ebp], edx

; 423  : 			else

	jmp	SHORT $L101158
$L101155:

; 424  : 				pw += 1;			// Skip font size

	mov	eax, DWORD PTR _pw$[ebp]
	add	eax, 2
	mov	DWORD PTR _pw$[ebp], eax
$L101158:

; 425  : 			while (*pw++);			// Skip typeface name

	mov	ecx, DWORD PTR _pw$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR tv94[ebp], dx
	mov	eax, DWORD PTR _pw$[ebp]
	add	eax, 2
	mov	DWORD PTR _pw$[ebp], eax
	movzx	ecx, WORD PTR tv94[ebp]
	test	ecx, ecx
	je	SHORT $L101154
	jmp	SHORT $L101158
$L101154:

; 426  : 		}
; 427  : 
; 428  : 		// Dword-align and return
; 429  : 		return (DLGITEMTEMPLATE*)(((DWORD_PTR)pw + 3) & ~3);

	mov	eax, DWORD PTR _pw$[ebp]
	add	eax, 3
	and	eax, -4					; fffffffcH

; 430  : 	}

	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FindFirstDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PBUDLGTEMPLATE@@@Z ENDP ; ATL::_DialogSplitHelper::FindFirstDlgItem
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?FindNextDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PAU3@H@Z
_TEXT	SEGMENT
tv78 = -12						; size = 2
tv71 = -10						; size = 2
_cbExtra$ = -8						; size = 2
_pw$ = -4						; size = 4
_pItem$ = 8						; size = 4
_bDialogEx$ = 12					; size = 4
?FindNextDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PAU3@H@Z PROC NEAR ; ATL::_DialogSplitHelper::FindNextDlgItem, COMDAT

; 435  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 436  : 		WORD* pw;
; 437  : 
; 438  : 		// First skip fixed size header information, size of which depends
; 439  : 		// if this is a DLGITEMTEMPLATE or DLGITEMTEMPLATEEX
; 440  : 		if (bDialogEx)

	cmp	DWORD PTR _bDialogEx$[ebp], 0
	je	SHORT $L101164

; 441  : 			pw = (WORD*)((DLGITEMTEMPLATEEX*)pItem + 1);

	mov	eax, DWORD PTR _pItem$[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR _pw$[ebp], eax

; 442  : 		else

	jmp	SHORT $L101167
$L101164:

; 443  : 			pw = (WORD*)(pItem + 1);

	mov	ecx, DWORD PTR _pItem$[ebp]
	add	ecx, 18					; 00000012H
	mov	DWORD PTR _pw$[ebp], ecx
$L101167:

; 444  : 
; 445  : 		if (*pw == 0xFFFF)			// Skip class name ordinal or string

	mov	edx, DWORD PTR _pw$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	eax, 65535				; 0000ffffH
	jne	SHORT $L101172

; 446  : 			pw += 2; // (WORDs)

	mov	ecx, DWORD PTR _pw$[ebp]
	add	ecx, 4
	mov	DWORD PTR _pw$[ebp], ecx

; 447  : 		else

	jmp	SHORT $L101170
$L101172:

; 448  : 			while (*pw++);

	mov	edx, DWORD PTR _pw$[ebp]
	mov	ax, WORD PTR [edx]
	mov	WORD PTR tv71[ebp], ax
	mov	ecx, DWORD PTR _pw$[ebp]
	add	ecx, 2
	mov	DWORD PTR _pw$[ebp], ecx
	movzx	edx, WORD PTR tv71[ebp]
	test	edx, edx
	je	SHORT $L101170
	jmp	SHORT $L101172
$L101170:

; 449  : 
; 450  : 		if (*pw == 0xFFFF)			// Skip title ordinal or string

	mov	eax, DWORD PTR _pw$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 65535				; 0000ffffH
	jne	SHORT $L101177

; 451  : 			pw += 2; // (WORDs)

	mov	edx, DWORD PTR _pw$[ebp]
	add	edx, 4
	mov	DWORD PTR _pw$[ebp], edx

; 452  : 		else

	jmp	SHORT $L101175
$L101177:

; 453  : 			while (*pw++);

	mov	eax, DWORD PTR _pw$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR tv78[ebp], cx
	mov	edx, DWORD PTR _pw$[ebp]
	add	edx, 2
	mov	DWORD PTR _pw$[ebp], edx
	movzx	eax, WORD PTR tv78[ebp]
	test	eax, eax
	je	SHORT $L101175
	jmp	SHORT $L101177
$L101175:

; 454  : 
; 455  : 		WORD cbExtra = *pw++;		// Skip extra data

	mov	ecx, DWORD PTR _pw$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR _cbExtra$[ebp], dx
	mov	eax, DWORD PTR _pw$[ebp]
	add	eax, 2
	mov	DWORD PTR _pw$[ebp], eax

; 456  : 
; 457  : 		// cbExtra includes the size WORD in DIALOG resource.
; 458  : 		if (cbExtra != 0 && !bDialogEx)

	movzx	ecx, WORD PTR _cbExtra$[ebp]
	test	ecx, ecx
	je	SHORT $L101180
	cmp	DWORD PTR _bDialogEx$[ebp], 0
	jne	SHORT $L101180

; 459  : 			cbExtra -= 2;

	movzx	edx, WORD PTR _cbExtra$[ebp]
	sub	edx, 2
	mov	WORD PTR _cbExtra$[ebp], dx
$L101180:

; 460  : 
; 461  : 		// Dword-align and return
; 462  : 		return (DLGITEMTEMPLATE*)(((DWORD_PTR)pw + cbExtra + 3) & ~3);

	movzx	eax, WORD PTR _cbExtra$[ebp]
	mov	ecx, DWORD PTR _pw$[ebp]
	lea	eax, DWORD PTR [ecx+eax+3]
	and	eax, -4					; fffffffcH

; 463  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?FindNextDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PAU3@H@Z ENDP ; ATL::_DialogSplitHelper::FindNextDlgItem
_TEXT	ENDS
PUBLIC	??_C@_0L@KAJDHFFC@dwLen?5?$DN?$DN?50?$AA@	; `string'
;	COMDAT ??_C@_0L@KAJDHFFC@dwLen?5?$DN?$DN?50?$AA@
CONST	SEGMENT
??_C@_0L@KAJDHFFC@dwLen?5?$DN?$DN?50?$AA@ DB 'dwLen == 0', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?FindCreateData@_DialogSplitHelper@ATL@@SAKKPAEPAPAE@Z
_TEXT	SEGMENT
_dwLen$101194 = -16					; size = 4
_nMsg$101191 = -12					; size = 2
_pTemp$101190 = -8					; size = 4
_nIDC$101187 = -4					; size = 2
_dwID$ = 8						; size = 4
_pInitData$ = 12					; size = 4
_pData$ = 16						; size = 4
?FindCreateData@_DialogSplitHelper@ATL@@SAKKPAEPAPAE@Z PROC NEAR ; ATL::_DialogSplitHelper::FindCreateData, COMDAT

; 468  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
$L101185:

; 469  : 		while (pInitData)

	cmp	DWORD PTR _pInitData$[ebp], 0
	je	$L101186

; 470  : 		{
; 471  : 			// Read the DLGINIT header
; 472  : 			WORD nIDC = *((UNALIGNED WORD*)pInitData);

	mov	eax, DWORD PTR _pInitData$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _nIDC$101187[ebp], cx

; 473  : 			pInitData += sizeof(WORD);

	mov	edx, DWORD PTR _pInitData$[ebp]
	add	edx, 2
	mov	DWORD PTR _pInitData$[ebp], edx

; 474  : 			BYTE* pTemp = pInitData;

	mov	eax, DWORD PTR _pInitData$[ebp]
	mov	DWORD PTR _pTemp$101190[ebp], eax

; 475  : 			WORD nMsg = *((UNALIGNED WORD*)pInitData);

	mov	ecx, DWORD PTR _pInitData$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR _nMsg$101191[ebp], dx

; 476  : 			pInitData += sizeof(WORD);

	mov	eax, DWORD PTR _pInitData$[ebp]
	add	eax, 2
	mov	DWORD PTR _pInitData$[ebp], eax

; 477  : 			DWORD dwLen = *((UNALIGNED DWORD*)pInitData);

	mov	ecx, DWORD PTR _pInitData$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _dwLen$101194[ebp], edx

; 478  : 			pInitData += sizeof(DWORD);

	mov	eax, DWORD PTR _pInitData$[ebp]
	add	eax, 4
	mov	DWORD PTR _pInitData$[ebp], eax

; 479  : 
; 480  : 			// If the header is for the control specified get the other info
; 481  : 			if (nIDC == dwID)

	movzx	ecx, WORD PTR _nIDC$101187[ebp]
	cmp	ecx, DWORD PTR _dwID$[ebp]
	jne	SHORT $L101197

; 482  : 			{
; 483  : 				if (nMsg == (WORD)ATL_WM_OCC_INITNEW)

	movzx	edx, WORD PTR _nMsg$101191[ebp]
	cmp	edx, 888				; 00000378H
	jne	SHORT $L101199

; 484  : 				{
; 485  : 					ATLASSERT(dwLen == 0);

	cmp	DWORD PTR _dwLen$101194[ebp], 0
	je	SHORT $L211631
	push	OFFSET FLAT:??_C@_0L@KAJDHFFC@dwLen?5?$DN?$DN?50?$AA@
	push	0
	push	485					; 000001e5H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211631
	int	3
$L211631:

; 486  : 					return 0;

	xor	eax, eax
	jmp	SHORT $L101183
$L101199:

; 487  : 				}
; 488  : 				*pData = pTemp;

	mov	ecx, DWORD PTR _pData$[ebp]
	mov	edx, DWORD PTR _pTemp$101190[ebp]
	mov	DWORD PTR [ecx], edx

; 489  : 				return dwLen + sizeof(WORD) + sizeof(DWORD);

	mov	eax, DWORD PTR _dwLen$101194[ebp]
	add	eax, 6
	jmp	SHORT $L101183
$L101197:

; 490  : 			}
; 491  : 
; 492  : 			// It's not the right control, skip past data
; 493  : 			pInitData += dwLen;

	mov	eax, DWORD PTR _pInitData$[ebp]
	add	eax, DWORD PTR _dwLen$101194[ebp]
	mov	DWORD PTR _pInitData$[ebp], eax

; 494  : 		}

	jmp	$L101185
$L101186:

; 495  : 		return 0;

	xor	eax, eax
$L101183:

; 496  : 	}

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FindCreateData@_DialogSplitHelper@ATL@@SAKKPAEPAPAE@Z ENDP ; ATL::_DialogSplitHelper::FindCreateData
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?IsActiveXControl@_DialogSplitHelper@ATL@@SA_NPAUDLGITEMTEMPLATE@@H@Z
_TEXT	SEGMENT
tv67 = -8						; size = 4
_pszClassName$ = -4					; size = 4
_pItem$ = 8						; size = 4
_bDialogEx$ = 12					; size = 4
?IsActiveXControl@_DialogSplitHelper@ATL@@SA_NPAUDLGITEMTEMPLATE@@H@Z PROC NEAR ; ATL::_DialogSplitHelper::IsActiveXControl, COMDAT

; 499  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 500  : 		LPWSTR pszClassName;
; 501  : 		pszClassName = bDialogEx ?
; 502  : 			(LPWSTR)(((DLGITEMTEMPLATEEX*)pItem) + 1) :
; 503  : 			(LPWSTR)(pItem + 1);

	cmp	DWORD PTR _bDialogEx$[ebp], 0
	je	SHORT $L211634
	mov	eax, DWORD PTR _pItem$[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR tv67[ebp], eax
	jmp	SHORT $L211635
$L211634:
	mov	ecx, DWORD PTR _pItem$[ebp]
	add	ecx, 18					; 00000012H
	mov	DWORD PTR tv67[ebp], ecx
$L211635:
	mov	edx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _pszClassName$[ebp], edx

; 504  : 		if (pszClassName[0] == L'{')

	mov	eax, DWORD PTR _pszClassName$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 123				; 0000007bH
	jne	SHORT $L101210

; 505  : 			return true;

	mov	al, 1
	jmp	SHORT $L101205
$L101210:

; 506  : 		return false;

	xor	al, al
$L101205:

; 507  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?IsActiveXControl@_DialogSplitHelper@ATL@@SA_NPAUDLGITEMTEMPLATE@@H@Z ENDP ; ATL::_DialogSplitHelper::IsActiveXControl
_TEXT	ENDS
PUBLIC	??0CComBSTR@ATL@@QAE@H@Z			; ATL::CComBSTR::CComBSTR
PUBLIC	?Length@CComBSTR@ATL@@QBEIXZ			; ATL::CComBSTR::Length
PUBLIC	?Detach@CComBSTR@ATL@@QAEPAGXZ			; ATL::CComBSTR::Detach
;	COMDAT xdata$x
xdata$x	SEGMENT
$T211657 DD	0ffffffffH
	DD	FLAT:$L211643
$T211645 DD	019930520H
	DD	01H
	DD	FLAT:$T211657
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?ParseInitData@_DialogSplitHelper@ATL@@SAJPAUIStream@@PAPAG@Z
_TEXT	SEGMENT
tv165 = -1112						; size = 4
$T211640 = -1108					; size = 4
$T211639 = -1104					; size = 4
_pTemp$101289 = -1096					; size = 1000
_cbOffset$101285 = -88					; size = 4
_bstr$101272 = -76					; size = 4
_cchLicKey$ = -64					; size = 4
_dwLen$ = -52						; size = 4
_nMsg$ = -40						; size = 2
_hr$ = -32						; size = 4
_uRead$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_pStream$ = 8						; size = 4
_pLicKey$ = 12						; size = 4
?ParseInitData@_DialogSplitHelper@ATL@@SAJPAUIStream@@PAPAG@Z PROC NEAR ; ATL::_DialogSplitHelper::ParseInitData, COMDAT

; 602  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ParseInitData@_DialogSplitHelper@ATL@@SAJPAUIStream@@PAPAG@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 1100				; 0000044cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1112]
	mov	ecx, 275				; 00000113H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 603  : 		*pLicKey = NULL;

	mov	eax, DWORD PTR _pLicKey$[ebp]
	mov	DWORD PTR [eax], 0

; 604  : 		if(pStream == NULL)

	cmp	DWORD PTR _pStream$[ebp], 0
	jne	SHORT $L101255

; 605  : 			return S_OK;	// nothing to do

	xor	eax, eax
	jmp	$L101254
$L101255:

; 606  : 
; 607  : 		ULONG uRead;
; 608  : 		HRESULT hr;
; 609  : 
; 610  : 		WORD nMsg;
; 611  : 		hr = pStream->Read(&nMsg, sizeof(WORD), &uRead);

	mov	esi, esp
	lea	ecx, DWORD PTR _uRead$[ebp]
	push	ecx
	push	2
	lea	edx, DWORD PTR _nMsg$[ebp]
	push	edx
	mov	eax, DWORD PTR _pStream$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pStream$[ebp]
	push	edx
	call	DWORD PTR [ecx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 612  : 		if (FAILED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L101262

; 613  : 			return hr;

	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$L101254
$L101262:

; 614  : 
; 615  : 		DWORD dwLen;
; 616  : 		hr = pStream->Read(&dwLen, sizeof(DWORD), &uRead);

	mov	esi, esp
	lea	eax, DWORD PTR _uRead$[ebp]
	push	eax
	push	4
	lea	ecx, DWORD PTR _dwLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pStream$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pStream$[ebp]
	push	ecx
	call	DWORD PTR [eax+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 617  : 		if (FAILED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L101266

; 618  : 			return hr;

	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$L101254
$L101266:

; 619  : 
; 620  : 		DWORD cchLicKey;
; 621  : 		hr = pStream->Read(&cchLicKey, sizeof(DWORD), &uRead);

	mov	esi, esp
	lea	edx, DWORD PTR _uRead$[ebp]
	push	edx
	push	4
	lea	eax, DWORD PTR _cchLicKey$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pStream$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pStream$[ebp]
	push	eax
	call	DWORD PTR [edx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 622  : 		if (FAILED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L101270

; 623  : 			return hr;

	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$L101254
$L101270:

; 624  : 
; 625  : 		if (cchLicKey > 0)

	cmp	DWORD PTR _cchLicKey$[ebp], 0
	jbe	$L101271

; 626  : 		{
; 627  : 			CComBSTR bstr(cchLicKey);

	mov	ecx, DWORD PTR _cchLicKey$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _bstr$101272[ebp]
	call	??0CComBSTR@ATL@@QAE@H@Z		; ATL::CComBSTR::CComBSTR
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 628  : 			if (bstr.Length() == 0)

	lea	ecx, DWORD PTR _bstr$101272[ebp]
	call	?Length@CComBSTR@ATL@@QBEIXZ		; ATL::CComBSTR::Length
	test	eax, eax
	jne	SHORT $L101273

; 629  : 				return E_OUTOFMEMORY;

	mov	DWORD PTR $T211639[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bstr$101272[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
	mov	eax, DWORD PTR $T211639[ebp]
	jmp	$L101254
$L101273:

; 630  : 			memset(bstr.m_str, 0, (cchLicKey + 1) * sizeof(OLECHAR));

	mov	edx, DWORD PTR _cchLicKey$[ebp]
	lea	eax, DWORD PTR [edx+edx+2]
	push	eax
	push	0
	mov	ecx, DWORD PTR _bstr$101272[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 631  : 			hr = pStream->Read(bstr.m_str, cchLicKey * sizeof(OLECHAR), &uRead);

	mov	esi, esp
	lea	edx, DWORD PTR _uRead$[ebp]
	push	edx
	mov	eax, DWORD PTR _cchLicKey$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _bstr$101272[ebp]
	push	ecx
	mov	edx, DWORD PTR _pStream$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pStream$[ebp]
	push	ecx
	call	DWORD PTR [eax+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 632  : 			if (FAILED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L101279

; 633  : 				return hr;

	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T211640[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bstr$101272[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
	mov	eax, DWORD PTR $T211640[ebp]
	jmp	$L101254
$L101279:

; 634  : 			*pLicKey = bstr.Detach();

	lea	ecx, DWORD PTR _bstr$101272[ebp]
	call	?Detach@CComBSTR@ATL@@QAEPAGXZ		; ATL::CComBSTR::Detach
	mov	ecx, DWORD PTR _pLicKey$[ebp]
	mov	DWORD PTR [ecx], eax

; 635  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bstr$101272[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
$L101271:

; 636  : 
; 637  : 		// Extended (DATABINDING) stream format is not supported,
; 638  : 		// we reject databinding info but preserve other information
; 639  : 		if (nMsg == (WORD)ATL_WM_OCC_LOADFROMSTREAM_EX ||
; 640  : 			nMsg == (WORD)ATL_WM_OCC_LOADFROMSTORAGE_EX)

	movzx	edx, WORD PTR _nMsg$[ebp]
	cmp	edx, 890				; 0000037aH
	je	SHORT $L101284
	movzx	eax, WORD PTR _nMsg$[ebp]
	cmp	eax, 891				; 0000037bH
	jne	$L101283
$L101284:

; 641  : 		{
; 642  : 			// Read the size of the section
; 643  : 			ULONG cbOffset;
; 644  : 			hr = pStream->Read(&cbOffset, sizeof(ULONG), &uRead);

	mov	esi, esp
	lea	ecx, DWORD PTR _uRead$[ebp]
	push	ecx
	push	4
	lea	edx, DWORD PTR _cbOffset$101285[ebp]
	push	edx
	mov	eax, DWORD PTR _pStream$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pStream$[ebp]
	push	edx
	call	DWORD PTR [ecx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 645  : 			if (FAILED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L101288

; 646  : 				return hr;

	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $L101254
$L101288:

; 647  : 			BYTE pTemp[1000];
; 648  : 			cbOffset -= sizeof(ULONG);

	mov	eax, DWORD PTR _cbOffset$101285[ebp]
	sub	eax, 4
	mov	DWORD PTR _cbOffset$101285[ebp], eax
$L101292:

; 649  : 
; 650  : 			while (cbOffset > 0)

	cmp	DWORD PTR _cbOffset$101285[ebp], 0
	jbe	SHORT $L101293

; 651  : 			{
; 652  : 				pStream->Read(pTemp, (cbOffset < 1000 ? cbOffset : 1000), &uRead);

	cmp	DWORD PTR _cbOffset$101285[ebp], 1000	; 000003e8H
	jae	SHORT $L211641
	mov	ecx, DWORD PTR _cbOffset$101285[ebp]
	mov	DWORD PTR tv165[ebp], ecx
	jmp	SHORT $L211642
$L211641:
	mov	DWORD PTR tv165[ebp], 1000		; 000003e8H
$L211642:
	mov	esi, esp
	lea	edx, DWORD PTR _uRead$[ebp]
	push	edx
	mov	eax, DWORD PTR tv165[ebp]
	push	eax
	lea	ecx, DWORD PTR _pTemp$101289[ebp]
	push	ecx
	mov	edx, DWORD PTR _pStream$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pStream$[ebp]
	push	ecx
	call	DWORD PTR [eax+12]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 653  : 				cbOffset -= uRead;

	mov	edx, DWORD PTR _cbOffset$101285[ebp]
	sub	edx, DWORD PTR _uRead$[ebp]
	mov	DWORD PTR _cbOffset$101285[ebp], edx

; 654  : 			}

	jmp	SHORT $L101292
$L101293:

; 655  : 			return S_OK;

	xor	eax, eax
	jmp	SHORT $L101254
$L101283:

; 656  : 		}
; 657  : 		if (nMsg == (WORD)ATL_WM_OCC_LOADFROMSTREAM)

	movzx	eax, WORD PTR _nMsg$[ebp]
	cmp	eax, 886				; 00000376H
	jne	SHORT $L101296

; 658  : 		{
; 659  : 			return S_OK;

	xor	eax, eax
	jmp	SHORT $L101254
$L101296:

; 660  : 		}
; 661  : 		return E_FAIL;

	mov	eax, -2147467259			; 80004005H
$L101254:

; 662  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L211656
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	add	esp, 1112				; 00000458H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L211656:
	DD	7
	DD	$L211655
$L211655:
	DD	-24					; ffffffe8H
	DD	4
	DD	$L211646
	DD	-40					; ffffffd8H
	DD	2
	DD	$L211647
	DD	-52					; ffffffccH
	DD	4
	DD	$L211648
	DD	-64					; ffffffc0H
	DD	4
	DD	$L211649
	DD	-76					; ffffffb4H
	DD	4
	DD	$L211650
	DD	-88					; ffffffa8H
	DD	4
	DD	$L211651
	DD	-1096					; fffffbb8H
	DD	1000					; 000003e8H
	DD	$L211652
$L211652:
	DB	112					; 00000070H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$L211651:
	DB	99					; 00000063H
	DB	98					; 00000062H
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$L211650:
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$L211649:
	DB	99					; 00000063H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	75					; 0000004bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$L211648:
	DB	100					; 00000064H
	DB	119					; 00000077H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$L211647:
	DB	110					; 0000006eH
	DB	77					; 0000004dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
$L211646:
	DB	117					; 00000075H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L211643:
	lea	ecx, DWORD PTR _bstr$101272[ebp]
	jmp	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
__ehhandler$?ParseInitData@_DialogSplitHelper@ATL@@SAJPAUIStream@@PAPAG@Z:
	mov	eax, OFFSET FLAT:$T211645
	jmp	___CxxFrameHandler
text$x	ENDS
?ParseInitData@_DialogSplitHelper@ATL@@SAJPAUIStream@@PAPAG@Z ENDP ; ATL::_DialogSplitHelper::ParseInitData
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ??0CComBSTR@ATL@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nSize$ = 8						; size = 4
??0CComBSTR@ATL@@QAE@H@Z PROC NEAR			; ATL::CComBSTR::CComBSTR, COMDAT
; _this$ = ecx

; 549  : 	CComBSTR(int nSize)

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 550  : 	{
; 551  : 		if (nSize == 0)

	cmp	DWORD PTR _nSize$[ebp], 0
	jne	SHORT $L81682

; 552  : 			m_str = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 553  : 		else

	jmp	SHORT $L81681
$L81682:

; 554  : 		{
; 555  : 			m_str = ::SysAllocStringLen(NULL, nSize);

	mov	esi, esp
	mov	ecx, DWORD PTR _nSize$[ebp]
	push	ecx
	push	0
	call	DWORD PTR __imp__SysAllocStringLen@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax

; 556  : 			if (m_str == NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L81681

; 557  : 				AtlThrow(E_OUTOFMEMORY);

	push	-2147024882				; 8007000eH
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L81681:

; 558  : 		}
; 559  : 	}

	mov	eax, DWORD PTR _this$[ebp]
$L211661:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CComBSTR@ATL@@QAE@H@Z ENDP				; ATL::CComBSTR::CComBSTR
_TEXT	ENDS
EXTRN	__imp__SysStringLen@4:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Length@CComBSTR@ATL@@QBEIXZ
_TEXT	SEGMENT
tv67 = -8						; size = 4
_this$ = -4						; size = 4
?Length@CComBSTR@ATL@@QBEIXZ PROC NEAR			; ATL::CComBSTR::Length, COMDAT
; _this$ = ecx

; 632  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 633  : 		return (m_str == NULL)? 0 : SysStringLen(m_str);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L211664
	mov	DWORD PTR tv67[ebp], 0
	jmp	SHORT $L211665
$L211664:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__SysStringLen@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv67[ebp], eax
$L211665:
	mov	eax, DWORD PTR tv67[ebp]

; 634  : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Length@CComBSTR@ATL@@QBEIXZ ENDP			; ATL::CComBSTR::Length
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Detach@CComBSTR@ATL@@QAEPAGXZ
_TEXT	SEGMENT
_s$ = -8						; size = 4
_this$ = -4						; size = 4
?Detach@CComBSTR@ATL@@QAEPAGXZ PROC NEAR		; ATL::CComBSTR::Detach, COMDAT
; _this$ = ecx

; 688  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		BSTR s = m_str;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _s$[ebp], ecx

; 690  : 		m_str = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 691  : 		return s;

	mov	eax, DWORD PTR _s$[ebp]

; 692  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?Detach@CComBSTR@ATL@@QAEPAGXZ ENDP			; ATL::CComBSTR::Detach
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
_TEXT	ENDS
;	COMDAT ??0CWindow@ATL@@QAE@PAUHWND__@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hWnd$ = 8						; size = 4
??0CWindow@ATL@@QAE@PAUHWND__@@@Z PROC NEAR		; ATL::CWindow::CWindow, COMDAT
; _this$ = ecx

; 676  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _hWnd$[ebp]
	mov	DWORD PTR [eax], ecx

; 677  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CWindow@ATL@@QAE@PAUHWND__@@@Z ENDP			; ATL::CWindow::CWindow
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Detach@CWindow@ATL@@QAEPAUHWND__@@XZ
_TEXT	SEGMENT
_hWnd$ = -8						; size = 4
_this$ = -4						; size = 4
?Detach@CWindow@ATL@@QAEPAUHWND__@@XZ PROC NEAR		; ATL::CWindow::Detach, COMDAT
; _this$ = ecx

; 698  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 699  : 		HWND hWnd = m_hWnd;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _hWnd$[ebp], ecx

; 700  : 		m_hWnd = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 701  : 		return hWnd;

	mov	eax, DWORD PTR _hWnd$[ebp]

; 702  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?Detach@CWindow@ATL@@QAEPAUHWND__@@XZ ENDP		; ATL::CWindow::Detach
_TEXT	ENDS
PUBLIC	??_C@_0M@MFNOGLO@m_hWnd?5?$DN?$DN?50?$AA@	; `string'
PUBLIC	?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
EXTRN	__imp__CreateWindowExA@48:NEAR
;	COMDAT ??_C@_0M@MFNOGLO@m_hWnd?5?$DN?$DN?50?$AA@
CONST	SEGMENT
??_C@_0M@MFNOGLO@m_hWnd?5?$DN?$DN?50?$AA@ DB 'm_hWnd == 0', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?Create@CWindow@ATL@@QAEPAUHWND__@@PBDPAU3@V_U_RECT@2@0KKV_U_MENUorID@2@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpstrWndClass$ = 8					; size = 4
_hWndParent$ = 12					; size = 4
_rect$ = 16						; size = 4
_szWindowName$ = 20					; size = 4
_dwStyle$ = 24						; size = 4
_dwExStyle$ = 28					; size = 4
_MenuOrID$ = 32						; size = 4
_lpCreateParam$ = 36					; size = 4
?Create@CWindow@ATL@@QAEPAUHWND__@@PBDPAU3@V_U_RECT@2@0KKV_U_MENUorID@2@PAX@Z PROC NEAR ; ATL::CWindow::Create, COMDAT
; _this$ = ecx

; 707  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 708  : 		ATLASSERT(m_hWnd == NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L211674
	push	OFFSET FLAT:??_C@_0M@MFNOGLO@m_hWnd?5?$DN?$DN?50?$AA@
	push	0
	push	708					; 000002c4H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211674
	int	3
$L211674:

; 709  : 		if(rect.m_lpRect == NULL)

	cmp	DWORD PTR _rect$[ebp], 0
	jne	SHORT $L101740

; 710  : 			rect.m_lpRect = &rcDefault;

	mov	DWORD PTR _rect$[ebp], OFFSET FLAT:?rcDefault@CWindow@ATL@@2UtagRECT@@A ; ATL::CWindow::rcDefault
$L101740:

; 711  : 		m_hWnd = ::CreateWindowEx(dwExStyle, lpstrWndClass, szWindowName,
; 712  : 			dwStyle, rect.m_lpRect->left, rect.m_lpRect->top, rect.m_lpRect->right - rect.m_lpRect->left,
; 713  : 			rect.m_lpRect->bottom - rect.m_lpRect->top, hWndParent, MenuOrID.m_hMenu,
; 714  : 			_AtlBaseModule.GetModuleInstance(), lpCreateParam);

	mov	esi, esp
	mov	edx, DWORD PTR _lpCreateParam$[ebp]
	push	edx
	mov	ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
	call	?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
	push	eax
	mov	eax, DWORD PTR _MenuOrID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWndParent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rect$[ebp]
	mov	eax, DWORD PTR _rect$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _rect$[ebp]
	mov	eax, DWORD PTR _rect$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _rect$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _rect$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _dwStyle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _szWindowName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpstrWndClass$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwExStyle$[ebp]
	push	eax
	call	DWORD PTR __imp__CreateWindowExA@48
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 715  : 		return m_hWnd;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 716  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?Create@CWindow@ATL@@QAEPAUHWND__@@PBDPAU3@V_U_RECT@2@0KKV_U_MENUorID@2@PAX@Z ENDP ; ATL::CWindow::Create
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcore.h
_TEXT	ENDS
;	COMDAT ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ PROC NEAR ; ATL::CAtlBaseModule::GetModuleInstance, COMDAT
; _this$ = ecx

; 206  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 207  : 		return m_hInst;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 208  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ENDP ; ATL::CAtlBaseModule::GetModuleInstance
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
_TEXT	ENDS
;	COMDAT ??BCWindow@ATL@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BCWindow@ATL@@QBEPAUHWND__@@XZ PROC NEAR		; ATL::CWindow::operator HWND__ *, COMDAT
; _this$ = ecx

; 732  : 	{ 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 733  : 		return m_hWnd; 

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 734  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??BCWindow@ATL@@QBEPAUHWND__@@XZ ENDP			; ATL::CWindow::operator HWND__ *
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?SendMessageA@CWindow@ATL@@QAEJIIJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_message$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?SendMessageA@CWindow@ATL@@QAEJIIJ@Z PROC NEAR		; ATL::CWindow::SendMessageA, COMDAT
; _this$ = ecx

; 787  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 788  : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L211681
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	788					; 00000314H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211681
	int	3
$L211681:

; 789  : 		return ::SendMessage(m_hWnd,message,wParam,lParam);

	mov	esi, esp
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _message$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 790  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SendMessageA@CWindow@ATL@@QAEJIIJ@Z ENDP		; ATL::CWindow::SendMessageA
_TEXT	ENDS
EXTRN	__imp__SetWindowPos@28:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?SetWindowPos@CWindow@ATL@@QAEHPAUHWND__@@HHHHI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hWndInsertAfter$ = 8					; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_cx$ = 20						; size = 4
_cy$ = 24						; size = 4
_nFlags$ = 28						; size = 4
?SetWindowPos@CWindow@ATL@@QAEHPAUHWND__@@HHHHI@Z PROC NEAR ; ATL::CWindow::SetWindowPos, COMDAT
; _this$ = ecx

; 915  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 916  : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L211684
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	916					; 00000394H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211684
	int	3
$L211684:

; 917  : 		return ::SetWindowPos(m_hWnd, hWndInsertAfter, x, y, cx, cy, nFlags);

	mov	esi, esp
	mov	eax, DWORD PTR _nFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cy$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cx$[ebp]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWndInsertAfter$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SetWindowPos@28
	cmp	esi, esp
	call	__RTC_CheckEsp

; 918  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?SetWindowPos@CWindow@ATL@@QAEHPAUHWND__@@HHHHI@Z ENDP	; ATL::CWindow::SetWindowPos
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?GetWindow@CWindow@ATL@@QBE?AV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_nCmd$ = 12						; size = 4
?GetWindow@CWindow@ATL@@QBE?AV12@I@Z PROC NEAR		; ATL::CWindow::GetWindow, COMDAT
; _this$ = ecx

; 1424 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1425 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L211687
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	1425					; 00000591H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211687
	int	3
$L211687:

; 1426 : 		return CWindow(::GetWindow(m_hWnd, nCmd));

	mov	esi, esp
	mov	eax, DWORD PTR _nCmd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__GetWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0CWindow@ATL@@QAE@PAUHWND__@@@Z	; ATL::CWindow::CWindow
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1427 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetWindow@CWindow@ATL@@QBE?AV12@I@Z ENDP		; ATL::CWindow::GetWindow
_TEXT	ENDS
EXTRN	__imp__GetDlgItem@8:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?GetDlgItem@CWindow@ATL@@QBE?AV12@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_nID$ = 12						; size = 4
?GetDlgItem@CWindow@ATL@@QBE?AV12@H@Z PROC NEAR		; ATL::CWindow::GetDlgItem, COMDAT
; _this$ = ecx

; 1468 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1469 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L211690
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	1469					; 000005bdH
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211690
	int	3
$L211690:

; 1470 : 		return CWindow(::GetDlgItem(m_hWnd, nID));

	mov	esi, esp
	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0CWindow@ATL@@QAE@PAUHWND__@@@Z	; ATL::CWindow::CWindow
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1471 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetDlgItem@CWindow@ATL@@QBE?AV12@H@Z ENDP		; ATL::CWindow::GetDlgItem
_TEXT	ENDS
EXTRN	__imp__SetWindowContextHelpId@8:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?SetWindowContextHelpId@CWindow@ATL@@QAEHK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwContextHelpId$ = 8					; size = 4
?SetWindowContextHelpId@CWindow@ATL@@QAEHK@Z PROC NEAR	; ATL::CWindow::SetWindowContextHelpId, COMDAT
; _this$ = ecx

; 1570 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1571 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L211693
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	1571					; 00000623H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211693
	int	3
$L211693:

; 1572 : 		return ::SetWindowContextHelpId(m_hWnd, dwContextHelpId);

	mov	esi, esp
	mov	eax, DWORD PTR _dwContextHelpId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__SetWindowContextHelpId@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1573 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetWindowContextHelpId@CWindow@ATL@@QAEHK@Z ENDP	; ATL::CWindow::SetWindowContextHelpId
_TEXT	ENDS
PUBLIC	??_C@_0BH@ENLIMLGL@?3?3IsWindow?$CIhWndParent?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BH@LBNLFONB@?3?3IsWindow?$CIhWndCenter?$CJ?$AA@ ; `string'
PUBLIC	?GetStyle@CWindow@ATL@@QBEKXZ			; ATL::CWindow::GetStyle
EXTRN	__imp__SystemParametersInfoA@16:NEAR
EXTRN	__imp__GetClientRect@8:NEAR
EXTRN	__imp__GetWindowRect@8:NEAR
EXTRN	__imp__MapWindowPoints@16:NEAR
EXTRN	__imp__GetWindowLongA@8:NEAR
EXTRN	__imp__GetParent@4:NEAR
;	COMDAT ??_C@_0BH@ENLIMLGL@?3?3IsWindow?$CIhWndParent?$CJ?$AA@
CONST	SEGMENT
??_C@_0BH@ENLIMLGL@?3?3IsWindow?$CIhWndParent?$CJ?$AA@ DB '::IsWindow(hWn'
	DB	'dParent)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LBNLFONB@?3?3IsWindow?$CIhWndCenter?$CJ?$AA@
CONST	SEGMENT
??_C@_0BH@LBNLFONB@?3?3IsWindow?$CIhWndCenter?$CJ?$AA@ DB '::IsWindow(hWn'
	DB	'dCenter)', 00H				; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?CenterWindow@CWindow@ATL@@QAEHPAUHWND__@@@Z
_TEXT	SEGMENT
_yTop$ = -104						; size = 4
_xLeft$ = -100						; size = 4
_DlgHeight$ = -96					; size = 4
_DlgWidth$ = -92					; size = 4
_dwStyleCenter$102499 = -88				; size = 4
_hWndParent$ = -84					; size = 4
_rcCenter$ = -76					; size = 16
_rcArea$ = -52						; size = 16
_rcDlg$ = -28						; size = 16
_dwStyle$ = -8						; size = 4
_this$ = -4						; size = 4
_hWndCenter$ = 8					; size = 4
?CenterWindow@CWindow@ATL@@QAEHPAUHWND__@@@Z PROC NEAR	; ATL::CWindow::CenterWindow, COMDAT
; _this$ = ecx

; 1755 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 104				; 00000068H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-104]
	mov	ecx, 26					; 0000001aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1756 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L211696
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	1756					; 000006dcH
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211696
	int	3
$L211696:

; 1757 : 
; 1758 : 		// determine owner window to center against
; 1759 : 		DWORD dwStyle = GetStyle();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetStyle@CWindow@ATL@@QBEKXZ		; ATL::CWindow::GetStyle
	mov	DWORD PTR _dwStyle$[ebp], eax

; 1760 : 		if(hWndCenter == NULL)

	cmp	DWORD PTR _hWndCenter$[ebp], 0
	jne	SHORT $L102490

; 1761 : 		{
; 1762 : 			if(dwStyle & WS_CHILD)

	mov	eax, DWORD PTR _dwStyle$[ebp]
	and	eax, 1073741824				; 40000000H
	je	SHORT $L102491

; 1763 : 				hWndCenter = ::GetParent(m_hWnd);

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__GetParent@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hWndCenter$[ebp], eax

; 1764 : 			else

	jmp	SHORT $L102490
$L102491:

; 1765 : 				hWndCenter = ::GetWindow(m_hWnd, GW_OWNER);

	mov	esi, esp
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__GetWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hWndCenter$[ebp], eax
$L102490:

; 1766 : 		}
; 1767 : 
; 1768 : 		// get coordinates of the window relative to its parent
; 1769 : 		RECT rcDlg;
; 1770 : 		::GetWindowRect(m_hWnd, &rcDlg);

	mov	esi, esp
	lea	edx, DWORD PTR _rcDlg$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__GetWindowRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1771 : 		RECT rcArea;
; 1772 : 		RECT rcCenter;
; 1773 : 		HWND hWndParent;
; 1774 : 		if(!(dwStyle & WS_CHILD))

	mov	edx, DWORD PTR _dwStyle$[ebp]
	and	edx, 1073741824				; 40000000H
	jne	$L102497

; 1775 : 		{
; 1776 : 			// don't center against invisible or minimized windows
; 1777 : 			if(hWndCenter != NULL)

	cmp	DWORD PTR _hWndCenter$[ebp], 0
	je	SHORT $L102498

; 1778 : 			{
; 1779 : 				DWORD dwStyleCenter = ::GetWindowLong(hWndCenter, GWL_STYLE);

	mov	esi, esp
	push	-16					; fffffff0H
	mov	eax, DWORD PTR _hWndCenter$[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindowLongA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dwStyleCenter$102499[ebp], eax

; 1780 : 				if(!(dwStyleCenter & WS_VISIBLE) || (dwStyleCenter & WS_MINIMIZE))

	mov	ecx, DWORD PTR _dwStyleCenter$102499[ebp]
	and	ecx, 268435456				; 10000000H
	je	SHORT $L102501
	mov	edx, DWORD PTR _dwStyleCenter$102499[ebp]
	and	edx, 536870912				; 20000000H
	je	SHORT $L102498
$L102501:

; 1781 : 					hWndCenter = NULL;

	mov	DWORD PTR _hWndCenter$[ebp], 0
$L102498:

; 1782 : 			}
; 1783 : 
; 1784 : 			// center within screen coordinates
; 1785 : 			::SystemParametersInfo(SPI_GETWORKAREA, NULL, &rcArea, NULL);

	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _rcArea$[ebp]
	push	eax
	push	0
	push	48					; 00000030H
	call	DWORD PTR __imp__SystemParametersInfoA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1786 : 			if(hWndCenter == NULL)

	cmp	DWORD PTR _hWndCenter$[ebp], 0
	jne	SHORT $L102502

; 1787 : 				rcCenter = rcArea;

	mov	ecx, DWORD PTR _rcArea$[ebp]
	mov	DWORD PTR _rcCenter$[ebp], ecx
	mov	edx, DWORD PTR _rcArea$[ebp+4]
	mov	DWORD PTR _rcCenter$[ebp+4], edx
	mov	eax, DWORD PTR _rcArea$[ebp+8]
	mov	DWORD PTR _rcCenter$[ebp+8], eax
	mov	ecx, DWORD PTR _rcArea$[ebp+12]
	mov	DWORD PTR _rcCenter$[ebp+12], ecx

; 1788 : 			else

	jmp	SHORT $L102503
$L102502:

; 1789 : 				::GetWindowRect(hWndCenter, &rcCenter);

	mov	esi, esp
	lea	edx, DWORD PTR _rcCenter$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWndCenter$[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindowRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$L102503:

; 1790 : 		}
; 1791 : 		else

	jmp	$L102504
$L102497:

; 1792 : 		{
; 1793 : 			// center within parent client coordinates
; 1794 : 			hWndParent = ::GetParent(m_hWnd);

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__GetParent@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hWndParent$[ebp], eax

; 1795 : 			ATLASSERT(::IsWindow(hWndParent));

	mov	esi, esp
	mov	eax, DWORD PTR _hWndParent$[ebp]
	push	eax
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L211697
	push	OFFSET FLAT:??_C@_0BH@ENLIMLGL@?3?3IsWindow?$CIhWndParent?$CJ?$AA@
	push	0
	push	1795					; 00000703H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211697
	int	3
$L211697:

; 1796 : 
; 1797 : 			::GetClientRect(hWndParent, &rcArea);

	mov	esi, esp
	lea	edx, DWORD PTR _rcArea$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWndParent$[ebp]
	push	eax
	call	DWORD PTR __imp__GetClientRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1798 : 			ATLASSERT(::IsWindow(hWndCenter));

	mov	esi, esp
	mov	ecx, DWORD PTR _hWndCenter$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L211698
	push	OFFSET FLAT:??_C@_0BH@LBNLFONB@?3?3IsWindow?$CIhWndCenter?$CJ?$AA@
	push	0
	push	1798					; 00000706H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211698
	int	3
$L211698:

; 1799 : 			::GetClientRect(hWndCenter, &rcCenter);

	mov	esi, esp
	lea	eax, DWORD PTR _rcCenter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWndCenter$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1800 : 			::MapWindowPoints(hWndCenter, hWndParent, (POINT*)&rcCenter, 2);

	mov	esi, esp
	push	2
	lea	edx, DWORD PTR _rcCenter$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWndParent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWndCenter$[ebp]
	push	ecx
	call	DWORD PTR __imp__MapWindowPoints@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$L102504:

; 1801 : 		}
; 1802 : 
; 1803 : 		int DlgWidth = rcDlg.right - rcDlg.left;

	mov	edx, DWORD PTR _rcDlg$[ebp+8]
	sub	edx, DWORD PTR _rcDlg$[ebp]
	mov	DWORD PTR _DlgWidth$[ebp], edx

; 1804 : 		int DlgHeight = rcDlg.bottom - rcDlg.top;

	mov	eax, DWORD PTR _rcDlg$[ebp+12]
	sub	eax, DWORD PTR _rcDlg$[ebp+4]
	mov	DWORD PTR _DlgHeight$[ebp], eax

; 1805 : 
; 1806 : 		// find dialog's upper left based on rcCenter
; 1807 : 		int xLeft = (rcCenter.left + rcCenter.right) / 2 - DlgWidth / 2;

	mov	eax, DWORD PTR _rcCenter$[ebp]
	add	eax, DWORD PTR _rcCenter$[ebp+8]
	cdq
	sub	eax, edx
	mov	ecx, eax
	sar	ecx, 1
	mov	eax, DWORD PTR _DlgWidth$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	sub	ecx, eax
	mov	DWORD PTR _xLeft$[ebp], ecx

; 1808 : 		int yTop = (rcCenter.top + rcCenter.bottom) / 2 - DlgHeight / 2;

	mov	eax, DWORD PTR _rcCenter$[ebp+4]
	add	eax, DWORD PTR _rcCenter$[ebp+12]
	cdq
	sub	eax, edx
	mov	ecx, eax
	sar	ecx, 1
	mov	eax, DWORD PTR _DlgHeight$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	sub	ecx, eax
	mov	DWORD PTR _yTop$[ebp], ecx

; 1809 : 
; 1810 : 		// if the dialog is outside the screen, move it inside
; 1811 : 		if(xLeft < rcArea.left)

	mov	edx, DWORD PTR _xLeft$[ebp]
	cmp	edx, DWORD PTR _rcArea$[ebp]
	jge	SHORT $L102514

; 1812 : 			xLeft = rcArea.left;

	mov	eax, DWORD PTR _rcArea$[ebp]
	mov	DWORD PTR _xLeft$[ebp], eax

; 1813 : 		else if(xLeft + DlgWidth > rcArea.right)

	jmp	SHORT $L102515
$L102514:
	mov	ecx, DWORD PTR _xLeft$[ebp]
	add	ecx, DWORD PTR _DlgWidth$[ebp]
	cmp	ecx, DWORD PTR _rcArea$[ebp+8]
	jle	SHORT $L102515

; 1814 : 			xLeft = rcArea.right - DlgWidth;

	mov	edx, DWORD PTR _rcArea$[ebp+8]
	sub	edx, DWORD PTR _DlgWidth$[ebp]
	mov	DWORD PTR _xLeft$[ebp], edx
$L102515:

; 1815 : 
; 1816 : 		if(yTop < rcArea.top)

	mov	eax, DWORD PTR _yTop$[ebp]
	cmp	eax, DWORD PTR _rcArea$[ebp+4]
	jge	SHORT $L102517

; 1817 : 			yTop = rcArea.top;

	mov	ecx, DWORD PTR _rcArea$[ebp+4]
	mov	DWORD PTR _yTop$[ebp], ecx

; 1818 : 		else if(yTop + DlgHeight > rcArea.bottom)

	jmp	SHORT $L102518
$L102517:
	mov	edx, DWORD PTR _yTop$[ebp]
	add	edx, DWORD PTR _DlgHeight$[ebp]
	cmp	edx, DWORD PTR _rcArea$[ebp+12]
	jle	SHORT $L102518

; 1819 : 			yTop = rcArea.bottom - DlgHeight;

	mov	eax, DWORD PTR _rcArea$[ebp+12]
	sub	eax, DWORD PTR _DlgHeight$[ebp]
	mov	DWORD PTR _yTop$[ebp], eax
$L102518:

; 1820 : 
; 1821 : 		// map screen coordinates to child coordinates
; 1822 : 		return ::SetWindowPos(m_hWnd, NULL, xLeft, yTop, -1, -1,
; 1823 : 			SWP_NOSIZE | SWP_NOZORDER | SWP_NOACTIVATE);

	mov	esi, esp
	push	21					; 00000015H
	push	-1
	push	-1
	mov	ecx, DWORD PTR _yTop$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xLeft$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SetWindowPos@28
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1824 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L211703
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 104				; 00000068H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$L211703:
	DD	3
	DD	$L211702
$L211702:
	DD	-28					; ffffffe4H
	DD	16					; 00000010H
	DD	$L211699
	DD	-52					; ffffffccH
	DD	16					; 00000010H
	DD	$L211700
	DD	-76					; ffffffb4H
	DD	16					; 00000010H
	DD	$L211701
$L211701:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	67					; 00000043H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$L211700:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	0
$L211699:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	68					; 00000044H
	DB	108					; 0000006cH
	DB	103					; 00000067H
	DB	0
?CenterWindow@CWindow@ATL@@QAEHPAUHWND__@@@Z ENDP	; ATL::CWindow::CenterWindow
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?GetStyle@CWindow@ATL@@QBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetStyle@CWindow@ATL@@QBEKXZ PROC NEAR			; ATL::CWindow::GetStyle, COMDAT
; _this$ = ecx

; 737  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 738  : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L211706
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	738					; 000002e2H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211706
	int	3
$L211706:

; 739  : 		return (DWORD)::GetWindowLong(m_hWnd, GWL_STYLE);

	mov	esi, esp
	push	-16					; fffffff0H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__GetWindowLongA@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 740  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetStyle@CWindow@ATL@@QBEKXZ ENDP			; ATL::CWindow::GetStyle
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UIStream@@@ATL@@QAE@XZ		; ATL::CComPtrBase<IStream>::~CComPtrBase<IStream>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIStream@@@ATL@@QAE@XZ PROC NEAR		; ATL::CComPtr<IStream>::~CComPtr<IStream>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIStream@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IStream>::~CComPtrBase<IStream>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIStream@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IStream>::~CComPtr<IStream>
_TEXT	ENDS
PUBLIC	?CreateInstance@?$CComCreator@V?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z ; ATL::CComCreator<ATL::CComPolyObject<ATL::CAxHostWindow> >::CreateInstance
PUBLIC	??0CComBSTR@ATL@@QAE@PBG@Z			; ATL::CComBSTR::CComBSTR
PUBLIC	__GUID_b6ea2050_048a_11d1_82b9_00c04fb9942e
;	COMDAT __GUID_b6ea2050_048a_11d1_82b9_00c04fb9942e
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
CONST	SEGMENT
__GUID_b6ea2050_048a_11d1_82b9_00c04fb9942e DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT _AtlAxCreateControlLicEx@32
_TEXT	SEGMENT
tv129 = -64						; size = 4
tv83 = -60						; size = 4
$T211711 = -56						; size = 4
_bstrName$151921 = -48					; size = 4
_pAxWindow$151919 = -36					; size = 4
_spUnkControl$ = -24					; size = 4
_spUnkContainer$ = -12					; size = 4
_hr$ = -4						; size = 4
_lpszName$ = 8						; size = 4
_hWnd$ = 12						; size = 4
_pStream$ = 16						; size = 4
_ppUnkContainer$ = 20					; size = 4
_ppUnkControl$ = 24					; size = 4
_iidSink$ = 28						; size = 4
_punkSink$ = 32						; size = 4
_bstrLic$ = 36						; size = 4
_AtlAxCreateControlLicEx@32 PROC NEAR			; COMDAT

; 2461 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 2462 : 	AtlAxWinInit();

	call	_AtlAxWinInit@0

; 2463 : 	HRESULT hr;
; 2464 : 	CComPtr<IUnknown> spUnkContainer;

	lea	ecx, DWORD PTR _spUnkContainer$[ebp]
	call	??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ	; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>

; 2465 : 	CComPtr<IUnknown> spUnkControl;

	lea	ecx, DWORD PTR _spUnkControl$[ebp]
	call	??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ	; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>

; 2466 : 
; 2467 : 	hr = CAxHostWindow::_CreatorClass::CreateInstance(NULL, __uuidof(IUnknown), (void**)&spUnkContainer);

	lea	ecx, DWORD PTR _spUnkContainer$[ebp]
	call	??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator&
	push	eax
	push	OFFSET FLAT:__GUID_00000000_0000_0000_c000_000000000046
	push	0
	call	?CreateInstance@?$CComCreator@V?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z ; ATL::CComCreator<ATL::CComPolyObject<ATL::CAxHostWindow> >::CreateInstance
	mov	DWORD PTR _hr$[ebp], eax

; 2468 : 	if (SUCCEEDED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jl	$L151844

; 2469 : 	{
; 2470 : 		CComPtr<IAxWinHostWindowLic> pAxWindow;

	lea	ecx, DWORD PTR _pAxWindow$151919[ebp]
	call	??0?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ ; ATL::CComPtr<IAxWinHostWindowLic>::CComPtr<IAxWinHostWindowLic>

; 2471 : 		spUnkContainer->QueryInterface(__uuidof(IAxWinHostWindow), (void**)&pAxWindow);

	lea	ecx, DWORD PTR _spUnkContainer$[ebp]
	call	??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ ; ATL::CComPtrBase<IUnknown>::operator->
	mov	DWORD PTR tv83[ebp], eax
	lea	ecx, DWORD PTR _pAxWindow$151919[ebp]
	call	??I?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAEPAPAUIAxWinHostWindowLic@@XZ ; ATL::CComPtrBase<IAxWinHostWindowLic>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET FLAT:__GUID_b6ea2050_048a_11d1_82b9_00c04fb9942e
	mov	eax, DWORD PTR tv83[ebp]
	push	eax
	mov	ecx, DWORD PTR tv83[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2472 : 		CComBSTR bstrName(lpszName);

	mov	eax, DWORD PTR _lpszName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bstrName$151921[ebp]
	call	??0CComBSTR@ATL@@QAE@PBG@Z		; ATL::CComBSTR::CComBSTR

; 2473 : 		hr = pAxWindow->CreateControlLicEx(bstrName, hWnd, pStream, &spUnkControl, iidSink, punkSink, bstrLic);

	lea	ecx, DWORD PTR _pAxWindow$151919[ebp]
	call	??C?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIAxWinHostWindowLic@@@1@XZ ; ATL::CComPtrBase<IAxWinHostWindowLic>::operator->
	mov	DWORD PTR tv129[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _bstrLic$[ebp]
	push	ecx
	mov	edx, DWORD PTR _punkSink$[ebp]
	push	edx
	mov	eax, DWORD PTR _iidSink$[ebp]
	push	eax
	lea	ecx, DWORD PTR _spUnkControl$[ebp]
	call	??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator&
	push	eax
	mov	ecx, DWORD PTR _pStream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	lea	ecx, DWORD PTR _bstrName$151921[ebp]
	call	??BCComBSTR@ATL@@QBEPAGXZ		; ATL::CComBSTR::operator unsigned short *
	push	eax
	mov	eax, DWORD PTR tv129[ebp]
	push	eax
	mov	ecx, DWORD PTR tv129[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+40]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 2474 : 	}

	lea	ecx, DWORD PTR _bstrName$151921[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
	lea	ecx, DWORD PTR _pAxWindow$151919[ebp]
	call	??1?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ
$L151844:

; 2475 : 	if (ppUnkContainer != NULL)

	cmp	DWORD PTR _ppUnkContainer$[ebp], 0
	je	SHORT $L151933

; 2476 : 	{
; 2477 : 		if (SUCCEEDED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $L151935

; 2478 : 		{
; 2479 : 			*ppUnkContainer = spUnkContainer.p;

	mov	eax, DWORD PTR _ppUnkContainer$[ebp]
	mov	ecx, DWORD PTR _spUnkContainer$[ebp]
	mov	DWORD PTR [eax], ecx

; 2480 : 			spUnkContainer.p = NULL;

	mov	DWORD PTR _spUnkContainer$[ebp], 0

; 2481 : 		}
; 2482 : 		else

	jmp	SHORT $L151933
$L151935:

; 2483 : 			*ppUnkContainer = NULL;

	mov	edx, DWORD PTR _ppUnkContainer$[ebp]
	mov	DWORD PTR [edx], 0
$L151933:

; 2484 : 	}
; 2485 : 	if (ppUnkControl != NULL)

	cmp	DWORD PTR _ppUnkControl$[ebp], 0
	je	SHORT $L151937

; 2486 : 	{
; 2487 : 		if (SUCCEEDED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $L151939

; 2488 : 		{
; 2489 : 			*ppUnkControl = SUCCEEDED(hr) ? spUnkControl.p : NULL;

	xor	eax, eax
	cmp	DWORD PTR _hr$[ebp], 0
	setl	al
	dec	eax
	and	eax, DWORD PTR _spUnkControl$[ebp]
	mov	ecx, DWORD PTR _ppUnkControl$[ebp]
	mov	DWORD PTR [ecx], eax

; 2490 : 			spUnkControl.p = NULL;

	mov	DWORD PTR _spUnkControl$[ebp], 0

; 2491 : 		}
; 2492 : 		else

	jmp	SHORT $L151937
$L151939:

; 2493 : 			*ppUnkControl = NULL;

	mov	edx, DWORD PTR _ppUnkControl$[ebp]
	mov	DWORD PTR [edx], 0
$L151937:

; 2494 : 	}
; 2495 : 	return hr;

	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T211711[ebp], eax
	lea	ecx, DWORD PTR _spUnkControl$[ebp]
	call	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
	lea	ecx, DWORD PTR _spUnkContainer$[ebp]
	call	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
	mov	eax, DWORD PTR $T211711[ebp]

; 2496 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L211717
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
$L211717:
	DD	4
	DD	$L211716
$L211716:
	DD	-12					; fffffff4H
	DD	4
	DD	$L211712
	DD	-24					; ffffffe8H
	DD	4
	DD	$L211713
	DD	-36					; ffffffdcH
	DD	4
	DD	$L211714
	DD	-48					; ffffffd0H
	DD	4
	DD	$L211715
$L211715:
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$L211714:
	DB	112					; 00000070H
	DB	65					; 00000041H
	DB	120					; 00000078H
	DB	87					; 00000057H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	0
$L211713:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	85					; 00000055H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	0
$L211712:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	85					; 00000055H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_AtlAxCreateControlLicEx@32 ENDP
_TEXT	ENDS
EXTRN	__imp__SysAllocString@4:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ??0CComBSTR@ATL@@QAE@PBG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pSrc$ = 8						; size = 4
??0CComBSTR@ATL@@QAE@PBG@Z PROC NEAR			; ATL::CComBSTR::CComBSTR, COMDAT
; _this$ = ecx

; 571  : 	CComBSTR(LPCOLESTR pSrc)

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 572  : 	{
; 573  : 		if (pSrc == NULL)

	cmp	DWORD PTR _pSrc$[ebp], 0
	jne	SHORT $L81694

; 574  : 			m_str = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 575  : 		else

	jmp	SHORT $L81693
$L81694:

; 576  : 		{
; 577  : 			m_str = ::SysAllocString(pSrc);

	mov	esi, esp
	mov	ecx, DWORD PTR _pSrc$[ebp]
	push	ecx
	call	DWORD PTR __imp__SysAllocString@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax

; 578  : 			if (m_str == NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L81693

; 579  : 				AtlThrow(E_OUTOFMEMORY);

	push	-2147024882				; 8007000eH
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L81693:

; 580  : 		}
; 581  : 	}

	mov	eax, DWORD PTR _this$[ebp]
$L211719:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CComBSTR@ATL@@QAE@PBG@Z ENDP				; ATL::CComBSTR::CComBSTR
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IAxWinHostWindowLic>::~CComPtrBase<IAxWinHostWindowLic>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtr<IAxWinHostWindowLic>::~CComPtr<IAxWinHostWindowLic>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IAxWinHostWindowLic>::~CComPtrBase<IAxWinHostWindowLic>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IAxWinHostWindowLic>::~CComPtr<IAxWinHostWindowLic>
_TEXT	ENDS
PUBLIC	??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@ ; `string'
PUBLIC	??_C@_0DJ@HGBKDMEN@ERROR?5?3?5Unable?5to?5lock?5critical?5@ ; `string'
PUBLIC	??_C@_0O@POPOELFC@WM_ATLGETHOST?$AA@		; `string'
PUBLIC	??_C@_0BB@ICJMLDDL@WM_ATLGETCONTROL?$AA@	; `string'
PUBLIC	??0?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@AAVCComCriticalSection@1@_N@Z ; ATL::CComCritSecLock<ATL::CComCriticalSection>::CComCritSecLock<ATL::CComCriticalSection>
PUBLIC	??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
PUBLIC	?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Lock
PUBLIC	?GetWndClassName@?$CAxWindowT@VCWindow@ATL@@@ATL@@SAPBDXZ ; ATL::CAxWindowT<ATL::CWindow>::GetWndClassName
EXTRN	?atlTraceHosting@ATL@@3VCTraceCategory@1@A:DWORD ; ATL::atlTraceHosting
EXTRN	__imp__RegisterClassExA@4:NEAR
EXTRN	__imp__GetClassInfoExA@12:NEAR
EXTRN	__imp__LoadCursorA@8:NEAR
EXTRN	__imp__RegisterWindowMessageA@4:NEAR
;	COMDAT ??_C@_0DJ@HGBKDMEN@ERROR?5?3?5Unable?5to?5lock?5critical?5@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
CONST	SEGMENT
??_C@_0DJ@HGBKDMEN@ERROR?5?3?5Unable?5to?5lock?5critical?5@ DB 'ERROR : U'
	DB	'nable to lock critical section in AtlAxWinInit', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT
??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@ DB 'C:\Program '
	DB	'Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\include\at'
	DB	'lhost.h', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@POPOELFC@WM_ATLGETHOST?$AA@
CONST	SEGMENT
??_C@_0O@POPOELFC@WM_ATLGETHOST?$AA@ DB 'WM_ATLGETHOST', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@ICJMLDDL@WM_ATLGETCONTROL?$AA@
CONST	SEGMENT
??_C@_0BB@ICJMLDDL@WM_ATLGETCONTROL?$AA@ DB 'WM_ATLGETCONTROL', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT _AtlAxWinInit@0
_TEXT	SEGMENT
$T211727 = -92						; size = 4
$T211726 = -88						; size = 4
$T211724 = -84						; size = 8
_bRet$ = -76						; size = 4
_wc$ = -68						; size = 48
_lock$ = -12						; size = 8
_AtlAxWinInit@0 PROC NEAR				; COMDAT

; 2528 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-92]
	mov	ecx, 23					; 00000017H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 2529 : 	CComCritSecLock<CComCriticalSection> lock(_AtlWinModule.m_csWindowCreate, false);

	push	0
	push	OFFSET FLAT:?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+4
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@AAVCComCriticalSection@1@_N@Z ; ATL::CComCritSecLock<ATL::CComCriticalSection>::CComCritSecLock<ATL::CComCriticalSection>

; 2530 : 	if (FAILED(lock.Lock()))

	lea	ecx, DWORD PTR _lock$[ebp]
	call	?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Lock
	test	eax, eax
	jge	SHORT $L152057

; 2531 : 	{
; 2532 : 		ATLTRACE(atlTraceHosting, 0, _T("ERROR : Unable to lock critical section in AtlAxWinInit\n"));

	push	OFFSET FLAT:??_C@_0DJ@HGBKDMEN@ERROR?5?3?5Unable?5to?5lock?5critical?5@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceHosting@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceHosting
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	2532					; 000009e4H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T211724[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 16					; 00000010H

; 2533 : 		ATLASSERT(0);

	xor	eax, eax
	jne	SHORT $L211725
	push	OFFSET FLAT:??_C@_01GBGANLPD@0?$AA@
	push	0
	push	2533					; 000009e5H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211725
	int	3
$L211725:

; 2534 : 		return FALSE;

	mov	DWORD PTR $T211726[ebp], 0
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
	mov	eax, DWORD PTR $T211726[ebp]
	jmp	$L152054
$L152057:

; 2535 : 	}
; 2536 : 	WM_ATLGETHOST = RegisterWindowMessage(_T("WM_ATLGETHOST"));

	mov	esi, esp
	push	OFFSET FLAT:??_C@_0O@POPOELFC@WM_ATLGETHOST?$AA@
	call	DWORD PTR __imp__RegisterWindowMessageA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?WM_ATLGETHOST@ATL@@3IA, eax	; ATL::WM_ATLGETHOST

; 2537 : 	WM_ATLGETCONTROL = RegisterWindowMessage(_T("WM_ATLGETCONTROL"));

	mov	esi, esp
	push	OFFSET FLAT:??_C@_0BB@ICJMLDDL@WM_ATLGETCONTROL?$AA@
	call	DWORD PTR __imp__RegisterWindowMessageA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?WM_ATLGETCONTROL@ATL@@3IA, eax ; ATL::WM_ATLGETCONTROL

; 2538 : 	WNDCLASSEX wc;
; 2539 : // first check if the class is already registered
; 2540 : 	wc.cbSize = sizeof(WNDCLASSEX);

	mov	DWORD PTR _wc$[ebp], 48			; 00000030H

; 2541 : 	BOOL bRet = ::GetClassInfoEx(_AtlBaseModule.GetModuleInstance(), CAxWindow::GetWndClassName(), &wc);

	mov	esi, esp
	lea	edx, DWORD PTR _wc$[ebp]
	push	edx
	call	?GetWndClassName@?$CAxWindowT@VCWindow@ATL@@@ATL@@SAPBDXZ ; ATL::CAxWindowT<ATL::CWindow>::GetWndClassName
	push	eax
	mov	ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
	call	?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
	push	eax
	call	DWORD PTR __imp__GetClassInfoExA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _bRet$[ebp], eax

; 2542 : 
; 2543 : // register class if not
; 2544 : 
; 2545 : 	if(!bRet)

	cmp	DWORD PTR _bRet$[ebp], 0
	jne	$L152067

; 2546 : 	{
; 2547 : 		wc.cbSize = sizeof(WNDCLASSEX);

	mov	DWORD PTR _wc$[ebp], 48			; 00000030H

; 2548 : #ifdef _ATL_DLL_IMPL
; 2549 : 		wc.style = CS_GLOBALCLASS | CS_DBLCLKS;
; 2550 : 		bAtlAxWinInitialized = true;
; 2551 : #else
; 2552 : 		wc.style = CS_DBLCLKS;

	mov	DWORD PTR _wc$[ebp+4], 8

; 2553 : #endif
; 2554 : 		wc.lpfnWndProc = AtlAxWindowProc;

	mov	DWORD PTR _wc$[ebp+8], OFFSET FLAT:?AtlAxWindowProc@ATL@@YGJPAUHWND__@@IIJ@Z ; ATL::AtlAxWindowProc

; 2555 : 		wc.cbClsExtra = 0;

	mov	DWORD PTR _wc$[ebp+12], 0

; 2556 : 		wc.cbWndExtra = 0;

	mov	DWORD PTR _wc$[ebp+16], 0

; 2557 : 		wc.hInstance = _AtlBaseModule.GetModuleInstance();

	mov	ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
	call	?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
	mov	DWORD PTR _wc$[ebp+20], eax

; 2558 : 		wc.hIcon = NULL;

	mov	DWORD PTR _wc$[ebp+24], 0

; 2559 : 		wc.hCursor = ::LoadCursor(NULL, IDC_ARROW);

	mov	esi, esp
	push	32512					; 00007f00H
	push	0
	call	DWORD PTR __imp__LoadCursorA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _wc$[ebp+28], eax

; 2560 : 		wc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);

	mov	DWORD PTR _wc$[ebp+32], 6

; 2561 : 		wc.lpszMenuName = NULL;

	mov	DWORD PTR _wc$[ebp+36], 0

; 2562 : 		wc.lpszClassName = CAxWindow::GetWndClassName();

	call	?GetWndClassName@?$CAxWindowT@VCWindow@ATL@@@ATL@@SAPBDXZ ; ATL::CAxWindowT<ATL::CWindow>::GetWndClassName
	mov	DWORD PTR _wc$[ebp+40], eax

; 2563 : 		wc.hIconSm = NULL;

	mov	DWORD PTR _wc$[ebp+44], 0

; 2564 : 
; 2565 : 		bRet = (BOOL)::RegisterClassEx(&wc);

	mov	esi, esp
	lea	eax, DWORD PTR _wc$[ebp]
	push	eax
	call	DWORD PTR __imp__RegisterClassExA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, ax
	mov	DWORD PTR _bRet$[ebp], ecx
$L152067:

; 2566 : 	}
; 2567 : 
; 2568 : 	if (bRet)

	cmp	DWORD PTR _bRet$[ebp], 0
	je	$L152074

; 2569 : 	{
; 2570 : 	// first check if the class is already registered
; 2571 : 		memset(&wc, 0, sizeof(WNDCLASSEX));

	push	48					; 00000030H
	push	0
	lea	edx, DWORD PTR _wc$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH

; 2572 : 		wc.cbSize = sizeof(WNDCLASSEX);

	mov	DWORD PTR _wc$[ebp], 48			; 00000030H

; 2573 : 		bRet = ::GetClassInfoEx(_AtlBaseModule.GetModuleInstance(), CAxWindow2::GetWndClassName(), &wc);

	mov	esi, esp
	lea	eax, DWORD PTR _wc$[ebp]
	push	eax
	call	?GetWndClassName@?$CAxWindow2T@VCWindow@ATL@@@ATL@@SAPBDXZ ; ATL::CAxWindow2T<ATL::CWindow>::GetWndClassName
	push	eax
	mov	ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
	call	?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
	push	eax
	call	DWORD PTR __imp__GetClassInfoExA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _bRet$[ebp], eax

; 2574 : 
; 2575 : 	// register class if not
; 2576 : 
; 2577 : 		if(!bRet)

	cmp	DWORD PTR _bRet$[ebp], 0
	jne	$L152074

; 2578 : 		{
; 2579 : 			wc.cbSize = sizeof(WNDCLASSEX);

	mov	DWORD PTR _wc$[ebp], 48			; 00000030H

; 2580 : 	#ifdef _ATL_DLL_IMPL
; 2581 : 			wc.style = CS_GLOBALCLASS | CS_DBLCLKS;
; 2582 : 	#else
; 2583 : 			wc.style = CS_DBLCLKS;

	mov	DWORD PTR _wc$[ebp+4], 8

; 2584 : 	#endif
; 2585 : 			wc.lpfnWndProc = AtlAxWindowProc2;

	mov	DWORD PTR _wc$[ebp+8], OFFSET FLAT:?AtlAxWindowProc2@ATL@@YGJPAUHWND__@@IIJ@Z ; ATL::AtlAxWindowProc2

; 2586 : 			wc.cbClsExtra = 0;

	mov	DWORD PTR _wc$[ebp+12], 0

; 2587 : 			wc.cbWndExtra = 0;

	mov	DWORD PTR _wc$[ebp+16], 0

; 2588 : 			wc.hInstance = _AtlBaseModule.GetModuleInstance();

	mov	ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
	call	?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
	mov	DWORD PTR _wc$[ebp+20], eax

; 2589 : 			wc.hIcon = NULL;

	mov	DWORD PTR _wc$[ebp+24], 0

; 2590 : 			wc.hCursor = ::LoadCursor(NULL, IDC_ARROW);

	mov	esi, esp
	push	32512					; 00007f00H
	push	0
	call	DWORD PTR __imp__LoadCursorA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _wc$[ebp+28], eax

; 2591 : 			wc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);

	mov	DWORD PTR _wc$[ebp+32], 6

; 2592 : 			wc.lpszMenuName = NULL;

	mov	DWORD PTR _wc$[ebp+36], 0

; 2593 : 			wc.lpszClassName = CAxWindow2::GetWndClassName();

	call	?GetWndClassName@?$CAxWindow2T@VCWindow@ATL@@@ATL@@SAPBDXZ ; ATL::CAxWindow2T<ATL::CWindow>::GetWndClassName
	mov	DWORD PTR _wc$[ebp+40], eax

; 2594 : 			wc.hIconSm = NULL;

	mov	DWORD PTR _wc$[ebp+44], 0

; 2595 : 
; 2596 : 			bRet = (BOOL)::RegisterClassEx(&wc);

	mov	esi, esp
	lea	ecx, DWORD PTR _wc$[ebp]
	push	ecx
	call	DWORD PTR __imp__RegisterClassExA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, ax
	mov	DWORD PTR _bRet$[ebp], edx
$L152074:

; 2597 : 		}
; 2598 : 	}
; 2599 : 	return bRet;

	mov	eax, DWORD PTR _bRet$[ebp]
	mov	DWORD PTR $T211727[ebp], eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
	mov	eax, DWORD PTR $T211727[ebp]
$L152054:

; 2600 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L211731
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 92					; 0000005cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L211731:
	DD	2
	DD	$L211730
$L211730:
	DD	-12					; fffffff4H
	DD	8
	DD	$L211728
	DD	-68					; ffffffbcH
	DD	48					; 00000030H
	DD	$L211729
$L211729:
	DB	119					; 00000077H
	DB	99					; 00000063H
	DB	0
$L211728:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_AtlAxWinInit@0 ENDP
_TEXT	ENDS
PUBLIC	_AtlAxCreateControlLic@20
PUBLIC	?SetWindowLongPtrA@@YAJPAUHWND__@@HJ@Z		; SetWindowLongPtrA
PUBLIC	?GetWindowLongPtrA@@YAJPAUHWND__@@H@Z		; GetWindowLongPtrA
EXTRN	__imp__LocalFree@4:NEAR
EXTRN	__imp__SetWindowTextA@8:NEAR
EXTRN	__imp__GetWindowTextA@12:NEAR
EXTRN	__imp__GetWindowTextLengthA@4:NEAR
EXTRN	?atlTraceControls@ATL@@3VCTraceCategory@1@A:DWORD ; ATL::atlTraceControls
EXTRN	__imp__SetWindowLongA@12:NEAR
EXTRN	__imp__DefWindowProcA@16:NEAR
EXTRN	__imp__OleInitialize@4:NEAR
EXTRN	__imp__OleUninitialize@0:NEAR
EXTRN	__imp__FormatMessageA@28:NEAR
xdata$x	SEGMENT
$T211752 DD	0ffffffffH
	DD	FLAT:$L211741
	DD	00H
	DD	FLAT:$L211742
$T211744 DD	019930520H
	DD	02H
	DD	FLAT:$T211752
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv197 = -160						; size = 4
tv156 = -156						; size = 4
tv160 = -152						; size = 4
tv69 = -148						; size = 4
tv64 = -144						; size = 4
$T211739 = -140						; size = 4
$T211738 = -136						; size = 4
$T211737 = -132						; size = 8
$T211736 = -124						; size = 8
_dwExStyle$151600 = -116				; size = 4
_pAxWindow$151591 = -112				; size = 4
_pszMsg$151576 = -104					; size = 4
_hRet$151571 = -96					; size = 4
_spUnk$151570 = -88					; size = 4
__lpa$151569 = -80					; size = 4
__lpw$151568 = -76					; size = 4
__acp$151567 = -72					; size = 4
__convert$151566 = -68					; size = 4
_pSource$151563 = -64					; size = 4
_pBytes$151561 = -60					; size = 4
_spStream$151559 = -52					; size = 4
_h$151558 = -44						; size = 4
_nCreateSize$151555 = -40				; size = 4
_pAxWindow$151554 = -32					; size = 4
_lpstrName$151550 = -24					; size = 4
_nLen$151549 = -20					; size = 4
_lpCreate$151547 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?AtlAxWindowProc@ATL@@YGJPAUHWND__@@IIJ@Z PROC NEAR	; ATL::AtlAxWindowProc

; 2129 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AtlAxWindowProc@ATL@@YGJPAUHWND__@@IIJ@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 148				; 00000094H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-160]
	mov	ecx, 37					; 00000025H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 2130 : 	switch(uMsg)

	mov	eax, DWORD PTR _uMsg$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 1
	je	SHORT $L151546
	cmp	DWORD PTR tv64[ebp], 130		; 00000082H
	je	$L151590
	cmp	DWORD PTR tv64[ebp], 528		; 00000210H
	je	$L151594
	jmp	$L151543
$L151546:

; 2131 : 	{
; 2132 : 	case WM_CREATE:
; 2133 : 		{
; 2134 : 		// create control from a PROGID in the title
; 2135 : 			// This is to make sure drag drop works
; 2136 : 			::OleInitialize(NULL);

	mov	esi, esp
	push	0
	call	DWORD PTR __imp__OleInitialize@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2137 : 
; 2138 : 			CREATESTRUCT* lpCreate = (CREATESTRUCT*)lParam;

	mov	ecx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _lpCreate$151547[ebp], ecx

; 2139 : 			int nLen = ::GetWindowTextLength(hWnd);

	mov	esi, esp
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetWindowTextLengthA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nLen$151549[ebp], eax

; 2140 : 			LPTSTR lpstrName = (LPTSTR)_alloca((nLen + 1) * sizeof(TCHAR));

	mov	eax, DWORD PTR _nLen$151549[ebp]
	add	eax, 4
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv69[ebp], esp
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR _lpstrName$151550[ebp], eax

; 2141 : 			::GetWindowText(hWnd, lpstrName, nLen + 1);

	mov	ecx, DWORD PTR _nLen$151549[ebp]
	add	ecx, 1
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _lpstrName$151550[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindowTextA@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2142 : 			::SetWindowText(hWnd, _T(""));

	mov	esi, esp
	push	OFFSET FLAT:$SG151553
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetWindowTextA@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2143 : 			IAxWinHostWindow* pAxWindow = NULL;

	mov	DWORD PTR _pAxWindow$151554[ebp], 0

; 2144 : 			int nCreateSize = 0;

	mov	DWORD PTR _nCreateSize$151555[ebp], 0

; 2145 : 			if (lpCreate && lpCreate->lpCreateParams)

	cmp	DWORD PTR _lpCreate$151547[ebp], 0
	je	SHORT $L151556
	mov	edx, DWORD PTR _lpCreate$151547[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $L151556

; 2146 : 				nCreateSize = *((WORD*)lpCreate->lpCreateParams);

	mov	eax, DWORD PTR _lpCreate$151547[ebp]
	mov	ecx, DWORD PTR [eax]
	movzx	edx, WORD PTR [ecx]
	mov	DWORD PTR _nCreateSize$151555[ebp], edx
$L151556:

; 2147 : 
; 2148 : 			HGLOBAL h = GlobalAlloc(GHND, nCreateSize);

	mov	esi, esp
	mov	eax, DWORD PTR _nCreateSize$151555[ebp]
	push	eax
	push	66					; 00000042H
	call	DWORD PTR __imp__GlobalAlloc@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _h$151558[ebp], eax

; 2149 : 			CComPtr<IStream> spStream;

	lea	ecx, DWORD PTR _spStream$151559[ebp]
	call	??0?$CComPtr@UIStream@@@ATL@@QAE@XZ	; ATL::CComPtr<IStream>::CComPtr<IStream>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2150 : 			if (h && nCreateSize)

	cmp	DWORD PTR _h$151558[ebp], 0
	je	SHORT $L151560
	cmp	DWORD PTR _nCreateSize$151555[ebp], 0
	je	SHORT $L151560

; 2151 : 			{
; 2152 : 				BYTE* pBytes = (BYTE*) GlobalLock(h);

	mov	esi, esp
	mov	ecx, DWORD PTR _h$151558[ebp]
	push	ecx
	call	DWORD PTR __imp__GlobalLock@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pBytes$151561[ebp], eax

; 2153 : 				BYTE* pSource = ((BYTE*)(lpCreate->lpCreateParams)) + sizeof(WORD); 

	mov	edx, DWORD PTR _lpCreate$151547[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 2
	mov	DWORD PTR _pSource$151563[ebp], eax

; 2154 : 				//Align to DWORD
; 2155 : 				//pSource += (((~((DWORD)pSource)) + 1) & 3);
; 2156 : 				memcpy(pBytes, pSource, nCreateSize);

	mov	ecx, DWORD PTR _nCreateSize$151555[ebp]
	push	ecx
	mov	edx, DWORD PTR _pSource$151563[ebp]
	push	edx
	mov	eax, DWORD PTR _pBytes$151561[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 2157 : 				GlobalUnlock(h);

	mov	esi, esp
	mov	ecx, DWORD PTR _h$151558[ebp]
	push	ecx
	call	DWORD PTR __imp__GlobalUnlock@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2158 : 				CreateStreamOnHGlobal(h, TRUE, &spStream);

	lea	ecx, DWORD PTR _spStream$151559[ebp]
	call	??I?$CComPtrBase@UIStream@@@ATL@@QAEPAPAUIStream@@XZ ; ATL::CComPtrBase<IStream>::operator&
	mov	esi, esp
	push	eax
	push	1
	mov	edx, DWORD PTR _h$151558[ebp]
	push	edx
	call	DWORD PTR __imp__CreateStreamOnHGlobal@12
	cmp	esi, esp
	call	__RTC_CheckEsp
$L151560:

; 2159 : 			}
; 2160 : 
; 2161 : 			USES_CONVERSION;

	mov	DWORD PTR __convert$151566[ebp], 0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	mov	DWORD PTR __acp$151567[ebp], eax
	mov	DWORD PTR __lpw$151568[ebp], 0
	mov	DWORD PTR __lpa$151569[ebp], 0

; 2162 : 			CComPtr<IUnknown> spUnk;

	lea	ecx, DWORD PTR _spUnk$151570[ebp]
	call	??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ	; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 2163 : 			HRESULT hRet = AtlAxCreateControlLic(T2COLE(lpstrName), hWnd, spStream, &spUnk, NULL);

	mov	eax, DWORD PTR _lpstrName$151550[ebp]
	mov	DWORD PTR __lpa$151569[ebp], eax
	cmp	DWORD PTR __lpa$151569[ebp], 0
	jne	SHORT $L211734
	mov	DWORD PTR tv160[ebp], 0
	jmp	SHORT $L211735
$L211734:
	mov	esi, esp
	mov	ecx, DWORD PTR __lpa$151569[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	mov	DWORD PTR __convert$151566[ebp], eax
	mov	eax, DWORD PTR __convert$151566[ebp]
	shl	eax, 1
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv156[ebp], esp
	mov	edx, DWORD PTR __acp$151567[ebp]
	push	edx
	mov	eax, DWORD PTR __convert$151566[ebp]
	push	eax
	mov	ecx, DWORD PTR __lpa$151569[ebp]
	push	ecx
	mov	edx, DWORD PTR tv156[ebp]
	push	edx
	call	?AtlA2WHelper@@YGPAGPAGPBDHI@Z		; AtlA2WHelper
	mov	DWORD PTR tv160[ebp], eax
$L211735:
	push	0
	lea	ecx, DWORD PTR _spUnk$151570[ebp]
	call	??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator&
	push	eax
	lea	ecx, DWORD PTR _spStream$151559[ebp]
	call	??B?$CComPtrBase@UIStream@@@ATL@@QBEPAUIStream@@XZ ; ATL::CComPtrBase<IStream>::operator IStream *
	push	eax
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv160[ebp]
	push	ecx
	call	_AtlAxCreateControlLic@20
	mov	DWORD PTR _hRet$151571[ebp], eax

; 2164 : 			if(FAILED(hRet))

	cmp	DWORD PTR _hRet$151571[ebp], 0
	jge	$L151575

; 2165 : 			{
; 2166 : #ifdef _DEBUG
; 2167 : 				LPTSTR pszMsg = NULL;

	mov	DWORD PTR _pszMsg$151576[ebp], 0

; 2168 : 				::FormatMessage(FORMAT_MESSAGE_ALLOCATE_BUFFER|FORMAT_MESSAGE_FROM_SYSTEM, NULL, hRet, 0, (LPTSTR)&pszMsg, 0, NULL);

	mov	esi, esp
	push	0
	push	0
	lea	edx, DWORD PTR _pszMsg$151576[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _hRet$151571[ebp]
	push	eax
	push	0
	push	4352					; 00001100H
	call	DWORD PTR __imp__FormatMessageA@28
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2169 : 				ATLTRACE(atlTraceControls, 0, _T("Control creation failed for '%s'\n"), lpstrName);

	mov	ecx, DWORD PTR _lpstrName$151550[ebp]
	push	ecx
	push	OFFSET FLAT:$SG151580
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceControls@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceControls
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	2169					; 00000879H
	push	OFFSET FLAT:$SG151579
	lea	ecx, DWORD PTR $T211736[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H

; 2170 : 				ATLTRACE(atlTraceControls, 0, _T("Error code: 0x%x - %s"), hRet, pszMsg);

	mov	edx, DWORD PTR _pszMsg$151576[ebp]
	push	edx
	mov	eax, DWORD PTR _hRet$151571[ebp]
	push	eax
	push	OFFSET FLAT:$SG151583
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceControls@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceControls
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	2170					; 0000087aH
	push	OFFSET FLAT:$SG151582
	lea	ecx, DWORD PTR $T211737[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 24					; 00000018H

; 2171 : 				::LocalFree(pszMsg);

	mov	esi, esp
	mov	ecx, DWORD PTR _pszMsg$151576[ebp]
	push	ecx
	call	DWORD PTR __imp__LocalFree@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2172 : #endif
; 2173 : 				return -1;	// abort window creation

	mov	DWORD PTR $T211738[ebp], -1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _spUnk$151570[ebp]
	call	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spStream$151559[ebp]
	call	??1?$CComPtr@UIStream@@@ATL@@QAE@XZ
	mov	eax, DWORD PTR $T211738[ebp]
	jmp	$L151541
$L151575:

; 2174 : 			}
; 2175 : 			hRet = spUnk->QueryInterface(__uuidof(IAxWinHostWindow), (void**)&pAxWindow);

	lea	ecx, DWORD PTR _spUnk$151570[ebp]
	call	??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ ; ATL::CComPtrBase<IUnknown>::operator->
	mov	DWORD PTR tv197[ebp], eax
	mov	esi, esp
	lea	edx, DWORD PTR _pAxWindow$151554[ebp]
	push	edx
	push	OFFSET FLAT:__GUID_b6ea2050_048a_11d1_82b9_00c04fb9942e
	mov	eax, DWORD PTR tv197[ebp]
	push	eax
	mov	ecx, DWORD PTR tv197[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRet$151571[ebp], eax

; 2176 : 			if(FAILED(hRet))

	cmp	DWORD PTR _hRet$151571[ebp], 0
	jge	SHORT $L151587

; 2177 : 				return -1;	// abort window creation

	mov	DWORD PTR $T211739[ebp], -1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _spUnk$151570[ebp]
	call	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spStream$151559[ebp]
	call	??1?$CComPtr@UIStream@@@ATL@@QAE@XZ
	mov	eax, DWORD PTR $T211739[ebp]
	jmp	$L151541
$L151587:

; 2178 : 
; 2179 : 			::SetWindowLongPtr(hWnd, GWLP_USERDATA, (DWORD_PTR)pAxWindow);

	mov	eax, DWORD PTR _pAxWindow$151554[ebp]
	push	eax
	push	-21					; ffffffebH
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?SetWindowLongPtrA@@YAJPAUHWND__@@HJ@Z	; SetWindowLongPtrA
	add	esp, 12					; 0000000cH

; 2180 : 		// continue with DefWindowProc
; 2181 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _spUnk$151570[ebp]
	call	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spStream$151559[ebp]
	call	??1?$CComPtr@UIStream@@@ATL@@QAE@XZ

; 2182 : 		break;

	jmp	$L151543
$L151590:

; 2183 : 	case WM_NCDESTROY:
; 2184 : 		{
; 2185 : 			IAxWinHostWindow* pAxWindow = (IAxWinHostWindow*)::GetWindowLongPtr(hWnd, GWLP_USERDATA);

	push	-21					; ffffffebH
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?GetWindowLongPtrA@@YAJPAUHWND__@@H@Z	; GetWindowLongPtrA
	add	esp, 8
	mov	DWORD PTR _pAxWindow$151591[ebp], eax

; 2186 : 			if(pAxWindow != NULL)

	cmp	DWORD PTR _pAxWindow$151591[ebp], 0
	je	SHORT $L151593

; 2187 : 				pAxWindow->Release();

	mov	eax, DWORD PTR _pAxWindow$151591[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pAxWindow$151591[ebp]
	push	edx
	call	DWORD PTR [ecx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L151593:

; 2188 : 			OleUninitialize();

	mov	esi, esp
	call	DWORD PTR __imp__OleUninitialize@0
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2189 : 		}
; 2190 : 		break;

	jmp	$L151543
$L151594:

; 2191 : 
; 2192 : 	case WM_PARENTNOTIFY:
; 2193 : 		{
; 2194 : 			if((UINT)wParam == WM_CREATE)

	cmp	DWORD PTR _wParam$[ebp], 1
	jne	$L151543

; 2195 : 			{
; 2196 : 				ATLASSERT(lParam);

	cmp	DWORD PTR _lParam$[ebp], 0
	jne	SHORT $L211740
	push	OFFSET FLAT:$SG151598
	push	0
	push	2196					; 00000894H
	push	OFFSET FLAT:$SG151599
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211740
	int	3
$L211740:

; 2197 : 				// Set the control parent style for the AxWindow
; 2198 : 				DWORD dwExStyle = ::GetWindowLong((HWND)lParam, GWL_EXSTYLE);

	mov	esi, esp
	push	-20					; ffffffecH
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetWindowLongA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dwExStyle$151600[ebp], eax

; 2199 : 				if(dwExStyle & WS_EX_CONTROLPARENT)

	mov	edx, DWORD PTR _dwExStyle$151600[ebp]
	and	edx, 65536				; 00010000H
	je	SHORT $L151543

; 2200 : 				{
; 2201 : 					dwExStyle = ::GetWindowLong(hWnd, GWL_EXSTYLE);

	mov	esi, esp
	push	-20					; ffffffecH
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindowLongA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dwExStyle$151600[ebp], eax

; 2202 : 					dwExStyle |= WS_EX_CONTROLPARENT;

	mov	ecx, DWORD PTR _dwExStyle$151600[ebp]
	or	ecx, 65536				; 00010000H
	mov	DWORD PTR _dwExStyle$151600[ebp], ecx

; 2203 : 					::SetWindowLong(hWnd, GWL_EXSTYLE, dwExStyle);

	mov	esi, esp
	mov	edx, DWORD PTR _dwExStyle$151600[ebp]
	push	edx
	push	-20					; ffffffecH
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__SetWindowLongA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
$L151543:

; 2204 : 				}
; 2205 : 			}
; 2206 : 		}
; 2207 : 		break;
; 2208 : 
; 2209 : 	default:
; 2210 : 		break;
; 2211 : 	}
; 2212 : 
; 2213 : 	return ::DefWindowProc(hWnd, uMsg, wParam, lParam);

	mov	esi, esp
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _uMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__DefWindowProcA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$L151541:

; 2214 : }

	lea	esp, DWORD PTR [ebp-168]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L211751
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$L211751:
	DD	4
	DD	$L211750
$L211750:
	DD	-32					; ffffffe0H
	DD	4
	DD	$L211745
	DD	-52					; ffffffccH
	DD	4
	DD	$L211746
	DD	-88					; ffffffa8H
	DD	4
	DD	$L211747
	DD	-104					; ffffff98H
	DD	4
	DD	$L211748
$L211748:
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	77					; 0000004dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
$L211747:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	85					; 00000055H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	0
$L211746:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$L211745:
	DB	112					; 00000070H
	DB	65					; 00000041H
	DB	120					; 00000078H
	DB	87					; 00000057H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
$L211741:
	lea	ecx, DWORD PTR _spStream$151559[ebp]
	jmp	??1?$CComPtr@UIStream@@@ATL@@QAE@XZ
$L211742:
	lea	ecx, DWORD PTR _spUnk$151570[ebp]
	jmp	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
__ehhandler$?AtlAxWindowProc@ATL@@YGJPAUHWND__@@IIJ@Z:
	mov	eax, OFFSET FLAT:$T211744
	jmp	___CxxFrameHandler
text$x	ENDS
?AtlAxWindowProc@ATL@@YGJPAUHWND__@@IIJ@Z ENDP		; ATL::AtlAxWindowProc
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
;	COMDAT ?SetWindowLongPtrA@@YAJPAUHWND__@@HJ@Z
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_nIndex$ = 12						; size = 4
_dwNewLong$ = 16					; size = 4
?SetWindowLongPtrA@@YAJPAUHWND__@@HJ@Z PROC NEAR	; SetWindowLongPtrA, COMDAT

; 41   : {

	push	ebp
	mov	ebp, esp
	push	esi

; 42   : 	return( ::SetWindowLongA( hWnd, nIndex, LONG( dwNewLong ) ) );

	mov	esi, esp
	mov	eax, DWORD PTR _dwNewLong$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__SetWindowLongA@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 43   : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?SetWindowLongPtrA@@YAJPAUHWND__@@HJ@Z ENDP		; SetWindowLongPtrA
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?GetWindowLongPtrA@@YAJPAUHWND__@@H@Z
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_nIndex$ = 12						; size = 4
?GetWindowLongPtrA@@YAJPAUHWND__@@H@Z PROC NEAR		; GetWindowLongPtrA, COMDAT

; 57   : {

	push	ebp
	mov	ebp, esp
	push	esi

; 58   : 	return( ::GetWindowLongA( hWnd, nIndex ) );

	mov	esi, esp
	mov	eax, DWORD PTR _nIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetWindowLongA@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 59   : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?GetWindowLongPtrA@@YAJPAUHWND__@@H@Z ENDP		; GetWindowLongPtrA
_TEXT	ENDS
xdata$x	SEGMENT
$T211779 DD	0ffffffffH
	DD	FLAT:$L211766
	DD	00H
	DD	FLAT:$L211767
	DD	01H
	DD	FLAT:$L211768
$T211770 DD	019930520H
	DD	03H
	DD	FLAT:$T211779
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
xdata$x	ENDS
_TEXT	SEGMENT
tv208 = -176						; size = 4
tv167 = -172						; size = 4
tv171 = -168						; size = 4
tv69 = -164						; size = 4
tv64 = -160						; size = 4
$T211764 = -156						; size = 4
$T211763 = -152						; size = 4
$T211762 = -148						; size = 8
$T211761 = -140						; size = 8
$T211758 = -132						; size = 4
_dwExStyle$151672 = -128				; size = 4
_pAxWindow$151663 = -124				; size = 4
_pszMsg$151648 = -116					; size = 4
_spUnk$151643 = -104					; size = 4
__lpa$151642 = -96					; size = 4
__lpw$151641 = -92					; size = 4
__acp$151640 = -88					; size = 4
__convert$151639 = -84					; size = 4
_hRet$151635 = -80					; size = 4
_bstrLicKey$151634 = -72				; size = 4
_pSource$151631 = -64					; size = 4
_pBytes$151629 = -60					; size = 4
_spStream$151627 = -52					; size = 4
_h$151626 = -44						; size = 4
_nCreateSize$151623 = -40				; size = 4
_pAxWindow$151622 = -32					; size = 4
_lpstrName$151618 = -24					; size = 4
_nLen$151617 = -20					; size = 4
_lpCreate$151615 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?AtlAxWindowProc2@ATL@@YGJPAUHWND__@@IIJ@Z PROC NEAR	; ATL::AtlAxWindowProc2

; 2217 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AtlAxWindowProc2@ATL@@YGJPAUHWND__@@IIJ@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 164				; 000000a4H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-176]
	mov	ecx, 41					; 00000029H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 2218 : 	switch(uMsg)

	mov	eax, DWORD PTR _uMsg$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 1
	je	SHORT $L151614
	cmp	DWORD PTR tv64[ebp], 130		; 00000082H
	je	$L151662
	cmp	DWORD PTR tv64[ebp], 528		; 00000210H
	je	$L151666
	jmp	$L151611
$L151614:

; 2219 : 	{
; 2220 : 	case WM_CREATE:
; 2221 : 		{
; 2222 : 		// create control from a PROGID in the title
; 2223 : 			// This is to make sure drag drop works
; 2224 : 			::OleInitialize(NULL);

	mov	esi, esp
	push	0
	call	DWORD PTR __imp__OleInitialize@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2225 : 
; 2226 : 			CREATESTRUCT* lpCreate = (CREATESTRUCT*)lParam;

	mov	ecx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _lpCreate$151615[ebp], ecx

; 2227 : 			int nLen = ::GetWindowTextLength(hWnd);

	mov	esi, esp
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetWindowTextLengthA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nLen$151617[ebp], eax

; 2228 : 			LPTSTR lpstrName = (LPTSTR)_alloca((nLen + 1) * sizeof(TCHAR));

	mov	eax, DWORD PTR _nLen$151617[ebp]
	add	eax, 4
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv69[ebp], esp
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR _lpstrName$151618[ebp], eax

; 2229 : 			::GetWindowText(hWnd, lpstrName, nLen + 1);

	mov	ecx, DWORD PTR _nLen$151617[ebp]
	add	ecx, 1
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _lpstrName$151618[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindowTextA@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2230 : 			::SetWindowText(hWnd, _T(""));

	mov	esi, esp
	push	OFFSET FLAT:$SG151621
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetWindowTextA@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2231 : 			IAxWinHostWindowLic* pAxWindow = NULL;

	mov	DWORD PTR _pAxWindow$151622[ebp], 0

; 2232 : 			int nCreateSize = 0;

	mov	DWORD PTR _nCreateSize$151623[ebp], 0

; 2233 : 			if (lpCreate && lpCreate->lpCreateParams)

	cmp	DWORD PTR _lpCreate$151615[ebp], 0
	je	SHORT $L151624
	mov	edx, DWORD PTR _lpCreate$151615[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $L151624

; 2234 : 				nCreateSize = *((WORD*)lpCreate->lpCreateParams);

	mov	eax, DWORD PTR _lpCreate$151615[ebp]
	mov	ecx, DWORD PTR [eax]
	movzx	edx, WORD PTR [ecx]
	mov	DWORD PTR _nCreateSize$151623[ebp], edx
$L151624:

; 2235 : 
; 2236 : 			// Format of data in lpCreateParams
; 2237 : 			//	int nCreateSize;	// size of Create data in bytes
; 2238 : 			//	WORD nMsg;			//constant used to indicate type of DLGINIT data. See _DialogSplitHelper for values.
; 2239 : 			//	DWORD dwLen;		// Length of data strored for control in DLGINIT format in bytes.
; 2240 : 			//	DWORD cchLicKey;	// Length of licence key in OLECHAR's
; 2241 : 			//  OLECHAR *szLicKey;	// This will be present only if cchLicKey is greater than 0. This is of variable length and will contain cchLicKey OLECHAR's that represent the licence key.
; 2242 : 			//	The following two fields will be present only if nMsg is WM_OCC_LOADFROMSTREAM_EX or WM_OCC_LOADFROMSTORAGE_EX. If present this information will be ignored since databinding is not supported.
; 2243 : 			//		ULONG cbDataBinding;	// Lenght of databinding information in bytes.
; 2244 : 			//		BYTE *pbDataBindingInfo	// cbDataBinding bytes that contain databinding information
; 2245 : 			//	BYTE *pbControlData;	// Actual control data persisted by the control.
; 2246 : 
; 2247 : 
; 2248 : 			HGLOBAL h = GlobalAlloc(GHND, nCreateSize);

	mov	esi, esp
	mov	eax, DWORD PTR _nCreateSize$151623[ebp]
	push	eax
	push	66					; 00000042H
	call	DWORD PTR __imp__GlobalAlloc@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _h$151626[ebp], eax

; 2249 : 			CComPtr<IStream> spStream;

	lea	ecx, DWORD PTR _spStream$151627[ebp]
	call	??0?$CComPtr@UIStream@@@ATL@@QAE@XZ	; ATL::CComPtr<IStream>::CComPtr<IStream>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2250 : 			if (h && nCreateSize)

	cmp	DWORD PTR _h$151626[ebp], 0
	je	SHORT $L151628
	cmp	DWORD PTR _nCreateSize$151623[ebp], 0
	je	SHORT $L151628

; 2251 : 			{
; 2252 : 				BYTE* pBytes = (BYTE*) GlobalLock(h);

	mov	esi, esp
	mov	ecx, DWORD PTR _h$151626[ebp]
	push	ecx
	call	DWORD PTR __imp__GlobalLock@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pBytes$151629[ebp], eax

; 2253 : 				BYTE* pSource = ((BYTE*)(lpCreate->lpCreateParams)) + sizeof(WORD); 

	mov	edx, DWORD PTR _lpCreate$151615[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 2
	mov	DWORD PTR _pSource$151631[ebp], eax

; 2254 : 				//Align to DWORD
; 2255 : 				//pSource += (((~((DWORD)pSource)) + 1) & 3);
; 2256 : 				memcpy(pBytes, pSource, nCreateSize);

	mov	ecx, DWORD PTR _nCreateSize$151623[ebp]
	push	ecx
	mov	edx, DWORD PTR _pSource$151631[ebp]
	push	edx
	mov	eax, DWORD PTR _pBytes$151629[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 2257 : 				GlobalUnlock(h);

	mov	esi, esp
	mov	ecx, DWORD PTR _h$151626[ebp]
	push	ecx
	call	DWORD PTR __imp__GlobalUnlock@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2258 : 				CreateStreamOnHGlobal(h, TRUE, &spStream);

	lea	ecx, DWORD PTR _spStream$151627[ebp]
	call	??I?$CComPtrBase@UIStream@@@ATL@@QAEPAPAUIStream@@XZ ; ATL::CComPtrBase<IStream>::operator&
	mov	esi, esp
	push	eax
	push	1
	mov	edx, DWORD PTR _h$151626[ebp]
	push	edx
	call	DWORD PTR __imp__CreateStreamOnHGlobal@12
	cmp	esi, esp
	call	__RTC_CheckEsp
$L151628:

; 2259 : 			}
; 2260 : 
; 2261 : 			CComBSTR bstrLicKey;

	lea	ecx, DWORD PTR _bstrLicKey$151634[ebp]
	call	??0CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::CComBSTR
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 2262 : 			HRESULT hRet = _DialogSplitHelper::ParseInitData(spStream, &bstrLicKey.m_str);

	lea	eax, DWORD PTR _bstrLicKey$151634[ebp]
	push	eax
	lea	ecx, DWORD PTR _spStream$151627[ebp]
	call	??B?$CComPtrBase@UIStream@@@ATL@@QBEPAUIStream@@XZ ; ATL::CComPtrBase<IStream>::operator IStream *
	push	eax
	call	?ParseInitData@_DialogSplitHelper@ATL@@SAJPAUIStream@@PAPAG@Z ; ATL::_DialogSplitHelper::ParseInitData
	add	esp, 8
	mov	DWORD PTR _hRet$151635[ebp], eax

; 2263 : 			if (FAILED(hRet))

	cmp	DWORD PTR _hRet$151635[ebp], 0
	jge	SHORT $L151637

; 2264 : 				return -1;

	mov	DWORD PTR $T211758[ebp], -1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _bstrLicKey$151634[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spStream$151627[ebp]
	call	??1?$CComPtr@UIStream@@@ATL@@QAE@XZ
	mov	eax, DWORD PTR $T211758[ebp]
	jmp	$L151609
$L151637:

; 2265 : 
; 2266 : 			USES_CONVERSION;

	mov	DWORD PTR __convert$151639[ebp], 0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	mov	DWORD PTR __acp$151640[ebp], eax
	mov	DWORD PTR __lpw$151641[ebp], 0
	mov	DWORD PTR __lpa$151642[ebp], 0

; 2267 : 			CComPtr<IUnknown> spUnk;

	lea	ecx, DWORD PTR _spUnk$151643[ebp]
	call	??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ	; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 2268 : 			hRet = AtlAxCreateControlLic(T2COLE(lpstrName), hWnd, spStream, &spUnk, bstrLicKey);

	mov	ecx, DWORD PTR _lpstrName$151618[ebp]
	mov	DWORD PTR __lpa$151642[ebp], ecx
	cmp	DWORD PTR __lpa$151642[ebp], 0
	jne	SHORT $L211759
	mov	DWORD PTR tv171[ebp], 0
	jmp	SHORT $L211760
$L211759:
	mov	esi, esp
	mov	edx, DWORD PTR __lpa$151642[ebp]
	push	edx
	call	DWORD PTR __imp__lstrlenA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	mov	DWORD PTR __convert$151639[ebp], eax
	mov	eax, DWORD PTR __convert$151639[ebp]
	shl	eax, 1
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv167[ebp], esp
	mov	eax, DWORD PTR __acp$151640[ebp]
	push	eax
	mov	ecx, DWORD PTR __convert$151639[ebp]
	push	ecx
	mov	edx, DWORD PTR __lpa$151642[ebp]
	push	edx
	mov	eax, DWORD PTR tv167[ebp]
	push	eax
	call	?AtlA2WHelper@@YGPAGPAGPBDHI@Z		; AtlA2WHelper
	mov	DWORD PTR tv171[ebp], eax
$L211760:
	lea	ecx, DWORD PTR _bstrLicKey$151634[ebp]
	call	??BCComBSTR@ATL@@QBEPAGXZ		; ATL::CComBSTR::operator unsigned short *
	push	eax
	lea	ecx, DWORD PTR _spUnk$151643[ebp]
	call	??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator&
	push	eax
	lea	ecx, DWORD PTR _spStream$151627[ebp]
	call	??B?$CComPtrBase@UIStream@@@ATL@@QBEPAUIStream@@XZ ; ATL::CComPtrBase<IStream>::operator IStream *
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv171[ebp]
	push	edx
	call	_AtlAxCreateControlLic@20
	mov	DWORD PTR _hRet$151635[ebp], eax

; 2269 : 			if(FAILED(hRet))

	cmp	DWORD PTR _hRet$151635[ebp], 0
	jge	$L151647

; 2270 : 			{
; 2271 : #ifdef _DEBUG
; 2272 : 				LPTSTR pszMsg = NULL;

	mov	DWORD PTR _pszMsg$151648[ebp], 0

; 2273 : 				::FormatMessage(FORMAT_MESSAGE_ALLOCATE_BUFFER|FORMAT_MESSAGE_FROM_SYSTEM, NULL, hRet, 0, (LPTSTR)&pszMsg, 0, NULL);

	mov	esi, esp
	push	0
	push	0
	lea	eax, DWORD PTR _pszMsg$151648[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _hRet$151635[ebp]
	push	ecx
	push	0
	push	4352					; 00001100H
	call	DWORD PTR __imp__FormatMessageA@28
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2274 : 				ATLTRACE(atlTraceControls, 0, _T("Control creation failed for '%s'\n"), lpstrName);

	mov	edx, DWORD PTR _lpstrName$151618[ebp]
	push	edx
	push	OFFSET FLAT:$SG151652
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceControls@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceControls
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	2274					; 000008e2H
	push	OFFSET FLAT:$SG151651
	lea	ecx, DWORD PTR $T211761[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H

; 2275 : 				ATLTRACE(atlTraceControls, 0, _T("Error code: 0x%x - %s"), hRet, pszMsg);

	mov	eax, DWORD PTR _pszMsg$151648[ebp]
	push	eax
	mov	ecx, DWORD PTR _hRet$151635[ebp]
	push	ecx
	push	OFFSET FLAT:$SG151655
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceControls@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceControls
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	2275					; 000008e3H
	push	OFFSET FLAT:$SG151654
	lea	ecx, DWORD PTR $T211762[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 24					; 00000018H

; 2276 : 				::LocalFree(pszMsg);

	mov	esi, esp
	mov	edx, DWORD PTR _pszMsg$151648[ebp]
	push	edx
	call	DWORD PTR __imp__LocalFree@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2277 : #endif
; 2278 : 				return -1;	// abort window creation

	mov	DWORD PTR $T211763[ebp], -1
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _spUnk$151643[ebp]
	call	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _bstrLicKey$151634[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spStream$151627[ebp]
	call	??1?$CComPtr@UIStream@@@ATL@@QAE@XZ
	mov	eax, DWORD PTR $T211763[ebp]
	jmp	$L151609
$L151647:

; 2279 : 			}
; 2280 : 			hRet = spUnk->QueryInterface(__uuidof(IAxWinHostWindowLic), (void**)&pAxWindow);

	lea	ecx, DWORD PTR _spUnk$151643[ebp]
	call	??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ ; ATL::CComPtrBase<IUnknown>::operator->
	mov	DWORD PTR tv208[ebp], eax
	mov	esi, esp
	lea	eax, DWORD PTR _pAxWindow$151622[ebp]
	push	eax
	push	OFFSET FLAT:__GUID_3935bda8_4ed9_495c_8650_e01fc1e38a4b
	mov	ecx, DWORD PTR tv208[ebp]
	push	ecx
	mov	edx, DWORD PTR tv208[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRet$151635[ebp], eax

; 2281 : 			if(FAILED(hRet))

	cmp	DWORD PTR _hRet$151635[ebp], 0
	jge	SHORT $L151659

; 2282 : 				return -1;	// abort window creation

	mov	DWORD PTR $T211764[ebp], -1
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _spUnk$151643[ebp]
	call	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _bstrLicKey$151634[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spStream$151627[ebp]
	call	??1?$CComPtr@UIStream@@@ATL@@QAE@XZ
	mov	eax, DWORD PTR $T211764[ebp]
	jmp	$L151609
$L151659:

; 2283 : 			::SetWindowLongPtr(hWnd, GWLP_USERDATA, (DWORD_PTR)pAxWindow);

	mov	ecx, DWORD PTR _pAxWindow$151622[ebp]
	push	ecx
	push	-21					; ffffffebH
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?SetWindowLongPtrA@@YAJPAUHWND__@@HJ@Z	; SetWindowLongPtrA
	add	esp, 12					; 0000000cH

; 2284 : 		// continue with DefWindowProc
; 2285 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _spUnk$151643[ebp]
	call	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _bstrLicKey$151634[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spStream$151627[ebp]
	call	??1?$CComPtr@UIStream@@@ATL@@QAE@XZ

; 2286 : 		break;

	jmp	$L151611
$L151662:

; 2287 : 	case WM_NCDESTROY:
; 2288 : 		{
; 2289 : 			IAxWinHostWindowLic* pAxWindow = (IAxWinHostWindowLic*)::GetWindowLongPtr(hWnd, GWLP_USERDATA);

	push	-21					; ffffffebH
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	?GetWindowLongPtrA@@YAJPAUHWND__@@H@Z	; GetWindowLongPtrA
	add	esp, 8
	mov	DWORD PTR _pAxWindow$151663[ebp], eax

; 2290 : 			if(pAxWindow != NULL)

	cmp	DWORD PTR _pAxWindow$151663[ebp], 0
	je	SHORT $L151665

; 2291 : 				pAxWindow->Release();

	mov	ecx, DWORD PTR _pAxWindow$151663[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pAxWindow$151663[ebp]
	push	eax
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L151665:

; 2292 : 			OleUninitialize();

	mov	esi, esp
	call	DWORD PTR __imp__OleUninitialize@0
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2293 : 		}
; 2294 : 		break;

	jmp	$L151611
$L151666:

; 2295 : 
; 2296 : 	case WM_PARENTNOTIFY:
; 2297 : 		{
; 2298 : 			if((UINT)wParam == WM_CREATE)

	cmp	DWORD PTR _wParam$[ebp], 1
	jne	$L151611

; 2299 : 			{
; 2300 : 				ATLASSERT(lParam);

	cmp	DWORD PTR _lParam$[ebp], 0
	jne	SHORT $L211765
	push	OFFSET FLAT:$SG151670
	push	0
	push	2300					; 000008fcH
	push	OFFSET FLAT:$SG151671
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211765
	int	3
$L211765:

; 2301 : 				// Set the control parent style for the AxWindow
; 2302 : 				DWORD dwExStyle = ::GetWindowLong((HWND)lParam, GWL_EXSTYLE);

	mov	esi, esp
	push	-20					; ffffffecH
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	call	DWORD PTR __imp__GetWindowLongA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dwExStyle$151672[ebp], eax

; 2303 : 				if(dwExStyle & WS_EX_CONTROLPARENT)

	mov	eax, DWORD PTR _dwExStyle$151672[ebp]
	and	eax, 65536				; 00010000H
	je	SHORT $L151611

; 2304 : 				{
; 2305 : 					dwExStyle = ::GetWindowLong(hWnd, GWL_EXSTYLE);

	mov	esi, esp
	push	-20					; ffffffecH
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetWindowLongA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dwExStyle$151672[ebp], eax

; 2306 : 					dwExStyle |= WS_EX_CONTROLPARENT;

	mov	edx, DWORD PTR _dwExStyle$151672[ebp]
	or	edx, 65536				; 00010000H
	mov	DWORD PTR _dwExStyle$151672[ebp], edx

; 2307 : 					::SetWindowLong(hWnd, GWL_EXSTYLE, dwExStyle);

	mov	esi, esp
	mov	eax, DWORD PTR _dwExStyle$151672[ebp]
	push	eax
	push	-20					; ffffffecH
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetWindowLongA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
$L151611:

; 2308 : 				}
; 2309 : 			}
; 2310 : 		}
; 2311 : 		break;
; 2312 : 		
; 2313 : 	default:
; 2314 : 		break;
; 2315 : 	}
; 2316 : 
; 2317 : 	return ::DefWindowProc(hWnd, uMsg, wParam, lParam);

	mov	esi, esp
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _uMsg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__DefWindowProcA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$L151609:

; 2318 : }

	lea	esp, DWORD PTR [ebp-184]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L211778
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$L211778:
	DD	5
	DD	$L211777
$L211777:
	DD	-32					; ffffffe0H
	DD	4
	DD	$L211771
	DD	-52					; ffffffccH
	DD	4
	DD	$L211772
	DD	-72					; ffffffb8H
	DD	4
	DD	$L211773
	DD	-104					; ffffff98H
	DD	4
	DD	$L211774
	DD	-116					; ffffff8cH
	DD	4
	DD	$L211775
$L211775:
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	77					; 0000004dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
$L211774:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	85					; 00000055H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	0
$L211773:
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	75					; 0000004bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$L211772:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$L211771:
	DB	112					; 00000070H
	DB	65					; 00000041H
	DB	120					; 00000078H
	DB	87					; 00000057H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
$L211766:
	lea	ecx, DWORD PTR _spStream$151627[ebp]
	jmp	??1?$CComPtr@UIStream@@@ATL@@QAE@XZ
$L211767:
	lea	ecx, DWORD PTR _bstrLicKey$151634[ebp]
	jmp	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
$L211768:
	lea	ecx, DWORD PTR _spUnk$151643[ebp]
	jmp	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
__ehhandler$?AtlAxWindowProc2@ATL@@YGJPAUHWND__@@IIJ@Z:
	mov	eax, OFFSET FLAT:$T211770
	jmp	___CxxFrameHandler
text$x	ENDS
?AtlAxWindowProc2@ATL@@YGJPAUHWND__@@IIJ@Z ENDP		; ATL::AtlAxWindowProc2
; Function compile flags: /Odt /RTCsu
;	COMDAT _AtlAxCreateControlLic@20
_TEXT	SEGMENT
_lpszName$ = 8						; size = 4
_hWnd$ = 12						; size = 4
_pStream$ = 16						; size = 4
_ppUnkContainer$ = 20					; size = 4
_bstrLic$ = 24						; size = 4
_AtlAxCreateControlLic@20 PROC NEAR			; COMDAT

; 2455 : {

	push	ebp
	mov	ebp, esp

; 2456 : 	return AtlAxCreateControlLicEx(lpszName, hWnd, pStream, ppUnkContainer, NULL, IID_NULL, NULL, bstrLic);

	mov	eax, DWORD PTR _bstrLic$[ebp]
	push	eax
	push	0
	push	OFFSET FLAT:_GUID_NULL
	push	0
	mov	ecx, DWORD PTR _ppUnkContainer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pStream$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpszName$[ebp]
	push	ecx
	call	_AtlAxCreateControlLicEx@32

; 2457 : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	20					; 00000014H
_AtlAxCreateControlLic@20 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BD@CFOEICJD@WM_ATLGETHOST?5?$CB?$DN?50?$AA@ ; `string'
;	COMDAT ??_C@_0BD@CFOEICJD@WM_ATLGETHOST?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BD@CFOEICJD@WM_ATLGETHOST?5?$CB?$DN?50?$AA@ DB 'WM_ATLGETHOST != 0'
	DB	00H						; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT _AtlAxGetHost@8
_TEXT	SEGMENT
_h$ = 8							; size = 4
_pp$ = 12						; size = 4
_AtlAxGetHost@8 PROC NEAR				; COMDAT

; 2612 : {

	push	ebp
	mov	ebp, esp
	push	esi

; 2613 : 	ATLASSERT(WM_ATLGETHOST != 0);

	cmp	DWORD PTR ?WM_ATLGETHOST@ATL@@3IA, 0	; ATL::WM_ATLGETHOST
	jne	SHORT $L211783
	push	OFFSET FLAT:??_C@_0BD@CFOEICJD@WM_ATLGETHOST?5?$CB?$DN?50?$AA@
	push	0
	push	2613					; 00000a35H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211783
	int	3
$L211783:

; 2614 : 	if (pp == NULL)

	cmp	DWORD PTR _pp$[ebp], 0
	jne	SHORT $L152102

; 2615 : 		return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L152099
$L152102:

; 2616 : 	*pp = (IUnknown*)SendMessage(h, WM_ATLGETHOST, 0, 0);

	mov	esi, esp
	push	0
	push	0
	mov	ecx, DWORD PTR ?WM_ATLGETHOST@ATL@@3IA	; ATL::WM_ATLGETHOST
	push	ecx
	mov	edx, DWORD PTR _h$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _pp$[ebp]
	mov	DWORD PTR [ecx], eax

; 2617 : 	return (*pp) ? S_OK : E_FAIL;

	mov	edx, DWORD PTR _pp$[ebp]
	xor	eax, eax
	cmp	DWORD PTR [edx], 0
	setne	al
	dec	eax
	and	eax, -2147467259			; 80004005H
$L152099:

; 2618 : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_AtlAxGetHost@8 ENDP
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
_TEXT	ENDS
;	COMDAT ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ PROC NEAR ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 373  : 	CAtlSafeAllocBufferManager() : m_pHead(NULL) {};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
_TEXT	ENDS
PUBLIC	?Allocate@CCRTAllocator@ATL@@SAPAXI@Z		; ATL::CCRTAllocator::Allocate
PUBLIC	?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode::GetData
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z
_TEXT	SEGMENT
_p$ = -8						; size = 4
_this$ = -4						; size = 4
_nRequestedSize$ = 8					; size = 4
?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z PROC NEAR ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate, COMDAT
; _this$ = ecx

; 375  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 376  : 		CAtlSafeAllocBufferNode *p = (CAtlSafeAllocBufferNode*)Allocator::Allocate(nRequestedSize + sizeof(CAtlSafeAllocBufferNode));

	mov	eax, DWORD PTR _nRequestedSize$[ebp]
	add	eax, 8
	push	eax
	call	?Allocate@CCRTAllocator@ATL@@SAPAXI@Z	; ATL::CCRTAllocator::Allocate
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 377  : 		if (p == NULL)

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $L162795

; 378  : 			return NULL;

	xor	eax, eax
	jmp	SHORT $L162782
$L162795:

; 379  : 		
; 380  : 		// Add buffer to the list
; 381  : 		p->m_pNext = m_pHead;

	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 382  : 		m_pHead = p;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx], edx

; 383  : 		
; 384  : 		return p->GetData();

	mov	ecx, DWORD PTR _p$[ebp]
	call	?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode::GetData
$L162782:

; 385  : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z
_TEXT	SEGMENT
_nBytes$ = 8						; size = 4
?Allocate@CCRTAllocator@ATL@@SAPAXI@Z PROC NEAR		; ATL::CCRTAllocator::Allocate, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		return malloc(nBytes);

	mov	eax, DWORD PTR _nBytes$[ebp]
	push	eax
	call	_malloc
	add	esp, 4

; 32   : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?Allocate@CCRTAllocator@ATL@@SAPAXI@Z ENDP		; ATL::CCRTAllocator::Allocate
_TEXT	ENDS
PUBLIC	?Free@CCRTAllocator@ATL@@SAXPAX@Z		; ATL::CCRTAllocator::Free
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT
_p$162801 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ PROC NEAR ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 387  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$L162799:

; 388  : 		// Walk the list and free the buffers
; 389  : 		while (m_pHead != NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L162797

; 390  : 		{
; 391  : 			CAtlSafeAllocBufferNode* p = m_pHead;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _p$162801[ebp], edx

; 392  : 			m_pHead = m_pHead->m_pNext;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax

; 393  : 			Allocator::Free(p);

	mov	ecx, DWORD PTR _p$162801[ebp]
	push	ecx
	call	?Free@CCRTAllocator@ATL@@SAXPAX@Z	; ATL::CCRTAllocator::Free
	add	esp, 4

; 394  : 		}

	jmp	SHORT $L162799
$L162797:

; 395  : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Free@CCRTAllocator@ATL@@SAXPAX@Z PROC NEAR		; ATL::CCRTAllocator::Free, COMDAT

; 35   : 	{

	push	ebp
	mov	ebp, esp

; 36   : 		free(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_free
	add	esp, 4

; 37   : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?Free@CCRTAllocator@ATL@@SAXPAX@Z ENDP			; ATL::CCRTAllocator::Free
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ PROC NEAR		; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIUnknown@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtrBase<IUnknown>::~CComPtrBase<IUnknown>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L162842

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L162842:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIUnknown@@@ATL@@QAE@XZ ENDP		; ATL::CComPtrBase<IUnknown>::~CComPtrBase<IUnknown>
_TEXT	ENDS
PUBLIC	??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@		; `string'
;	COMDAT ??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
CONST	SEGMENT
??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@ DB 'p==0', 00H		; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ PROC NEAR ; ATL::CComPtrBase<IUnknown>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L211800
	push	OFFSET FLAT:??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
	push	0
	push	143					; 0000008fH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211800
	int	3
$L211800:

; 144  : 		return &p;

	mov	eax, DWORD PTR _this$[ebp]

; 145  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ ENDP ; ATL::CComPtrBase<IUnknown>::operator&
_TEXT	ENDS
PUBLIC	??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@		; `string'
;	COMDAT ??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
CONST	SEGMENT
??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@ DB 'p!=0', 00H		; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ PROC NEAR ; ATL::CComPtrBase<IUnknown>::operator->, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 148  : 		ATLASSERT(p!=NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L211803
	push	OFFSET FLAT:??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
	push	0
	push	148					; 00000094H
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211803
	int	3
$L211803:

; 149  : 		return (_NoAddRefReleaseOnCComPtr<T>*)p;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 150  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ ENDP ; ATL::CComPtrBase<IUnknown>::operator->
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Detach@?$CComPtrBase@UIUnknown@@@ATL@@QAEPAUIUnknown@@XZ
_TEXT	SEGMENT
_pt$ = -8						; size = 4
_this$ = -4						; size = 4
?Detach@?$CComPtrBase@UIUnknown@@@ATL@@QAEPAUIUnknown@@XZ PROC NEAR ; ATL::CComPtrBase<IUnknown>::Detach, COMDAT
; _this$ = ecx

; 198  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 199  : 		T* pt = p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pt$[ebp], ecx

; 200  : 		p = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 201  : 		return pt;

	mov	eax, DWORD PTR _pt$[ebp]

; 202  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?Detach@?$CComPtrBase@UIUnknown@@@ATL@@QAEPAUIUnknown@@XZ ENDP ; ATL::CComPtrBase<IUnknown>::Detach
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
_TEXT	ENDS
;	COMDAT ??0?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::CTempBuffer<char,128,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 216  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 217  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::CTempBuffer<char,128,ATL::CCRTAllocator>
_TEXT	ENDS
PUBLIC	?FreeHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::FreeHeap
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 225  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 226  : 		if( m_p != reinterpret_cast< T* >( m_abFixedBuffer ) )

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $L162865

; 227  : 		{
; 228  : 			FreeHeap();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::FreeHeap
$L162865:

; 229  : 		}
; 230  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::~CTempBuffer<char,128,ATL::CCRTAllocator>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ PROC NEAR ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::operator char *, COMDAT
; _this$ = ecx

; 233  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 234  : 		return( m_p );

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 235  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ ENDP ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::operator char *
_TEXT	ENDS
PUBLIC	?AllocateBytes@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::AllocateBytes
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Allocate@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nElements$ = 8						; size = 4
?Allocate@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z PROC NEAR ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::Allocate, COMDAT
; _this$ = ecx

; 243  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 244  : 		return( AllocateBytes( nElements*sizeof( T ) ) );

	mov	eax, DWORD PTR _nElements$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AllocateBytes@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::AllocateBytes

; 245  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Allocate@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z ENDP ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::Allocate
_TEXT	ENDS
PUBLIC	??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UAE@XZ	; ATL::CWindowImplRoot<ATL::CWindow>::~CWindowImplRoot<ATL::CWindow>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
;	COMDAT ??1?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAE@XZ PROC NEAR ; ATL::CDialogImplBaseT<ATL::CWindow>::~CDialogImplBaseT<ATL::CWindow>, COMDAT
; _this$ = ecx

; 3197 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 3198 : 	}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UAE@XZ ; ATL::CWindowImplRoot<ATL::CWindow>::~CWindowImplRoot<ATL::CWindow>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAE@XZ ENDP	; ATL::CDialogImplBaseT<ATL::CWindow>::~CDialogImplBaseT<ATL::CWindow>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?OnFinalMessage@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAEXPAUHWND__@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?OnFinalMessage@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAEXPAUHWND__@@@Z PROC NEAR ; ATL::CDialogImplBaseT<ATL::CWindow>::OnFinalMessage, COMDAT
; _this$ = ecx

; 3212 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 3213 : 		// override to do something, if needed
; 3214 : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?OnFinalMessage@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAEXPAUHWND__@@@Z ENDP ; ATL::CDialogImplBaseT<ATL::CWindow>::OnFinalMessage
_TEXT	ENDS
PUBLIC	??1CWndProcThunk@ATL@@QAE@XZ			; ATL::CWndProcThunk::~CWndProcThunk
PUBLIC	??_C@_0DE@JJEOCICO@ERROR?5?9?5Object?5deleted?5before?5wi@ ; `string'
;	COMDAT xdata$x
xdata$x	SEGMENT
$T211827 DD	0ffffffffH
	DD	FLAT:$L211823
$T211825 DD	019930520H
	DD	01H
	DD	FLAT:$T211827
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DE@JJEOCICO@ERROR?5?9?5Object?5deleted?5before?5wi@
CONST	SEGMENT
??_C@_0DE@JJEOCICO@ERROR?5?9?5Object?5deleted?5before?5wi@ DB 'ERROR - Ob'
	DB	'ject deleted before window was destroyed', 0aH, 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT
$T211821 = -24						; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UAE@XZ PROC NEAR ; ATL::CWindowImplRoot<ATL::CWindow>::~CWindowImplRoot<ATL::CWindow>, COMDAT
; _this$ = ecx

; 2750 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2751 : #ifdef _DEBUG
; 2752 : 		if(m_hWnd != NULL)	// should be cleared in WindowProc

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $L163213

; 2753 : 		{
; 2754 : 			ATLTRACE(atlTraceWindowing, 0, _T("ERROR - Object deleted before window was destroyed\n"));

	push	OFFSET FLAT:??_C@_0DE@JJEOCICO@ERROR?5?9?5Object?5deleted?5before?5wi@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceWindowing@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceWindowing
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	2754					; 00000ac2H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T211821[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 16					; 00000010H

; 2755 : 			ATLASSERT(FALSE);

	xor	ecx, ecx
	jne	SHORT $L163213
	push	OFFSET FLAT:??_C@_01GBGANLPD@0?$AA@
	push	0
	push	2755					; 00000ac3H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L163213
	int	3
$L163213:

; 2756 : 		}
; 2757 : #endif //_DEBUG
; 2758 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1CWndProcThunk@ATL@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L211823:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CWndProcThunk@ATL@@QAE@XZ
__ehhandler$??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UAE@XZ:
	mov	eax, OFFSET FLAT:$T211825
	jmp	___CxxFrameHandler
text$x	ENDS
??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UAE@XZ ENDP	; ATL::CWindowImplRoot<ATL::CWindow>::~CWindowImplRoot<ATL::CWindow>
PUBLIC	??_C@_0L@EFNCNKLF@AtlAxWin71?$AA@		; `string'
;	COMDAT ??_C@_0L@EFNCNKLF@AtlAxWin71?$AA@
CONST	SEGMENT
??_C@_0L@EFNCNKLF@AtlAxWin71?$AA@ DB 'AtlAxWin71', 00H	; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?GetWndClassName@?$CAxWindowT@VCWindow@ATL@@@ATL@@SAPBDXZ
_TEXT	SEGMENT
?GetWndClassName@?$CAxWindowT@VCWindow@ATL@@@ATL@@SAPBDXZ PROC NEAR ; ATL::CAxWindowT<ATL::CWindow>::GetWndClassName, COMDAT

; 1953 : 	{

	push	ebp
	mov	ebp, esp

; 1954 : 		return _T(ATLAXWIN_CLASS);

	mov	eax, OFFSET FLAT:??_C@_0L@EFNCNKLF@AtlAxWin71?$AA@

; 1955 : 	}

	pop	ebp
	ret	0
?GetWndClassName@?$CAxWindowT@VCWindow@ATL@@@ATL@@SAPBDXZ ENDP ; ATL::CAxWindowT<ATL::CWindow>::GetWndClassName
_TEXT	ENDS
PUBLIC	??_C@_0O@HHPDHHJB@AtlAxWinLic71?$AA@		; `string'
;	COMDAT ??_C@_0O@HHPDHHJB@AtlAxWinLic71?$AA@
CONST	SEGMENT
??_C@_0O@HHPDHHJB@AtlAxWinLic71?$AA@ DB 'AtlAxWinLic71', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?GetWndClassName@?$CAxWindow2T@VCWindow@ATL@@@ATL@@SAPBDXZ
_TEXT	SEGMENT
?GetWndClassName@?$CAxWindow2T@VCWindow@ATL@@@ATL@@SAPBDXZ PROC NEAR ; ATL::CAxWindow2T<ATL::CWindow>::GetWndClassName, COMDAT

; 2137 : 	{

	push	ebp
	mov	ebp, esp

; 2138 : 		return _T(ATLAXWINLIC_CLASS);

	mov	eax, OFFSET FLAT:??_C@_0O@HHPDHHJB@AtlAxWinLic71?$AA@

; 2139 : 	}

	pop	ebp
	ret	0
?GetWndClassName@?$CAxWindow2T@VCWindow@ATL@@@ATL@@SAPBDXZ ENDP ; ATL::CAxWindow2T<ATL::CWindow>::GetWndClassName
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIStream@@@ATL@@IAE@XZ		; ATL::CComPtrBase<IStream>::CComPtrBase<IStream>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIStream@@@ATL@@QAE@XZ PROC NEAR		; ATL::CComPtr<IStream>::CComPtr<IStream>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIStream@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IStream>::CComPtrBase<IStream>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIStream@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IStream>::CComPtr<IStream>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIStream@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtrBase<IStream>::~CComPtrBase<IStream>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L163502

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163502:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIStream@@@ATL@@QAE@XZ ENDP		; ATL::CComPtrBase<IStream>::~CComPtrBase<IStream>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIStream@@@ATL@@QBEPAUIStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIStream@@@ATL@@QBEPAUIStream@@XZ PROC NEAR ; ATL::CComPtrBase<IStream>::operator IStream *, COMDAT
; _this$ = ecx

; 131  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 132  : 		return p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 133  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UIStream@@@ATL@@QBEPAUIStream@@XZ ENDP	; ATL::CComPtrBase<IStream>::operator IStream *
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIStream@@@ATL@@QAEPAPAUIStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIStream@@@ATL@@QAEPAPAUIStream@@XZ PROC NEAR ; ATL::CComPtrBase<IStream>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L211842
	push	OFFSET FLAT:??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
	push	0
	push	143					; 0000008fH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211842
	int	3
$L211842:

; 144  : 		return &p;

	mov	eax, DWORD PTR _this$[ebp]

; 145  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UIStream@@@ATL@@QAEPAPAUIStream@@XZ ENDP ; ATL::CComPtrBase<IStream>::operator&
_TEXT	ENDS
PUBLIC	??_C@_08NEPKAPOI@ppv?5?$CB?$DN?50?$AA@		; `string'
PUBLIC	??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@ ; `string'
PUBLIC	??0?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@QAE@PAX@Z ; ATL::CComPolyObject<ATL::CAxHostWindow>::CComPolyObject<ATL::CAxHostWindow>
PUBLIC	?FinalConstruct@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@QAEJXZ ; ATL::CComPolyObject<ATL::CAxHostWindow>::FinalConstruct
PUBLIC	?_AtlFinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ; ATL::CComObjectRootBase::_AtlFinalConstruct
PUBLIC	?SetVoid@CComObjectRootBase@ATL@@QAEXPAX@Z	; ATL::CComObjectRootBase::SetVoid
PUBLIC	?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::InternalFinalConstructAddRef
PUBLIC	?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::InternalFinalConstructRelease
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcom.h
xdata$x	SEGMENT
$T211860 DD	0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:$L211856
	DD	0ffffffffH
	DD	00H
$T211862 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L211855
$T211861 DD	00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:$T211862
$T211858 DD	019930520H
	DD	03H
	DD	FLAT:$T211860
	DD	01H
	DD	FLAT:$T211861
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_08NEPKAPOI@ppv?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_08NEPKAPOI@ppv?5?$CB?$DN?50?$AA@ DB 'ppv != 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT
??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@ DB 'C:\Program '
	DB	'Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\include\at'
	DB	'lcom.h', 00H				; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?CreateInstance@?$CComCreator@V?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv142 = -56						; size = 4
tv82 = -52						; size = 4
tv147 = -48						; size = 4
tv145 = -44						; size = 4
$T211851 = -40						; size = 4
$T211850 = -36						; size = 4
$T211847 = -32						; size = 4
$T211846 = -28						; size = 4
_p$ = -24						; size = 4
_hRes$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_pv$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?CreateInstance@?$CComCreator@V?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z PROC NEAR ; ATL::CComCreator<ATL::CComPolyObject<ATL::CAxHostWindow> >::CreateInstance, COMDAT

; 1751 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateInstance@?$CComCreator@V?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	ecx
	sub	esp, 40					; 00000028H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR __$EHRec$[ebp], esp

; 1752 : 		ATLASSERT(ppv != NULL);

	cmp	DWORD PTR _ppv$[ebp], 0
	jne	SHORT $L211845
	push	OFFSET FLAT:??_C@_08NEPKAPOI@ppv?5?$CB?$DN?50?$AA@
	push	0
	push	1752					; 000006d8H
	push	OFFSET FLAT:??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211845
	int	3
$L211845:

; 1753 : 		if (ppv == NULL)

	cmp	DWORD PTR _ppv$[ebp], 0
	jne	SHORT $L163614

; 1754 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	$L163612
$L163614:

; 1755 : 		*ppv = NULL;

	mov	ecx, DWORD PTR _ppv$[ebp]
	mov	DWORD PTR [ecx], 0

; 1756 : 
; 1757 : 		HRESULT hRes = E_OUTOFMEMORY;

	mov	DWORD PTR _hRes$[ebp], -2147024882	; 8007000eH

; 1758 : 		T1* p = NULL;

	mov	DWORD PTR _p$[ebp], 0

; 1759 : 		ATLTRY(p = new T1(pv))

	mov	DWORD PTR __$EHRec$[ebp+12], 0
	push	244					; 000000f4H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv145[ebp], eax
	mov	edx, DWORD PTR tv145[ebp]
	mov	DWORD PTR $T211847[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	DWORD PTR $T211847[ebp], 0
	je	SHORT $L211848
	mov	eax, DWORD PTR _pv$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T211847[ebp]
	call	??0?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@QAE@PAX@Z ; ATL::CComPolyObject<ATL::CAxHostWindow>::CComPolyObject<ATL::CAxHostWindow>
	mov	DWORD PTR tv147[ebp], eax
	mov	ecx, DWORD PTR tv147[ebp]
	mov	DWORD PTR tv82[ebp], ecx
	jmp	SHORT $L211849
$L211848:
	mov	DWORD PTR tv82[ebp], 0
$L211849:
	mov	edx, DWORD PTR tv82[ebp]
	mov	DWORD PTR $T211846[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	mov	eax, DWORD PTR $T211846[ebp]
	mov	DWORD PTR _p$[ebp], eax
	jmp	SHORT $L211854
$L211855:
	mov	eax, $L211854
	ret	0
$L211854:
	mov	DWORD PTR __$EHRec$[ebp+12], -1

; 1760 : 		if (p != NULL)

	cmp	DWORD PTR _p$[ebp], 0
	je	$L163698

; 1761 : 		{
; 1762 : 			p->SetVoid(pv);

	mov	ecx, DWORD PTR _pv$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 4
	call	?SetVoid@CComObjectRootBase@ATL@@QAEXPAX@Z ; ATL::CComObjectRootBase::SetVoid

; 1763 : 			p->InternalFinalConstructAddRef();

	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 4
	call	?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::InternalFinalConstructAddRef

; 1764 : 			hRes = p->FinalConstruct();

	mov	ecx, DWORD PTR _p$[ebp]
	call	?FinalConstruct@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@QAEJXZ ; ATL::CComPolyObject<ATL::CAxHostWindow>::FinalConstruct
	mov	DWORD PTR _hRes$[ebp], eax

; 1765 : 			if (SUCCEEDED(hRes))

	cmp	DWORD PTR _hRes$[ebp], 0
	jl	SHORT $L163700

; 1766 : 				hRes = p->_AtlFinalConstruct();

	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 4
	call	?_AtlFinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ; ATL::CComObjectRootBase::_AtlFinalConstruct
	mov	DWORD PTR _hRes$[ebp], eax
$L163700:

; 1767 : 			p->InternalFinalConstructRelease();

	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 4
	call	?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::InternalFinalConstructRelease

; 1768 : 			if (hRes == S_OK)

	cmp	DWORD PTR _hRes$[ebp], 0
	jne	SHORT $L163702

; 1769 : 				hRes = p->QueryInterface(riid, ppv);

	mov	esi, esp
	mov	edx, DWORD PTR _ppv$[ebp]
	push	edx
	mov	eax, DWORD PTR _riid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRes$[ebp], eax
$L163702:

; 1770 : 			if (hRes != S_OK)

	cmp	DWORD PTR _hRes$[ebp], 0
	je	SHORT $L163698

; 1771 : 				delete p;

	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR $T211851[ebp], ecx
	mov	edx, DWORD PTR $T211851[ebp]
	mov	DWORD PTR $T211850[ebp], edx
	cmp	DWORD PTR $T211850[ebp], 0
	je	SHORT $L211852
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T211850[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T211850[ebp]
	call	DWORD PTR [edx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv142[ebp], eax
	jmp	SHORT $L163698
$L211852:
	mov	DWORD PTR tv142[ebp], 0
$L163698:

; 1772 : 		}
; 1773 : 		return hRes;

	mov	eax, DWORD PTR _hRes$[ebp]
$L163612:

; 1774 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L211856:
	mov	eax, DWORD PTR $T211847[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?CreateInstance@?$CComCreator@V?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z:
	mov	eax, OFFSET FLAT:$T211858
	jmp	___CxxFrameHandler
text$x	ENDS
?CreateInstance@?$CComCreator@V?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z ENDP ; ATL::CComCreator<ATL::CComPolyObject<ATL::CAxHostWindow> >::CreateInstance
; Function compile flags: /Odt /RTCsu
;	COMDAT ?_AtlFinalConstruct@CComObjectRootBase@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_AtlFinalConstruct@CComObjectRootBase@ATL@@QAEJXZ PROC NEAR ; ATL::CComObjectRootBase::_AtlFinalConstruct, COMDAT
; _this$ = ecx

; 2138 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2139 : 		return S_OK;

	xor	eax, eax

; 2140 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?_AtlFinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ENDP	; ATL::CComObjectRootBase::_AtlFinalConstruct
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?SetVoid@CComObjectRootBase@ATL@@QAEXPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetVoid@CComObjectRootBase@ATL@@QAEXPAX@Z PROC NEAR	; ATL::CComObjectRootBase::SetVoid, COMDAT
; _this$ = ecx

; 2192 : 	void SetVoid(void*) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetVoid@CComObjectRootBase@ATL@@QAEXPAX@Z ENDP		; ATL::CComObjectRootBase::SetVoid
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QAEXXZ PROC NEAR ; ATL::CComObjectRootBase::InternalFinalConstructAddRef, COMDAT
; _this$ = ecx

; 2193 : 	void InternalFinalConstructAddRef() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QAEXXZ ENDP ; ATL::CComObjectRootBase::InternalFinalConstructAddRef
_TEXT	ENDS
PUBLIC	??_C@_0N@JELNCKOF@m_dwRef?5?$DN?$DN?50?$AA@	; `string'
;	COMDAT ??_C@_0N@JELNCKOF@m_dwRef?5?$DN?$DN?50?$AA@
CONST	SEGMENT
??_C@_0N@JELNCKOF@m_dwRef?5?$DN?$DN?50?$AA@ DB 'm_dwRef == 0', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QAEXXZ PROC NEAR ; ATL::CComObjectRootBase::InternalFinalConstructRelease, COMDAT
; _this$ = ecx

; 2195 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2196 : 		ATLASSERT(m_dwRef == 0);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L93181
	push	OFFSET FLAT:??_C@_0N@JELNCKOF@m_dwRef?5?$DN?$DN?50?$AA@
	push	0
	push	2196					; 00000894H
	push	OFFSET FLAT:??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L93181
	int	3
$L93181:

; 2197 : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QAEXXZ ENDP ; ATL::CComObjectRootBase::InternalFinalConstructRelease
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IAxWinHostWindowLic>::CComPtrBase<IAxWinHostWindowLic>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtr<IAxWinHostWindowLic>::CComPtr<IAxWinHostWindowLic>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IAxWinHostWindowLic>::CComPtrBase<IAxWinHostWindowLic>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IAxWinHostWindowLic>::CComPtr<IAxWinHostWindowLic>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtrBase<IAxWinHostWindowLic>::~CComPtrBase<IAxWinHostWindowLic>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L163710

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163710:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAE@XZ ENDP ; ATL::CComPtrBase<IAxWinHostWindowLic>::~CComPtrBase<IAxWinHostWindowLic>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAEPAPAUIAxWinHostWindowLic@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAEPAPAUIAxWinHostWindowLic@@XZ PROC NEAR ; ATL::CComPtrBase<IAxWinHostWindowLic>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L211880
	push	OFFSET FLAT:??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
	push	0
	push	143					; 0000008fH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211880
	int	3
$L211880:

; 144  : 		return &p;

	mov	eax, DWORD PTR _this$[ebp]

; 145  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAEPAPAUIAxWinHostWindowLic@@XZ ENDP ; ATL::CComPtrBase<IAxWinHostWindowLic>::operator&
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIAxWinHostWindowLic@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIAxWinHostWindowLic@@@1@XZ PROC NEAR ; ATL::CComPtrBase<IAxWinHostWindowLic>::operator->, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 148  : 		ATLASSERT(p!=NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L211883
	push	OFFSET FLAT:??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
	push	0
	push	148					; 00000094H
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211883
	int	3
$L211883:

; 149  : 		return (_NoAddRefReleaseOnCComPtr<T>*)p;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 150  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIAxWinHostWindowLic@@@1@XZ ENDP ; ATL::CComPtrBase<IAxWinHostWindowLic>::operator->
_TEXT	ENDS
PUBLIC	??1CDynamicStdCallThunk@ATL@@QAE@XZ		; ATL::CDynamicStdCallThunk::~CDynamicStdCallThunk
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1CWndProcThunk@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CWndProcThunk@ATL@@QAE@XZ PROC NEAR			; ATL::CWndProcThunk::~CWndProcThunk, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1CDynamicStdCallThunk@ATL@@QAE@XZ	; ATL::CDynamicStdCallThunk::~CDynamicStdCallThunk
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CWndProcThunk@ATL@@QAE@XZ ENDP			; ATL::CWndProcThunk::~CWndProcThunk
_TEXT	ENDS
EXTRN	__imp__HeapFree@12:NEAR
EXTRN	__imp__GetProcessHeap@0:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
;	COMDAT ??1CDynamicStdCallThunk@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDynamicStdCallThunk@ATL@@QAE@XZ PROC NEAR		; ATL::CDynamicStdCallThunk::~CDynamicStdCallThunk, COMDAT
; _this$ = ecx

; 627  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		if (pThunk)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L87709

; 629  : 			HeapFree(GetProcessHeap(), 0, pThunk);

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	0
	mov	edi, esp
	call	DWORD PTR __imp__GetProcessHeap@0
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__HeapFree@12
	cmp	esi, esp
	call	__RTC_CheckEsp
$L87709:

; 630  : 	}

	pop	edi
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CDynamicStdCallThunk@ATL@@QAE@XZ ENDP		; ATL::CDynamicStdCallThunk::~CDynamicStdCallThunk
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@XZ PROC NEAR	; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@XZ ENDP		; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>
_TEXT	ENDS
PUBLIC	?AllocateHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::AllocateHeap
PUBLIC	??_C@_08GPODJFIN@m_p?5?$DN?$DN?50?$AA@		; `string'
PUBLIC	??_C@_0FB@IAFJMJBP@C?3?2Program?5Files?2Microsoft?5Visua@ ; `string'
;	COMDAT ??_C@_08GPODJFIN@m_p?5?$DN?$DN?50?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
CONST	SEGMENT
??_C@_08GPODJFIN@m_p?5?$DN?$DN?50?$AA@ DB 'm_p == 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FB@IAFJMJBP@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT
??_C@_0FB@IAFJMJBP@C?3?2Program?5Files?2Microsoft?5Visua@ DB 'C:\Program '
	DB	'Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\include\at'
	DB	'lalloc.h', 00H				; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nBytes$ = 8						; size = 4
?AllocateBytes@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z PROC NEAR ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::AllocateBytes, COMDAT
; _this$ = ecx

; 276  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 277  : 		ATLASSERT( m_p == NULL );

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L211893
	push	OFFSET FLAT:??_C@_08GPODJFIN@m_p?5?$DN?$DN?50?$AA@
	push	0
	push	277					; 00000115H
	push	OFFSET FLAT:??_C@_0FB@IAFJMJBP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211893
	int	3
$L211893:

; 278  : 		if( nBytes > t_nFixedBytes )

	cmp	DWORD PTR _nBytes$[ebp], 128		; 00000080H
	jbe	SHORT $L163783

; 279  : 		{
; 280  : 			AllocateHeap( nBytes );

	mov	edx, DWORD PTR _nBytes$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AllocateHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::AllocateHeap

; 281  : 		}
; 282  : 		else

	jmp	SHORT $L163784
$L163783:

; 283  : 		{
; 284  : 			m_p = reinterpret_cast< T* >( m_abFixedBuffer );

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
$L163784:

; 285  : 		}
; 286  : 
; 287  : 		return( m_p );

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 288  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AllocateBytes@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z ENDP ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::AllocateBytes
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FreeHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ PROC NEAR ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::FreeHeap, COMDAT
; _this$ = ecx

; 312  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 313  : 		Allocator::Free( m_p );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?Free@CCRTAllocator@ATL@@SAXPAX@Z	; ATL::CCRTAllocator::Free
	add	esp, 4

; 314  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FreeHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ENDP ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::FreeHeap
_TEXT	ENDS
PUBLIC	??0CWndProcThunk@ATL@@QAE@XZ			; ATL::CWndProcThunk::CWndProcThunk
PUBLIC	??0CMessageMap@ATL@@QAE@XZ			; ATL::CMessageMap::CMessageMap
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
;	COMDAT ??0?$CWindowImplRoot@VCWindow@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWindowImplRoot@VCWindow@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CWindowImplRoot<ATL::CWindow>::CWindowImplRoot<ATL::CWindow>, COMDAT
; _this$ = ecx

; 2747 : 	{ }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CWindow@ATL@@QAE@PAUHWND__@@@Z	; ATL::CWindow::CWindow
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CMessageMap@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0CWndProcThunk@ATL@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CWindowImplRoot@VCWindow@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CWindowImplRoot<ATL::CWindow>::CWindowImplRoot<ATL::CWindow>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIStream@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIStream@@@ATL@@IAE@XZ PROC NEAR	; ATL::CComPtrBase<IStream>::CComPtrBase<IStream>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIStream@@@ATL@@IAE@XZ ENDP		; ATL::CComPtrBase<IStream>::CComPtrBase<IStream>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@IAE@XZ PROC NEAR ; ATL::CComPtrBase<IAxWinHostWindowLic>::CComPtrBase<IAxWinHostWindowLic>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@IAE@XZ ENDP ; ATL::CComPtrBase<IAxWinHostWindowLic>::CComPtrBase<IAxWinHostWindowLic>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
_TEXT	ENDS
;	COMDAT ?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ PROC NEAR ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode::GetData, COMDAT
; _this$ = ecx

; 365  : 		{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 366  : 			return (this + 1);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8

; 367  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode::GetData
_TEXT	ENDS
PUBLIC	??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::CComObjectRootEx<ATL::CComSingleThreadModel>
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
PUBLIC	?AddRef@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComPolyObject<ATL::CAxHostWindow>::AddRef
PUBLIC	?Release@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComPolyObject<ATL::CAxHostWindow>::Release
PUBLIC	?QueryInterface@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComPolyObject<ATL::CAxHostWindow>::QueryInterface
PUBLIC	??0?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@QAE@PAX@Z ; ATL::CComContainedObject<ATL::CAxHostWindow>::CComContainedObject<ATL::CAxHostWindow>
PUBLIC	??1?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAE@XZ ; ATL::CComContainedObject<ATL::CAxHostWindow>::~CComContainedObject<ATL::CAxHostWindow>
PUBLIC	??_7?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@6B@ ; ATL::CComPolyObject<ATL::CAxHostWindow>::`vftable'
PUBLIC	??_G?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAEPAXI@Z ; ATL::CComPolyObject<ATL::CAxHostWindow>::`scalar deleting destructor'
EXTRN	??_E?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAEPAXI@Z:NEAR ; ATL::CComPolyObject<ATL::CAxHostWindow>::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcom.h
xdata$x	SEGMENT
$T211913 DD	0ffffffffH
	DD	FLAT:$L211909
$T211911 DD	019930520H
	DD	01H
	DD	FLAT:$T211913
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@6B@
CONST	SEGMENT
??_7?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@6B@ DD FLAT:?QueryInterface@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComPolyObject<ATL::CAxHostWindow>::`vftable'
	DD	FLAT:?AddRef@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ
	DD	FLAT:?Release@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ
	DD	FLAT:??_E?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAEPAXI@Z
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ??0?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT
tv71 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pv$ = 8						; size = 4
??0?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@QAE@PAX@Z PROC NEAR ; ATL::CComPolyObject<ATL::CAxHostWindow>::CComPolyObject<ATL::CAxHostWindow>, COMDAT
; _this$ = ecx

; 2950 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@QAE@PAX@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@6B@
	cmp	DWORD PTR _pv$[ebp], 0
	je	SHORT $L211907
	mov	ecx, DWORD PTR _pv$[ebp]
	mov	DWORD PTR tv71[ebp], ecx
	jmp	SHORT $L211908
$L211907:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv71[ebp], edx
$L211908:
	mov	eax, DWORD PTR tv71[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@QAE@PAX@Z ; ATL::CComContainedObject<ATL::CAxHostWindow>::CComContainedObject<ATL::CAxHostWindow>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2951 : 		_pAtlModule->Lock();

	mov	ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	call	DWORD PTR [edx+4]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2952 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L211909:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAE@XZ
__ehhandler$??0?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@QAE@PAX@Z:
	mov	eax, OFFSET FLAT:$T211911
	jmp	___CxxFrameHandler
text$x	ENDS
??0?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@QAE@PAX@Z ENDP ; ATL::CComPolyObject<ATL::CAxHostWindow>::CComPolyObject<ATL::CAxHostWindow>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknown@@QAE@XZ PROC NEAR				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
PUBLIC	??0CComObjectRootBase@ATL@@QAE@XZ		; ATL::CComObjectRootBase::CComObjectRootBase
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::CComObjectRootEx<ATL::CComSingleThreadModel>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CComObjectRootBase@ATL@@QAE@XZ	; ATL::CComObjectRootBase::CComObjectRootBase
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::CComObjectRootEx<ATL::CComSingleThreadModel>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0CComObjectRootBase@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CComObjectRootBase@ATL@@QAE@XZ PROC NEAR		; ATL::CComObjectRootBase::CComObjectRootBase, COMDAT
; _this$ = ecx

; 2128 : 	CComObjectRootBase()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2129 : 	{
; 2130 : 		m_dwRef = 0L;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 2131 : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CComObjectRootBase@ATL@@QAE@XZ ENDP			; ATL::CComObjectRootBase::CComObjectRootBase
_TEXT	ENDS
PUBLIC	?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalAddRef
PUBLIC	?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalRelease
PUBLIC	?FinalConstruct@CComObjectRootBase@ATL@@QAEJXZ	; ATL::CComObjectRootBase::FinalConstruct
; Function compile flags: /Odt /RTCsu
;	COMDAT ?FinalConstruct@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@QAEJXZ
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
?FinalConstruct@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@QAEJXZ PROC NEAR ; ATL::CComPolyObject<ATL::CAxHostWindow>::FinalConstruct, COMDAT
; _this$ = ecx

; 2956 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2957 : 		InternalAddRef();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalAddRef

; 2958 : 		CComObjectRootEx<contained::_ThreadModel::ThreadModelNoCS>::FinalConstruct();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?FinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ; ATL::CComObjectRootBase::FinalConstruct

; 2959 : 		HRESULT hr = m_contained.FinalConstruct();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?FinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ; ATL::CComObjectRootBase::FinalConstruct
	mov	DWORD PTR _hr$[ebp], eax

; 2960 : 		InternalRelease();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalRelease

; 2961 : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 2962 : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FinalConstruct@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@QAEJXZ ENDP ; ATL::CComPolyObject<ATL::CAxHostWindow>::FinalConstruct
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?FinalConstruct@CComObjectRootBase@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FinalConstruct@CComObjectRootBase@ATL@@QAEJXZ PROC NEAR ; ATL::CComObjectRootBase::FinalConstruct, COMDAT
; _this$ = ecx

; 2133 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2134 : 		return S_OK;

	xor	eax, eax

; 2135 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?FinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ENDP	; ATL::CComObjectRootBase::FinalConstruct
_TEXT	ENDS
PUBLIC	??_C@_0P@IDNKKMJE@m_dwRef?5?$CB?$DN?5?91L?$AA@	; `string'
PUBLIC	?Increment@CComSingleThreadModel@ATL@@SGKPAJ@Z	; ATL::CComSingleThreadModel::Increment
;	COMDAT ??_C@_0P@IDNKKMJE@m_dwRef?5?$CB?$DN?5?91L?$AA@
CONST	SEGMENT
??_C@_0P@IDNKKMJE@m_dwRef?5?$CB?$DN?5?91L?$AA@ DB 'm_dwRef != -1L', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ PROC NEAR ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalAddRef, COMDAT
; _this$ = ecx

; 2326 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2327 : 		ATLASSERT(m_dwRef != -1L);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], -1
	jne	SHORT $L211928
	push	OFFSET FLAT:??_C@_0P@IDNKKMJE@m_dwRef?5?$CB?$DN?5?91L?$AA@
	push	0
	push	2327					; 00000917H
	push	OFFSET FLAT:??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211928
	int	3
$L211928:

; 2328 : 		return _ThreadModel::Increment(&m_dwRef);

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?Increment@CComSingleThreadModel@ATL@@SGKPAJ@Z ; ATL::CComSingleThreadModel::Increment

; 2329 : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ENDP ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalAddRef
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
_TEXT	ENDS
;	COMDAT ?Increment@CComSingleThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Increment@CComSingleThreadModel@ATL@@SGKPAJ@Z PROC NEAR ; ATL::CComSingleThreadModel::Increment, COMDAT

; 357  : 	static ULONG WINAPI Increment(LPLONG p) throw() {return ++(*p);}

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	ebp
	ret	4
?Increment@CComSingleThreadModel@ATL@@SGKPAJ@Z ENDP	; ATL::CComSingleThreadModel::Increment
_TEXT	ENDS
PUBLIC	??_C@_0EC@FOHBGNDM@0?5?$CG?$CG?5?$CCRelease?5called?5on?5a?5pointe@ ; `string'
PUBLIC	?Decrement@CComSingleThreadModel@ATL@@SGKPAJ@Z	; ATL::CComSingleThreadModel::Decrement
;	COMDAT ??_C@_0EC@FOHBGNDM@0?5?$CG?$CG?5?$CCRelease?5called?5on?5a?5pointe@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcom.h
CONST	SEGMENT
??_C@_0EC@FOHBGNDM@0?5?$CG?$CG?5?$CCRelease?5called?5on?5a?5pointe@ DB '0'
	DB	' && "Release called on a pointer that has already been releas'
	DB	'ed"', 00H					; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ
_TEXT	SEGMENT
_nRef$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ PROC NEAR ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalRelease, COMDAT
; _this$ = ecx

; 2331 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2332 : #ifdef _DEBUG
; 2333 : 		long nRef = _ThreadModel::Decrement(&m_dwRef);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?Decrement@CComSingleThreadModel@ATL@@SGKPAJ@Z ; ATL::CComSingleThreadModel::Decrement
	mov	DWORD PTR _nRef$[ebp], eax

; 2334 : 		if (nRef < -(LONG_MAX / 2))

	cmp	DWORD PTR _nRef$[ebp], -1073741823	; c0000001H
	jge	SHORT $L93275

; 2335 : 		{
; 2336 : 			ATLASSERT(0 && _T("Release called on a pointer that has already been released"));

	xor	ecx, ecx
	jne	SHORT $L93275
	push	OFFSET FLAT:??_C@_0EC@FOHBGNDM@0?5?$CG?$CG?5?$CCRelease?5called?5on?5a?5pointe@
	push	0
	push	2336					; 00000920H
	push	OFFSET FLAT:??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L93275
	int	3
$L93275:

; 2337 : 		}
; 2338 : 		return nRef;

	mov	eax, DWORD PTR _nRef$[ebp]

; 2339 : #else
; 2340 : 		return _ThreadModel::Decrement(&m_dwRef);
; 2341 : #endif	
; 2342 : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ENDP ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalRelease
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
_TEXT	ENDS
;	COMDAT ?Decrement@CComSingleThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Decrement@CComSingleThreadModel@ATL@@SGKPAJ@Z PROC NEAR ; ATL::CComSingleThreadModel::Decrement, COMDAT

; 358  : 	static ULONG WINAPI Decrement(LPLONG p) throw() {return --(*p);}

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 1
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	ebp
	ret	4
?Decrement@CComSingleThreadModel@ATL@@SGKPAJ@Z ENDP	; ATL::CComSingleThreadModel::Decrement
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcom.h
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ PROC NEAR ; ATL::CComPolyObject<ATL::CAxHostWindow>::AddRef, COMDAT

; 2980 : 	STDMETHOD_(ULONG, AddRef)() {return InternalAddRef();}

	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalAddRef
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?AddRef@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ENDP ; ATL::CComPolyObject<ATL::CAxHostWindow>::AddRef
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT
tv74 = -16						; size = 4
$T211941 = -12						; size = 4
$T211940 = -8						; size = 4
_l$ = -4						; size = 4
_this$ = 8						; size = 4
?Release@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ PROC NEAR ; ATL::CComPolyObject<ATL::CAxHostWindow>::Release, COMDAT

; 2982 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 2983 : 		ULONG l = InternalRelease();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalRelease
	mov	DWORD PTR _l$[ebp], eax

; 2984 : 		if (l == 0)

	cmp	DWORD PTR _l$[ebp], 0
	jne	SHORT $L164106

; 2985 : 			delete this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T211941[ebp], eax
	mov	ecx, DWORD PTR $T211941[ebp]
	mov	DWORD PTR $T211940[ebp], ecx
	cmp	DWORD PTR $T211940[ebp], 0
	je	SHORT $L211942
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T211940[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T211940[ebp]
	call	DWORD PTR [eax+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $L164106
$L211942:
	mov	DWORD PTR tv74[ebp], 0
$L164106:

; 2986 : 		return l;

	mov	eax, DWORD PTR _l$[ebp]

; 2987 : 	}

	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ENDP ; ATL::CComPolyObject<ATL::CAxHostWindow>::Release
_TEXT	ENDS
PUBLIC	?InlineIsEqualUnknown@ATL@@YGHABU_GUID@@@Z	; ATL::InlineIsEqualUnknown
PUBLIC	?_InternalQueryInterface@CAxHostWindow@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CAxHostWindow::_InternalQueryInterface
PUBLIC	??_C@_0P@BMHEGBAP@ppvObject?5?$CB?$DN?50?$AA@	; `string'
;	COMDAT ??_C@_0P@BMHEGBAP@ppvObject?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0P@BMHEGBAP@ppvObject?5?$CB?$DN?50?$AA@ DB 'ppvObject != 0', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?QueryInterface@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_hRes$ = -4						; size = 4
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_ppvObject$ = 16					; size = 4
?QueryInterface@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z PROC NEAR ; ATL::CComPolyObject<ATL::CAxHostWindow>::QueryInterface, COMDAT

; 2989 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 2990 : #ifndef _ATL_OLEDB_CONFORMANCE_TESTS
; 2991 : 		ATLASSERT(ppvObject != NULL);

	cmp	DWORD PTR _ppvObject$[ebp], 0
	jne	SHORT $L211946
	push	OFFSET FLAT:??_C@_0P@BMHEGBAP@ppvObject?5?$CB?$DN?50?$AA@
	push	0
	push	2991					; 00000bafH
	push	OFFSET FLAT:??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211946
	int	3
$L211946:

; 2992 : #endif
; 2993 : 		if (ppvObject == NULL)

	cmp	DWORD PTR _ppvObject$[ebp], 0
	jne	SHORT $L164112

; 2994 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L164110
$L164112:

; 2995 : 		*ppvObject = NULL;

	mov	ecx, DWORD PTR _ppvObject$[ebp]
	mov	DWORD PTR [ecx], 0

; 2996 : 
; 2997 : 		HRESULT hRes = S_OK;

	mov	DWORD PTR _hRes$[ebp], 0

; 2998 : 		if (InlineIsEqualUnknown(iid))

	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	?InlineIsEqualUnknown@ATL@@YGHABU_GUID@@@Z ; ATL::InlineIsEqualUnknown
	test	eax, eax
	je	SHORT $L164116

; 2999 : 		{
; 3000 : 			*ppvObject = (void*)(IUnknown*)this;

	mov	eax, DWORD PTR _ppvObject$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx

; 3001 : 			AddRef();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	DWORD PTR [eax+4]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 3002 : #ifdef _ATL_DEBUG_INTERFACES
; 3003 : 			_AtlDebugInterfacesModule.AddThunk((IUnknown**)ppvObject, (LPCTSTR)contained::_GetEntries()[-1].dw, iid);
; 3004 : #endif // _ATL_DEBUG_INTERFACES
; 3005 : 		}
; 3006 : 		else

	jmp	SHORT $L164119
$L164116:

; 3007 : 			hRes = m_contained._InternalQueryInterface(iid, ppvObject);

	mov	edx, DWORD PTR _ppvObject$[ebp]
	push	edx
	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?_InternalQueryInterface@CAxHostWindow@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CAxHostWindow::_InternalQueryInterface
	mov	DWORD PTR _hRes$[ebp], eax
$L164119:

; 3008 : 		return hRes;

	mov	eax, DWORD PTR _hRes$[ebp]
$L164110:

; 3009 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ENDP ; ATL::CComPolyObject<ATL::CAxHostWindow>::QueryInterface
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
_TEXT	ENDS
;	COMDAT ?InlineIsEqualUnknown@ATL@@YGHABU_GUID@@@Z
_TEXT	SEGMENT
tv71 = -4						; size = 4
_rguid1$ = 8						; size = 4
?InlineIsEqualUnknown@ATL@@YGHABU_GUID@@@Z PROC NEAR	; ATL::InlineIsEqualUnknown, COMDAT

; 727  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 728  :    return (
; 729  : 	  ((PLONG) &rguid1)[0] == 0 &&
; 730  : 	  ((PLONG) &rguid1)[1] == 0 &&
; 731  : #ifdef _ATL_BYTESWAP
; 732  : 	  ((PLONG) &rguid1)[2] == 0xC0000000 &&
; 733  : 	  ((PLONG) &rguid1)[3] == 0x00000046);
; 734  : #else
; 735  : 	  ((PLONG) &rguid1)[2] == 0x000000C0 &&
; 736  : 	  ((PLONG) &rguid1)[3] == 0x46000000);

	mov	eax, DWORD PTR _rguid1$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L211949
	mov	ecx, DWORD PTR _rguid1$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	jne	SHORT $L211949
	mov	edx, DWORD PTR _rguid1$[ebp]
	cmp	DWORD PTR [edx+8], 192			; 000000c0H
	jne	SHORT $L211949
	mov	eax, DWORD PTR _rguid1$[ebp]
	cmp	DWORD PTR [eax+12], 1174405120		; 46000000H
	jne	SHORT $L211949
	mov	DWORD PTR tv71[ebp], 1
	jmp	SHORT $L211950
$L211949:
	mov	DWORD PTR tv71[ebp], 0
$L211950:
	mov	eax, DWORD PTR tv71[ebp]

; 737  : #endif
; 738  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?InlineIsEqualUnknown@ATL@@YGHABU_GUID@@@Z ENDP		; ATL::InlineIsEqualUnknown
_TEXT	ENDS
PUBLIC	?_GetEntries@CAxHostWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ ; ATL::CAxHostWindow::_GetEntries
PUBLIC	?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z ; ATL::CComObjectRootBase::InternalQueryInterface
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
;	COMDAT ?_InternalQueryInterface@CAxHostWindow@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iid$ = 8						; size = 4
_ppvObject$ = 12					; size = 4
?_InternalQueryInterface@CAxHostWindow@ATL@@QAEJABU_GUID@@PAPAX@Z PROC NEAR ; ATL::CAxHostWindow::_InternalQueryInterface, COMDAT
; _this$ = ecx

; 368  : 	BEGIN_COM_MAP(CAxHostWindow)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ppvObject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	?_GetEntries@CAxHostWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ ; ATL::CAxHostWindow::_GetEntries
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z ; ATL::CComObjectRootBase::InternalQueryInterface
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_InternalQueryInterface@CAxHostWindow@ATL@@QAEJABU_GUID@@PAPAX@Z ENDP ; ATL::CAxHostWindow::_InternalQueryInterface
_TEXT	ENDS
PUBLIC	??_C@_0L@DBHNDLKF@pThis?5?$CB?$DN?50?$AA@	; `string'
PUBLIC	??_C@_0DC@BBKMJDPM@pEntries?9?$DOpFunc?5?$DN?$DN?5?$CI?$CIATL?3?3_ATL_C@ ; `string'
EXTRN	?AtlInternalQueryInterface@ATL@@YGJPAXPBU_ATL_INTMAP_ENTRY@1@ABU_GUID@@PAPAX@Z:NEAR ; ATL::AtlInternalQueryInterface
;	COMDAT ??_C@_0L@DBHNDLKF@pThis?5?$CB?$DN?50?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcom.h
CONST	SEGMENT
??_C@_0L@DBHNDLKF@pThis?5?$CB?$DN?50?$AA@ DB 'pThis != 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@BBKMJDPM@pEntries?9?$DOpFunc?5?$DN?$DN?5?$CI?$CIATL?3?3_ATL_C@
CONST	SEGMENT
??_C@_0DC@BBKMJDPM@pEntries?9?$DOpFunc?5?$DN?$DN?5?$CI?$CIATL?3?3_ATL_C@ DB 'p'
	DB	'Entries->pFunc == ((ATL::_ATL_CREATORARGFUNC*)1)', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_hRes$ = -4						; size = 4
_pThis$ = 8						; size = 4
_pEntries$ = 12						; size = 4
_iid$ = 16						; size = 4
_ppvObject$ = 20					; size = 4
?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z PROC NEAR ; ATL::CComObjectRootBase::InternalQueryInterface, COMDAT

; 2160 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 2161 : 		// Only Assert here. AtlInternalQueryInterface will return the correct HRESULT if ppvObject == NULL
; 2162 : #ifndef _ATL_OLEDB_CONFORMANCE_TESTS
; 2163 : 		ATLASSERT(ppvObject != NULL);

	cmp	DWORD PTR _ppvObject$[ebp], 0
	jne	SHORT $L211955
	push	OFFSET FLAT:??_C@_0P@BMHEGBAP@ppvObject?5?$CB?$DN?50?$AA@
	push	0
	push	2163					; 00000873H
	push	OFFSET FLAT:??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211955
	int	3
$L211955:

; 2164 : #endif
; 2165 : 		ATLASSERT(pThis != NULL);

	cmp	DWORD PTR _pThis$[ebp], 0
	jne	SHORT $L211956
	push	OFFSET FLAT:??_C@_0L@DBHNDLKF@pThis?5?$CB?$DN?50?$AA@
	push	0
	push	2165					; 00000875H
	push	OFFSET FLAT:??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211956
	int	3
$L211956:

; 2166 : 		// First entry in the com map should be a simple map entry
; 2167 : 		ATLASSERT(pEntries->pFunc == _ATL_SIMPLEMAPENTRY);

	mov	edx, DWORD PTR _pEntries$[ebp]
	cmp	DWORD PTR [edx+8], 1
	je	SHORT $L211957
	push	OFFSET FLAT:??_C@_0DC@BBKMJDPM@pEntries?9?$DOpFunc?5?$DN?$DN?5?$CI?$CIATL?3?3_ATL_C@
	push	0
	push	2167					; 00000877H
	push	OFFSET FLAT:??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L211957
	int	3
$L211957:

; 2168 : 	#if defined(_ATL_DEBUG_INTERFACES) || defined(_ATL_DEBUG_QI)
; 2169 : 		LPCTSTR pszClassName = (LPCTSTR) pEntries[-1].dw;
; 2170 : 	#endif // _ATL_DEBUG_INTERFACES
; 2171 : 		HRESULT hRes = AtlInternalQueryInterface(pThis, pEntries, iid, ppvObject);

	mov	ecx, DWORD PTR _ppvObject$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	mov	eax, DWORD PTR _pEntries$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pThis$[ebp]
	push	ecx
	call	?AtlInternalQueryInterface@ATL@@YGJPAXPBU_ATL_INTMAP_ENTRY@1@ABU_GUID@@PAPAX@Z ; ATL::AtlInternalQueryInterface
	mov	DWORD PTR _hRes$[ebp], eax

; 2172 : 	#ifdef _ATL_DEBUG_INTERFACES
; 2173 : 		_AtlDebugInterfacesModule.AddThunk((IUnknown**)ppvObject, pszClassName, iid);
; 2174 : 	#endif // _ATL_DEBUG_INTERFACES
; 2175 : 		return _ATLDUMPIID(iid, pszClassName, hRes);

	mov	eax, DWORD PTR _hRes$[ebp]

; 2176 : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z ENDP ; ATL::CComObjectRootBase::InternalQueryInterface
_TEXT	ENDS
PUBLIC	__GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
PUBLIC	__GUID_00000114_0000_0000_c000_000000000046
PUBLIC	__GUID_00020400_0000_0000_c000_000000000046
PUBLIC	__GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5
PUBLIC	?_entries@?1??_GetEntries@CAxHostWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B ; `ATL::CAxHostWindow::_GetEntries'::`2'::_entries
PUBLIC	??_C@_0O@IEKIGPOE@CAxHostWindow?$AA@		; `string'
PUBLIC	__GUID_00000118_0000_0000_c000_000000000046
PUBLIC	__GUID_922eada0_3424_11cf_b670_00aa004cd6d8
PUBLIC	__GUID_9c2cad80_3424_11cf_b670_00aa004cd6d8
PUBLIC	__GUID_00000119_0000_0000_c000_000000000046
PUBLIC	__GUID_b196b289_bab4_101a_b69c_00aa00341d07
PUBLIC	__GUID_0000011b_0000_0000_c000_000000000046
PUBLIC	__GUID_6d5140c1_7436_11ce_8034_00aa006009fa
PUBLIC	__GUID_b6ea2051_048a_11d1_82b9_00c04fb9942e
PUBLIC	__GUID_bd3f23c0_d43e_11cf_893b_00aa00bdce1a
PUBLIC	__GUID_0000010f_0000_0000_c000_000000000046
;	COMDAT ?_entries@?1??_GetEntries@CAxHostWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
CONST	SEGMENT
?_entries@?1??_GetEntries@CAxHostWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B DD 00H ; `ATL::CAxHostWindow::_GetEntries'::`2'::_entries
	DD	FLAT:??_C@_0O@IEKIGPOE@CAxHostWindow?$AA@
	DD	00H
	DD	FLAT:__GUID_00020400_0000_0000_c000_000000000046
	DD	04cH
	DD	01H
	DD	FLAT:__GUID_b6ea2050_048a_11d1_82b9_00c04fb9942e
	DD	024H
	DD	01H
	DD	FLAT:__GUID_3935bda8_4ed9_495c_8650_e01fc1e38a4b
	DD	024H
	DD	01H
	DD	FLAT:__GUID_00000118_0000_0000_c000_000000000046
	DD	028H
	DD	01H
	DD	FLAT:__GUID_922eada0_3424_11cf_b670_00aa004cd6d8
	DD	02cH
	DD	01H
	DD	FLAT:__GUID_9c2cad80_3424_11cf_b670_00aa004cd6d8
	DD	02cH
	DD	01H
	DD	FLAT:__GUID_00000119_0000_0000_c000_000000000046
	DD	02cH
	DD	01H
	DD	FLAT:__GUID_00000114_0000_0000_c000_000000000046
	DD	02cH
	DD	01H
	DD	FLAT:__GUID_b196b289_bab4_101a_b69c_00aa00341d07
	DD	030H
	DD	01H
	DD	FLAT:__GUID_0000011b_0000_0000_c000_000000000046
	DD	034H
	DD	01H
	DD	FLAT:__GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
	DD	038H
	DD	01H
	DD	FLAT:__GUID_6d5140c1_7436_11ce_8034_00aa006009fa
	DD	040H
	DD	01H
	DD	FLAT:__GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5
	DD	04cH
	DD	01H
	DD	FLAT:__GUID_b6ea2051_048a_11d1_82b9_00c04fb9942e
	DD	04cH
	DD	01H
	DD	FLAT:__GUID_bd3f23c0_d43e_11cf_893b_00aa00bdce1a
	DD	048H
	DD	01H
	DD	FLAT:__GUID_0000010f_0000_0000_c000_000000000046
	DD	044H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_C@_0O@IEKIGPOE@CAxHostWindow?$AA@
CONST	SEGMENT
??_C@_0O@IEKIGPOE@CAxHostWindow?$AA@ DB 'CAxHostWindow', 00H ; `string'
CONST	ENDS
;	COMDAT __GUID_00020400_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00020400_0000_0000_c000_000000000046 DD 020400H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT __GUID_00000118_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000118_0000_0000_c000_000000000046 DD 0118H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT __GUID_922eada0_3424_11cf_b670_00aa004cd6d8
CONST	SEGMENT
__GUID_922eada0_3424_11cf_b670_00aa004cd6d8 DD 0922eada0H
	DW	03424H
	DW	011cfH
	DB	0b6H
	DB	070H
	DB	00H
	DB	0aaH
	DB	00H
	DB	04cH
	DB	0d6H
	DB	0d8H
CONST	ENDS
;	COMDAT __GUID_9c2cad80_3424_11cf_b670_00aa004cd6d8
CONST	SEGMENT
__GUID_9c2cad80_3424_11cf_b670_00aa004cd6d8 DD 09c2cad80H
	DW	03424H
	DW	011cfH
	DB	0b6H
	DB	070H
	DB	00H
	DB	0aaH
	DB	00H
	DB	04cH
	DB	0d6H
	DB	0d8H
CONST	ENDS
;	COMDAT __GUID_00000119_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000119_0000_0000_c000_000000000046 DD 0119H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT __GUID_00000114_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000114_0000_0000_c000_000000000046 DD 0114H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT __GUID_b196b289_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT
__GUID_b196b289_bab4_101a_b69c_00aa00341d07 DD 0b196b289H
	DW	0bab4H
	DW	0101aH
	DB	0b6H
	DB	09cH
	DB	00H
	DB	0aaH
	DB	00H
	DB	034H
	DB	01dH
	DB	07H
CONST	ENDS
;	COMDAT __GUID_0000011b_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_0000011b_0000_0000_c000_000000000046 DD 011bH
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT __GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
CONST	SEGMENT
__GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352 DD 0fc4801a3H
	DW	02ba9H
	DW	011cfH
	DB	0a2H
	DB	029H
	DB	00H
	DB	0aaH
	DB	00H
	DB	03dH
	DB	073H
	DB	052H
CONST	ENDS
;	COMDAT __GUID_6d5140c1_7436_11ce_8034_00aa006009fa
CONST	SEGMENT
__GUID_6d5140c1_7436_11ce_8034_00aa006009fa DD 06d5140c1H
	DW	07436H
	DW	011ceH
	DB	080H
	DB	034H
	DB	00H
	DB	0aaH
	DB	00H
	DB	060H
	DB	09H
	DB	0faH
CONST	ENDS
;	COMDAT __GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5
CONST	SEGMENT
__GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5 DD 0b2d0778bH
	DW	0ac99H
	DW	04c58H
	DB	0a5H
	DB	0c8H
	DB	0e7H
	DB	072H
	DB	04eH
	DB	053H
	DB	016H
	DB	0b5H
CONST	ENDS
;	COMDAT __GUID_b6ea2051_048a_11d1_82b9_00c04fb9942e
CONST	SEGMENT
__GUID_b6ea2051_048a_11d1_82b9_00c04fb9942e DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT __GUID_bd3f23c0_d43e_11cf_893b_00aa00bdce1a
CONST	SEGMENT
__GUID_bd3f23c0_d43e_11cf_893b_00aa00bdce1a DD 0bd3f23c0H
	DW	0d43eH
	DW	011cfH
	DB	089H
	DB	03bH
	DB	00H
	DB	0aaH
	DB	00H
	DB	0bdH
	DB	0ceH
	DB	01aH
CONST	ENDS
;	COMDAT __GUID_0000010f_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_0000010f_0000_0000_c000_000000000046 DD 010fH
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?_GetEntries@CAxHostWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ
_TEXT	SEGMENT
?_GetEntries@CAxHostWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ PROC NEAR ; ATL::CAxHostWindow::_GetEntries, COMDAT

; 368  : 	BEGIN_COM_MAP(CAxHostWindow)

	push	ebp
	mov	ebp, esp

; 369  : 		COM_INTERFACE_ENTRY2(IDispatch, IAxWinAmbientDispatchEx)
; 370  : 		COM_INTERFACE_ENTRY(IAxWinHostWindow)
; 371  : 		COM_INTERFACE_ENTRY(IAxWinHostWindowLic)
; 372  : 		COM_INTERFACE_ENTRY(IOleClientSite)
; 373  : 		COM_INTERFACE_ENTRY(IOleInPlaceSiteWindowless)
; 374  : 		COM_INTERFACE_ENTRY(IOleInPlaceSiteEx)
; 375  : 		COM_INTERFACE_ENTRY(IOleInPlaceSite)
; 376  : 		COM_INTERFACE_ENTRY(IOleWindow)
; 377  : 		COM_INTERFACE_ENTRY(IOleControlSite)
; 378  : 		COM_INTERFACE_ENTRY(IOleContainer)
; 379  : 		COM_INTERFACE_ENTRY(IObjectWithSite)
; 380  : 		COM_INTERFACE_ENTRY(IServiceProvider)
; 381  : 		COM_INTERFACE_ENTRY(IAxWinAmbientDispatchEx)
; 382  : 		COM_INTERFACE_ENTRY(IAxWinAmbientDispatch)
; 383  : #ifndef _ATL_NO_DOCHOSTUIHANDLER
; 384  : 		COM_INTERFACE_ENTRY(IDocHostUIHandler)
; 385  : #endif
; 386  : 		COM_INTERFACE_ENTRY(IAdviseSink)
; 387  : 	END_COM_MAP()

	mov	eax, OFFSET FLAT:?_entries@?1??_GetEntries@CAxHostWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B+12
	pop	ebp
	ret	0
?_GetEntries@CAxHostWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ ENDP ; ATL::CAxHostWindow::_GetEntries
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0CMessageMap@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMessageMap@ATL@@QAE@XZ PROC NEAR			; ATL::CMessageMap::CMessageMap, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CMessageMap@ATL@@QAE@XZ ENDP				; ATL::CMessageMap::CMessageMap
_TEXT	ENDS
PUBLIC	??0CDynamicStdCallThunk@ATL@@QAE@XZ		; ATL::CDynamicStdCallThunk::CDynamicStdCallThunk
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0CWndProcThunk@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CWndProcThunk@ATL@@QAE@XZ PROC NEAR			; ATL::CWndProcThunk::CWndProcThunk, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0CDynamicStdCallThunk@ATL@@QAE@XZ	; ATL::CDynamicStdCallThunk::CDynamicStdCallThunk
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CWndProcThunk@ATL@@QAE@XZ ENDP			; ATL::CWndProcThunk::CWndProcThunk
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
_TEXT	ENDS
;	COMDAT ??0CDynamicStdCallThunk@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDynamicStdCallThunk@ATL@@QAE@XZ PROC NEAR		; ATL::CDynamicStdCallThunk::CDynamicStdCallThunk, COMDAT
; _this$ = ecx

; 621  : 	CDynamicStdCallThunk()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 	{
; 623  : 		pThunk = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 624  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CDynamicStdCallThunk@ATL@@QAE@XZ ENDP		; ATL::CDynamicStdCallThunk::CDynamicStdCallThunk
_TEXT	ENDS
PUBLIC	??1?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAE@XZ ; ATL::CComPolyObject<ATL::CAxHostWindow>::~CComPolyObject<ATL::CAxHostWindow>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??_G?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAEPAXI@Z PROC NEAR ; ATL::CComPolyObject<ATL::CAxHostWindow>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAE@XZ ; ATL::CComPolyObject<ATL::CAxHostWindow>::~CComPolyObject<ATL::CAxHostWindow>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L164141
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L164141:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAEPAXI@Z ENDP ; ATL::CComPolyObject<ATL::CAxHostWindow>::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?FinalRelease@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@QAEXXZ ; ATL::CComPolyObject<ATL::CAxHostWindow>::FinalRelease
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcom.h
xdata$x	SEGMENT
$T211975 DD	0ffffffffH
	DD	FLAT:$L211971
$T211973 DD	019930520H
	DD	01H
	DD	FLAT:$T211975
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAE@XZ PROC NEAR ; ATL::CComPolyObject<ATL::CAxHostWindow>::~CComPolyObject<ATL::CAxHostWindow>, COMDAT
; _this$ = ecx

; 2971 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2972 : 		m_dwRef = -(LONG_MAX/2);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], -1073741823		; c0000001H

; 2973 : 		FinalRelease();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FinalRelease@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@QAEXXZ ; ATL::CComPolyObject<ATL::CAxHostWindow>::FinalRelease

; 2974 : #ifdef _ATL_DEBUG_INTERFACES
; 2975 : 		_AtlDebugInterfacesModule.DeleteNonAddRefThunk(this);
; 2976 : #endif
; 2977 : 		_pAtlModule->Unlock();

	mov	edx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	call	DWORD PTR [eax+8]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2978 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L211971:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAE@XZ
__ehhandler$??1?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAE@XZ:
	mov	eax, OFFSET FLAT:$T211973
	jmp	___CxxFrameHandler
text$x	ENDS
??1?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAE@XZ ENDP ; ATL::CComPolyObject<ATL::CAxHostWindow>::~CComPolyObject<ATL::CAxHostWindow>
PUBLIC	??1CAxHostWindow@ATL@@UAE@XZ			; ATL::CAxHostWindow::~CAxHostWindow
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAE@XZ PROC NEAR ; ATL::CComContainedObject<ATL::CAxHostWindow>::~CComContainedObject<ATL::CAxHostWindow>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CAxHostWindow@ATL@@UAE@XZ		; ATL::CAxHostWindow::~CAxHostWindow
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAE@XZ ENDP ; ATL::CComContainedObject<ATL::CAxHostWindow>::~CComContainedObject<ATL::CAxHostWindow>
_TEXT	ENDS
PUBLIC	??1?$CComPtr@UIOleObject@@@ATL@@QAE@XZ		; ATL::CComPtr<IOleObject>::~CComPtr<IOleObject>
PUBLIC	??1?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ	; ATL::CComPtr<IOleInPlaceFrame>::~CComPtr<IOleInPlaceFrame>
PUBLIC	??1?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ	; ATL::CComPtr<IOleInPlaceUIWindow>::~CComPtr<IOleInPlaceUIWindow>
PUBLIC	??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ		; ATL::CComPtr<IDispatch>::~CComPtr<IDispatch>
PUBLIC	??1?$CComPtr@UIViewObjectEx@@@ATL@@QAE@XZ	; ATL::CComPtr<IViewObjectEx>::~CComPtr<IViewObjectEx>
PUBLIC	??1?$CComPtr@UIOleInPlaceObjectWindowless@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleInPlaceObjectWindowless>::~CComPtr<IOleInPlaceObjectWindowless>
PUBLIC	??1?$CComPtr@UIDocHostUIHandlerDispatch@@@ATL@@QAE@XZ ; ATL::CComPtr<IDocHostUIHandlerDispatch>::~CComPtr<IDocHostUIHandlerDispatch>
PUBLIC	??1?$CComPtr@UIFontDisp@@@ATL@@QAE@XZ		; ATL::CComPtr<IFontDisp>::~CComPtr<IFontDisp>
PUBLIC	??1?$CWindowImpl@VCAxHostWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ ; ATL::CWindowImpl<ATL::CAxHostWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::~CWindowImpl<ATL::CAxHostWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >
PUBLIC	??1?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@UAE@XZ ; ATL::IObjectWithSiteImpl<ATL::CAxHostWindow>::~IObjectWithSiteImpl<ATL::CAxHostWindow>
PUBLIC	??1?$CComPtr@UIServiceProvider@@@ATL@@QAE@XZ	; ATL::CComPtr<IServiceProvider>::~CComPtr<IServiceProvider>
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
xdata$x	SEGMENT
$T212004 DD	0ffffffffH
	DD	FLAT:$L211985
$T212002 DD	019930520H
	DD	01H
	DD	FLAT:$T212004
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ??1CAxHostWindow@ATL@@UAE@XZ
_TEXT	SEGMENT
tv67 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CAxHostWindow@ATL@@UAE@XZ PROC NEAR			; ATL::CAxHostWindow::~CAxHostWindow, COMDAT
; _this$ = ecx

; 352  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CAxHostWindow@ATL@@UAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 353  : 	}

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 220				; 000000dcH
	call	??1?$CComPtr@UIServiceProvider@@@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	??1?$CComPtr@UIFontDisp@@@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	??1?$CComPtr@UIDocHostUIHandlerDispatch@@@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	call	??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??1?$CComPtr@UIOleInPlaceObjectWindowless@@@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??1?$CComPtr@UIViewObjectEx@@@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	call	??1?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??1?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??1?$CComPtr@UIOleObject@@@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $L211983
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 56					; 00000038H
	mov	DWORD PTR tv67[ebp], eax
	jmp	SHORT $L211984
$L211983:
	mov	DWORD PTR tv67[ebp], 0
$L211984:
	mov	ecx, DWORD PTR tv67[ebp]
	call	??1?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@UAE@XZ ; ATL::IObjectWithSiteImpl<ATL::CAxHostWindow>::~IObjectWithSiteImpl<ATL::CAxHostWindow>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CWindowImpl@VCAxHostWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L211985:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CWindowImpl@VCAxHostWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ
__ehhandler$??1CAxHostWindow@ATL@@UAE@XZ:
	mov	eax, OFFSET FLAT:$T212002
	jmp	___CxxFrameHandler
text$x	ENDS
??1CAxHostWindow@ATL@@UAE@XZ ENDP			; ATL::CAxHostWindow::~CAxHostWindow
PUBLIC	??1?$CComPtrBase@UIDispatch@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IDispatch>::~CComPtrBase<IDispatch>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ PROC NEAR		; ATL::CComPtr<IDispatch>::~CComPtr<IDispatch>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIDispatch@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IDispatch>::~CComPtrBase<IDispatch>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IDispatch>::~CComPtr<IDispatch>
_TEXT	ENDS
PUBLIC	??1?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::~CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CWindowImpl@VCAxHostWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CWindowImpl@VCAxHostWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ PROC NEAR ; ATL::CWindowImpl<ATL::CAxHostWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::~CWindowImpl<ATL::CAxHostWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CWindowImpl@VCAxHostWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ ENDP ; ATL::CWindowImpl<ATL::CAxHostWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::~CWindowImpl<ATL::CAxHostWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ PROC NEAR ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::~CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UAE@XZ ; ATL::CWindowImplRoot<ATL::CWindow>::~CWindowImplRoot<ATL::CWindow>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ ENDP ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::~CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UIOleObject@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IOleObject>::~CComPtrBase<IOleObject>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIOleObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIOleObject@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<IOleObject>::~CComPtr<IOleObject>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIOleObject@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IOleObject>::~CComPtrBase<IOleObject>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIOleObject@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IOleObject>::~CComPtr<IOleObject>
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IOleInPlaceFrame>::~CComPtrBase<IOleInPlaceFrame>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<IOleInPlaceFrame>::~CComPtr<IOleInPlaceFrame>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IOleInPlaceFrame>::~CComPtrBase<IOleInPlaceFrame>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IOleInPlaceFrame>::~CComPtr<IOleInPlaceFrame>
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::~CComPtrBase<IOleInPlaceUIWindow>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtr<IOleInPlaceUIWindow>::~CComPtr<IOleInPlaceUIWindow>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::~CComPtrBase<IOleInPlaceUIWindow>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IOleInPlaceUIWindow>::~CComPtr<IOleInPlaceUIWindow>
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UIViewObjectEx@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IViewObjectEx>::~CComPtrBase<IViewObjectEx>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIViewObjectEx@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIViewObjectEx@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<IViewObjectEx>::~CComPtr<IViewObjectEx>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIViewObjectEx@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IViewObjectEx>::~CComPtrBase<IViewObjectEx>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIViewObjectEx@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IViewObjectEx>::~CComPtr<IViewObjectEx>
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::~CComPtrBase<IOleInPlaceObjectWindowless>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIOleInPlaceObjectWindowless@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIOleInPlaceObjectWindowless@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtr<IOleInPlaceObjectWindowless>::~CComPtr<IOleInPlaceObjectWindowless>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::~CComPtrBase<IOleInPlaceObjectWindowless>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIOleInPlaceObjectWindowless@@@ATL@@QAE@XZ ENDP ; ATL::CComPtr<IOleInPlaceObjectWindowless>::~CComPtr<IOleInPlaceObjectWindowless>
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::~CComPtrBase<IDocHostUIHandlerDispatch>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIDocHostUIHandlerDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIDocHostUIHandlerDispatch@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtr<IDocHostUIHandlerDispatch>::~CComPtr<IDocHostUIHandlerDispatch>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::~CComPtrBase<IDocHostUIHandlerDispatch>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIDocHostUIHandlerDispatch@@@ATL@@QAE@XZ ENDP ; ATL::CComPtr<IDocHostUIHandlerDispatch>::~CComPtr<IDocHostUIHandlerDispatch>
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UIFontDisp@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IFontDisp>::~CComPtrBase<IFontDisp>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIFontDisp@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIFontDisp@@@ATL@@QAE@XZ PROC NEAR		; ATL::CComPtr<IFontDisp>::~CComPtr<IFontDisp>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIFontDisp@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IFontDisp>::~CComPtrBase<IFontDisp>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIFontDisp@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IFontDisp>::~CComPtr<IFontDisp>
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UIServiceProvider@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IServiceProvider>::~CComPtrBase<IServiceProvider>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIServiceProvider@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIServiceProvider@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<IServiceProvider>::~CComPtr<IServiceProvider>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIServiceProvider@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IServiceProvider>::~CComPtrBase<IServiceProvider>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIServiceProvider@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IServiceProvider>::~CComPtr<IServiceProvider>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIDispatch@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtrBase<IDispatch>::~CComPtrBase<IDispatch>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L162808

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L162808:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIDispatch@@@ATL@@QAE@XZ ENDP		; ATL::CComPtrBase<IDispatch>::~CComPtrBase<IDispatch>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcom.h
_TEXT	ENDS
;	COMDAT ??1?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@UAE@XZ PROC NEAR ; ATL::IObjectWithSiteImpl<ATL::CAxHostWindow>::~IObjectWithSiteImpl<ATL::CAxHostWindow>, COMDAT
; _this$ = ecx

; 3759 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 3760 : 	}

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@UAE@XZ ENDP ; ATL::IObjectWithSiteImpl<ATL::CAxHostWindow>::~IObjectWithSiteImpl<ATL::CAxHostWindow>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIOleObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIOleObject@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtrBase<IOleObject>::~CComPtrBase<IOleObject>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L163316

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163316:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIOleObject@@@ATL@@QAE@XZ ENDP		; ATL::CComPtrBase<IOleObject>::~CComPtrBase<IOleObject>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtrBase<IOleInPlaceFrame>::~CComPtrBase<IOleInPlaceFrame>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L163334

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163334:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IOleInPlaceFrame>::~CComPtrBase<IOleInPlaceFrame>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtrBase<IOleInPlaceUIWindow>::~CComPtrBase<IOleInPlaceUIWindow>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L163357

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163357:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceUIWindow>::~CComPtrBase<IOleInPlaceUIWindow>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIViewObjectEx@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIViewObjectEx@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtrBase<IViewObjectEx>::~CComPtrBase<IViewObjectEx>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L163380

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163380:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIViewObjectEx@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IViewObjectEx>::~CComPtrBase<IViewObjectEx>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::~CComPtrBase<IOleInPlaceObjectWindowless>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L163400

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163400:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QAE@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::~CComPtrBase<IOleInPlaceObjectWindowless>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::~CComPtrBase<IDocHostUIHandlerDispatch>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L163424

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163424:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QAE@XZ ENDP ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::~CComPtrBase<IDocHostUIHandlerDispatch>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIFontDisp@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIFontDisp@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtrBase<IFontDisp>::~CComPtrBase<IFontDisp>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L163439

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163439:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIFontDisp@@@ATL@@QAE@XZ ENDP		; ATL::CComPtrBase<IFontDisp>::~CComPtrBase<IFontDisp>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIServiceProvider@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIServiceProvider@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtrBase<IServiceProvider>::~CComPtrBase<IServiceProvider>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L163456

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163456:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIServiceProvider@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IServiceProvider>::~CComPtrBase<IServiceProvider>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT
_p$ = -8						; size = 4
_this$ = -4						; size = 4
_nBytes$ = 8						; size = 4
?AllocateHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z PROC NEAR ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::AllocateHeap, COMDAT
; _this$ = ecx

; 292  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 293  : 		T* p = static_cast< T* >( Allocator::Allocate( nBytes ) );

	mov	eax, DWORD PTR _nBytes$[ebp]
	push	eax
	call	?Allocate@CCRTAllocator@ATL@@SAPAXI@Z	; ATL::CCRTAllocator::Allocate
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 294  : 		if( p == NULL )

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $L164148

; 295  : 		{
; 296  : 			AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L164148:

; 297  : 		}
; 298  : 		m_p = p;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx], edx
$L212053:

; 299  : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AllocateHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ENDP ; ATL::CTempBuffer<char,128,ATL::CCRTAllocator>::AllocateHeap
_TEXT	ENDS
PUBLIC	?FinalRelease@CAxHostWindow@ATL@@QAEXXZ		; ATL::CAxHostWindow::FinalRelease
PUBLIC	?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ	; ATL::CComObjectRootBase::FinalRelease
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcom.h
;	COMDAT ?FinalRelease@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FinalRelease@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@QAEXXZ PROC NEAR ; ATL::CComPolyObject<ATL::CAxHostWindow>::FinalRelease, COMDAT
; _this$ = ecx

; 2964 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2965 : 		CComObjectRootEx<contained::_ThreadModel::ThreadModelNoCS>::FinalRelease();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::FinalRelease

; 2966 : 		m_contained.FinalRelease();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?FinalRelease@CAxHostWindow@ATL@@QAEXXZ	; ATL::CAxHostWindow::FinalRelease

; 2967 : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FinalRelease@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CComPolyObject<ATL::CAxHostWindow>::FinalRelease
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ PROC NEAR	; ATL::CComObjectRootBase::FinalRelease, COMDAT
; _this$ = ecx

; 2141 : 	void FinalRelease() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ ENDP	; ATL::CComObjectRootBase::FinalRelease
_TEXT	ENDS
PUBLIC	?ReleaseAll@CAxHostWindow@ATL@@QAEXXZ		; ATL::CAxHostWindow::ReleaseAll
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
;	COMDAT ?FinalRelease@CAxHostWindow@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FinalRelease@CAxHostWindow@ATL@@QAEXXZ PROC NEAR	; ATL::CAxHostWindow::FinalRelease, COMDAT
; _this$ = ecx

; 355  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 356  : 		ReleaseAll();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReleaseAll@CAxHostWindow@ATL@@QAEXXZ	; ATL::CAxHostWindow::ReleaseAll

; 357  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FinalRelease@CAxHostWindow@ATL@@QAEXXZ ENDP		; ATL::CAxHostWindow::FinalRelease
_TEXT	ENDS
PUBLIC	??B?$CComPtrBase@UIObjectWithSite@@@ATL@@QBEPAUIObjectWithSite@@XZ ; ATL::CComPtrBase<IObjectWithSite>::operator IObjectWithSite *
PUBLIC	??I?$CComPtrBase@UIObjectWithSite@@@ATL@@QAEPAPAUIObjectWithSite@@XZ ; ATL::CComPtrBase<IObjectWithSite>::operator&
PUBLIC	??C?$CComPtrBase@UIObjectWithSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIObjectWithSite@@@1@XZ ; ATL::CComPtrBase<IObjectWithSite>::operator->
PUBLIC	??0?$CComPtr@UIObjectWithSite@@@ATL@@QAE@XZ	; ATL::CComPtr<IObjectWithSite>::CComPtr<IObjectWithSite>
PUBLIC	??B?$CComPtrBase@UIOleObject@@@ATL@@QBEPAUIOleObject@@XZ ; ATL::CComPtrBase<IOleObject>::operator IOleObject *
PUBLIC	??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
PUBLIC	?Release@?$CComPtrBase@UIOleObject@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IOleObject>::Release
PUBLIC	??1?$CComPtr@UIObjectWithSite@@@ATL@@QAE@XZ	; ATL::CComPtr<IObjectWithSite>::~CComPtr<IObjectWithSite>
PUBLIC	?Release@?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IOleInPlaceFrame>::Release
PUBLIC	?Release@?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::Release
PUBLIC	??B?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAUIViewObjectEx@@XZ ; ATL::CComPtrBase<IViewObjectEx>::operator IViewObjectEx *
PUBLIC	??C?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIViewObjectEx@@@1@XZ ; ATL::CComPtrBase<IViewObjectEx>::operator->
PUBLIC	?Release@?$CComPtrBase@UIViewObjectEx@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IViewObjectEx>::Release
PUBLIC	?Release@?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::Release
PUBLIC	??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
PUBLIC	?Release@?$CComPtrBase@UIUnknown@@@ATL@@QAEXXZ	; ATL::CComPtrBase<IUnknown>::Release
EXTRN	__imp__DestroyAcceleratorTable@4:NEAR
EXTRN	?AtlUnadvise@ATL@@YGJPAUIUnknown@@ABU_GUID@@K@Z:NEAR ; ATL::AtlUnadvise
;	COMDAT xdata$x
xdata$x	SEGMENT
$T212069 DD	0ffffffffH
	DD	FLAT:$L212062
$T212064 DD	019930520H
	DD	01H
	DD	FLAT:$T212069
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?ReleaseAll@CAxHostWindow@ATL@@QAEXXZ
_TEXT	SEGMENT
tv186 = -52						; size = 4
tv173 = -48						; size = 4
tv157 = -44						; size = 4
tv148 = -40						; size = 4
tv138 = -36						; size = 4
tv80 = -32						; size = 4
_spSite$149678 = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?ReleaseAll@CAxHostWindow@ATL@@QAEXXZ PROC NEAR		; ATL::CAxHostWindow::ReleaseAll, COMDAT
; _this$ = ecx

; 489  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ReleaseAll@CAxHostWindow@ATL@@QAEXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 490  : 		if (m_bReleaseAll)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	shr	ecx, 6
	and	ecx, 1
	je	SHORT $L149588

; 491  : 			return;

	jmp	$L149587
$L149588:

; 492  : 		m_bReleaseAll = TRUE;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+152]
	or	eax, 64					; 00000040H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+152], eax

; 493  : 
; 494  : 		if (m_spViewObject != NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??B?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAUIViewObjectEx@@XZ ; ATL::CComPtrBase<IViewObjectEx>::operator IViewObjectEx *
	test	eax, eax
	je	SHORT $L149589

; 495  : 			m_spViewObject->SetAdvise(DVASPECT_CONTENT, 0, NULL);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??C?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIViewObjectEx@@@1@XZ ; ATL::CComPtrBase<IViewObjectEx>::operator->
	mov	DWORD PTR tv80[ebp], eax
	mov	esi, esp
	push	0
	push	0
	push	1
	mov	edx, DWORD PTR tv80[ebp]
	push	edx
	mov	eax, DWORD PTR tv80[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+28]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L149589:

; 496  : 
; 497  : 		if(m_dwAdviseSink != 0xCDCDCDCD)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+148], -842150451		; cdcdcdcdH
	je	SHORT $L149590

; 498  : 		{
; 499  : 			AtlUnadvise(m_spUnknown, m_iidSink, m_dwAdviseSink);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+148]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 128				; 00000080H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
	push	eax
	call	?AtlUnadvise@ATL@@YGJPAUIUnknown@@ABU_GUID@@K@Z ; ATL::AtlUnadvise

; 500  : 			m_dwAdviseSink = 0xCDCDCDCD;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+148], -842150451		; cdcdcdcdH
$L149590:

; 501  : 		}
; 502  : 
; 503  : 		if (m_spOleObject)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??B?$CComPtrBase@UIOleObject@@@ATL@@QBEPAUIOleObject@@XZ ; ATL::CComPtrBase<IOleObject>::operator IOleObject *
	test	eax, eax
	je	SHORT $L149591

; 504  : 		{
; 505  : 			m_spOleObject->Unadvise(m_dwOleObject);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
	mov	DWORD PTR tv138[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+156]
	push	edx
	mov	eax, DWORD PTR tv138[ebp]
	push	eax
	mov	ecx, DWORD PTR tv138[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+80]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 506  : 			m_spOleObject->Close(OLECLOSE_NOSAVE);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
	mov	DWORD PTR tv148[ebp], eax
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR tv148[ebp]
	push	eax
	mov	ecx, DWORD PTR tv148[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+24]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 507  : 			m_spOleObject->SetClientSite(NULL);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
	mov	DWORD PTR tv157[ebp], eax
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR tv157[ebp]
	push	eax
	mov	ecx, DWORD PTR tv157[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L149591:

; 508  : 		}
; 509  : 
; 510  : 		if (m_spUnknown != NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
	test	eax, eax
	je	SHORT $L149603

; 511  : 		{
; 512  : 			CComPtr<IObjectWithSite> spSite;

	lea	ecx, DWORD PTR _spSite$149678[ebp]
	call	??0?$CComPtr@UIObjectWithSite@@@ATL@@QAE@XZ ; ATL::CComPtr<IObjectWithSite>::CComPtr<IObjectWithSite>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 513  : 			m_spUnknown->QueryInterface(__uuidof(IObjectWithSite), (void**)&spSite);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ ; ATL::CComPtrBase<IUnknown>::operator->
	mov	DWORD PTR tv173[ebp], eax
	lea	ecx, DWORD PTR _spSite$149678[ebp]
	call	??I?$CComPtrBase@UIObjectWithSite@@@ATL@@QAEPAPAUIObjectWithSite@@XZ ; ATL::CComPtrBase<IObjectWithSite>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET FLAT:__GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
	mov	eax, DWORD PTR tv173[ebp]
	push	eax
	mov	ecx, DWORD PTR tv173[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 514  : 			if (spSite != NULL)

	lea	ecx, DWORD PTR _spSite$149678[ebp]
	call	??B?$CComPtrBase@UIObjectWithSite@@@ATL@@QBEPAUIObjectWithSite@@XZ ; ATL::CComPtrBase<IObjectWithSite>::operator IObjectWithSite *
	test	eax, eax
	je	SHORT $L149680

; 515  : 				spSite->SetSite(NULL);

	lea	ecx, DWORD PTR _spSite$149678[ebp]
	call	??C?$CComPtrBase@UIObjectWithSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIObjectWithSite@@@1@XZ ; ATL::CComPtrBase<IObjectWithSite>::operator->
	mov	DWORD PTR tv186[ebp], eax
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR tv186[ebp]
	push	eax
	mov	ecx, DWORD PTR tv186[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L149680:

; 516  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spSite$149678[ebp]
	call	??1?$CComPtr@UIObjectWithSite@@@ATL@@QAE@XZ
$L149603:

; 517  : 
; 518  : 		m_spViewObject.Release();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	?Release@?$CComPtrBase@UIViewObjectEx@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IViewObjectEx>::Release

; 519  : 		m_dwViewObjectType = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+144], 0

; 520  : 
; 521  : 		m_spInPlaceObjectWindowless.Release();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	?Release@?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::Release

; 522  : 		m_spOleObject.Release();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?Release@?$CComPtrBase@UIOleObject@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IOleObject>::Release

; 523  : 		m_spUnknown.Release();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	?Release@?$CComPtrBase@UIUnknown@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IUnknown>::Release

; 524  : 
; 525  : 		m_spInPlaceUIWindow.Release();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	call	?Release@?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::Release

; 526  : 		m_spInPlaceFrame.Release();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	?Release@?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IOleInPlaceFrame>::Release

; 527  : 
; 528  : 		m_bInPlaceActive = FALSE;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+152]
	and	edx, -2					; fffffffeH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], edx

; 529  : 		m_bWindowless = FALSE;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+152]
	and	edx, -9					; fffffff7H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], edx

; 530  : 		m_bInPlaceActive = FALSE;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+152]
	and	edx, -2					; fffffffeH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], edx

; 531  : 		m_bUIActive = FALSE;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+152]
	and	edx, -3					; fffffffdH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], edx

; 532  : 		m_bCapture = FALSE;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+152]
	and	edx, -17				; ffffffefH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], edx

; 533  : 		m_bReleaseAll = FALSE;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+152]
	and	edx, -65				; ffffffbfH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], edx

; 534  : 
; 535  : 		if (m_hAccel != NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+196], 0
	je	SHORT $L149587

; 536  : 		{
; 537  : 			DestroyAcceleratorTable(m_hAccel);

	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+196]
	push	eax
	call	DWORD PTR __imp__DestroyAcceleratorTable@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 538  : 			m_hAccel = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+196], 0
$L149587:

; 539  : 		}
; 540  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212068
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	add	esp, 52					; 00000034H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L212068:
	DD	1
	DD	$L212067
$L212067:
	DD	-24					; ffffffe8H
	DD	4
	DD	$L212065
$L212065:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L212062:
	lea	ecx, DWORD PTR _spSite$149678[ebp]
	jmp	??1?$CComPtr@UIObjectWithSite@@@ATL@@QAE@XZ
__ehhandler$?ReleaseAll@CAxHostWindow@ATL@@QAEXXZ:
	mov	eax, OFFSET FLAT:$T212064
	jmp	___CxxFrameHandler
text$x	ENDS
?ReleaseAll@CAxHostWindow@ATL@@QAEXXZ ENDP		; ATL::CAxHostWindow::ReleaseAll
PUBLIC	??1?$CComPtrBase@UIObjectWithSite@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IObjectWithSite>::~CComPtrBase<IObjectWithSite>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIObjectWithSite@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIObjectWithSite@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<IObjectWithSite>::~CComPtr<IObjectWithSite>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIObjectWithSite@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IObjectWithSite>::~CComPtrBase<IObjectWithSite>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIObjectWithSite@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IObjectWithSite>::~CComPtr<IObjectWithSite>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ PROC NEAR ; ATL::CComPtrBase<IUnknown>::operator IUnknown *, COMDAT
; _this$ = ecx

; 131  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 132  : 		return p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 133  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ENDP ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIUnknown@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_pTemp$ = -8						; size = 4
_this$ = -4						; size = 4
?Release@?$CComPtrBase@UIUnknown@@@ATL@@QAEXXZ PROC NEAR ; ATL::CComPtrBase<IUnknown>::Release, COMDAT
; _this$ = ecx

; 166  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 167  : 		T* pTemp = p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 168  : 		if (pTemp)

	cmp	DWORD PTR _pTemp$[ebp], 0
	je	SHORT $L162856

; 169  : 		{
; 170  : 			p = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 171  : 			pTemp->Release();

	mov	eax, DWORD PTR _pTemp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pTemp$[ebp]
	push	edx
	call	DWORD PTR [ecx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L162856:

; 172  : 		}
; 173  : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@?$CComPtrBase@UIUnknown@@@ATL@@QAEXXZ ENDP	; ATL::CComPtrBase<IUnknown>::Release
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIOleObject@@@ATL@@QBEPAUIOleObject@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIOleObject@@@ATL@@QBEPAUIOleObject@@XZ PROC NEAR ; ATL::CComPtrBase<IOleObject>::operator IOleObject *, COMDAT
; _this$ = ecx

; 131  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 132  : 		return p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 133  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UIOleObject@@@ATL@@QBEPAUIOleObject@@XZ ENDP ; ATL::CComPtrBase<IOleObject>::operator IOleObject *
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ PROC NEAR ; ATL::CComPtrBase<IOleObject>::operator->, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 148  : 		ATLASSERT(p!=NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L212082
	push	OFFSET FLAT:??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
	push	0
	push	148					; 00000094H
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212082
	int	3
$L212082:

; 149  : 		return (_NoAddRefReleaseOnCComPtr<T>*)p;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 150  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ENDP ; ATL::CComPtrBase<IOleObject>::operator->
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIOleObject@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_pTemp$ = -8						; size = 4
_this$ = -4						; size = 4
?Release@?$CComPtrBase@UIOleObject@@@ATL@@QAEXXZ PROC NEAR ; ATL::CComPtrBase<IOleObject>::Release, COMDAT
; _this$ = ecx

; 166  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 167  : 		T* pTemp = p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 168  : 		if (pTemp)

	cmp	DWORD PTR _pTemp$[ebp], 0
	je	SHORT $L163328

; 169  : 		{
; 170  : 			p = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 171  : 			pTemp->Release();

	mov	eax, DWORD PTR _pTemp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pTemp$[ebp]
	push	edx
	call	DWORD PTR [ecx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163328:

; 172  : 		}
; 173  : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@?$CComPtrBase@UIOleObject@@@ATL@@QAEXXZ ENDP	; ATL::CComPtrBase<IOleObject>::Release
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_pTemp$ = -8						; size = 4
_this$ = -4						; size = 4
?Release@?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEXXZ PROC NEAR ; ATL::CComPtrBase<IOleInPlaceFrame>::Release, COMDAT
; _this$ = ecx

; 166  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 167  : 		T* pTemp = p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 168  : 		if (pTemp)

	cmp	DWORD PTR _pTemp$[ebp], 0
	je	SHORT $L163344

; 169  : 		{
; 170  : 			p = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 171  : 			pTemp->Release();

	mov	eax, DWORD PTR _pTemp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pTemp$[ebp]
	push	edx
	call	DWORD PTR [ecx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163344:

; 172  : 		}
; 173  : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEXXZ ENDP ; ATL::CComPtrBase<IOleInPlaceFrame>::Release
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_pTemp$ = -8						; size = 4
_this$ = -4						; size = 4
?Release@?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEXXZ PROC NEAR ; ATL::CComPtrBase<IOleInPlaceUIWindow>::Release, COMDAT
; _this$ = ecx

; 166  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 167  : 		T* pTemp = p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 168  : 		if (pTemp)

	cmp	DWORD PTR _pTemp$[ebp], 0
	je	SHORT $L163367

; 169  : 		{
; 170  : 			p = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 171  : 			pTemp->Release();

	mov	eax, DWORD PTR _pTemp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pTemp$[ebp]
	push	edx
	call	DWORD PTR [ecx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163367:

; 172  : 		}
; 173  : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEXXZ ENDP ; ATL::CComPtrBase<IOleInPlaceUIWindow>::Release
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAUIViewObjectEx@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAUIViewObjectEx@@XZ PROC NEAR ; ATL::CComPtrBase<IViewObjectEx>::operator IViewObjectEx *, COMDAT
; _this$ = ecx

; 131  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 132  : 		return p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 133  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAUIViewObjectEx@@XZ ENDP ; ATL::CComPtrBase<IViewObjectEx>::operator IViewObjectEx *
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIViewObjectEx@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIViewObjectEx@@@1@XZ PROC NEAR ; ATL::CComPtrBase<IViewObjectEx>::operator->, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 148  : 		ATLASSERT(p!=NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L212093
	push	OFFSET FLAT:??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
	push	0
	push	148					; 00000094H
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212093
	int	3
$L212093:

; 149  : 		return (_NoAddRefReleaseOnCComPtr<T>*)p;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 150  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIViewObjectEx@@@1@XZ ENDP ; ATL::CComPtrBase<IViewObjectEx>::operator->
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIViewObjectEx@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_pTemp$ = -8						; size = 4
_this$ = -4						; size = 4
?Release@?$CComPtrBase@UIViewObjectEx@@@ATL@@QAEXXZ PROC NEAR ; ATL::CComPtrBase<IViewObjectEx>::Release, COMDAT
; _this$ = ecx

; 166  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 167  : 		T* pTemp = p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 168  : 		if (pTemp)

	cmp	DWORD PTR _pTemp$[ebp], 0
	je	SHORT $L163394

; 169  : 		{
; 170  : 			p = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 171  : 			pTemp->Release();

	mov	eax, DWORD PTR _pTemp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pTemp$[ebp]
	push	edx
	call	DWORD PTR [ecx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163394:

; 172  : 		}
; 173  : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@?$CComPtrBase@UIViewObjectEx@@@ATL@@QAEXXZ ENDP ; ATL::CComPtrBase<IViewObjectEx>::Release
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_pTemp$ = -8						; size = 4
_this$ = -4						; size = 4
?Release@?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QAEXXZ PROC NEAR ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::Release, COMDAT
; _this$ = ecx

; 166  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 167  : 		T* pTemp = p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 168  : 		if (pTemp)

	cmp	DWORD PTR _pTemp$[ebp], 0
	je	SHORT $L163414

; 169  : 		{
; 170  : 			p = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 171  : 			pTemp->Release();

	mov	eax, DWORD PTR _pTemp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pTemp$[ebp]
	push	edx
	call	DWORD PTR [ecx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163414:

; 172  : 		}
; 173  : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QAEXXZ ENDP ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::Release
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIObjectWithSite@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IObjectWithSite>::CComPtrBase<IObjectWithSite>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CComPtr@UIObjectWithSite@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIObjectWithSite@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<IObjectWithSite>::CComPtr<IObjectWithSite>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIObjectWithSite@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IObjectWithSite>::CComPtrBase<IObjectWithSite>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIObjectWithSite@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IObjectWithSite>::CComPtr<IObjectWithSite>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIObjectWithSite@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIObjectWithSite@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtrBase<IObjectWithSite>::~CComPtrBase<IObjectWithSite>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L163478

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163478:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIObjectWithSite@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IObjectWithSite>::~CComPtrBase<IObjectWithSite>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIObjectWithSite@@@ATL@@QBEPAUIObjectWithSite@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIObjectWithSite@@@ATL@@QBEPAUIObjectWithSite@@XZ PROC NEAR ; ATL::CComPtrBase<IObjectWithSite>::operator IObjectWithSite *, COMDAT
; _this$ = ecx

; 131  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 132  : 		return p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 133  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UIObjectWithSite@@@ATL@@QBEPAUIObjectWithSite@@XZ ENDP ; ATL::CComPtrBase<IObjectWithSite>::operator IObjectWithSite *
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIObjectWithSite@@@ATL@@QAEPAPAUIObjectWithSite@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIObjectWithSite@@@ATL@@QAEPAPAUIObjectWithSite@@XZ PROC NEAR ; ATL::CComPtrBase<IObjectWithSite>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L212106
	push	OFFSET FLAT:??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
	push	0
	push	143					; 0000008fH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212106
	int	3
$L212106:

; 144  : 		return &p;

	mov	eax, DWORD PTR _this$[ebp]

; 145  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UIObjectWithSite@@@ATL@@QAEPAPAUIObjectWithSite@@XZ ENDP ; ATL::CComPtrBase<IObjectWithSite>::operator&
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIObjectWithSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIObjectWithSite@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIObjectWithSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIObjectWithSite@@@1@XZ PROC NEAR ; ATL::CComPtrBase<IObjectWithSite>::operator->, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 148  : 		ATLASSERT(p!=NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L212109
	push	OFFSET FLAT:??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
	push	0
	push	148					; 00000094H
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212109
	int	3
$L212109:

; 149  : 		return (_NoAddRefReleaseOnCComPtr<T>*)p;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 150  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CComPtrBase@UIObjectWithSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIObjectWithSite@@@1@XZ ENDP ; ATL::CComPtrBase<IObjectWithSite>::operator->
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIObjectWithSite@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIObjectWithSite@@@ATL@@IAE@XZ PROC NEAR ; ATL::CComPtrBase<IObjectWithSite>::CComPtrBase<IObjectWithSite>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIObjectWithSite@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<IObjectWithSite>::CComPtrBase<IObjectWithSite>
_TEXT	ENDS
PUBLIC	?get_Font@CAxHostWindow@ATL@@UAGJPAPAUIFontDisp@@@Z ; ATL::CAxHostWindow::get_Font
PUBLIC	?put_MessageReflect@CAxHostWindow@ATL@@UAGJF@Z	; ATL::CAxHostWindow::put_MessageReflect
PUBLIC	?get_MessageReflect@CAxHostWindow@ATL@@UAGJPAF@Z ; ATL::CAxHostWindow::get_MessageReflect
PUBLIC	?get_ShowGrabHandles@CAxHostWindow@ATL@@UAGJPAF@Z ; ATL::CAxHostWindow::get_ShowGrabHandles
PUBLIC	?get_ShowHatching@CAxHostWindow@ATL@@UAGJPAF@Z	; ATL::CAxHostWindow::get_ShowHatching
PUBLIC	?put_DocHostFlags@CAxHostWindow@ATL@@UAGJK@Z	; ATL::CAxHostWindow::put_DocHostFlags
PUBLIC	?get_DocHostFlags@CAxHostWindow@ATL@@UAGJPAK@Z	; ATL::CAxHostWindow::get_DocHostFlags
PUBLIC	?put_DocHostDoubleClickFlags@CAxHostWindow@ATL@@UAGJK@Z ; ATL::CAxHostWindow::put_DocHostDoubleClickFlags
PUBLIC	?get_DocHostDoubleClickFlags@CAxHostWindow@ATL@@UAGJPAK@Z ; ATL::CAxHostWindow::get_DocHostDoubleClickFlags
PUBLIC	?put_AllowContextMenu@CAxHostWindow@ATL@@UAGJF@Z ; ATL::CAxHostWindow::put_AllowContextMenu
PUBLIC	?get_AllowContextMenu@CAxHostWindow@ATL@@UAGJPAF@Z ; ATL::CAxHostWindow::get_AllowContextMenu
PUBLIC	?put_AllowShowUI@CAxHostWindow@ATL@@UAGJF@Z	; ATL::CAxHostWindow::put_AllowShowUI
PUBLIC	?get_AllowShowUI@CAxHostWindow@ATL@@UAGJPAF@Z	; ATL::CAxHostWindow::get_AllowShowUI
PUBLIC	?put_OptionKeyPath@CAxHostWindow@ATL@@UAGJPAG@Z	; ATL::CAxHostWindow::put_OptionKeyPath
PUBLIC	?get_OptionKeyPath@CAxHostWindow@ATL@@UAGJPAPAG@Z ; ATL::CAxHostWindow::get_OptionKeyPath
PUBLIC	?SetAmbientDispatch@CAxHostWindow@ATL@@UAGJPAUIDispatch@@@Z ; ATL::CAxHostWindow::SetAmbientDispatch
PUBLIC	?SetSite@CAxHostWindow@ATL@@UAGJPAUIUnknown@@@Z	; ATL::CAxHostWindow::SetSite
PUBLIC	?SaveObject@CAxHostWindow@ATL@@UAGJXZ		; ATL::CAxHostWindow::SaveObject
PUBLIC	?GetMoniker@CAxHostWindow@ATL@@UAGJKKPAPAUIMoniker@@@Z ; ATL::CAxHostWindow::GetMoniker
PUBLIC	?GetContainer@CAxHostWindow@ATL@@UAGJPAPAUIOleContainer@@@Z ; ATL::CAxHostWindow::GetContainer
PUBLIC	?ShowObject@CAxHostWindow@ATL@@UAGJXZ		; ATL::CAxHostWindow::ShowObject
PUBLIC	?OnShowWindow@CAxHostWindow@ATL@@UAGJH@Z	; ATL::CAxHostWindow::OnShowWindow
PUBLIC	?RequestNewObjectLayout@CAxHostWindow@ATL@@UAGJXZ ; ATL::CAxHostWindow::RequestNewObjectLayout
PUBLIC	?GetWindow@CAxHostWindow@ATL@@UAGJPAPAUHWND__@@@Z ; ATL::CAxHostWindow::GetWindow
PUBLIC	?ContextSensitiveHelp@CAxHostWindow@ATL@@UAGJH@Z ; ATL::CAxHostWindow::ContextSensitiveHelp
PUBLIC	?CanInPlaceActivate@CAxHostWindow@ATL@@UAGJXZ	; ATL::CAxHostWindow::CanInPlaceActivate
PUBLIC	?OnInPlaceActivate@CAxHostWindow@ATL@@UAGJXZ	; ATL::CAxHostWindow::OnInPlaceActivate
PUBLIC	?OnUIActivate@CAxHostWindow@ATL@@UAGJXZ		; ATL::CAxHostWindow::OnUIActivate
PUBLIC	?GetWindowContext@CAxHostWindow@ATL@@UAGJPAPAUIOleInPlaceFrame@@PAPAUIOleInPlaceUIWindow@@PAUtagRECT@@2PAUtagOIFI@@@Z ; ATL::CAxHostWindow::GetWindowContext
PUBLIC	?Scroll@CAxHostWindow@ATL@@UAGJUtagSIZE@@@Z	; ATL::CAxHostWindow::Scroll
PUBLIC	?OnUIDeactivate@CAxHostWindow@ATL@@UAGJH@Z	; ATL::CAxHostWindow::OnUIDeactivate
PUBLIC	?OnInPlaceDeactivate@CAxHostWindow@ATL@@UAGJXZ	; ATL::CAxHostWindow::OnInPlaceDeactivate
PUBLIC	?DiscardUndoState@CAxHostWindow@ATL@@UAGJXZ	; ATL::CAxHostWindow::DiscardUndoState
PUBLIC	?DeactivateAndUndo@CAxHostWindow@ATL@@UAGJXZ	; ATL::CAxHostWindow::DeactivateAndUndo
PUBLIC	?OnPosRectChange@CAxHostWindow@ATL@@UAGJPBUtagRECT@@@Z ; ATL::CAxHostWindow::OnPosRectChange
PUBLIC	?OnInPlaceActivateEx@CAxHostWindow@ATL@@UAGJPAHK@Z ; ATL::CAxHostWindow::OnInPlaceActivateEx
PUBLIC	?OnInPlaceDeactivateEx@CAxHostWindow@ATL@@UAGJH@Z ; ATL::CAxHostWindow::OnInPlaceDeactivateEx
PUBLIC	?RequestUIActivate@CAxHostWindow@ATL@@UAGJXZ	; ATL::CAxHostWindow::RequestUIActivate
PUBLIC	?CanWindowlessActivate@CAxHostWindow@ATL@@UAGJXZ ; ATL::CAxHostWindow::CanWindowlessActivate
PUBLIC	?GetCapture@CAxHostWindow@ATL@@UAGJXZ		; ATL::CAxHostWindow::GetCapture
PUBLIC	?SetCapture@CAxHostWindow@ATL@@UAGJH@Z		; ATL::CAxHostWindow::SetCapture
PUBLIC	?GetFocus@CAxHostWindow@ATL@@UAGJXZ		; ATL::CAxHostWindow::GetFocus
PUBLIC	?SetFocus@CAxHostWindow@ATL@@UAGJH@Z		; ATL::CAxHostWindow::SetFocus
PUBLIC	?GetDC@CAxHostWindow@ATL@@UAGJPBUtagRECT@@KPAPAUHDC__@@@Z ; ATL::CAxHostWindow::GetDC
PUBLIC	?ReleaseDC@CAxHostWindow@ATL@@UAGJPAUHDC__@@@Z	; ATL::CAxHostWindow::ReleaseDC
PUBLIC	?InvalidateRect@CAxHostWindow@ATL@@UAGJPBUtagRECT@@H@Z ; ATL::CAxHostWindow::InvalidateRect
PUBLIC	?InvalidateRgn@CAxHostWindow@ATL@@UAGJPAUHRGN__@@H@Z ; ATL::CAxHostWindow::InvalidateRgn
PUBLIC	?ScrollRect@CAxHostWindow@ATL@@UAGJHHPBUtagRECT@@0@Z ; ATL::CAxHostWindow::ScrollRect
PUBLIC	?AdjustRect@CAxHostWindow@ATL@@UAGJPAUtagRECT@@@Z ; ATL::CAxHostWindow::AdjustRect
PUBLIC	?OnDefWindowMessage@CAxHostWindow@ATL@@UAGJIIJPAJ@Z ; ATL::CAxHostWindow::OnDefWindowMessage
PUBLIC	?OnControlInfoChanged@CAxHostWindow@ATL@@UAGJXZ	; ATL::CAxHostWindow::OnControlInfoChanged
PUBLIC	?LockInPlaceActive@CAxHostWindow@ATL@@UAGJH@Z	; ATL::CAxHostWindow::LockInPlaceActive
PUBLIC	?GetExtendedControl@CAxHostWindow@ATL@@UAGJPAPAUIDispatch@@@Z ; ATL::CAxHostWindow::GetExtendedControl
PUBLIC	?TransformCoords@CAxHostWindow@ATL@@UAGJPAU_POINTL@@PAUtagPOINTF@@K@Z ; ATL::CAxHostWindow::TransformCoords
PUBLIC	?TranslateAcceleratorA@CAxHostWindow@ATL@@UAGJPAUtagMSG@@K@Z ; ATL::CAxHostWindow::TranslateAcceleratorA
PUBLIC	?OnFocus@CAxHostWindow@ATL@@UAGJH@Z		; ATL::CAxHostWindow::OnFocus
PUBLIC	?ShowPropertyFrame@CAxHostWindow@ATL@@UAGJXZ	; ATL::CAxHostWindow::ShowPropertyFrame
PUBLIC	?OnDataChange@CAxHostWindow@ATL@@UAGXPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z ; ATL::CAxHostWindow::OnDataChange
PUBLIC	?OnViewChange@CAxHostWindow@ATL@@UAGXKJ@Z	; ATL::CAxHostWindow::OnViewChange
PUBLIC	?OnRename@CAxHostWindow@ATL@@UAGXPAUIMoniker@@@Z ; ATL::CAxHostWindow::OnRename
PUBLIC	?OnSave@CAxHostWindow@ATL@@UAGXXZ		; ATL::CAxHostWindow::OnSave
PUBLIC	?OnClose@CAxHostWindow@ATL@@UAGXXZ		; ATL::CAxHostWindow::OnClose
PUBLIC	?ParseDisplayName@CAxHostWindow@ATL@@UAGJPAUIBindCtx@@PAGPAKPAPAUIMoniker@@@Z ; ATL::CAxHostWindow::ParseDisplayName
PUBLIC	?EnumObjects@CAxHostWindow@ATL@@UAGJKPAPAUIEnumUnknown@@@Z ; ATL::CAxHostWindow::EnumObjects
PUBLIC	?LockContainer@CAxHostWindow@ATL@@UAGJH@Z	; ATL::CAxHostWindow::LockContainer
PUBLIC	?GetWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEP6GJPAUHWND__@@IIJ@ZXZ ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWindowProc
PUBLIC	?GetSite@?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::IObjectWithSiteImpl<ATL::CAxHostWindow>::GetSite
PUBLIC	?GetTypeInfoCount@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJPAI@Z ; ATL::IDispatchImpl<IAxWinAmbientDispatchEx,&_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5,&ATL::CAtlModule::m_libid,65535,65535,ATL::CComTypeInfoHolder>::GetTypeInfoCount
PUBLIC	?GetTypeInfo@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJIKPAPAUITypeInfo@@@Z ; ATL::IDispatchImpl<IAxWinAmbientDispatchEx,&_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5,&ATL::CAtlModule::m_libid,65535,65535,ATL::CComTypeInfoHolder>::GetTypeInfo
PUBLIC	?GetIDsOfNames@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJABU_GUID@@PAPAGIKPAJ@Z ; ATL::IDispatchImpl<IAxWinAmbientDispatchEx,&_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5,&ATL::CAtlModule::m_libid,65535,65535,ATL::CComTypeInfoHolder>::GetIDsOfNames
PUBLIC	?QueryService@CAxHostWindow@ATL@@UAGJABU_GUID@@0PAPAX@Z ; ATL::CAxHostWindow::QueryService
PUBLIC	??0CAxHostWindow@ATL@@QAE@XZ			; ATL::CAxHostWindow::CAxHostWindow
PUBLIC	?OnFinalMessage@CAxHostWindow@ATL@@UAEXPAUHWND__@@@Z ; ATL::CAxHostWindow::OnFinalMessage
PUBLIC	?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef
PUBLIC	?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComContainedObject<ATL::CAxHostWindow>::Release
PUBLIC	?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface
PUBLIC	?GetControllingUnknown@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAEPAUIUnknown@@XZ ; ATL::CComContainedObject<ATL::CAxHostWindow>::GetControllingUnknown
PUBLIC	??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6B?$CWindowImpl@VCAxHostWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@1@@ ; ATL::CComContainedObject<ATL::CAxHostWindow>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIAxWinHostWindowLic@@@ ; ATL::CComContainedObject<ATL::CAxHostWindow>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIOleClientSite@@@ ; ATL::CComContainedObject<ATL::CAxHostWindow>::`vftable'
PUBLIC	?ProcessWindowMessage@CAxHostWindow@ATL@@UAEHPAUHWND__@@IIJAAJK@Z ; ATL::CAxHostWindow::ProcessWindowMessage
PUBLIC	??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIOleInPlaceSiteWindowless@@@ ; ATL::CComContainedObject<ATL::CAxHostWindow>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIOleControlSite@@@ ; ATL::CComContainedObject<ATL::CAxHostWindow>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIOleContainer@@@ ; ATL::CComContainedObject<ATL::CAxHostWindow>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6B?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@1@@ ; ATL::CComContainedObject<ATL::CAxHostWindow>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIServiceProvider@@@ ; ATL::CComContainedObject<ATL::CAxHostWindow>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIAdviseSink@@@ ; ATL::CComContainedObject<ATL::CAxHostWindow>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIDocHostUIHandler@@@ ; ATL::CComContainedObject<ATL::CAxHostWindow>::`vftable'
PUBLIC	??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6B?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@1@@ ; ATL::CComContainedObject<ATL::CAxHostWindow>::`vftable'
PUBLIC	??_G?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAEPAXI@Z ; ATL::CComContainedObject<ATL::CAxHostWindow>::`scalar deleting destructor'
PUBLIC	?CreateControl@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@@Z ; ATL::CAxHostWindow::CreateControl
PUBLIC	?CreateControlEx@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@PAPAUIUnknown@@ABU_GUID@@PAU5@@Z ; ATL::CAxHostWindow::CreateControlEx
PUBLIC	?AttachControl@CAxHostWindow@ATL@@UAGJPAUIUnknown@@PAUHWND__@@@Z ; ATL::CAxHostWindow::AttachControl
PUBLIC	?QueryControl@CAxHostWindow@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CAxHostWindow::QueryControl
PUBLIC	?SetExternalDispatch@CAxHostWindow@ATL@@UAGJPAUIDispatch@@@Z ; ATL::CAxHostWindow::SetExternalDispatch
PUBLIC	?SetExternalUIHandler@CAxHostWindow@ATL@@UAGJPAUIDocHostUIHandlerDispatch@@@Z ; ATL::CAxHostWindow::SetExternalUIHandler
PUBLIC	?CreateControlLic@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@PAG@Z ; ATL::CAxHostWindow::CreateControlLic
PUBLIC	?CreateControlLicEx@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@PAPAUIUnknown@@ABU_GUID@@PAU5@PAG@Z ; ATL::CAxHostWindow::CreateControlLicEx
PUBLIC	?ShowContextMenu@CAxHostWindow@ATL@@UAGJKPAUtagPOINT@@PAUIUnknown@@PAUIDispatch@@@Z ; ATL::CAxHostWindow::ShowContextMenu
PUBLIC	?GetHostInfo@CAxHostWindow@ATL@@UAGJPAU_DOCHOSTUIINFO@@@Z ; ATL::CAxHostWindow::GetHostInfo
PUBLIC	?ShowUI@CAxHostWindow@ATL@@UAGJKPAUIOleInPlaceActiveObject@@PAUIOleCommandTarget@@PAUIOleInPlaceFrame@@PAUIOleInPlaceUIWindow@@@Z ; ATL::CAxHostWindow::ShowUI
PUBLIC	?HideUI@CAxHostWindow@ATL@@UAGJXZ		; ATL::CAxHostWindow::HideUI
PUBLIC	?UpdateUI@CAxHostWindow@ATL@@UAGJXZ		; ATL::CAxHostWindow::UpdateUI
PUBLIC	?EnableModeless@CAxHostWindow@ATL@@UAGJH@Z	; ATL::CAxHostWindow::EnableModeless
PUBLIC	?OnDocWindowActivate@CAxHostWindow@ATL@@UAGJH@Z	; ATL::CAxHostWindow::OnDocWindowActivate
PUBLIC	?OnFrameWindowActivate@CAxHostWindow@ATL@@UAGJH@Z ; ATL::CAxHostWindow::OnFrameWindowActivate
PUBLIC	?ResizeBorder@CAxHostWindow@ATL@@UAGJPBUtagRECT@@PAUIOleInPlaceUIWindow@@H@Z ; ATL::CAxHostWindow::ResizeBorder
PUBLIC	?TranslateAcceleratorA@CAxHostWindow@ATL@@UAGJPAUtagMSG@@PBU_GUID@@K@Z ; ATL::CAxHostWindow::TranslateAcceleratorA
PUBLIC	?GetOptionKeyPath@CAxHostWindow@ATL@@UAGJPAPAGK@Z ; ATL::CAxHostWindow::GetOptionKeyPath
PUBLIC	?GetDropTarget@CAxHostWindow@ATL@@UAGJPAUIDropTarget@@PAPAU3@@Z ; ATL::CAxHostWindow::GetDropTarget
PUBLIC	?GetExternal@CAxHostWindow@ATL@@UAGJPAPAUIDispatch@@@Z ; ATL::CAxHostWindow::GetExternal
PUBLIC	?TranslateUrl@CAxHostWindow@ATL@@UAGJKPAGPAPAG@Z ; ATL::CAxHostWindow::TranslateUrl
PUBLIC	?FilterDataObject@CAxHostWindow@ATL@@UAGJPAUIDataObject@@PAPAU3@@Z ; ATL::CAxHostWindow::FilterDataObject
PUBLIC	?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W3AGKXZ ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{4}'
PUBLIC	?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W3AGKXZ ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{4}'
PUBLIC	?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W7AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{8}'
PUBLIC	?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W7AGKXZ ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{8}'
PUBLIC	?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W7AGKXZ ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{8}'
PUBLIC	?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WM@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{12}'
PUBLIC	?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WM@AGKXZ ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{12}'
PUBLIC	?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WM@AGKXZ ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{12}'
PUBLIC	?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBA@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{16}'
PUBLIC	?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBA@AGKXZ ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{16}'
PUBLIC	?Invoke@CAxHostWindow@ATL@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ; ATL::CAxHostWindow::Invoke
PUBLIC	?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBA@AGKXZ ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{16}'
PUBLIC	?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBE@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{20}'
PUBLIC	?put_AllowWindowlessActivation@CAxHostWindow@ATL@@UAGJF@Z ; ATL::CAxHostWindow::put_AllowWindowlessActivation
PUBLIC	?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBE@AGKXZ ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{20}'
PUBLIC	?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBE@AGKXZ ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{20}'
PUBLIC	?get_AllowWindowlessActivation@CAxHostWindow@ATL@@UAGJPAF@Z ; ATL::CAxHostWindow::get_AllowWindowlessActivation
PUBLIC	??_E?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WDI@AEPAXI@Z ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::`vector deleting destructor'
PUBLIC	?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBM@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{28}'
PUBLIC	?put_BackColor@CAxHostWindow@ATL@@UAGJK@Z	; ATL::CAxHostWindow::put_BackColor
PUBLIC	?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBM@AGKXZ ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{28}'
PUBLIC	?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBM@AGKXZ ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{28}'
PUBLIC	?get_BackColor@CAxHostWindow@ATL@@UAGJPAK@Z	; ATL::CAxHostWindow::get_BackColor
PUBLIC	?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCA@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{32}'
PUBLIC	?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCA@AGKXZ ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{32}'
PUBLIC	?put_ForeColor@CAxHostWindow@ATL@@UAGJK@Z	; ATL::CAxHostWindow::put_ForeColor
PUBLIC	?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCA@AGKXZ ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{32}'
PUBLIC	?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCE@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{36}'
PUBLIC	?get_ForeColor@CAxHostWindow@ATL@@UAGJPAK@Z	; ATL::CAxHostWindow::get_ForeColor
PUBLIC	?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCE@AGKXZ ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{36}'
PUBLIC	?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCE@AGKXZ ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{36}'
PUBLIC	?put_LocaleID@CAxHostWindow@ATL@@UAGJK@Z	; ATL::CAxHostWindow::put_LocaleID
PUBLIC	?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCI@AGJABU_GUID@@PAPAX@Z ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{40}'
PUBLIC	?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCI@AGKXZ ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{40}'
PUBLIC	?get_LocaleID@CAxHostWindow@ATL@@UAGJPAK@Z	; ATL::CAxHostWindow::get_LocaleID
PUBLIC	?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCI@AGKXZ ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{40}'
PUBLIC	?put_UserMode@CAxHostWindow@ATL@@UAGJF@Z	; ATL::CAxHostWindow::put_UserMode
PUBLIC	?get_UserMode@CAxHostWindow@ATL@@UAGJPAF@Z	; ATL::CAxHostWindow::get_UserMode
PUBLIC	?put_DisplayAsDefault@CAxHostWindow@ATL@@UAGJF@Z ; ATL::CAxHostWindow::put_DisplayAsDefault
PUBLIC	?get_DisplayAsDefault@CAxHostWindow@ATL@@UAGJPAF@Z ; ATL::CAxHostWindow::get_DisplayAsDefault
PUBLIC	?put_Font@CAxHostWindow@ATL@@UAGJPAUIFontDisp@@@Z ; ATL::CAxHostWindow::put_Font
EXTRN	??_E?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAEPAXI@Z:NEAR ; ATL::CComContainedObject<ATL::CAxHostWindow>::`vector deleting destructor'
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6B?$CWindowImpl@VCAxHostWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@1@@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcom.h
CONST	SEGMENT
??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6B?$CWindowImpl@VCAxHostWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@1@@ DD FLAT:?ProcessWindowMessage@CAxHostWindow@ATL@@UAEHPAUHWND__@@IIJAAJK@Z ; ATL::CComContainedObject<ATL::CAxHostWindow>::`vftable'
	DD	FLAT:??_E?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAEPAXI@Z
	DD	FLAT:?GetWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?OnFinalMessage@CAxHostWindow@ATL@@UAEXPAUHWND__@@@Z
	DD	FLAT:?GetControllingUnknown@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAEPAUIUnknown@@XZ
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIAxWinHostWindowLic@@@
CONST	SEGMENT
??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIAxWinHostWindowLic@@@ DD FLAT:?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<ATL::CAxHostWindow>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ
	DD	FLAT:?CreateControl@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@@Z
	DD	FLAT:?CreateControlEx@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@PAPAUIUnknown@@ABU_GUID@@PAU5@@Z
	DD	FLAT:?AttachControl@CAxHostWindow@ATL@@UAGJPAUIUnknown@@PAUHWND__@@@Z
	DD	FLAT:?QueryControl@CAxHostWindow@ATL@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?SetExternalDispatch@CAxHostWindow@ATL@@UAGJPAUIDispatch@@@Z
	DD	FLAT:?SetExternalUIHandler@CAxHostWindow@ATL@@UAGJPAUIDocHostUIHandlerDispatch@@@Z
	DD	FLAT:?CreateControlLic@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@PAG@Z
	DD	FLAT:?CreateControlLicEx@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@PAPAUIUnknown@@ABU_GUID@@PAU5@PAG@Z
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIOleClientSite@@@
CONST	SEGMENT
??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIOleClientSite@@@ DD FLAT:?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W3AGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<ATL::CAxHostWindow>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W3AGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W3AGKXZ
	DD	FLAT:?SaveObject@CAxHostWindow@ATL@@UAGJXZ
	DD	FLAT:?GetMoniker@CAxHostWindow@ATL@@UAGJKKPAPAUIMoniker@@@Z
	DD	FLAT:?GetContainer@CAxHostWindow@ATL@@UAGJPAPAUIOleContainer@@@Z
	DD	FLAT:?ShowObject@CAxHostWindow@ATL@@UAGJXZ
	DD	FLAT:?OnShowWindow@CAxHostWindow@ATL@@UAGJH@Z
	DD	FLAT:?RequestNewObjectLayout@CAxHostWindow@ATL@@UAGJXZ
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIOleInPlaceSiteWindowless@@@
CONST	SEGMENT
??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIOleInPlaceSiteWindowless@@@ DD FLAT:?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W7AGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<ATL::CAxHostWindow>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W7AGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W7AGKXZ
	DD	FLAT:?GetWindow@CAxHostWindow@ATL@@UAGJPAPAUHWND__@@@Z
	DD	FLAT:?ContextSensitiveHelp@CAxHostWindow@ATL@@UAGJH@Z
	DD	FLAT:?CanInPlaceActivate@CAxHostWindow@ATL@@UAGJXZ
	DD	FLAT:?OnInPlaceActivate@CAxHostWindow@ATL@@UAGJXZ
	DD	FLAT:?OnUIActivate@CAxHostWindow@ATL@@UAGJXZ
	DD	FLAT:?GetWindowContext@CAxHostWindow@ATL@@UAGJPAPAUIOleInPlaceFrame@@PAPAUIOleInPlaceUIWindow@@PAUtagRECT@@2PAUtagOIFI@@@Z
	DD	FLAT:?Scroll@CAxHostWindow@ATL@@UAGJUtagSIZE@@@Z
	DD	FLAT:?OnUIDeactivate@CAxHostWindow@ATL@@UAGJH@Z
	DD	FLAT:?OnInPlaceDeactivate@CAxHostWindow@ATL@@UAGJXZ
	DD	FLAT:?DiscardUndoState@CAxHostWindow@ATL@@UAGJXZ
	DD	FLAT:?DeactivateAndUndo@CAxHostWindow@ATL@@UAGJXZ
	DD	FLAT:?OnPosRectChange@CAxHostWindow@ATL@@UAGJPBUtagRECT@@@Z
	DD	FLAT:?OnInPlaceActivateEx@CAxHostWindow@ATL@@UAGJPAHK@Z
	DD	FLAT:?OnInPlaceDeactivateEx@CAxHostWindow@ATL@@UAGJH@Z
	DD	FLAT:?RequestUIActivate@CAxHostWindow@ATL@@UAGJXZ
	DD	FLAT:?CanWindowlessActivate@CAxHostWindow@ATL@@UAGJXZ
	DD	FLAT:?GetCapture@CAxHostWindow@ATL@@UAGJXZ
	DD	FLAT:?SetCapture@CAxHostWindow@ATL@@UAGJH@Z
	DD	FLAT:?GetFocus@CAxHostWindow@ATL@@UAGJXZ
	DD	FLAT:?SetFocus@CAxHostWindow@ATL@@UAGJH@Z
	DD	FLAT:?GetDC@CAxHostWindow@ATL@@UAGJPBUtagRECT@@KPAPAUHDC__@@@Z
	DD	FLAT:?ReleaseDC@CAxHostWindow@ATL@@UAGJPAUHDC__@@@Z
	DD	FLAT:?InvalidateRect@CAxHostWindow@ATL@@UAGJPBUtagRECT@@H@Z
	DD	FLAT:?InvalidateRgn@CAxHostWindow@ATL@@UAGJPAUHRGN__@@H@Z
	DD	FLAT:?ScrollRect@CAxHostWindow@ATL@@UAGJHHPBUtagRECT@@0@Z
	DD	FLAT:?AdjustRect@CAxHostWindow@ATL@@UAGJPAUtagRECT@@@Z
	DD	FLAT:?OnDefWindowMessage@CAxHostWindow@ATL@@UAGJIIJPAJ@Z
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIOleControlSite@@@
CONST	SEGMENT
??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIOleControlSite@@@ DD FLAT:?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WM@AGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<ATL::CAxHostWindow>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WM@AGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WM@AGKXZ
	DD	FLAT:?OnControlInfoChanged@CAxHostWindow@ATL@@UAGJXZ
	DD	FLAT:?LockInPlaceActive@CAxHostWindow@ATL@@UAGJH@Z
	DD	FLAT:?GetExtendedControl@CAxHostWindow@ATL@@UAGJPAPAUIDispatch@@@Z
	DD	FLAT:?TransformCoords@CAxHostWindow@ATL@@UAGJPAU_POINTL@@PAUtagPOINTF@@K@Z
	DD	FLAT:?TranslateAcceleratorA@CAxHostWindow@ATL@@UAGJPAUtagMSG@@K@Z
	DD	FLAT:?OnFocus@CAxHostWindow@ATL@@UAGJH@Z
	DD	FLAT:?ShowPropertyFrame@CAxHostWindow@ATL@@UAGJXZ
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIOleContainer@@@
CONST	SEGMENT
??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIOleContainer@@@ DD FLAT:?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBA@AGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<ATL::CAxHostWindow>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBA@AGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBA@AGKXZ
	DD	FLAT:?ParseDisplayName@CAxHostWindow@ATL@@UAGJPAUIBindCtx@@PAGPAKPAPAUIMoniker@@@Z
	DD	FLAT:?EnumObjects@CAxHostWindow@ATL@@UAGJKPAPAUIEnumUnknown@@@Z
	DD	FLAT:?LockContainer@CAxHostWindow@ATL@@UAGJH@Z
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6B?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@1@@
CONST	SEGMENT
??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6B?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@1@@ DD FLAT:?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBE@AGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<ATL::CAxHostWindow>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBE@AGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBE@AGKXZ
	DD	FLAT:?SetSite@CAxHostWindow@ATL@@UAGJPAUIUnknown@@@Z
	DD	FLAT:?GetSite@?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:??_E?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WDI@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIServiceProvider@@@
CONST	SEGMENT
??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIServiceProvider@@@ DD FLAT:?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBM@AGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<ATL::CAxHostWindow>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBM@AGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBM@AGKXZ
	DD	FLAT:?QueryService@CAxHostWindow@ATL@@UAGJABU_GUID@@0PAPAX@Z
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIAdviseSink@@@
CONST	SEGMENT
??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIAdviseSink@@@ DD FLAT:?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCA@AGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<ATL::CAxHostWindow>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCA@AGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCA@AGKXZ
	DD	FLAT:?OnDataChange@CAxHostWindow@ATL@@UAGXPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
	DD	FLAT:?OnViewChange@CAxHostWindow@ATL@@UAGXKJ@Z
	DD	FLAT:?OnRename@CAxHostWindow@ATL@@UAGXPAUIMoniker@@@Z
	DD	FLAT:?OnSave@CAxHostWindow@ATL@@UAGXXZ
	DD	FLAT:?OnClose@CAxHostWindow@ATL@@UAGXXZ
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIDocHostUIHandler@@@
CONST	SEGMENT
??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIDocHostUIHandler@@@ DD FLAT:?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCE@AGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<ATL::CAxHostWindow>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCE@AGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCE@AGKXZ
	DD	FLAT:?ShowContextMenu@CAxHostWindow@ATL@@UAGJKPAUtagPOINT@@PAUIUnknown@@PAUIDispatch@@@Z
	DD	FLAT:?GetHostInfo@CAxHostWindow@ATL@@UAGJPAU_DOCHOSTUIINFO@@@Z
	DD	FLAT:?ShowUI@CAxHostWindow@ATL@@UAGJKPAUIOleInPlaceActiveObject@@PAUIOleCommandTarget@@PAUIOleInPlaceFrame@@PAUIOleInPlaceUIWindow@@@Z
	DD	FLAT:?HideUI@CAxHostWindow@ATL@@UAGJXZ
	DD	FLAT:?UpdateUI@CAxHostWindow@ATL@@UAGJXZ
	DD	FLAT:?EnableModeless@CAxHostWindow@ATL@@UAGJH@Z
	DD	FLAT:?OnDocWindowActivate@CAxHostWindow@ATL@@UAGJH@Z
	DD	FLAT:?OnFrameWindowActivate@CAxHostWindow@ATL@@UAGJH@Z
	DD	FLAT:?ResizeBorder@CAxHostWindow@ATL@@UAGJPBUtagRECT@@PAUIOleInPlaceUIWindow@@H@Z
	DD	FLAT:?TranslateAcceleratorA@CAxHostWindow@ATL@@UAGJPAUtagMSG@@PBU_GUID@@K@Z
	DD	FLAT:?GetOptionKeyPath@CAxHostWindow@ATL@@UAGJPAPAGK@Z
	DD	FLAT:?GetDropTarget@CAxHostWindow@ATL@@UAGJPAUIDropTarget@@PAPAU3@@Z
	DD	FLAT:?GetExternal@CAxHostWindow@ATL@@UAGJPAPAUIDispatch@@@Z
	DD	FLAT:?TranslateUrl@CAxHostWindow@ATL@@UAGJKPAGPAPAG@Z
	DD	FLAT:?FilterDataObject@CAxHostWindow@ATL@@UAGJPAUIDataObject@@PAPAU3@@Z
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6B?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@1@@
CONST	SEGMENT
??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6B?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@1@@ DD FLAT:?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCI@AGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<ATL::CAxHostWindow>::`vftable'
	DD	FLAT:?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCI@AGKXZ
	DD	FLAT:?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCI@AGKXZ
	DD	FLAT:?GetTypeInfoCount@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJPAI@Z
	DD	FLAT:?GetTypeInfo@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJIKPAPAUITypeInfo@@@Z
	DD	FLAT:?GetIDsOfNames@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJABU_GUID@@PAPAGIKPAJ@Z
	DD	FLAT:?Invoke@CAxHostWindow@ATL@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z
	DD	FLAT:?put_AllowWindowlessActivation@CAxHostWindow@ATL@@UAGJF@Z
	DD	FLAT:?get_AllowWindowlessActivation@CAxHostWindow@ATL@@UAGJPAF@Z
	DD	FLAT:?put_BackColor@CAxHostWindow@ATL@@UAGJK@Z
	DD	FLAT:?get_BackColor@CAxHostWindow@ATL@@UAGJPAK@Z
	DD	FLAT:?put_ForeColor@CAxHostWindow@ATL@@UAGJK@Z
	DD	FLAT:?get_ForeColor@CAxHostWindow@ATL@@UAGJPAK@Z
	DD	FLAT:?put_LocaleID@CAxHostWindow@ATL@@UAGJK@Z
	DD	FLAT:?get_LocaleID@CAxHostWindow@ATL@@UAGJPAK@Z
	DD	FLAT:?put_UserMode@CAxHostWindow@ATL@@UAGJF@Z
	DD	FLAT:?get_UserMode@CAxHostWindow@ATL@@UAGJPAF@Z
	DD	FLAT:?put_DisplayAsDefault@CAxHostWindow@ATL@@UAGJF@Z
	DD	FLAT:?get_DisplayAsDefault@CAxHostWindow@ATL@@UAGJPAF@Z
	DD	FLAT:?put_Font@CAxHostWindow@ATL@@UAGJPAUIFontDisp@@@Z
	DD	FLAT:?get_Font@CAxHostWindow@ATL@@UAGJPAPAUIFontDisp@@@Z
	DD	FLAT:?put_MessageReflect@CAxHostWindow@ATL@@UAGJF@Z
	DD	FLAT:?get_MessageReflect@CAxHostWindow@ATL@@UAGJPAF@Z
	DD	FLAT:?get_ShowGrabHandles@CAxHostWindow@ATL@@UAGJPAF@Z
	DD	FLAT:?get_ShowHatching@CAxHostWindow@ATL@@UAGJPAF@Z
	DD	FLAT:?put_DocHostFlags@CAxHostWindow@ATL@@UAGJK@Z
	DD	FLAT:?get_DocHostFlags@CAxHostWindow@ATL@@UAGJPAK@Z
	DD	FLAT:?put_DocHostDoubleClickFlags@CAxHostWindow@ATL@@UAGJK@Z
	DD	FLAT:?get_DocHostDoubleClickFlags@CAxHostWindow@ATL@@UAGJPAK@Z
	DD	FLAT:?put_AllowContextMenu@CAxHostWindow@ATL@@UAGJF@Z
	DD	FLAT:?get_AllowContextMenu@CAxHostWindow@ATL@@UAGJPAF@Z
	DD	FLAT:?put_AllowShowUI@CAxHostWindow@ATL@@UAGJF@Z
	DD	FLAT:?get_AllowShowUI@CAxHostWindow@ATL@@UAGJPAF@Z
	DD	FLAT:?put_OptionKeyPath@CAxHostWindow@ATL@@UAGJPAG@Z
	DD	FLAT:?get_OptionKeyPath@CAxHostWindow@ATL@@UAGJPAPAG@Z
	DD	FLAT:?SetAmbientDispatch@CAxHostWindow@ATL@@UAGJPAUIDispatch@@@Z
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ??0?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pv$ = 8						; size = 4
??0?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@QAE@PAX@Z PROC NEAR ; ATL::CComContainedObject<ATL::CAxHostWindow>::CComContainedObject<ATL::CAxHostWindow>, COMDAT
; _this$ = ecx

; 2804 : 	CComContainedObject(void* pv) {m_pOuterUnknown = (IUnknown*)pv;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CAxHostWindow@ATL@@QAE@XZ		; ATL::CAxHostWindow::CAxHostWindow
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6B?$CWindowImpl@VCAxHostWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@1@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36], OFFSET FLAT:??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIAxWinHostWindowLic@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+40], OFFSET FLAT:??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIOleClientSite@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], OFFSET FLAT:??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIOleInPlaceSiteWindowless@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+48], OFFSET FLAT:??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIOleControlSite@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+52], OFFSET FLAT:??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIOleContainer@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], OFFSET FLAT:??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6B?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@1@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+64], OFFSET FLAT:??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIServiceProvider@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+68], OFFSET FLAT:??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIAdviseSink@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], OFFSET FLAT:??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIDocHostUIHandler@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+76], OFFSET FLAT:??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6B?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@1@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pv$[ebp]
	mov	DWORD PTR [edx+80], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@QAE@PAX@Z ENDP ; ATL::CComContainedObject<ATL::CAxHostWindow>::CComContainedObject<ATL::CAxHostWindow>
_TEXT	ENDS
PUBLIC	??0IAdviseSink@@QAE@XZ				; IAdviseSink::IAdviseSink
PUBLIC	??0IOleContainer@@QAE@XZ			; IOleContainer::IOleContainer
PUBLIC	??0?$CComPtr@UIOleObject@@@ATL@@QAE@XZ		; ATL::CComPtr<IOleObject>::CComPtr<IOleObject>
PUBLIC	??0IOleClientSite@@QAE@XZ			; IOleClientSite::IOleClientSite
PUBLIC	??0?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ	; ATL::CComPtr<IOleInPlaceFrame>::CComPtr<IOleInPlaceFrame>
PUBLIC	??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ		; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>
PUBLIC	??0?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ	; ATL::CComPtr<IOleInPlaceUIWindow>::CComPtr<IOleInPlaceUIWindow>
PUBLIC	??0IOleControlSite@@QAE@XZ			; IOleControlSite::IOleControlSite
PUBLIC	??0?$CComPtr@UIViewObjectEx@@@ATL@@QAE@XZ	; ATL::CComPtr<IViewObjectEx>::CComPtr<IViewObjectEx>
PUBLIC	??0?$CComPtr@UIOleInPlaceObjectWindowless@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleInPlaceObjectWindowless>::CComPtr<IOleInPlaceObjectWindowless>
PUBLIC	??0IOleInPlaceSiteWindowless@@QAE@XZ		; IOleInPlaceSiteWindowless::IOleInPlaceSiteWindowless
PUBLIC	??0IDocHostUIHandler@@QAE@XZ			; IDocHostUIHandler::IDocHostUIHandler
PUBLIC	??0?$CComPtr@UIDocHostUIHandlerDispatch@@@ATL@@QAE@XZ ; ATL::CComPtr<IDocHostUIHandlerDispatch>::CComPtr<IDocHostUIHandlerDispatch>
PUBLIC	??0?$CComPtr@UIFontDisp@@@ATL@@QAE@XZ		; ATL::CComPtr<IFontDisp>::CComPtr<IFontDisp>
PUBLIC	??0?$CWindowImpl@VCAxHostWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ ; ATL::CWindowImpl<ATL::CAxHostWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::CWindowImpl<ATL::CAxHostWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >
PUBLIC	??0?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@QAE@XZ ; ATL::IObjectWithSiteImpl<ATL::CAxHostWindow>::IObjectWithSiteImpl<ATL::CAxHostWindow>
PUBLIC	??0IServiceProvider@@QAE@XZ			; IServiceProvider::IServiceProvider
PUBLIC	??0?$CComPtr@UIServiceProvider@@@ATL@@QAE@XZ	; ATL::CComPtr<IServiceProvider>::CComPtr<IServiceProvider>
PUBLIC	??0?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@QAE@XZ ; ATL::IDispatchImpl<IAxWinAmbientDispatchEx,&_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5,&ATL::CAtlModule::m_libid,65535,65535,ATL::CComTypeInfoHolder>::IDispatchImpl<IAxWinAmbientDispatchEx,&_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5,&ATL::CAtlModule::m_libid,65535,65535,ATL::CComTypeInfoHolder>
PUBLIC	??0IAxWinHostWindowLic@@QAE@XZ			; IAxWinHostWindowLic::IAxWinHostWindowLic
EXTRN	__imp__GetSysColor@4:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
;	COMDAT ??0CAxHostWindow@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CAxHostWindow@ATL@@QAE@XZ PROC NEAR			; ATL::CAxHostWindow::CAxHostWindow, COMDAT
; _this$ = ecx

; 318  : 	CAxHostWindow()

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CWindowImpl@VCAxHostWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0IAxWinHostWindowLic@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??0IOleClientSite@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0IOleInPlaceSiteWindowless@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0IOleControlSite@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??0IOleContainer@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??0?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??0IServiceProvider@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??0IAdviseSink@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??0IDocHostUIHandler@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??0?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ	; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ	; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??0?$CComPtr@UIOleObject@@@ATL@@QAE@XZ	; ATL::CComPtr<IOleObject>::CComPtr<IOleObject>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??0?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleInPlaceFrame>::CComPtr<IOleInPlaceFrame>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	call	??0?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleInPlaceUIWindow>::CComPtr<IOleInPlaceUIWindow>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??0?$CComPtr@UIViewObjectEx@@@ATL@@QAE@XZ ; ATL::CComPtr<IViewObjectEx>::CComPtr<IViewObjectEx>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??0?$CComPtr@UIOleInPlaceObjectWindowless@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleInPlaceObjectWindowless>::CComPtr<IOleInPlaceObjectWindowless>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	call	??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ	; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	??0?$CComPtr@UIDocHostUIHandlerDispatch@@@ATL@@QAE@XZ ; ATL::CComPtr<IDocHostUIHandlerDispatch>::CComPtr<IDocHostUIHandlerDispatch>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	??0?$CComPtr@UIFontDisp@@@ATL@@QAE@XZ	; ATL::CComPtr<IFontDisp>::CComPtr<IFontDisp>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 220				; 000000dcH
	call	??0?$CComPtr@UIServiceProvider@@@ATL@@QAE@XZ ; ATL::CComPtr<IServiceProvider>::CComPtr<IServiceProvider>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	call	??0CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::CComBSTR

; 319  : 	{
; 320  : 		m_bInPlaceActive = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	and	ecx, -2					; fffffffeH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+152], ecx

; 321  : 		m_bUIActive = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	and	ecx, -3					; fffffffdH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+152], ecx

; 322  : 		m_bMDIApp = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	and	ecx, -5					; fffffffbH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+152], ecx

; 323  : 		m_bWindowless = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	and	ecx, -9					; fffffff7H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+152], ecx

; 324  : 		m_bCapture = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	and	ecx, -17				; ffffffefH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+152], ecx

; 325  : 		m_bHaveFocus = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	and	ecx, -33				; ffffffdfH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+152], ecx

; 326  : 
; 327  : 		// Initialize ambient properties
; 328  : 		m_bCanWindowlessActivate = TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	or	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+200], ecx

; 329  : 		m_bUserMode = TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	or	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+200], ecx

; 330  : 		m_bDisplayAsDefault = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	and	ecx, -5					; fffffffbH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+200], ecx

; 331  : 		m_clrBackground = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+204], 0

; 332  : 		m_clrForeground = GetSysColor(COLOR_WINDOWTEXT);

	mov	esi, esp
	push	8
	call	DWORD PTR __imp__GetSysColor@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+208], eax

; 333  : 		m_lcidLocaleID = LOCALE_USER_DEFAULT;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+212], 1024		; 00000400H

; 334  : 		m_bMessageReflect = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	or	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+200], ecx

; 335  : 
; 336  : 		m_bReleaseAll = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	and	ecx, -65				; ffffffbfH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+152], ecx

; 337  : 
; 338  : 		m_bSubclassed = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	and	ecx, -17				; ffffffefH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+200], ecx

; 339  : 
; 340  : 		m_dwAdviseSink = 0xCDCDCDCD;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+148], -842150451		; cdcdcdcdH

; 341  : 		m_dwDocHostFlags = DOCHOSTUIFLAG_NO3DBORDER;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+224], 4

; 342  : 		m_dwDocHostDoubleClickFlags = DOCHOSTUIDBLCLK_DEFAULT;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+228], 0

; 343  : 		m_bAllowContextMenu = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	or	ecx, 32					; 00000020H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+200], ecx

; 344  : 		m_bAllowShowUI = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	and	ecx, -65				; ffffffbfH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+200], ecx

; 345  : 		m_hDCScreen = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 0

; 346  : 		m_bDCReleased = true;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+92], 1

; 347  : 
; 348  : 		m_hAccel = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+196], 0

; 349  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CAxHostWindow@ATL@@QAE@XZ ENDP			; ATL::CAxHostWindow::CAxHostWindow
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ PROC NEAR		; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>, COMDAT
; _this$ = ecx

; 311  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>

; 312  : 	{
; 313  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IDispatch>::CComPtr<IDispatch>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
_TEXT	ENDS
;	COMDAT ?OnFinalMessage@CAxHostWindow@ATL@@UAEXPAUHWND__@@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?OnFinalMessage@CAxHostWindow@ATL@@UAEXPAUHWND__@@@Z PROC NEAR ; ATL::CAxHostWindow::OnFinalMessage, COMDAT
; _this$ = ecx

; 360  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 361  : 		GetControllingUnknown()->Release();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR [edx+16]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv69[ebp], eax
	mov	eax, DWORD PTR tv69[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	call	DWORD PTR [ecx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 362  : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnFinalMessage@CAxHostWindow@ATL@@UAEXPAUHWND__@@@Z ENDP ; ATL::CAxHostWindow::OnFinalMessage
_TEXT	ENDS
PUBLIC	?ReflectNotifications@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::ReflectNotifications
PUBLIC	?OnForwardMsg@CAxHostWindow@ATL@@QAEJIIJAAH@Z	; ATL::CAxHostWindow::OnForwardMsg
PUBLIC	?OnGetUnknown@CAxHostWindow@ATL@@QAEJIIJAAH@Z	; ATL::CAxHostWindow::OnGetUnknown
PUBLIC	?OnGetControl@CAxHostWindow@ATL@@QAEJIIJAAH@Z	; ATL::CAxHostWindow::OnGetControl
PUBLIC	?OnEraseBackground@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnEraseBackground
PUBLIC	?OnMouseActivate@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnMouseActivate
PUBLIC	?OnSetFocus@CAxHostWindow@ATL@@QAEJIIJAAH@Z	; ATL::CAxHostWindow::OnSetFocus
PUBLIC	?OnKillFocus@CAxHostWindow@ATL@@QAEJIIJAAH@Z	; ATL::CAxHostWindow::OnKillFocus
PUBLIC	?OnSize@CAxHostWindow@ATL@@QAEJIIJAAH@Z		; ATL::CAxHostWindow::OnSize
PUBLIC	?OnDestroy@CAxHostWindow@ATL@@QAEJIIJAAH@Z	; ATL::CAxHostWindow::OnDestroy
PUBLIC	?OnWindowMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnWindowMessage
PUBLIC	?OnWindowlessMouseMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnWindowlessMouseMessage
PUBLIC	?OnPaint@CAxHostWindow@ATL@@QAEJIIJAAH@Z	; ATL::CAxHostWindow::OnPaint
; Function compile flags: /Odt /RTCsu
;	COMDAT ?ProcessWindowMessage@CAxHostWindow@ATL@@UAEHPAUHWND__@@IIJAAJK@Z
_TEXT	SEGMENT
tv170 = -60						; size = 4
tv64 = -56						; size = 4
$T212137 = -52						; size = 8
_ptMouse$149450 = -40					; size = 8
_dwHitResult$149448 = -24				; size = 4
_bHandled$ = -12					; size = 4
_this$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
_lResult$ = 24						; size = 4
_dwMsgMapID$ = 28					; size = 4
?ProcessWindowMessage@CAxHostWindow@ATL@@UAEHPAUHWND__@@IIJAAJK@Z PROC NEAR ; ATL::CAxHostWindow::ProcessWindowMessage, COMDAT
; _this$ = ecx

; 400  : 	BEGIN_MSG_MAP(CAxHostWindow)

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 15					; 0000000fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR _bHandled$[ebp], 1
	mov	eax, DWORD PTR _dwMsgMapID$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 0
	je	SHORT $L149434
	jmp	$L149528
$L149434:

; 401  : 		MESSAGE_HANDLER(WM_ERASEBKGND, OnEraseBackground)

	cmp	DWORD PTR _uMsg$[ebp], 20		; 00000014H
	jne	SHORT $L149435
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	ecx, DWORD PTR _bHandled$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _uMsg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnEraseBackground@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnEraseBackground
	mov	edx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [edx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149435
	mov	eax, 1
	jmp	$L149428
$L149435:

; 402  : 		MESSAGE_HANDLER(WM_PAINT, OnPaint)

	cmp	DWORD PTR _uMsg$[ebp], 15		; 0000000fH
	jne	SHORT $L149437
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	eax, DWORD PTR _bHandled$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _uMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnPaint@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnPaint
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149437
	mov	eax, 1
	jmp	$L149428
$L149437:

; 403  : 		MESSAGE_HANDLER(WM_SIZE, OnSize)

	cmp	DWORD PTR _uMsg$[ebp], 5
	jne	SHORT $L149439
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnSize@CAxHostWindow@ATL@@QAEJIIJAAH@Z	; ATL::CAxHostWindow::OnSize
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149439
	mov	eax, 1
	jmp	$L149428
$L149439:

; 404  : 		MESSAGE_HANDLER(WM_MOUSEACTIVATE, OnMouseActivate)

	cmp	DWORD PTR _uMsg$[ebp], 33		; 00000021H
	jne	SHORT $L149441
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnMouseActivate@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnMouseActivate
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149441
	mov	eax, 1
	jmp	$L149428
$L149441:

; 405  : 		MESSAGE_HANDLER(WM_SETFOCUS, OnSetFocus)

	cmp	DWORD PTR _uMsg$[ebp], 7
	jne	SHORT $L149443
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnSetFocus@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnSetFocus
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149443
	mov	eax, 1
	jmp	$L149428
$L149443:

; 406  : 		MESSAGE_HANDLER(WM_KILLFOCUS, OnKillFocus)

	cmp	DWORD PTR _uMsg$[ebp], 8
	jne	SHORT $L149445
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnKillFocus@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnKillFocus
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149445
	mov	eax, 1
	jmp	$L149428
$L149445:

; 407  : 		if (m_bWindowless)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+152]
	shr	eax, 3
	and	eax, 1
	je	$L149447

; 408  : 		{
; 409  : 			// Mouse messages handled when a windowless control has captured the cursor
; 410  : 			// or if the cursor is over the control
; 411  : 			DWORD dwHitResult = m_bCapture ? HITRESULT_HIT : HITRESULT_OUTSIDE;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+152]
	shr	edx, 4
	and	edx, 1
	neg	edx
	sbb	edx, edx
	and	edx, 3
	mov	DWORD PTR _dwHitResult$149448[ebp], edx

; 412  : 			if (dwHitResult == HITRESULT_OUTSIDE && m_spViewObject != NULL)

	jne	SHORT $L149449
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??B?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAUIViewObjectEx@@XZ ; ATL::CComPtrBase<IViewObjectEx>::operator IViewObjectEx *
	test	eax, eax
	je	SHORT $L149449

; 413  : 			{
; 414  : 				POINT ptMouse = { GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam) };

	mov	eax, DWORD PTR _lParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movsx	ecx, ax
	mov	DWORD PTR _ptMouse$149450[ebp], ecx
	mov	edx, DWORD PTR _lParam$[ebp]
	shr	edx, 16					; 00000010H
	movsx	eax, dx
	mov	DWORD PTR _ptMouse$149450[ebp+4], eax

; 415  : 				m_spViewObject->QueryHitPoint(DVASPECT_CONTENT, &m_rcPos, ptMouse, 0, &dwHitResult);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??C?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIViewObjectEx@@@1@XZ ; ATL::CComPtrBase<IViewObjectEx>::operator->
	mov	DWORD PTR tv170[ebp], eax
	mov	esi, esp
	lea	ecx, DWORD PTR _dwHitResult$149448[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _ptMouse$149450[ebp+4]
	push	edx
	mov	eax, DWORD PTR _ptMouse$149450[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 180				; 000000b4H
	push	ecx
	push	1
	mov	edx, DWORD PTR tv170[ebp]
	push	edx
	mov	eax, DWORD PTR tv170[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+48]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L149449:

; 416  : 			}
; 417  : 			if (dwHitResult == HITRESULT_HIT)

	cmp	DWORD PTR _dwHitResult$149448[ebp], 3
	jne	$L149447

; 418  : 			{
; 419  : 				MESSAGE_HANDLER(WM_MOUSEMOVE, OnWindowlessMouseMessage)

	cmp	DWORD PTR _uMsg$[ebp], 512		; 00000200H
	jne	SHORT $L149471
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnWindowlessMouseMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnWindowlessMouseMessage
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149471
	mov	eax, 1
	jmp	$L149428
$L149471:

; 420  : 				MESSAGE_HANDLER(WM_SETCURSOR, OnWindowlessMouseMessage)

	cmp	DWORD PTR _uMsg$[ebp], 32		; 00000020H
	jne	SHORT $L149473
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnWindowlessMouseMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnWindowlessMouseMessage
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149473
	mov	eax, 1
	jmp	$L149428
$L149473:

; 421  : 				MESSAGE_HANDLER(WM_LBUTTONUP, OnWindowlessMouseMessage)

	cmp	DWORD PTR _uMsg$[ebp], 514		; 00000202H
	jne	SHORT $L149475
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnWindowlessMouseMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnWindowlessMouseMessage
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149475
	mov	eax, 1
	jmp	$L149428
$L149475:

; 422  : 				MESSAGE_HANDLER(WM_RBUTTONUP, OnWindowlessMouseMessage)

	cmp	DWORD PTR _uMsg$[ebp], 517		; 00000205H
	jne	SHORT $L149477
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnWindowlessMouseMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnWindowlessMouseMessage
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149477
	mov	eax, 1
	jmp	$L149428
$L149477:

; 423  : 				MESSAGE_HANDLER(WM_MBUTTONUP, OnWindowlessMouseMessage)

	cmp	DWORD PTR _uMsg$[ebp], 520		; 00000208H
	jne	SHORT $L149479
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnWindowlessMouseMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnWindowlessMouseMessage
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149479
	mov	eax, 1
	jmp	$L149428
$L149479:

; 424  : 				MESSAGE_HANDLER(WM_LBUTTONDOWN, OnWindowlessMouseMessage)

	cmp	DWORD PTR _uMsg$[ebp], 513		; 00000201H
	jne	SHORT $L149481
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnWindowlessMouseMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnWindowlessMouseMessage
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149481
	mov	eax, 1
	jmp	$L149428
$L149481:

; 425  : 				MESSAGE_HANDLER(WM_RBUTTONDOWN, OnWindowlessMouseMessage)

	cmp	DWORD PTR _uMsg$[ebp], 516		; 00000204H
	jne	SHORT $L149483
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnWindowlessMouseMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnWindowlessMouseMessage
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149483
	mov	eax, 1
	jmp	$L149428
$L149483:

; 426  : 				MESSAGE_HANDLER(WM_MBUTTONDOWN, OnWindowlessMouseMessage)

	cmp	DWORD PTR _uMsg$[ebp], 519		; 00000207H
	jne	SHORT $L149485
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnWindowlessMouseMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnWindowlessMouseMessage
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149485
	mov	eax, 1
	jmp	$L149428
$L149485:

; 427  : 				MESSAGE_HANDLER(WM_LBUTTONDBLCLK, OnWindowlessMouseMessage)

	cmp	DWORD PTR _uMsg$[ebp], 515		; 00000203H
	jne	SHORT $L149487
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnWindowlessMouseMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnWindowlessMouseMessage
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149487
	mov	eax, 1
	jmp	$L149428
$L149487:

; 428  : 				MESSAGE_HANDLER(WM_RBUTTONDBLCLK, OnWindowlessMouseMessage)

	cmp	DWORD PTR _uMsg$[ebp], 518		; 00000206H
	jne	SHORT $L149489
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnWindowlessMouseMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnWindowlessMouseMessage
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149489
	mov	eax, 1
	jmp	$L149428
$L149489:

; 429  : 				MESSAGE_HANDLER(WM_MBUTTONDBLCLK, OnWindowlessMouseMessage)

	cmp	DWORD PTR _uMsg$[ebp], 521		; 00000209H
	jne	SHORT $L149447
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnWindowlessMouseMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnWindowlessMouseMessage
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149447
	mov	eax, 1
	jmp	$L149428
$L149447:

; 430  : 			}
; 431  : 		}
; 432  : 		if (m_bWindowless & m_bHaveFocus)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+152]
	shr	eax, 3
	and	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+152]
	shr	edx, 5
	and	edx, 1
	and	eax, edx
	je	$L149493

; 433  : 		{
; 434  : 			// Keyboard messages handled only when a windowless control has the focus
; 435  : 			MESSAGE_HANDLER(WM_KEYDOWN, OnWindowMessage)

	cmp	DWORD PTR _uMsg$[ebp], 256		; 00000100H
	jne	SHORT $L149494
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	eax, DWORD PTR _bHandled$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _uMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnWindowMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnWindowMessage
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149494
	mov	eax, 1
	jmp	$L149428
$L149494:

; 436  : 			MESSAGE_HANDLER(WM_KEYUP, OnWindowMessage)

	cmp	DWORD PTR _uMsg$[ebp], 257		; 00000101H
	jne	SHORT $L149496
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnWindowMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnWindowMessage
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149496
	mov	eax, 1
	jmp	$L149428
$L149496:

; 437  : 			MESSAGE_HANDLER(WM_CHAR, OnWindowMessage)

	cmp	DWORD PTR _uMsg$[ebp], 258		; 00000102H
	jne	SHORT $L149498
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnWindowMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnWindowMessage
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149498
	mov	eax, 1
	jmp	$L149428
$L149498:

; 438  : 			MESSAGE_HANDLER(WM_DEADCHAR, OnWindowMessage)

	cmp	DWORD PTR _uMsg$[ebp], 259		; 00000103H
	jne	SHORT $L149500
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnWindowMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnWindowMessage
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149500
	mov	eax, 1
	jmp	$L149428
$L149500:

; 439  : 			MESSAGE_HANDLER(WM_SYSKEYDOWN, OnWindowMessage)

	cmp	DWORD PTR _uMsg$[ebp], 260		; 00000104H
	jne	SHORT $L149502
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnWindowMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnWindowMessage
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149502
	mov	eax, 1
	jmp	$L149428
$L149502:

; 440  : 			MESSAGE_HANDLER(WM_SYSKEYUP, OnWindowMessage)

	cmp	DWORD PTR _uMsg$[ebp], 261		; 00000105H
	jne	SHORT $L149504
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnWindowMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnWindowMessage
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149504
	mov	eax, 1
	jmp	$L149428
$L149504:

; 441  : 			MESSAGE_HANDLER(WM_SYSDEADCHAR, OnWindowMessage)

	cmp	DWORD PTR _uMsg$[ebp], 263		; 00000107H
	jne	SHORT $L149506
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnWindowMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnWindowMessage
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149506
	mov	eax, 1
	jmp	$L149428
$L149506:

; 442  : 			MESSAGE_HANDLER(WM_HELP, OnWindowMessage)

	cmp	DWORD PTR _uMsg$[ebp], 83		; 00000053H
	jne	SHORT $L149508
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnWindowMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnWindowMessage
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149508
	mov	eax, 1
	jmp	$L149428
$L149508:

; 443  : 			MESSAGE_HANDLER(WM_CANCELMODE, OnWindowMessage)

	cmp	DWORD PTR _uMsg$[ebp], 31		; 0000001fH
	jne	SHORT $L149510
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnWindowMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnWindowMessage
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149510
	mov	eax, 1
	jmp	$L149428
$L149510:

; 444  : 			MESSAGE_HANDLER(WM_IME_CHAR, OnWindowMessage)

	cmp	DWORD PTR _uMsg$[ebp], 646		; 00000286H
	jne	SHORT $L149512
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnWindowMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnWindowMessage
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149512
	mov	eax, 1
	jmp	$L149428
$L149512:

; 445  : 			MESSAGE_HANDLER(WM_MBUTTONDBLCLK, OnWindowMessage)

	cmp	DWORD PTR _uMsg$[ebp], 521		; 00000209H
	jne	SHORT $L149514
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnWindowMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnWindowMessage
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149514
	mov	eax, 1
	jmp	$L149428
$L149514:

; 446  : 			MESSAGE_RANGE_HANDLER(WM_IME_SETCONTEXT, WM_IME_KEYUP, OnWindowMessage)

	cmp	DWORD PTR _uMsg$[ebp], 641		; 00000281H
	jb	SHORT $L149493
	cmp	DWORD PTR _uMsg$[ebp], 657		; 00000291H
	ja	SHORT $L149493
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnWindowMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnWindowMessage
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149493
	mov	eax, 1
	jmp	$L149428
$L149493:

; 447  : 		}
; 448  : 		MESSAGE_HANDLER(WM_DESTROY, OnDestroy)

	cmp	DWORD PTR _uMsg$[ebp], 2
	jne	SHORT $L149518
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	edx, DWORD PTR _bHandled$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnDestroy@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnDestroy
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149518
	mov	eax, 1
	jmp	$L149428
$L149518:

; 449  : 		if (m_bMessageReflect)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+200]
	shr	eax, 3
	and	eax, 1
	je	SHORT $L149520

; 450  : 		{
; 451  : 			bHandled = TRUE;

	mov	DWORD PTR _bHandled$[ebp], 1

; 452  : 			lResult = ReflectNotifications(uMsg, wParam, lParam, bHandled);

	lea	ecx, DWORD PTR _bHandled$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _uMsg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReflectNotifications@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::ReflectNotifications
	mov	edx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [edx], eax

; 453  : 			if(bHandled)

	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149520

; 454  : 				return TRUE;

	mov	eax, 1
	jmp	$L149428
$L149520:

; 455  : 		}
; 456  : 		MESSAGE_HANDLER(WM_ATLGETHOST, OnGetUnknown)

	mov	eax, DWORD PTR _uMsg$[ebp]
	cmp	eax, DWORD PTR ?WM_ATLGETHOST@ATL@@3IA	; ATL::WM_ATLGETHOST
	jne	SHORT $L149522
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	ecx, DWORD PTR _bHandled$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _uMsg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnGetUnknown@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnGetUnknown
	mov	edx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [edx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149522
	mov	eax, 1
	jmp	$L149428
$L149522:

; 457  : 		MESSAGE_HANDLER(WM_ATLGETCONTROL, OnGetControl)

	mov	eax, DWORD PTR _uMsg$[ebp]
	cmp	eax, DWORD PTR ?WM_ATLGETCONTROL@ATL@@3IA ; ATL::WM_ATLGETCONTROL
	jne	SHORT $L149524
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	ecx, DWORD PTR _bHandled$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _uMsg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnGetControl@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnGetControl
	mov	edx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [edx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149524
	mov	eax, 1
	jmp	$L149428
$L149524:

; 458  : 		MESSAGE_HANDLER(WM_FORWARDMSG, OnForwardMsg)

	cmp	DWORD PTR _uMsg$[ebp], 895		; 0000037fH
	jne	SHORT $L149526
	mov	DWORD PTR _bHandled$[ebp], 1
	lea	eax, DWORD PTR _bHandled$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _uMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnForwardMsg@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnForwardMsg
	mov	ecx, DWORD PTR _lResult$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _bHandled$[ebp], 0
	je	SHORT $L149526
	mov	eax, 1
	jmp	SHORT $L149428
$L149526:

; 459  : 	END_MSG_MAP()

	jmp	SHORT $L149431
$L149528:
	mov	edx, DWORD PTR _dwMsgMapID$[ebp]
	push	edx
	push	OFFSET FLAT:??_C@_0BN@BNLFFEBD@Invalid?5message?5map?5ID?5?$CI?$CFi?$CJ?6?$AA@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceWindowing@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceWindowing
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	459					; 000001cbH
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T212137[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H
	xor	eax, eax
	jne	SHORT $L149431
	push	OFFSET FLAT:??_C@_01GBGANLPD@0?$AA@
	push	0
	push	459					; 000001cbH
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L149431
	int	3
$L149431:
	xor	eax, eax
$L149428:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212143
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 60					; 0000003cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
$L212143:
	DD	3
	DD	$L212142
$L212142:
	DD	-12					; fffffff4H
	DD	4
	DD	$L212139
	DD	-24					; ffffffe8H
	DD	4
	DD	$L212140
	DD	-40					; ffffffd8H
	DD	8
	DD	$L212141
$L212141:
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	77					; 0000004dH
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	0
$L212140:
	DB	100					; 00000064H
	DB	119					; 00000077H
	DB	72					; 00000048H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
$L212139:
	DB	98					; 00000062H
	DB	72					; 00000048H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
?ProcessWindowMessage@CAxHostWindow@ATL@@UAEHPAUHWND__@@IIJAAJK@Z ENDP ; ATL::CAxHostWindow::ProcessWindowMessage
_TEXT	ENDS
PUBLIC	??_C@_0M@NJNLJPMN@lParam?5?$CB?$DN?50?$AA@	; `string'
PUBLIC	??0?$CComQIPtr@UIOleInPlaceActiveObject@@$1?_GUID_00000117_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComQIPtr<IOleInPlaceActiveObject,&_GUID_00000117_0000_0000_c000_000000000046>::CComQIPtr<IOleInPlaceActiveObject,&_GUID_00000117_0000_0000_c000_000000000046>
PUBLIC	??1?$CComQIPtr@UIOleInPlaceActiveObject@@$1?_GUID_00000117_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ ; ATL::CComQIPtr<IOleInPlaceActiveObject,&_GUID_00000117_0000_0000_c000_000000000046>::~CComQIPtr<IOleInPlaceActiveObject,&_GUID_00000117_0000_0000_c000_000000000046>
PUBLIC	??B?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QBEPAUIOleInPlaceActiveObject@@XZ ; ATL::CComPtrBase<IOleInPlaceActiveObject>::operator IOleInPlaceActiveObject *
PUBLIC	??C?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceActiveObject@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceActiveObject>::operator->
;	COMDAT xdata$x
xdata$x	SEGMENT
$T212156 DD	0ffffffffH
	DD	FLAT:$L212149
$T212151 DD	019930520H
	DD	01H
	DD	FLAT:$T212156
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0M@NJNLJPMN@lParam?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0M@NJNLJPMN@lParam?5?$CB?$DN?50?$AA@ DB 'lParam != 0', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?OnForwardMsg@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT
tv86 = -44						; size = 4
$T212148 = -40						; size = 4
$T212147 = -36						; size = 4
_spInPlaceActiveObject$ = -28				; size = 4
_lpMsg$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
_lParam$ = 16						; size = 4
___formal$ = 20						; size = 4
?OnForwardMsg@CAxHostWindow@ATL@@QAEJIIJAAH@Z PROC NEAR	; ATL::CAxHostWindow::OnForwardMsg, COMDAT
; _this$ = ecx

; 462  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnForwardMsg@CAxHostWindow@ATL@@QAEJIIJAAH@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR _this$[ebp], ecx

; 463  : 		ATLASSERT(lParam != 0);

	cmp	DWORD PTR _lParam$[ebp], 0
	jne	SHORT $L212146
	push	OFFSET FLAT:??_C@_0M@NJNLJPMN@lParam?5?$CB?$DN?50?$AA@
	push	0
	push	463					; 000001cfH
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212146
	int	3
$L212146:

; 464  : 		LPMSG lpMsg = (LPMSG)lParam;

	mov	ecx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _lpMsg$[ebp], ecx

; 465  : 		CComQIPtr<IOleInPlaceActiveObject, &__uuidof(IOleInPlaceActiveObject)> spInPlaceActiveObject(m_spUnknown);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
	push	eax
	lea	ecx, DWORD PTR _spInPlaceActiveObject$[ebp]
	call	??0?$CComQIPtr@UIOleInPlaceActiveObject@@$1?_GUID_00000117_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComQIPtr<IOleInPlaceActiveObject,&_GUID_00000117_0000_0000_c000_000000000046>::CComQIPtr<IOleInPlaceActiveObject,&_GUID_00000117_0000_0000_c000_000000000046>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 466  : 		if(spInPlaceActiveObject)

	lea	ecx, DWORD PTR _spInPlaceActiveObject$[ebp]
	call	??B?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QBEPAUIOleInPlaceActiveObject@@XZ ; ATL::CComPtrBase<IOleInPlaceActiveObject>::operator IOleInPlaceActiveObject *
	test	eax, eax
	je	SHORT $L149561

; 467  : 		{
; 468  : 			if(spInPlaceActiveObject->TranslateAccelerator(lpMsg) == S_OK)

	lea	ecx, DWORD PTR _spInPlaceActiveObject$[ebp]
	call	??C?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceActiveObject@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceActiveObject>::operator->
	mov	DWORD PTR tv86[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR _lpMsg$[ebp]
	push	edx
	mov	eax, DWORD PTR tv86[ebp]
	push	eax
	mov	ecx, DWORD PTR tv86[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+20]
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L149561

; 469  : 				return 1;

	mov	DWORD PTR $T212147[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spInPlaceActiveObject$[ebp]
	call	??1?$CComQIPtr@UIOleInPlaceActiveObject@@$1?_GUID_00000117_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
	mov	eax, DWORD PTR $T212147[ebp]
	jmp	SHORT $L149533
$L149561:

; 470  : 		}
; 471  : 		return 0;

	mov	DWORD PTR $T212148[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spInPlaceActiveObject$[ebp]
	call	??1?$CComQIPtr@UIOleInPlaceActiveObject@@$1?_GUID_00000117_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
	mov	eax, DWORD PTR $T212148[ebp]
$L149533:

; 472  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212155
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$L212155:
	DD	1
	DD	$L212154
$L212154:
	DD	-28					; ffffffe4H
	DD	4
	DD	$L212152
$L212152:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	80					; 00000050H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	65					; 00000041H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	79					; 0000004fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L212149:
	lea	ecx, DWORD PTR _spInPlaceActiveObject$[ebp]
	jmp	??1?$CComQIPtr@UIOleInPlaceActiveObject@@$1?_GUID_00000117_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
__ehhandler$?OnForwardMsg@CAxHostWindow@ATL@@QAEJIIJAAH@Z:
	mov	eax, OFFSET FLAT:$T212151
	jmp	___CxxFrameHandler
text$x	ENDS
?OnForwardMsg@CAxHostWindow@ATL@@QAEJIIJAAH@Z ENDP	; ATL::CAxHostWindow::OnForwardMsg
; Function compile flags: /Odt /RTCsu
;	COMDAT ?OnGetUnknown@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT
_pUnk$ = -8						; size = 4
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
?OnGetUnknown@CAxHostWindow@ATL@@QAEJIIJAAH@Z PROC NEAR	; ATL::CAxHostWindow::OnGetUnknown, COMDAT
; _this$ = ecx

; 475  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 476  : 		IUnknown* pUnk = GetControllingUnknown();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR [edx+16]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pUnk$[ebp], eax

; 477  : 		pUnk->AddRef();

	mov	eax, DWORD PTR _pUnk$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pUnk$[ebp]
	push	edx
	call	DWORD PTR [ecx+4]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 478  : 		return (LRESULT)pUnk;

	mov	eax, DWORD PTR _pUnk$[ebp]

; 479  : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?OnGetUnknown@CAxHostWindow@ATL@@QAEJIIJAAH@Z ENDP	; ATL::CAxHostWindow::OnGetUnknown
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?OnGetControl@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT
_pUnk$ = -8						; size = 4
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
?OnGetControl@CAxHostWindow@ATL@@QAEJIIJAAH@Z PROC NEAR	; ATL::CAxHostWindow::OnGetControl, COMDAT
; _this$ = ecx

; 481  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 482  : 		IUnknown* pUnk = m_spUnknown;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
	mov	DWORD PTR _pUnk$[ebp], eax

; 483  : 		if (pUnk)

	cmp	DWORD PTR _pUnk$[ebp], 0
	je	SHORT $L149584

; 484  : 			pUnk->AddRef();

	mov	eax, DWORD PTR _pUnk$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pUnk$[ebp]
	push	edx
	call	DWORD PTR [ecx+4]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L149584:

; 485  : 		return (LRESULT)pUnk;

	mov	eax, DWORD PTR _pUnk$[ebp]

; 486  : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?OnGetControl@CAxHostWindow@ATL@@QAEJIIJAAH@Z ENDP	; ATL::CAxHostWindow::OnGetControl
_TEXT	ENDS
PUBLIC	??8?$CComPtrBase@UIViewObjectEx@@@ATL@@QBE_NPAUIViewObjectEx@@@Z ; ATL::CComPtrBase<IViewObjectEx>::operator==
; Function compile flags: /Odt /RTCsu
;	COMDAT ?OnEraseBackground@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
_bHandled$ = 20						; size = 4
?OnEraseBackground@CAxHostWindow@ATL@@QAEJIIJAAH@Z PROC NEAR ; ATL::CAxHostWindow::OnEraseBackground, COMDAT
; _this$ = ecx

; 545  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 546  : 		if (m_spViewObject == NULL)

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??8?$CComPtrBase@UIViewObjectEx@@@ATL@@QBE_NPAUIViewObjectEx@@@Z ; ATL::CComPtrBase<IViewObjectEx>::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $L149695

; 547  : 			bHandled = false;

	mov	ecx, DWORD PTR _bHandled$[ebp]
	mov	DWORD PTR [ecx], 0
$L149695:

; 548  : 
; 549  : 		return 1;

	mov	eax, 1

; 550  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?OnEraseBackground@CAxHostWindow@ATL@@QAEJIIJAAH@Z ENDP	; ATL::CAxHostWindow::OnEraseBackground
_TEXT	ENDS
PUBLIC	??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ ; ATL::CComPtrBase<IOleClientSite>::operator IOleClientSite *
PUBLIC	??I?$CComPtrBase@UIOleClientSite@@@ATL@@QAEPAPAUIOleClientSite@@XZ ; ATL::CComPtrBase<IOleClientSite>::operator&
PUBLIC	??0?$CComPtr@UIOleClientSite@@@ATL@@QAE@XZ	; ATL::CComPtr<IOleClientSite>::CComPtr<IOleClientSite>
PUBLIC	??1?$CComPtr@UIOleClientSite@@@ATL@@QAE@XZ	; ATL::CComPtr<IOleClientSite>::~CComPtr<IOleClientSite>
;	COMDAT xdata$x
xdata$x	SEGMENT
$T212175 DD	0ffffffffH
	DD	FLAT:$L212167
$T212169 DD	019930520H
	DD	01H
	DD	FLAT:$T212175
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?OnMouseActivate@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT
tv129 = -48						; size = 4
tv82 = -44						; size = 4
_b$149778 = -36						; size = 4
_spClientSite$149774 = -24				; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
_bHandled$ = 20						; size = 4
?OnMouseActivate@CAxHostWindow@ATL@@QAEJIIJAAH@Z PROC NEAR ; ATL::CAxHostWindow::OnMouseActivate, COMDAT
; _this$ = ecx

; 553  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnMouseActivate@CAxHostWindow@ATL@@QAEJIIJAAH@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 36					; 00000024H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-48], eax
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR _this$[ebp], ecx

; 554  : 		bHandled = FALSE;

	mov	eax, DWORD PTR _bHandled$[ebp]
	mov	DWORD PTR [eax], 0

; 555  : 		if (m_dwMiscStatus & OLEMISC_NOUIACTIVATE)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+160]
	and	edx, 16384				; 00004000H
	je	$L149698

; 556  : 		{
; 557  : 			if (m_spOleObject != NULL && !m_bInPlaceActive)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??B?$CComPtrBase@UIOleObject@@@ATL@@QBEPAUIOleObject@@XZ ; ATL::CComPtrBase<IOleObject>::operator IOleObject *
	test	eax, eax
	je	$L149699
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	and	ecx, 1
	jne	$L149699

; 558  : 			{
; 559  : 				CComPtr<IOleClientSite> spClientSite;

	lea	ecx, DWORD PTR _spClientSite$149774[ebp]
	call	??0?$CComPtr@UIOleClientSite@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleClientSite>::CComPtr<IOleClientSite>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 560  : 				GetControllingUnknown()->QueryInterface(__uuidof(IOleClientSite), (void**)&spClientSite);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR [eax+16]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv82[ebp], eax
	lea	ecx, DWORD PTR _spClientSite$149774[ebp]
	call	??I?$CComPtrBase@UIOleClientSite@@@ATL@@QAEPAPAUIOleClientSite@@XZ ; ATL::CComPtrBase<IOleClientSite>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET FLAT:__GUID_00000118_0000_0000_c000_000000000046
	mov	ecx, DWORD PTR tv82[ebp]
	push	ecx
	mov	edx, DWORD PTR tv82[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 561  : 				if (spClientSite != NULL)

	lea	ecx, DWORD PTR _spClientSite$149774[ebp]
	call	??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ ; ATL::CComPtrBase<IOleClientSite>::operator IOleClientSite *
	test	eax, eax
	je	SHORT $L149776

; 562  : 					m_spOleObject->DoVerb(OLEIVERB_INPLACEACTIVATE, NULL, spClientSite, 0, m_hWnd, &m_rcPos);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
	mov	DWORD PTR tv129[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 180				; 000000b4H
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	push	0
	lea	ecx, DWORD PTR _spClientSite$149774[ebp]
	call	??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ ; ATL::CComPtrBase<IOleClientSite>::operator IOleClientSite *
	push	eax
	push	0
	push	-5					; fffffffbH
	mov	ecx, DWORD PTR tv129[ebp]
	push	ecx
	mov	edx, DWORD PTR tv129[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax+44]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L149776:

; 563  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spClientSite$149774[ebp]
	call	??1?$CComPtr@UIOleClientSite@@@ATL@@QAE@XZ
$L149699:

; 564  : 		}
; 565  : 		else

	jmp	SHORT $L149777
$L149698:

; 566  : 		{
; 567  : 			BOOL b;
; 568  : 			OnSetFocus(0, 0, 0, b);

	lea	ecx, DWORD PTR _b$149778[ebp]
	push	ecx
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnSetFocus@CAxHostWindow@ATL@@QAEJIIJAAH@Z ; ATL::CAxHostWindow::OnSetFocus
$L149777:

; 569  : 		}
; 570  : 		return 0;

	xor	eax, eax

; 571  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212174
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	esi
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$L212174:
	DD	2
	DD	$L212173
$L212173:
	DD	-24					; ffffffe8H
	DD	4
	DD	$L212170
	DD	-36					; ffffffdcH
	DD	4
	DD	$L212171
$L212171:
	DB	98					; 00000062H
	DB	0
$L212170:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L212167:
	lea	ecx, DWORD PTR _spClientSite$149774[ebp]
	jmp	??1?$CComPtr@UIOleClientSite@@@ATL@@QAE@XZ
__ehhandler$?OnMouseActivate@CAxHostWindow@ATL@@QAEJIIJAAH@Z:
	mov	eax, OFFSET FLAT:$T212169
	jmp	___CxxFrameHandler
text$x	ENDS
?OnMouseActivate@CAxHostWindow@ATL@@QAEJIIJAAH@Z ENDP	; ATL::CAxHostWindow::OnMouseActivate
PUBLIC	?IsChild@CWindow@ATL@@QBEHPAUHWND__@@@Z		; ATL::CWindow::IsChild
EXTRN	__imp__SetFocus@4:NEAR
EXTRN	__imp__GetFocus@0:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T212187 DD	0ffffffffH
	DD	FLAT:$L212180
$T212182 DD	019930520H
	DD	01H
	DD	FLAT:$T212187
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?OnSetFocus@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT
tv134 = -36						; size = 4
tv87 = -32						; size = 4
_spClientSite$149783 = -24				; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
_bHandled$ = 20						; size = 4
?OnSetFocus@CAxHostWindow@ATL@@QAEJIIJAAH@Z PROC NEAR	; ATL::CAxHostWindow::OnSetFocus, COMDAT
; _this$ = ecx

; 573  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnSetFocus@CAxHostWindow@ATL@@QAEJIIJAAH@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR _this$[ebp], ecx

; 574  : 		m_bHaveFocus = TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	or	ecx, 32					; 00000020H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+152], ecx

; 575  : 		if (!m_bReleaseAll)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	shr	ecx, 6
	and	ecx, 1
	jne	$L149781

; 576  : 		{
; 577  : 			if (m_spOleObject != NULL && !m_bUIActive)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??B?$CComPtrBase@UIOleObject@@@ATL@@QBEPAUIOleObject@@XZ ; ATL::CComPtrBase<IOleObject>::operator IOleObject *
	test	eax, eax
	je	$L149782
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+152]
	shr	eax, 1
	and	eax, 1
	jne	$L149782

; 578  : 			{
; 579  : 				CComPtr<IOleClientSite> spClientSite;

	lea	ecx, DWORD PTR _spClientSite$149783[ebp]
	call	??0?$CComPtr@UIOleClientSite@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleClientSite>::CComPtr<IOleClientSite>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 580  : 				GetControllingUnknown()->QueryInterface(__uuidof(IOleClientSite), (void**)&spClientSite);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR [edx+16]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv87[ebp], eax
	lea	ecx, DWORD PTR _spClientSite$149783[ebp]
	call	??I?$CComPtrBase@UIOleClientSite@@@ATL@@QAEPAPAUIOleClientSite@@XZ ; ATL::CComPtrBase<IOleClientSite>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET FLAT:__GUID_00000118_0000_0000_c000_000000000046
	mov	eax, DWORD PTR tv87[ebp]
	push	eax
	mov	ecx, DWORD PTR tv87[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 581  : 				if (spClientSite != NULL)

	lea	ecx, DWORD PTR _spClientSite$149783[ebp]
	call	??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ ; ATL::CComPtrBase<IOleClientSite>::operator IOleClientSite *
	test	eax, eax
	je	SHORT $L149785

; 582  : 					m_spOleObject->DoVerb(OLEIVERB_UIACTIVATE, NULL, spClientSite, 0, m_hWnd, &m_rcPos);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
	mov	DWORD PTR tv134[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 180				; 000000b4H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	push	0
	lea	ecx, DWORD PTR _spClientSite$149783[ebp]
	call	??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ ; ATL::CComPtrBase<IOleClientSite>::operator IOleClientSite *
	push	eax
	push	0
	push	-4					; fffffffcH
	mov	eax, DWORD PTR tv134[ebp]
	push	eax
	mov	ecx, DWORD PTR tv134[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+44]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L149785:

; 583  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spClientSite$149783[ebp]
	call	??1?$CComPtr@UIOleClientSite@@@ATL@@QAE@XZ
$L149782:

; 584  : 			if (m_bWindowless)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	shr	ecx, 3
	and	ecx, 1
	je	SHORT $L149786

; 585  : 				::SetFocus(m_hWnd);

	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__SetFocus@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 586  : 			else if(!IsChild(::GetFocus()))

	jmp	SHORT $L149781
$L149786:
	mov	esi, esp
	call	DWORD PTR __imp__GetFocus@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?IsChild@CWindow@ATL@@QBEHPAUHWND__@@@Z	; ATL::CWindow::IsChild
	test	eax, eax
	jne	SHORT $L149781

; 587  : 				::SetFocus(::GetWindow(m_hWnd, GW_CHILD));

	mov	esi, esp
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__GetWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__SetFocus@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$L149781:

; 588  : 		}
; 589  : 		bHandled = FALSE;

	mov	eax, DWORD PTR _bHandled$[ebp]
	mov	DWORD PTR [eax], 0

; 590  : 		return 0;

	xor	eax, eax

; 591  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212186
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$L212186:
	DD	1
	DD	$L212185
$L212185:
	DD	-24					; ffffffe8H
	DD	4
	DD	$L212183
$L212183:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L212180:
	lea	ecx, DWORD PTR _spClientSite$149783[ebp]
	jmp	??1?$CComPtr@UIOleClientSite@@@ATL@@QAE@XZ
__ehhandler$?OnSetFocus@CAxHostWindow@ATL@@QAEJIIJAAH@Z:
	mov	eax, OFFSET FLAT:$T212182
	jmp	___CxxFrameHandler
text$x	ENDS
?OnSetFocus@CAxHostWindow@ATL@@QAEJIIJAAH@Z ENDP	; ATL::CAxHostWindow::OnSetFocus
EXTRN	__imp__IsChild@8:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
;	COMDAT ?IsChild@CWindow@ATL@@QBEHPAUHWND__@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hWnd$ = 8						; size = 4
?IsChild@CWindow@ATL@@QBEHPAUHWND__@@@Z PROC NEAR	; ATL::CWindow::IsChild, COMDAT
; _this$ = ecx

; 1436 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1437 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L212192
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	1437					; 0000059dH
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212192
	int	3
$L212192:

; 1438 : 		return ::IsChild(m_hWnd, hWnd);

	mov	esi, esp
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__IsChild@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1439 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?IsChild@CWindow@ATL@@QBEHPAUHWND__@@@Z ENDP		; ATL::CWindow::IsChild
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
_TEXT	ENDS
;	COMDAT ?OnKillFocus@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
_bHandled$ = 20						; size = 4
?OnKillFocus@CAxHostWindow@ATL@@QAEJIIJAAH@Z PROC NEAR	; ATL::CAxHostWindow::OnKillFocus, COMDAT
; _this$ = ecx

; 593  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 594  : 		m_bHaveFocus = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	and	ecx, -33				; ffffffdfH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+152], ecx

; 595  : 		bHandled = FALSE;

	mov	eax, DWORD PTR _bHandled$[ebp]
	mov	DWORD PTR [eax], 0

; 596  : 		return 0;

	xor	eax, eax

; 597  : 	}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?OnKillFocus@CAxHostWindow@ATL@@QAEJIIJAAH@Z ENDP	; ATL::CAxHostWindow::OnKillFocus
_TEXT	ENDS
PUBLIC	??B?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBEPAUIOleInPlaceObjectWindowless@@XZ ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator IOleInPlaceObjectWindowless *
PUBLIC	??C?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceObjectWindowless@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator->
PUBLIC	?AtlPixelToHiMetric@ATL@@YGXPBUtagSIZE@@PAU2@@Z	; ATL::AtlPixelToHiMetric
; Function compile flags: /Odt /RTCsu
;	COMDAT ?OnSize@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT
tv154 = -20						; size = 4
tv139 = -16						; size = 4
_nHeight$ = -12						; size = 4
_nWidth$ = -8						; size = 4
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
_lParam$ = 16						; size = 4
_bHandled$ = 20						; size = 4
?OnSize@CAxHostWindow@ATL@@QAEJIIJAAH@Z PROC NEAR	; ATL::CAxHostWindow::OnSize, COMDAT
; _this$ = ecx

; 599  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 600  : 		int nWidth = GET_X_LPARAM(lParam);  // width of client area

	mov	eax, DWORD PTR _lParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movsx	ecx, ax
	mov	DWORD PTR _nWidth$[ebp], ecx

; 601  : 		int nHeight = GET_Y_LPARAM(lParam); // height of client area

	mov	edx, DWORD PTR _lParam$[ebp]
	shr	edx, 16					; 00000010H
	movsx	eax, dx
	mov	DWORD PTR _nHeight$[ebp], eax

; 602  : 
; 603  : 		m_rcPos.right = m_rcPos.left + nWidth;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+180]
	add	edx, DWORD PTR _nWidth$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+188], edx

; 604  : 		m_rcPos.bottom = m_rcPos.top + nHeight;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	add	edx, DWORD PTR _nHeight$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+192], edx

; 605  : 		m_pxSize.cx = m_rcPos.right - m_rcPos.left;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+188]
	sub	eax, DWORD PTR [edx+180]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+172], eax

; 606  : 		m_pxSize.cy = m_rcPos.bottom - m_rcPos.top;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+192]
	sub	ecx, DWORD PTR [eax+184]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+176], ecx

; 607  : 		AtlPixelToHiMetric(&m_pxSize, &m_hmSize);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 164				; 000000a4H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	push	ecx
	call	?AtlPixelToHiMetric@ATL@@YGXPBUtagSIZE@@PAU2@@Z ; ATL::AtlPixelToHiMetric

; 608  : 
; 609  : 		if (m_spOleObject)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??B?$CComPtrBase@UIOleObject@@@ATL@@QBEPAUIOleObject@@XZ ; ATL::CComPtrBase<IOleObject>::operator IOleObject *
	test	eax, eax
	je	SHORT $L149803

; 610  : 			m_spOleObject->SetExtent(DVASPECT_CONTENT, &m_hmSize);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
	mov	DWORD PTR tv139[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 164				; 000000a4H
	mov	esi, esp
	push	edx
	push	1
	mov	eax, DWORD PTR tv139[ebp]
	push	eax
	mov	ecx, DWORD PTR tv139[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+68]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L149803:

; 611  : 		if (m_spInPlaceObjectWindowless)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??B?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBEPAUIOleInPlaceObjectWindowless@@XZ ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator IOleInPlaceObjectWindowless *
	test	eax, eax
	je	SHORT $L149804

; 612  : 			m_spInPlaceObjectWindowless->SetObjectRects(&m_rcPos, &m_rcPos);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??C?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceObjectWindowless@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator->
	mov	DWORD PTR tv154[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 180				; 000000b4H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 180				; 000000b4H
	push	ecx
	mov	edx, DWORD PTR tv154[ebp]
	push	edx
	mov	eax, DWORD PTR tv154[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+28]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L149804:

; 613  : 		if (m_bWindowless)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+152]
	shr	eax, 3
	and	eax, 1
	je	SHORT $L149816

; 614  : 			InvalidateRect(NULL, TRUE);

	mov	esi, esp
	push	1
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	ecx
	call	DWORD PTR [eax+100]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L149816:

; 615  : 		bHandled = FALSE;

	mov	ecx, DWORD PTR _bHandled$[ebp]
	mov	DWORD PTR [ecx], 0

; 616  : 		return 0;

	xor	eax, eax

; 617  : 	}

	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?OnSize@CAxHostWindow@ATL@@QAEJIIJAAH@Z ENDP		; ATL::CAxHostWindow::OnSize
_TEXT	ENDS
PUBLIC	?DefWindowProcA@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEJIIJ@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::DefWindowProcA
; Function compile flags: /Odt /RTCsu
;	COMDAT ?OnDestroy@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
_bHandled$ = 20						; size = 4
?OnDestroy@CAxHostWindow@ATL@@QAEJIIJAAH@Z PROC NEAR	; ATL::CAxHostWindow::OnDestroy, COMDAT
; _this$ = ecx

; 619  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 620  : 		GetControllingUnknown()->AddRef();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR [edx+16]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv69[ebp], eax
	mov	eax, DWORD PTR tv69[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	call	DWORD PTR [ecx+4]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 621  : 		DefWindowProc(uMsg, wParam, lParam);

	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DefWindowProcA@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEJIIJ@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::DefWindowProcA

; 622  : 		ReleaseAll();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReleaseAll@CAxHostWindow@ATL@@QAEXXZ	; ATL::CAxHostWindow::ReleaseAll

; 623  : 		bHandled = FALSE;

	mov	eax, DWORD PTR _bHandled$[ebp]
	mov	DWORD PTR [eax], 0

; 624  : 		return 0;

	xor	eax, eax

; 625  : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?OnDestroy@CAxHostWindow@ATL@@QAEJIIJAAH@Z ENDP		; ATL::CAxHostWindow::OnDestroy
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?OnWindowMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT
tv83 = -28						; size = 4
tv71 = -21						; size = 1
_hr$ = -20						; size = 4
_lRes$ = -12						; size = 4
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
_bHandled$ = 20						; size = 4
?OnWindowMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z PROC NEAR ; ATL::CAxHostWindow::OnWindowMessage, COMDAT
; _this$ = ecx

; 627  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		LRESULT lRes = 0;

	mov	DWORD PTR _lRes$[ebp], 0

; 629  : 		HRESULT hr = S_FALSE;

	mov	DWORD PTR _hr$[ebp], 1

; 630  : 		if (m_bInPlaceActive && m_bWindowless && m_spInPlaceObjectWindowless)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	and	ecx, 1
	je	SHORT $L212201
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+152]
	shr	eax, 3
	and	eax, 1
	je	SHORT $L212201
	mov	BYTE PTR tv71[ebp], 1
	jmp	SHORT $L212202
$L212201:
	mov	BYTE PTR tv71[ebp], 0
$L212202:
	movzx	ecx, BYTE PTR tv71[ebp]
	test	ecx, ecx
	je	SHORT $L149824
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??B?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBEPAUIOleInPlaceObjectWindowless@@XZ ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator IOleInPlaceObjectWindowless *
	test	eax, eax
	je	SHORT $L149824

; 631  : 			hr = m_spInPlaceObjectWindowless->OnWindowMessage(uMsg, wParam, lParam, &lRes);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??C?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceObjectWindowless@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator->
	mov	DWORD PTR tv83[ebp], eax
	mov	esi, esp
	lea	edx, DWORD PTR _lRes$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	eax, DWORD PTR tv83[ebp]
	push	eax
	mov	ecx, DWORD PTR tv83[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+36]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$L149824:

; 632  : 		if (hr == S_FALSE)

	cmp	DWORD PTR _hr$[ebp], 1
	jne	SHORT $L149826

; 633  : 			bHandled = FALSE;

	mov	eax, DWORD PTR _bHandled$[ebp]
	mov	DWORD PTR [eax], 0
$L149826:

; 634  : 		return lRes;

	mov	eax, DWORD PTR _lRes$[ebp]

; 635  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212205
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$L212205:
	DD	1
	DD	$L212204
$L212204:
	DD	-12					; fffffff4H
	DD	4
	DD	$L212203
$L212203:
	DB	108					; 0000006cH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
?OnWindowMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ENDP	; ATL::CAxHostWindow::OnWindowMessage
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?OnWindowlessMouseMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT
tv83 = -24						; size = 4
tv71 = -17						; size = 1
_lRes$ = -12						; size = 4
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
_bHandled$ = 20						; size = 4
?OnWindowlessMouseMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z PROC NEAR ; ATL::CAxHostWindow::OnWindowlessMouseMessage, COMDAT
; _this$ = ecx

; 637  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 638  : 		LRESULT lRes = 0;

	mov	DWORD PTR _lRes$[ebp], 0

; 639  : 		if (m_bInPlaceActive && m_bWindowless && m_spInPlaceObjectWindowless)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	and	ecx, 1
	je	SHORT $L212208
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+152]
	shr	eax, 3
	and	eax, 1
	je	SHORT $L212208
	mov	BYTE PTR tv71[ebp], 1
	jmp	SHORT $L212209
$L212208:
	mov	BYTE PTR tv71[ebp], 0
$L212209:
	movzx	ecx, BYTE PTR tv71[ebp]
	test	ecx, ecx
	je	SHORT $L149830
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??B?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBEPAUIOleInPlaceObjectWindowless@@XZ ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator IOleInPlaceObjectWindowless *
	test	eax, eax
	je	SHORT $L149830

; 640  : 			m_spInPlaceObjectWindowless->OnWindowMessage(uMsg, wParam, lParam, &lRes);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??C?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceObjectWindowless@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator->
	mov	DWORD PTR tv83[ebp], eax
	mov	esi, esp
	lea	edx, DWORD PTR _lRes$[ebp]
	push	edx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	eax, DWORD PTR tv83[ebp]
	push	eax
	mov	ecx, DWORD PTR tv83[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+36]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L149830:

; 641  : 		bHandled = FALSE;

	mov	eax, DWORD PTR _bHandled$[ebp]
	mov	DWORD PTR [eax], 0

; 642  : 		return lRes;

	mov	eax, DWORD PTR _lRes$[ebp]

; 643  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212212
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$L212212:
	DD	1
	DD	$L212211
$L212211:
	DD	-12					; fffffff4H
	DD	4
	DD	$L212210
$L212210:
	DB	108					; 0000006cH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
?OnWindowlessMouseMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z ENDP ; ATL::CAxHostWindow::OnWindowlessMouseMessage
_TEXT	ENDS
PUBLIC	?GetClientRect@CWindow@ATL@@QBEHPAUtagRECT@@@Z	; ATL::CWindow::GetClientRect
EXTRN	__imp__BeginPaint@8:NEAR
EXTRN	__imp__EndPaint@8:NEAR
EXTRN	__imp__FillRect@12:NEAR
EXTRN	__imp__SelectObject@8:NEAR
EXTRN	__imp__BitBlt@36:NEAR
EXTRN	__imp__CreateCompatibleBitmap@12:NEAR
EXTRN	__imp__CreateCompatibleDC@4:NEAR
EXTRN	__imp__CreateSolidBrush@4:NEAR
EXTRN	__imp__DeleteDC@4:NEAR
EXTRN	__imp__DeleteObject@4:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?OnPaint@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT
tv165 = -232						; size = 4
_hbrBack$149852 = -228					; size = 4
_hBitmapOld$149849 = -224				; size = 4
_hdcCompatible$149847 = -220				; size = 4
_hBitmap$149845 = -216					; size = 4
_rcClient$149844 = -208					; size = 16
_hdc$149842 = -188					; size = 4
_ps$149841 = -180					; size = 64
_hbrBack$149838 = -112					; size = 4
_rcClient$149837 = -104					; size = 16
_hdc$149835 = -84					; size = 4
_ps$149834 = -76					; size = 64
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
_bHandled$ = 20						; size = 4
?OnPaint@CAxHostWindow@ATL@@QAEJIIJAAH@Z PROC NEAR	; ATL::CAxHostWindow::OnPaint, COMDAT
; _this$ = ecx

; 645  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 646  : 		if (m_spViewObject == NULL)

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??8?$CComPtrBase@UIViewObjectEx@@@ATL@@QBE_NPAUIViewObjectEx@@@Z ; ATL::CComPtrBase<IViewObjectEx>::operator==
	movzx	eax, al
	test	eax, eax
	je	$L149833

; 647  : 		{
; 648  : 			PAINTSTRUCT ps;
; 649  : 			HDC hdc = ::BeginPaint(m_hWnd, &ps);

	mov	esi, esp
	lea	ecx, DWORD PTR _ps$149834[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__BeginPaint@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hdc$149835[ebp], eax

; 650  : 			if (hdc == NULL)

	cmp	DWORD PTR _hdc$149835[ebp], 0
	jne	SHORT $L149836

; 651  : 				return 0;

	xor	eax, eax
	jmp	$L149832
$L149836:

; 652  : 			RECT rcClient;
; 653  : 			GetClientRect(&rcClient);

	lea	ecx, DWORD PTR _rcClient$149837[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetClientRect@CWindow@ATL@@QBEHPAUtagRECT@@@Z ; ATL::CWindow::GetClientRect

; 654  : 			HBRUSH hbrBack = CreateSolidBrush(m_clrBackground);

	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+204]
	push	eax
	call	DWORD PTR __imp__CreateSolidBrush@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hbrBack$149838[ebp], eax

; 655  : 			if (hbrBack != NULL)

	cmp	DWORD PTR _hbrBack$149838[ebp], 0
	je	SHORT $L149839

; 656  : 			{
; 657  : 				FillRect(hdc, &rcClient, hbrBack);

	mov	esi, esp
	mov	ecx, DWORD PTR _hbrBack$149838[ebp]
	push	ecx
	lea	edx, DWORD PTR _rcClient$149837[ebp]
	push	edx
	mov	eax, DWORD PTR _hdc$149835[ebp]
	push	eax
	call	DWORD PTR __imp__FillRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 658  : 				DeleteObject(hbrBack);

	mov	esi, esp
	mov	ecx, DWORD PTR _hbrBack$149838[ebp]
	push	ecx
	call	DWORD PTR __imp__DeleteObject@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$L149839:

; 659  : 			}
; 660  : 			::EndPaint(m_hWnd, &ps);

	mov	esi, esp
	lea	edx, DWORD PTR _ps$149834[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__EndPaint@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 661  : 			return 1;

	mov	eax, 1
	jmp	$L149832
$L149833:

; 662  : 		}
; 663  : 		if (m_spViewObject && m_bWindowless)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??B?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAUIViewObjectEx@@XZ ; ATL::CComPtrBase<IViewObjectEx>::operator IViewObjectEx *
	test	eax, eax
	je	$L149840
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+152]
	shr	eax, 3
	and	eax, 1
	je	$L149840

; 664  : 		{
; 665  : 			PAINTSTRUCT ps;
; 666  : 			HDC hdc = ::BeginPaint(m_hWnd, &ps);

	mov	esi, esp
	lea	ecx, DWORD PTR _ps$149841[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__BeginPaint@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hdc$149842[ebp], eax

; 667  : 
; 668  : 			if (hdc == NULL)

	cmp	DWORD PTR _hdc$149842[ebp], 0
	jne	SHORT $L149843

; 669  : 				return 0;

	xor	eax, eax
	jmp	$L149832
$L149843:

; 670  : 
; 671  : 			RECT rcClient;
; 672  : 			GetClientRect(&rcClient);

	lea	ecx, DWORD PTR _rcClient$149844[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetClientRect@CWindow@ATL@@QBEHPAUtagRECT@@@Z ; ATL::CWindow::GetClientRect

; 673  : 
; 674  : 			HBITMAP hBitmap = CreateCompatibleBitmap(hdc, rcClient.right - rcClient.left, rcClient.bottom - rcClient.top);

	mov	edx, DWORD PTR _rcClient$149844[ebp+12]
	sub	edx, DWORD PTR _rcClient$149844[ebp+4]
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _rcClient$149844[ebp+8]
	sub	eax, DWORD PTR _rcClient$149844[ebp]
	push	eax
	mov	ecx, DWORD PTR _hdc$149842[ebp]
	push	ecx
	call	DWORD PTR __imp__CreateCompatibleBitmap@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hBitmap$149845[ebp], eax

; 675  : 			if (hBitmap != NULL)

	cmp	DWORD PTR _hBitmap$149845[ebp], 0
	je	$L149846

; 676  : 			{
; 677  : 				HDC hdcCompatible = ::CreateCompatibleDC(hdc);

	mov	esi, esp
	mov	edx, DWORD PTR _hdc$149842[ebp]
	push	edx
	call	DWORD PTR __imp__CreateCompatibleDC@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hdcCompatible$149847[ebp], eax

; 678  : 				if (hdcCompatible != NULL)

	cmp	DWORD PTR _hdcCompatible$149847[ebp], 0
	je	$L149848

; 679  : 				{
; 680  : 					HBITMAP hBitmapOld = (HBITMAP)SelectObject(hdcCompatible, hBitmap); 

	mov	esi, esp
	mov	eax, DWORD PTR _hBitmap$149845[ebp]
	push	eax
	mov	ecx, DWORD PTR _hdcCompatible$149847[ebp]
	push	ecx
	call	DWORD PTR __imp__SelectObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hBitmapOld$149849[ebp], eax

; 681  : 					if (hBitmapOld != NULL)

	cmp	DWORD PTR _hBitmapOld$149849[ebp], 0
	je	$L149851

; 682  : 					{
; 683  : 						HBRUSH hbrBack = CreateSolidBrush(m_clrBackground);

	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+204]
	push	eax
	call	DWORD PTR __imp__CreateSolidBrush@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hbrBack$149852[ebp], eax

; 684  : 						if (hbrBack != NULL)

	cmp	DWORD PTR _hbrBack$149852[ebp], 0
	je	$L149853

; 685  : 						{
; 686  : 							FillRect(hdcCompatible, &rcClient, hbrBack);

	mov	esi, esp
	mov	ecx, DWORD PTR _hbrBack$149852[ebp]
	push	ecx
	lea	edx, DWORD PTR _rcClient$149844[ebp]
	push	edx
	mov	eax, DWORD PTR _hdcCompatible$149847[ebp]
	push	eax
	call	DWORD PTR __imp__FillRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 687  : 							DeleteObject(hbrBack);

	mov	esi, esp
	mov	ecx, DWORD PTR _hbrBack$149852[ebp]
	push	ecx
	call	DWORD PTR __imp__DeleteObject@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 688  : 
; 689  : 							m_spViewObject->Draw(DVASPECT_CONTENT, -1, NULL, NULL, NULL, hdcCompatible, (RECTL*)&m_rcPos, (RECTL*)&m_rcPos, NULL, NULL); 

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??C?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIViewObjectEx@@@1@XZ ; ATL::CComPtrBase<IViewObjectEx>::operator->
	mov	DWORD PTR tv165[ebp], eax
	mov	esi, esp
	push	0
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 180				; 000000b4H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 180				; 000000b4H
	push	eax
	mov	ecx, DWORD PTR _hdcCompatible$149847[ebp]
	push	ecx
	push	0
	push	0
	push	0
	push	-1
	push	1
	mov	edx, DWORD PTR tv165[ebp]
	push	edx
	mov	eax, DWORD PTR tv165[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 690  : 
; 691  : 							::BitBlt(hdc, 0, 0, rcClient.right, rcClient.bottom,  hdcCompatible, 0, 0, SRCCOPY);

	mov	esi, esp
	push	13369376				; 00cc0020H
	push	0
	push	0
	mov	edx, DWORD PTR _hdcCompatible$149847[ebp]
	push	edx
	mov	eax, DWORD PTR _rcClient$149844[ebp+12]
	push	eax
	mov	ecx, DWORD PTR _rcClient$149844[ebp+8]
	push	ecx
	push	0
	push	0
	mov	edx, DWORD PTR _hdc$149842[ebp]
	push	edx
	call	DWORD PTR __imp__BitBlt@36
	cmp	esi, esp
	call	__RTC_CheckEsp
$L149853:

; 692  : 						}
; 693  : 						::SelectObject(hdcCompatible, hBitmapOld); 

	mov	esi, esp
	mov	eax, DWORD PTR _hBitmapOld$149849[ebp]
	push	eax
	mov	ecx, DWORD PTR _hdcCompatible$149847[ebp]
	push	ecx
	call	DWORD PTR __imp__SelectObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$L149851:

; 694  : 					}
; 695  : 					::DeleteDC(hdcCompatible);

	mov	esi, esp
	mov	edx, DWORD PTR _hdcCompatible$149847[ebp]
	push	edx
	call	DWORD PTR __imp__DeleteDC@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$L149848:

; 696  : 				}
; 697  : 				::DeleteObject(hBitmap);

	mov	esi, esp
	mov	eax, DWORD PTR _hBitmap$149845[ebp]
	push	eax
	call	DWORD PTR __imp__DeleteObject@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$L149846:

; 698  : 			}
; 699  : 			::EndPaint(m_hWnd, &ps);

	mov	esi, esp
	lea	ecx, DWORD PTR _ps$149841[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__EndPaint@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 700  : 		}
; 701  : 		else

	jmp	SHORT $L149857
$L149840:

; 702  : 		{
; 703  : 			bHandled = FALSE;

	mov	ecx, DWORD PTR _bHandled$[ebp]
	mov	DWORD PTR [ecx], 0

; 704  : 			return 0;

	xor	eax, eax
	jmp	SHORT $L149832
$L149857:

; 705  : 		}
; 706  : 		return 1;

	mov	eax, 1
$L149832:

; 707  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212222
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$L212222:
	DD	4
	DD	$L212221
$L212221:
	DD	-76					; ffffffb4H
	DD	64					; 00000040H
	DD	$L212216
	DD	-104					; ffffff98H
	DD	16					; 00000010H
	DD	$L212217
	DD	-180					; ffffff4cH
	DD	64					; 00000040H
	DD	$L212218
	DD	-208					; ffffff30H
	DD	16					; 00000010H
	DD	$L212219
$L212219:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$L212218:
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$L212217:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$L212216:
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
?OnPaint@CAxHostWindow@ATL@@QAEJIIJAAH@Z ENDP		; ATL::CAxHostWindow::OnPaint
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
_TEXT	ENDS
;	COMDAT ?GetClientRect@CWindow@ATL@@QBEHPAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpRect$ = 8						; size = 4
?GetClientRect@CWindow@ATL@@QBEHPAUtagRECT@@@Z PROC NEAR ; ATL::CWindow::GetClientRect, COMDAT
; _this$ = ecx

; 945  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 946  : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L212225
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	946					; 000003b2H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212225
	int	3
$L212225:

; 947  : 		return ::GetClientRect(m_hWnd, lpRect);

	mov	esi, esp
	mov	eax, DWORD PTR _lpRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__GetClientRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 948  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetClientRect@CWindow@ATL@@QBEHPAUtagRECT@@@Z ENDP	; ATL::CWindow::GetClientRect
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
xdata$x	SEGMENT
$T212236 DD	0ffffffffH
	DD	FLAT:$L212229
$T212231 DD	019930520H
	DD	01H
	DD	FLAT:$T212236
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?CreateControl@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@@Z
_TEXT	SEGMENT
$T212228 = -28						; size = 4
_p$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_lpTricsData$ = 12					; size = 4
_hWnd$ = 16						; size = 4
_pStream$ = 20						; size = 4
?CreateControl@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@@Z PROC NEAR ; ATL::CAxHostWindow::CreateControl, COMDAT

; 711  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateControl@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax

; 712  : 		CComPtr<IUnknown> p;

	lea	ecx, DWORD PTR _p$[ebp]
	call	??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ	; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 713  : 		return CreateControlLicEx(lpTricsData, hWnd, pStream, &p, IID_NULL, NULL, NULL);

	mov	esi, esp
	push	0
	push	0
	push	OFFSET FLAT:_GUID_NULL
	lea	ecx, DWORD PTR _p$[ebp]
	call	??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator&
	push	eax
	mov	eax, DWORD PTR _pStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpTricsData$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	eax
	call	DWORD PTR [edx+40]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T212228[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _p$[ebp]
	call	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
	mov	eax, DWORD PTR $T212228[ebp]

; 714  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212235
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$L212235:
	DD	1
	DD	$L212234
$L212234:
	DD	-20					; ffffffecH
	DD	4
	DD	$L212232
$L212232:
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L212229:
	lea	ecx, DWORD PTR _p$[ebp]
	jmp	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
__ehhandler$?CreateControl@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@@Z:
	mov	eax, OFFSET FLAT:$T212231
	jmp	___CxxFrameHandler
text$x	ENDS
?CreateControl@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@@Z ENDP ; ATL::CAxHostWindow::CreateControl
; Function compile flags: /Odt /RTCsu
;	COMDAT ?CreateControlEx@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@PAPAUIUnknown@@ABU_GUID@@PAU5@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_lpszTricsData$ = 12					; size = 4
_hWnd$ = 16						; size = 4
_pStream$ = 20						; size = 4
_ppUnk$ = 24						; size = 4
_iidAdvise$ = 28					; size = 4
_punkSink$ = 32						; size = 4
?CreateControlEx@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@PAPAUIUnknown@@ABU_GUID@@PAU5@@Z PROC NEAR ; ATL::CAxHostWindow::CreateControlEx, COMDAT

; 716  : 	{

	push	ebp
	mov	ebp, esp
	push	esi

; 717  : 		return CreateControlLicEx(lpszTricsData, hWnd, pStream, ppUnk, iidAdvise, punkSink, NULL);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _punkSink$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iidAdvise$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ppUnk$[ebp]
	push	edx
	mov	eax, DWORD PTR _pStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpszTricsData$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	eax
	call	DWORD PTR [edx+40]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 718  : 	}

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	28					; 0000001cH
?CreateControlEx@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@PAPAUIUnknown@@ABU_GUID@@PAU5@@Z ENDP ; ATL::CAxHostWindow::CreateControlEx
_TEXT	ENDS
PUBLIC	?RedrawWindow@CWindow@ATL@@QAEHPBUtagRECT@@PAUHRGN__@@I@Z ; ATL::CWindow::RedrawWindow
PUBLIC	?ActivateAx@CAxHostWindow@ATL@@QAEJPAUIUnknown@@_NPAUIStream@@@Z ; ATL::CAxHostWindow::ActivateAx
PUBLIC	?SubclassWindow@CAxHostWindow@ATL@@QAEXPAUHWND__@@@Z ; ATL::CAxHostWindow::SubclassWindow
PUBLIC	?ReleaseWindow@CAxHostWindow@ATL@@QAEXXZ	; ATL::CAxHostWindow::ReleaseWindow
; Function compile flags: /Odt /RTCsu
;	COMDAT ?AttachControl@CAxHostWindow@ATL@@UAGJPAUIUnknown@@PAUHWND__@@@Z
_TEXT	SEGMENT
_bReleaseWindowOnFailure$ = -5				; size = 1
_hr$ = -4						; size = 4
_this$ = 8						; size = 4
_pUnkControl$ = 12					; size = 4
_hWnd$ = 16						; size = 4
?AttachControl@CAxHostWindow@ATL@@UAGJPAUIUnknown@@PAUHWND__@@@Z PROC NEAR ; ATL::CAxHostWindow::AttachControl, COMDAT

; 720  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 721  : 		HRESULT hr = S_FALSE;

	mov	DWORD PTR _hr$[ebp], 1

; 722  : 
; 723  : 		ReleaseAll();

	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 36					; 00000024H
	call	?ReleaseAll@CAxHostWindow@ATL@@QAEXXZ	; ATL::CAxHostWindow::ReleaseAll

; 724  : 
; 725  : 		bool bReleaseWindowOnFailure = false; // Used to keep track of whether we subclass the window

	mov	BYTE PTR _bReleaseWindowOnFailure$[ebp], 0

; 726  : 
; 727  : 		if ((m_hWnd != NULL) && (m_hWnd != hWnd)) // Don't release the window if it's the same as the one we already subclass/own

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax-32], 0
	je	SHORT $L149869
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-32]
	cmp	edx, DWORD PTR _hWnd$[ebp]
	je	SHORT $L149869

; 728  : 		{
; 729  : 			RedrawWindow(NULL, NULL, RDW_INVALIDATE | RDW_UPDATENOW | RDW_ERASE | RDW_INTERNALPAINT | RDW_FRAME);

	push	1287					; 00000507H
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 32					; 00000020H
	call	?RedrawWindow@CWindow@ATL@@QAEHPBUtagRECT@@PAUHRGN__@@I@Z ; ATL::CWindow::RedrawWindow

; 730  : 			ReleaseWindow();

	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 36					; 00000024H
	call	?ReleaseWindow@CAxHostWindow@ATL@@QAEXXZ ; ATL::CAxHostWindow::ReleaseWindow
$L149869:

; 731  : 		}
; 732  : 
; 733  : 		if (::IsWindow(hWnd))

	mov	esi, esp
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $L149870

; 734  : 		{
; 735  : 			if (m_hWnd != hWnd) // Don't need to subclass the window if we already own it

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-32]
	cmp	edx, DWORD PTR _hWnd$[ebp]
	je	SHORT $L149871

; 736  : 			{
; 737  : 				SubclassWindow(hWnd);

	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 36					; 00000024H
	call	?SubclassWindow@CAxHostWindow@ATL@@QAEXPAUHWND__@@@Z ; ATL::CAxHostWindow::SubclassWindow

; 738  : 				bReleaseWindowOnFailure = true;

	mov	BYTE PTR _bReleaseWindowOnFailure$[ebp], 1
$L149871:

; 739  : 			}
; 740  : 
; 741  : 			hr = ActivateAx(pUnkControl, true, NULL);

	push	0
	push	1
	mov	ecx, DWORD PTR _pUnkControl$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 36					; 00000024H
	call	?ActivateAx@CAxHostWindow@ATL@@QAEJPAUIUnknown@@_NPAUIStream@@@Z ; ATL::CAxHostWindow::ActivateAx
	mov	DWORD PTR _hr$[ebp], eax

; 742  : 
; 743  : 			if (FAILED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L149870

; 744  : 			{
; 745  : 				ReleaseAll();

	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 36					; 00000024H
	call	?ReleaseAll@CAxHostWindow@ATL@@QAEXXZ	; ATL::CAxHostWindow::ReleaseAll

; 746  : 
; 747  : 				if (m_hWnd != NULL)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx-32], 0
	je	SHORT $L149870

; 748  : 				{
; 749  : 					RedrawWindow(NULL, NULL, RDW_INVALIDATE | RDW_UPDATENOW | RDW_ERASE | RDW_INTERNALPAINT | RDW_FRAME);

	push	1287					; 00000507H
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 32					; 00000020H
	call	?RedrawWindow@CWindow@ATL@@QAEHPBUtagRECT@@PAUHRGN__@@I@Z ; ATL::CWindow::RedrawWindow

; 750  : 					if (bReleaseWindowOnFailure) // We subclassed the window in an attempt to create this control, so we unsubclass on failure

	movzx	eax, BYTE PTR _bReleaseWindowOnFailure$[ebp]
	test	eax, eax
	je	SHORT $L149870

; 751  : 						ReleaseWindow();

	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 36					; 00000024H
	call	?ReleaseWindow@CAxHostWindow@ATL@@QAEXXZ ; ATL::CAxHostWindow::ReleaseWindow
$L149870:

; 752  : 				}
; 753  : 			}
; 754  : 		}
; 755  : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 756  : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?AttachControl@CAxHostWindow@ATL@@UAGJPAUIUnknown@@PAUHWND__@@@Z ENDP ; ATL::CAxHostWindow::AttachControl
_TEXT	ENDS
EXTRN	__imp__RedrawWindow@16:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
;	COMDAT ?RedrawWindow@CWindow@ATL@@QAEHPBUtagRECT@@PAUHRGN__@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpRectUpdate$ = 8					; size = 4
_hRgnUpdate$ = 12					; size = 4
_flags$ = 16						; size = 4
?RedrawWindow@CWindow@ATL@@QAEHPBUtagRECT@@PAUHRGN__@@I@Z PROC NEAR ; ATL::CWindow::RedrawWindow, COMDAT
; _this$ = ecx

; 1133 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1134 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L212245
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	1134					; 0000046eH
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212245
	int	3
$L212245:

; 1135 : 		return ::RedrawWindow(m_hWnd, lpRectUpdate, hRgnUpdate, flags);

	mov	esi, esp
	mov	eax, DWORD PTR _flags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hRgnUpdate$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpRectUpdate$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__RedrawWindow@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1136 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?RedrawWindow@CWindow@ATL@@QAEHPBUtagRECT@@PAUHRGN__@@I@Z ENDP ; ATL::CWindow::RedrawWindow
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
_TEXT	ENDS
;	COMDAT ?QueryControl@CAxHostWindow@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_hr$ = -4						; size = 4
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppvObject$ = 16					; size = 4
?QueryControl@CAxHostWindow@ATL@@UAGJABU_GUID@@PAPAX@Z PROC NEAR ; ATL::CAxHostWindow::QueryControl, COMDAT

; 758  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 759  : 		HRESULT hr = E_POINTER;

	mov	DWORD PTR _hr$[ebp], -2147467261	; 80004003H

; 760  : 		if (ppvObject)

	cmp	DWORD PTR _ppvObject$[ebp], 0
	je	SHORT $L149880

; 761  : 		{
; 762  : 			if (m_spUnknown)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
	test	eax, eax
	je	SHORT $L149881

; 763  : 			{
; 764  : 				hr = m_spUnknown->QueryInterface(riid, ppvObject);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ ; ATL::CComPtrBase<IUnknown>::operator->
	mov	DWORD PTR tv76[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _ppvObject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _riid$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv76[ebp]
	push	edx
	mov	eax, DWORD PTR tv76[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 765  : 			}
; 766  : 			else

	jmp	SHORT $L149880
$L149881:

; 767  : 			{
; 768  : 				*ppvObject = NULL;

	mov	edx, DWORD PTR _ppvObject$[ebp]
	mov	DWORD PTR [edx], 0

; 769  : 				hr = OLE_E_NOCONNECTION;

	mov	DWORD PTR _hr$[ebp], -2147221500	; 80040004H
$L149880:

; 770  : 			}
; 771  : 		}
; 772  : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 773  : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryControl@CAxHostWindow@ATL@@UAGJABU_GUID@@PAPAX@Z ENDP ; ATL::CAxHostWindow::QueryControl
_TEXT	ENDS
PUBLIC	??4?$CComPtr@UIDispatch@@@ATL@@QAEPAUIDispatch@@PAU2@@Z ; ATL::CComPtr<IDispatch>::operator=
; Function compile flags: /Odt /RTCsu
;	COMDAT ?SetExternalDispatch@CAxHostWindow@ATL@@UAGJPAUIDispatch@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pDisp$ = 12						; size = 4
?SetExternalDispatch@CAxHostWindow@ATL@@UAGJPAUIDispatch@@@Z PROC NEAR ; ATL::CAxHostWindow::SetExternalDispatch, COMDAT

; 775  : 	{

	push	ebp
	mov	ebp, esp

; 776  : 		m_spExternalDispatch = pDisp;

	mov	eax, DWORD PTR _pDisp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	??4?$CComPtr@UIDispatch@@@ATL@@QAEPAUIDispatch@@PAU2@@Z ; ATL::CComPtr<IDispatch>::operator=

; 777  : 		return S_OK;

	xor	eax, eax

; 778  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?SetExternalDispatch@CAxHostWindow@ATL@@UAGJPAUIDispatch@@@Z ENDP ; ATL::CAxHostWindow::SetExternalDispatch
_TEXT	ENDS
PUBLIC	?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z ; ATL::AtlComPtrAssign
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ??4?$CComPtr@UIDispatch@@@ATL@@QAEPAUIDispatch@@PAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??4?$CComPtr@UIDispatch@@@ATL@@QAEPAUIDispatch@@PAU2@@Z PROC NEAR ; ATL::CComPtr<IDispatch>::operator=, COMDAT
; _this$ = ecx

; 323  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 324  : 		return static_cast<IDispatch*>(AtlComPtrAssign((IUnknown**)&p, lp));

	mov	eax, DWORD PTR _lp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z ; ATL::AtlComPtrAssign

; 325  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CComPtr@UIDispatch@@@ATL@@QAEPAUIDispatch@@PAU2@@Z ENDP ; ATL::CComPtr<IDispatch>::operator=
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_lp$ = 12						; size = 4
?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z PROC NEAR ; ATL::AtlComPtrAssign, COMDAT

; 45   : {

	push	ebp
	mov	ebp, esp
	push	esi

; 46   : 	if (pp == NULL)

	cmp	DWORD PTR _pp$[ebp], 0
	jne	SHORT $L81059

; 47   : 		return NULL;

	xor	eax, eax
	jmp	SHORT $L81058
$L81059:

; 48   : 		
; 49   : 	if (lp != NULL)

	cmp	DWORD PTR _lp$[ebp], 0
	je	SHORT $L81060

; 50   : 		lp->AddRef();

	mov	eax, DWORD PTR _lp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _lp$[ebp]
	push	edx
	call	DWORD PTR [ecx+4]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L81060:

; 51   : 	if (*pp)

	mov	eax, DWORD PTR _pp$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L81061

; 52   : 		(*pp)->Release();

	mov	ecx, DWORD PTR _pp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L81061:

; 53   : 	*pp = lp;

	mov	eax, DWORD PTR _pp$[ebp]
	mov	ecx, DWORD PTR _lp$[ebp]
	mov	DWORD PTR [eax], ecx

; 54   : 	return lp;

	mov	eax, DWORD PTR _lp$[ebp]
$L81058:

; 55   : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z ENDP ; ATL::AtlComPtrAssign
_TEXT	ENDS
PUBLIC	??4?$CComPtr@UIDocHostUIHandlerDispatch@@@ATL@@QAEPAUIDocHostUIHandlerDispatch@@PAU2@@Z ; ATL::CComPtr<IDocHostUIHandlerDispatch>::operator=
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
;	COMDAT ?SetExternalUIHandler@CAxHostWindow@ATL@@UAGJPAUIDocHostUIHandlerDispatch@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pUIHandler$ = 12					; size = 4
?SetExternalUIHandler@CAxHostWindow@ATL@@UAGJPAUIDocHostUIHandlerDispatch@@@Z PROC NEAR ; ATL::CAxHostWindow::SetExternalUIHandler, COMDAT

; 780  : 	{

	push	ebp
	mov	ebp, esp

; 781  : #ifndef _ATL_NO_DOCHOSTUIHANDLER
; 782  : 		m_spIDocHostUIHandlerDispatch = pUIHandler;

	mov	eax, DWORD PTR _pUIHandler$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??4?$CComPtr@UIDocHostUIHandlerDispatch@@@ATL@@QAEPAUIDocHostUIHandlerDispatch@@PAU2@@Z ; ATL::CComPtr<IDocHostUIHandlerDispatch>::operator=

; 783  : #endif
; 784  : 		return S_OK;

	xor	eax, eax

; 785  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?SetExternalUIHandler@CAxHostWindow@ATL@@UAGJPAUIDocHostUIHandlerDispatch@@@Z ENDP ; ATL::CAxHostWindow::SetExternalUIHandler
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T212266 DD	0ffffffffH
	DD	FLAT:$L212259
$T212261 DD	019930520H
	DD	01H
	DD	FLAT:$T212266
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?CreateControlLic@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@PAG@Z
_TEXT	SEGMENT
$T212258 = -28						; size = 4
_p$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_lpTricsData$ = 12					; size = 4
_hWnd$ = 16						; size = 4
_pStream$ = 20						; size = 4
_bstrLic$ = 24						; size = 4
?CreateControlLic@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@PAG@Z PROC NEAR ; ATL::CAxHostWindow::CreateControlLic, COMDAT

; 788  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateControlLic@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@PAG@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax

; 789  : 		CComPtr<IUnknown> p;

	lea	ecx, DWORD PTR _p$[ebp]
	call	??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ	; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 790  : 		return CreateControlLicEx(lpTricsData, hWnd, pStream, &p, IID_NULL, NULL, bstrLic);

	mov	esi, esp
	mov	eax, DWORD PTR _bstrLic$[ebp]
	push	eax
	push	0
	push	OFFSET FLAT:_GUID_NULL
	lea	ecx, DWORD PTR _p$[ebp]
	call	??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator&
	push	eax
	mov	ecx, DWORD PTR _pStream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	mov	eax, DWORD PTR _lpTricsData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	ecx
	call	DWORD PTR [eax+40]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T212258[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _p$[ebp]
	call	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
	mov	eax, DWORD PTR $T212258[ebp]

; 791  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212265
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$L212265:
	DD	1
	DD	$L212264
$L212264:
	DD	-20					; ffffffecH
	DD	4
	DD	$L212262
$L212262:
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L212259:
	lea	ecx, DWORD PTR _p$[ebp]
	jmp	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
__ehhandler$?CreateControlLic@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@PAG@Z:
	mov	eax, OFFSET FLAT:$T212261
	jmp	___CxxFrameHandler
text$x	ENDS
?CreateControlLic@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@PAG@Z ENDP ; ATL::CAxHostWindow::CreateControlLic
PUBLIC	__GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
PUBLIC	?ocslen@@YAHPBG@Z				; ocslen
PUBLIC	?IsParentDialog@CWindow@ATL@@QAEHXZ		; ATL::CWindow::IsParentDialog
PUBLIC	??I?$CComPtrBase@UIPersistStreamInit@@@ATL@@QAEPAPAUIPersistStreamInit@@XZ ; ATL::CComPtrBase<IPersistStreamInit>::operator&
PUBLIC	??C?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStreamInit@@@1@XZ ; ATL::CComPtrBase<IPersistStreamInit>::operator->
PUBLIC	??8?$CComPtrBase@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z ; ATL::CComPtrBase<IUnknown>::operator==
PUBLIC	??0CComVariant@ATL@@QAE@XZ			; ATL::CComVariant::CComVariant
PUBLIC	??1CComVariant@ATL@@QAE@XZ			; ATL::CComVariant::~CComVariant
PUBLIC	??0?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ	; ATL::CComPtr<IPersistStreamInit>::CComPtr<IPersistStreamInit>
PUBLIC	??0CComVariant@ATL@@QAE@PBG@Z			; ATL::CComVariant::CComVariant
PUBLIC	??1?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ	; ATL::CComPtr<IPersistStreamInit>::~CComPtr<IPersistStreamInit>
PUBLIC	??0?$CComPtr@UIUnknown@@@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
PUBLIC	??B?$CComPtrBase@UIWebBrowser2@@@ATL@@QBEPAUIWebBrowser2@@XZ ; ATL::CComPtrBase<IWebBrowser2>::operator IWebBrowser2 *
PUBLIC	??I?$CComPtrBase@UIWebBrowser2@@@ATL@@QAEPAPAUIWebBrowser2@@XZ ; ATL::CComPtrBase<IWebBrowser2>::operator&
PUBLIC	??C?$CComPtrBase@UIWebBrowser2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIWebBrowser2@@@1@XZ ; ATL::CComPtrBase<IWebBrowser2>::operator->
PUBLIC	??0?$CComPtr@UIWebBrowser2@@@ATL@@QAE@XZ	; ATL::CComPtr<IWebBrowser2>::CComPtr<IWebBrowser2>
PUBLIC	??1?$CComPtr@UIWebBrowser2@@@ATL@@QAE@XZ	; ATL::CComPtr<IWebBrowser2>::~CComPtr<IWebBrowser2>
PUBLIC	__GUID_d30c1661_cdaf_11d0_8a3e_00c04fc9e26e
PUBLIC	?SetWindowLongA@CWindow@ATL@@QAEJHJ@Z		; ATL::CWindow::SetWindowLongA
EXTRN	?AtlAdvise@ATL@@YGJPAUIUnknown@@0ABU_GUID@@PAK@Z:NEAR ; ATL::AtlAdvise
;	COMDAT xdata$x
xdata$x	SEGMENT
$T212290 DD	0ffffffffH
	DD	FLAT:$L212272
	DD	00H
	DD	FLAT:$L212273
	DD	01H
	DD	FLAT:$L212274
	DD	00H
	DD	FLAT:$L212275
	DD	03H
	DD	FLAT:$L212276
	DD	04H
	DD	FLAT:$L212277
$T212279 DD	019930520H
	DD	06H
	DD	FLAT:$T212290
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT __GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
CONST	SEGMENT
__GUID_7fd52380_4e07_101b_ae2d_08002b2ec713 DD 07fd52380H
	DW	04e07H
	DW	0101bH
	DB	0aeH
	DB	02dH
	DB	08H
	DB	00H
	DB	02bH
	DB	02eH
	DB	0c7H
	DB	013H
CONST	ENDS
;	COMDAT __GUID_d30c1661_cdaf_11d0_8a3e_00c04fc9e26e
CONST	SEGMENT
__GUID_d30c1661_cdaf_11d0_8a3e_00c04fc9e26e DD 0d30c1661H
	DW	0cdafH
	DW	011d0H
	DB	08aH
	DB	03eH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0c9H
	DB	0e2H
	DB	06eH
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?CreateControlLicEx@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@PAPAUIUnknown@@ABU_GUID@@PAU5@PAG@Z
_TEXT	SEGMENT
tv334 = -196						; size = 4
tv327 = -192						; size = 4
tv307 = -188						; size = 4
tv294 = -184						; size = 4
tv282 = -180						; size = 4
_vurl$150190 = -172					; size = 16
_ve$150189 = -148					; size = 16
_spBrowser$150185 = -124				; size = 4
_spPSI$150093 = -112					; size = 4
_pBytes$150015 = -104					; size = 4
_spStream$150014 = -96					; size = 4
_hGlobal$149938 = -88					; size = 4
_nCreateSize$149936 = -84				; size = 4
__lpa$149928 = -80					; size = 4
__lpw$149927 = -76					; size = 4
__acp$149926 = -72					; size = 4
__convert$149925 = -68					; size = 4
_spUnk$149924 = -60					; size = 4
_dwStyle$149923 = -52					; size = 4
_bWasHTML$149913 = -41					; size = 1
__lpa$149908 = -36					; size = 4
__lpw$149907 = -32					; size = 4
__acp$149906 = -28					; size = 4
__convert$149905 = -24					; size = 4
_bReleaseWindowOnFailure$ = -17				; size = 1
_hr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_lpszTricsData$ = 12					; size = 4
_hWnd$ = 16						; size = 4
_pStream$ = 20						; size = 4
_ppUnk$ = 24						; size = 4
_iidAdvise$ = 28					; size = 4
_punkSink$ = 32						; size = 4
_bstrLic$ = 36						; size = 4
?CreateControlLicEx@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@PAPAUIUnknown@@ABU_GUID@@PAU5@PAG@Z PROC NEAR ; ATL::CAxHostWindow::CreateControlLicEx, COMDAT

; 793  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateControlLicEx@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@PAPAUIUnknown@@ABU_GUID@@PAU5@PAG@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 184				; 000000b8H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 46					; 0000002eH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 794  : 		ATLASSERT(ppUnk != NULL);

	cmp	DWORD PTR _ppUnk$[ebp], 0
	jne	SHORT $L212271
	push	OFFSET FLAT:??_C@_0L@PGEBGEDK@ppUnk?5?$CB?$DN?50?$AA@
	push	0
	push	794					; 0000031aH
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212271
	int	3
$L212271:

; 795  : 		if (ppUnk == NULL)

	cmp	DWORD PTR _ppUnk$[ebp], 0
	jne	SHORT $L149898

; 796  : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	$L149895
$L149898:

; 797  : 		*ppUnk = NULL;

	mov	ecx, DWORD PTR _ppUnk$[ebp]
	mov	DWORD PTR [ecx], 0

; 798  : 		HRESULT hr = S_FALSE;

	mov	DWORD PTR _hr$[ebp], 1

; 799  : 		bool bReleaseWindowOnFailure = false; // Used to keep track of whether we subclass the window

	mov	BYTE PTR _bReleaseWindowOnFailure$[ebp], 0

; 800  : 
; 801  : 		ReleaseAll();

	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 36					; 00000024H
	call	?ReleaseAll@CAxHostWindow@ATL@@QAEXXZ	; ATL::CAxHostWindow::ReleaseAll

; 802  : 
; 803  : 		if ((m_hWnd != NULL) && (m_hWnd != hWnd)) // Don't release the window if it's the same as the one we already subclass/own

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx-32], 0
	je	SHORT $L149903
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-32]
	cmp	ecx, DWORD PTR _hWnd$[ebp]
	je	SHORT $L149903

; 804  : 		{
; 805  : 			RedrawWindow(NULL, NULL, RDW_INVALIDATE | RDW_UPDATENOW | RDW_ERASE | RDW_INTERNALPAINT | RDW_FRAME);

	push	1287					; 00000507H
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 32					; 00000020H
	call	?RedrawWindow@CWindow@ATL@@QAEHPBUtagRECT@@PAUHRGN__@@I@Z ; ATL::CWindow::RedrawWindow

; 806  : 			ReleaseWindow();

	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 36					; 00000024H
	call	?ReleaseWindow@CAxHostWindow@ATL@@QAEXXZ ; ATL::CAxHostWindow::ReleaseWindow
$L149903:

; 807  : 		}
; 808  : 
; 809  : 		if (::IsWindow(hWnd))

	mov	esi, esp
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$L149904

; 810  : 		{
; 811  : 			USES_CONVERSION;

	mov	DWORD PTR __convert$149905[ebp], 0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	mov	DWORD PTR __acp$149906[ebp], eax
	mov	DWORD PTR __lpw$149907[ebp], 0
	mov	DWORD PTR __lpa$149908[ebp], 0

; 812  : 			if (m_hWnd != hWnd) // Don't need to subclass the window if we already own it

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-32]
	cmp	ecx, DWORD PTR _hWnd$[ebp]
	je	SHORT $L149909

; 813  : 			{
; 814  : 				SubclassWindow(hWnd);

	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 36					; 00000024H
	call	?SubclassWindow@CAxHostWindow@ATL@@QAEXPAUHWND__@@@Z ; ATL::CAxHostWindow::SubclassWindow

; 815  : 				bReleaseWindowOnFailure = true;

	mov	BYTE PTR _bReleaseWindowOnFailure$[ebp], 1
$L149909:

; 816  : 			}
; 817  : 			if (m_clrBackground == NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+168], 0
	jne	SHORT $L149910

; 818  : 			{
; 819  : 				if (IsParentDialog())

	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 32					; 00000020H
	call	?IsParentDialog@CWindow@ATL@@QAEHXZ	; ATL::CWindow::IsParentDialog
	test	eax, eax
	je	SHORT $L149911

; 820  : 					m_clrBackground = GetSysColor(COLOR_BTNFACE);

	mov	esi, esp
	push	15					; 0000000fH
	call	DWORD PTR __imp__GetSysColor@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+168], eax

; 821  : 				else

	jmp	SHORT $L149910
$L149911:

; 822  : 					m_clrBackground = GetSysColor(COLOR_WINDOW);

	mov	esi, esp
	push	5
	call	DWORD PTR __imp__GetSysColor@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+168], eax
$L149910:

; 823  : 			}
; 824  : 
; 825  : 			bool bWasHTML = false;

	mov	BYTE PTR _bWasHTML$149913[ebp], 0

; 826  : 
; 827  : 			hr = CreateNormalizedObject(lpszTricsData, __uuidof(IUnknown), (void**)ppUnk, bWasHTML, bstrLic);

	mov	eax, DWORD PTR _bstrLic$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bWasHTML$149913[ebp]
	push	ecx
	mov	edx, DWORD PTR _ppUnk$[ebp]
	push	edx
	push	OFFSET FLAT:__GUID_00000000_0000_0000_c000_000000000046
	mov	eax, DWORD PTR _lpszTricsData$[ebp]
	push	eax
	call	?CreateNormalizedObject@ATL@@YAJPBGABU_GUID@@PAPAXAA_NPAG@Z ; ATL::CreateNormalizedObject
	add	esp, 20					; 00000014H
	mov	DWORD PTR _hr$[ebp], eax

; 828  : 
; 829  : 			if (SUCCEEDED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $L149916

; 830  : 				hr = ActivateAx(*ppUnk, false, pStream);

	mov	ecx, DWORD PTR _pStream$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _ppUnk$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 36					; 00000024H
	call	?ActivateAx@CAxHostWindow@ATL@@QAEJPAUIUnknown@@_NPAUIStream@@@Z ; ATL::CAxHostWindow::ActivateAx
	mov	DWORD PTR _hr$[ebp], eax
$L149916:

; 831  : 
; 832  : 			// Try to hook up any sink the user might have given us.
; 833  : 			m_iidSink = iidAdvise;

	mov	ecx, DWORD PTR _iidAdvise$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 92					; 0000005cH
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [edx+12], ecx

; 834  : 			if(SUCCEEDED(hr) && *ppUnk && punkSink)

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $L149918
	mov	edx, DWORD PTR _ppUnk$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $L149918
	cmp	DWORD PTR _punkSink$[ebp], 0
	je	SHORT $L149918

; 835  : 				AtlAdvise(*ppUnk, punkSink, m_iidSink, &m_dwAdviseSink);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 112				; 00000070H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	push	ecx
	mov	edx, DWORD PTR _punkSink$[ebp]
	push	edx
	mov	eax, DWORD PTR _ppUnk$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?AtlAdvise@ATL@@YGJPAUIUnknown@@0ABU_GUID@@PAK@Z ; ATL::AtlAdvise
$L149918:

; 836  : 
; 837  : 			if (SUCCEEDED(hr) && bWasHTML && *ppUnk != NULL)

	cmp	DWORD PTR _hr$[ebp], 0
	jl	$L149920
	movzx	edx, BYTE PTR _bWasHTML$149913[ebp]
	test	edx, edx
	je	$L149920
	mov	eax, DWORD PTR _ppUnk$[ebp]
	cmp	DWORD PTR [eax], 0
	je	$L149920

; 838  : 			{
; 839  : 				if ((GetStyle() & (WS_VSCROLL | WS_HSCROLL)) == 0)

	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 32					; 00000020H
	call	?GetStyle@CWindow@ATL@@QBEKXZ		; ATL::CWindow::GetStyle
	and	eax, 3145728				; 00300000H
	jne	SHORT $L149921

; 840  : 					m_dwDocHostFlags |= DOCHOSTUIFLAG_SCROLL_NO;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+188]
	or	edx, 8
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+188], edx

; 841  : 				else

	jmp	SHORT $L149922
$L149921:

; 842  : 				{
; 843  : 					DWORD dwStyle = GetStyle();

	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 32					; 00000020H
	call	?GetStyle@CWindow@ATL@@QBEKXZ		; ATL::CWindow::GetStyle
	mov	DWORD PTR _dwStyle$149923[ebp], eax

; 844  : 					SetWindowLong(GWL_STYLE, dwStyle & ~(WS_VSCROLL | WS_HSCROLL));

	mov	ecx, DWORD PTR _dwStyle$149923[ebp]
	and	ecx, -3145729				; ffcfffffH
	push	ecx
	push	-16					; fffffff0H
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 32					; 00000020H
	call	?SetWindowLongA@CWindow@ATL@@QAEJHJ@Z	; ATL::CWindow::SetWindowLongA

; 845  : 					SetWindowPos(NULL, 0, 0, 0, 0, SWP_NOACTIVATE | SWP_NOMOVE | SWP_NOZORDER | SWP_NOSIZE | SWP_FRAMECHANGED | SWP_DRAWFRAME);

	push	55					; 00000037H
	push	0
	push	0
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 32					; 00000020H
	call	?SetWindowPos@CWindow@ATL@@QAEHPAUHWND__@@HHHHI@Z ; ATL::CWindow::SetWindowPos
$L149922:

; 846  : 				}
; 847  : 
; 848  : 				CComPtr<IUnknown> spUnk(*ppUnk);

	mov	edx, DWORD PTR _ppUnk$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR _spUnk$149924[ebp]
	call	??0?$CComPtr@UIUnknown@@@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 849  : 				// Is it just plain HTML?
; 850  : 				USES_CONVERSION;

	mov	DWORD PTR __convert$149925[ebp], 0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	mov	DWORD PTR __acp$149926[ebp], eax
	mov	DWORD PTR __lpw$149927[ebp], 0
	mov	DWORD PTR __lpa$149928[ebp], 0

; 851  : 				if ((lpszTricsData[0] == OLECHAR('M') || lpszTricsData[0] == OLECHAR('m')) &&
; 852  : 					(lpszTricsData[1] == OLECHAR('S') || lpszTricsData[1] == OLECHAR('s')) &&
; 853  : 					(lpszTricsData[2] == OLECHAR('H') || lpszTricsData[2] == OLECHAR('h')) &&
; 854  : 					(lpszTricsData[3] == OLECHAR('T') || lpszTricsData[3] == OLECHAR('t')) &&
; 855  : 					(lpszTricsData[4] == OLECHAR('M') || lpszTricsData[4] == OLECHAR('m')) &&
; 856  : 					(lpszTricsData[5] == OLECHAR('L') || lpszTricsData[5] == OLECHAR('l')) &&
; 857  : 					(lpszTricsData[6] == OLECHAR(':')))

	mov	ecx, DWORD PTR _lpszTricsData$[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	edx, 77					; 0000004dH
	je	SHORT $L149930
	mov	eax, DWORD PTR _lpszTricsData$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 109				; 0000006dH
	jne	$L149929
$L149930:
	mov	edx, DWORD PTR _lpszTricsData$[ebp]
	movzx	eax, WORD PTR [edx+2]
	cmp	eax, 83					; 00000053H
	je	SHORT $L149931
	mov	ecx, DWORD PTR _lpszTricsData$[ebp]
	movzx	edx, WORD PTR [ecx+2]
	cmp	edx, 115				; 00000073H
	jne	$L149929
$L149931:
	mov	eax, DWORD PTR _lpszTricsData$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	cmp	ecx, 72					; 00000048H
	je	SHORT $L149932
	mov	edx, DWORD PTR _lpszTricsData$[ebp]
	movzx	eax, WORD PTR [edx+4]
	cmp	eax, 104				; 00000068H
	jne	$L149929
$L149932:
	mov	ecx, DWORD PTR _lpszTricsData$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	cmp	edx, 84					; 00000054H
	je	SHORT $L149933
	mov	eax, DWORD PTR _lpszTricsData$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	cmp	ecx, 116				; 00000074H
	jne	$L149929
$L149933:
	mov	edx, DWORD PTR _lpszTricsData$[ebp]
	movzx	eax, WORD PTR [edx+8]
	cmp	eax, 77					; 0000004dH
	je	SHORT $L149934
	mov	ecx, DWORD PTR _lpszTricsData$[ebp]
	movzx	edx, WORD PTR [ecx+8]
	cmp	edx, 109				; 0000006dH
	jne	$L149929
$L149934:
	mov	eax, DWORD PTR _lpszTricsData$[ebp]
	movzx	ecx, WORD PTR [eax+10]
	cmp	ecx, 76					; 0000004cH
	je	SHORT $L149935
	mov	edx, DWORD PTR _lpszTricsData$[ebp]
	movzx	eax, WORD PTR [edx+10]
	cmp	eax, 108				; 0000006cH
	jne	$L149929
$L149935:
	mov	ecx, DWORD PTR _lpszTricsData$[ebp]
	movzx	edx, WORD PTR [ecx+12]
	cmp	edx, 58					; 0000003aH
	jne	$L149929

; 858  : 				{
; 859  : 					// Just HTML: load the HTML data into the document
; 860  : 
; 861  : 					UINT nCreateSize = (ocslen(lpszTricsData) - 7) * sizeof(OLECHAR);

	mov	eax, DWORD PTR _lpszTricsData$[ebp]
	push	eax
	call	?ocslen@@YAHPBG@Z			; ocslen
	add	esp, 4
	lea	ecx, DWORD PTR [eax+eax-14]
	mov	DWORD PTR _nCreateSize$149936[ebp], ecx

; 862  : 					HGLOBAL hGlobal = GlobalAlloc(GHND, nCreateSize);

	mov	esi, esp
	mov	edx, DWORD PTR _nCreateSize$149936[ebp]
	push	edx
	push	66					; 00000042H
	call	DWORD PTR __imp__GlobalAlloc@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hGlobal$149938[ebp], eax

; 863  : 					if (hGlobal)

	cmp	DWORD PTR _hGlobal$149938[ebp], 0
	je	$L149939

; 864  : 					{
; 865  : 						CComPtr<IStream> spStream;

	lea	ecx, DWORD PTR _spStream$150014[ebp]
	call	??0?$CComPtr@UIStream@@@ATL@@QAE@XZ	; ATL::CComPtr<IStream>::CComPtr<IStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 866  : 						BYTE* pBytes = (BYTE*) GlobalLock(hGlobal);

	mov	esi, esp
	mov	eax, DWORD PTR _hGlobal$149938[ebp]
	push	eax
	call	DWORD PTR __imp__GlobalLock@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pBytes$150015[ebp], eax

; 867  : 						memcpy(pBytes, lpszTricsData + 7, nCreateSize);

	mov	ecx, DWORD PTR _nCreateSize$149936[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpszTricsData$[ebp]
	add	edx, 14					; 0000000eH
	push	edx
	mov	eax, DWORD PTR _pBytes$150015[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 868  : 						GlobalUnlock(hGlobal);

	mov	esi, esp
	mov	ecx, DWORD PTR _hGlobal$149938[ebp]
	push	ecx
	call	DWORD PTR __imp__GlobalUnlock@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 869  : 						hr = CreateStreamOnHGlobal(hGlobal, TRUE, &spStream);

	lea	ecx, DWORD PTR _spStream$150014[ebp]
	call	??I?$CComPtrBase@UIStream@@@ATL@@QAEPAPAUIStream@@XZ ; ATL::CComPtrBase<IStream>::operator&
	mov	esi, esp
	push	eax
	push	1
	mov	edx, DWORD PTR _hGlobal$149938[ebp]
	push	edx
	call	DWORD PTR __imp__CreateStreamOnHGlobal@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 870  : 						if (SUCCEEDED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jl	$L150018

; 871  : 						{
; 872  : 							CComPtr<IPersistStreamInit> spPSI;

	lea	ecx, DWORD PTR _spPSI$150093[ebp]
	call	??0?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ ; ATL::CComPtr<IPersistStreamInit>::CComPtr<IPersistStreamInit>
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 873  : 							hr = spUnk->QueryInterface(__uuidof(IPersistStreamInit), (void**)&spPSI);

	lea	ecx, DWORD PTR _spUnk$149924[ebp]
	call	??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ ; ATL::CComPtrBase<IUnknown>::operator->
	mov	DWORD PTR tv282[ebp], eax
	lea	ecx, DWORD PTR _spPSI$150093[ebp]
	call	??I?$CComPtrBase@UIPersistStreamInit@@@ATL@@QAEPAPAUIPersistStreamInit@@XZ ; ATL::CComPtrBase<IPersistStreamInit>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET FLAT:__GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
	mov	eax, DWORD PTR tv282[ebp]
	push	eax
	mov	ecx, DWORD PTR tv282[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 874  : 							if (SUCCEEDED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $L150096

; 875  : 								hr = spPSI->Load(spStream);

	lea	ecx, DWORD PTR _spPSI$150093[ebp]
	call	??C?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStreamInit@@@1@XZ ; ATL::CComPtrBase<IPersistStreamInit>::operator->
	mov	DWORD PTR tv294[ebp], eax
	lea	ecx, DWORD PTR _spStream$150014[ebp]
	call	??B?$CComPtrBase@UIStream@@@ATL@@QBEPAUIStream@@XZ ; ATL::CComPtrBase<IStream>::operator IStream *
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR tv294[ebp]
	push	eax
	mov	ecx, DWORD PTR tv294[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+20]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$L150096:

; 876  : 						}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _spPSI$150093[ebp]
	call	??1?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ
$L150018:

; 877  : 					}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _spStream$150014[ebp]
	call	??1?$CComPtr@UIStream@@@ATL@@QAE@XZ

; 878  : 					else

	jmp	SHORT $L150108
$L149939:

; 879  : 						hr = E_OUTOFMEMORY;

	mov	DWORD PTR _hr$[ebp], -2147024882	; 8007000eH
$L150108:

; 880  : 				}
; 881  : 				else

	jmp	$L150110
$L149929:

; 882  : 				{
; 883  : 					CComPtr<IWebBrowser2> spBrowser;

	lea	ecx, DWORD PTR _spBrowser$150185[ebp]
	call	??0?$CComPtr@UIWebBrowser2@@@ATL@@QAE@XZ ; ATL::CComPtr<IWebBrowser2>::CComPtr<IWebBrowser2>
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 884  : 					spUnk->QueryInterface(__uuidof(IWebBrowser2), (void**)&spBrowser);

	lea	ecx, DWORD PTR _spUnk$149924[ebp]
	call	??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ ; ATL::CComPtrBase<IUnknown>::operator->
	mov	DWORD PTR tv307[ebp], eax
	lea	ecx, DWORD PTR _spBrowser$150185[ebp]
	call	??I?$CComPtrBase@UIWebBrowser2@@@ATL@@QAEPAPAUIWebBrowser2@@XZ ; ATL::CComPtrBase<IWebBrowser2>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET FLAT:__GUID_d30c1661_cdaf_11d0_8a3e_00c04fc9e26e
	mov	eax, DWORD PTR tv307[ebp]
	push	eax
	mov	ecx, DWORD PTR tv307[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 885  : 					if (spBrowser)

	lea	ecx, DWORD PTR _spBrowser$150185[ebp]
	call	??B?$CComPtrBase@UIWebBrowser2@@@ATL@@QBEPAUIWebBrowser2@@XZ ; ATL::CComPtrBase<IWebBrowser2>::operator IWebBrowser2 *
	test	eax, eax
	je	$L150188

; 886  : 					{
; 887  : 						CComVariant ve;

	lea	ecx, DWORD PTR _ve$150189[ebp]
	call	??0CComVariant@ATL@@QAE@XZ		; ATL::CComVariant::CComVariant
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 888  : 						CComVariant vurl(lpszTricsData);

	mov	eax, DWORD PTR _lpszTricsData$[ebp]
	push	eax
	lea	ecx, DWORD PTR _vurl$150190[ebp]
	call	??0CComVariant@ATL@@QAE@PBG@Z		; ATL::CComVariant::CComVariant
	mov	BYTE PTR __$EHRec$[ebp+8], 5

; 889  : 						spBrowser->put_Visible(ATL_VARIANT_TRUE);

	lea	ecx, DWORD PTR _spBrowser$150185[ebp]
	call	??C?$CComPtrBase@UIWebBrowser2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIWebBrowser2@@@1@XZ ; ATL::CComPtrBase<IWebBrowser2>::operator->
	mov	DWORD PTR tv327[ebp], eax
	mov	esi, esp
	push	-1
	mov	ecx, DWORD PTR tv327[ebp]
	push	ecx
	mov	edx, DWORD PTR tv327[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax+164]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 890  : 						spBrowser->Navigate2(&vurl, &ve, &ve, &ve, &ve);

	lea	ecx, DWORD PTR _spBrowser$150185[ebp]
	call	??C?$CComPtrBase@UIWebBrowser2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIWebBrowser2@@@1@XZ ; ATL::CComPtrBase<IWebBrowser2>::operator->
	mov	DWORD PTR tv334[ebp], eax
	mov	esi, esp
	lea	ecx, DWORD PTR _ve$150189[ebp]
	push	ecx
	lea	edx, DWORD PTR _ve$150189[ebp]
	push	edx
	lea	eax, DWORD PTR _ve$150189[ebp]
	push	eax
	lea	ecx, DWORD PTR _ve$150189[ebp]
	push	ecx
	lea	edx, DWORD PTR _vurl$150190[ebp]
	push	edx
	mov	eax, DWORD PTR tv334[ebp]
	push	eax
	mov	ecx, DWORD PTR tv334[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+208]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 891  : 					}

	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _vurl$150190[ebp]
	call	??1CComVariant@ATL@@QAE@XZ		; ATL::CComVariant::~CComVariant
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _ve$150189[ebp]
	call	??1CComVariant@ATL@@QAE@XZ		; ATL::CComVariant::~CComVariant
$L150188:

; 892  : 				}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _spBrowser$150185[ebp]
	call	??1?$CComPtr@UIWebBrowser2@@@ATL@@QAE@XZ
$L150110:

; 893  : 
; 894  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spUnk$149924[ebp]
	call	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
$L149920:

; 895  : 			if (FAILED(hr) || m_spUnknown == NULL)

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $L150204
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??8?$CComPtrBase@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z ; ATL::CComPtrBase<IUnknown>::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $L149904
$L150204:

; 896  : 			{
; 897  : 				// We don't have a control or something failed so release
; 898  : 				ReleaseAll();

	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 36					; 00000024H
	call	?ReleaseAll@CAxHostWindow@ATL@@QAEXXZ	; ATL::CAxHostWindow::ReleaseAll

; 899  : 
; 900  : 				if (m_hWnd != NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx-32], 0
	je	SHORT $L149904

; 901  : 				{
; 902  : 					RedrawWindow(NULL, NULL, RDW_INVALIDATE | RDW_UPDATENOW | RDW_ERASE | RDW_INTERNALPAINT | RDW_FRAME);

	push	1287					; 00000507H
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 32					; 00000020H
	call	?RedrawWindow@CWindow@ATL@@QAEHPBUtagRECT@@PAUHRGN__@@I@Z ; ATL::CWindow::RedrawWindow

; 903  : 					if (FAILED(hr) && bReleaseWindowOnFailure) // We subclassed the window in an attempt to create this control, so we unsubclass on failure

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L149904
	movzx	edx, BYTE PTR _bReleaseWindowOnFailure$[ebp]
	test	edx, edx
	je	SHORT $L149904

; 904  : 						ReleaseWindow();

	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 36					; 00000024H
	call	?ReleaseWindow@CAxHostWindow@ATL@@QAEXXZ ; ATL::CAxHostWindow::ReleaseWindow
$L149904:

; 905  : 				}
; 906  : 			}
; 907  : 		}
; 908  : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]
$L149895:

; 909  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212289
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
$L212289:
	DD	7
	DD	$L212288
$L212288:
	DD	-41					; ffffffd7H
	DD	1
	DD	$L212280
	DD	-60					; ffffffc4H
	DD	4
	DD	$L212281
	DD	-96					; ffffffa0H
	DD	4
	DD	$L212282
	DD	-112					; ffffff90H
	DD	4
	DD	$L212283
	DD	-124					; ffffff84H
	DD	4
	DD	$L212284
	DD	-148					; ffffff6cH
	DD	16					; 00000010H
	DD	$L212285
	DD	-172					; ffffff54H
	DD	16					; 00000010H
	DD	$L212286
$L212286:
	DB	118					; 00000076H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	108					; 0000006cH
	DB	0
$L212285:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	0
$L212284:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	66					; 00000042H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$L212283:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	80					; 00000050H
	DB	83					; 00000053H
	DB	73					; 00000049H
	DB	0
$L212282:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$L212281:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	85					; 00000055H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	0
$L212280:
	DB	98					; 00000062H
	DB	87					; 00000057H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	72					; 00000048H
	DB	84					; 00000054H
	DB	77					; 0000004dH
	DB	76					; 0000004cH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L212272:
	lea	ecx, DWORD PTR _spUnk$149924[ebp]
	jmp	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
$L212273:
	lea	ecx, DWORD PTR _spStream$150014[ebp]
	jmp	??1?$CComPtr@UIStream@@@ATL@@QAE@XZ
$L212274:
	lea	ecx, DWORD PTR _spPSI$150093[ebp]
	jmp	??1?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ
$L212275:
	lea	ecx, DWORD PTR _spBrowser$150185[ebp]
	jmp	??1?$CComPtr@UIWebBrowser2@@@ATL@@QAE@XZ
$L212276:
	lea	ecx, DWORD PTR _ve$150189[ebp]
	jmp	??1CComVariant@ATL@@QAE@XZ		; ATL::CComVariant::~CComVariant
$L212277:
	lea	ecx, DWORD PTR _vurl$150190[ebp]
	jmp	??1CComVariant@ATL@@QAE@XZ		; ATL::CComVariant::~CComVariant
__ehhandler$?CreateControlLicEx@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@PAPAUIUnknown@@ABU_GUID@@PAU5@PAG@Z:
	mov	eax, OFFSET FLAT:$T212279
	jmp	___CxxFrameHandler
text$x	ENDS
?CreateControlLicEx@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@PAPAUIUnknown@@ABU_GUID@@PAU5@PAG@Z ENDP ; ATL::CAxHostWindow::CreateControlLicEx
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?ocslen@@YAHPBG@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
?ocslen@@YAHPBG@Z PROC NEAR				; ocslen, COMDAT

; 679  : 	inline int ocslen(LPCOLESTR x) throw() { return lstrlenW(x); }

	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, esp
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	call	DWORD PTR __imp__lstrlenW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?ocslen@@YAHPBG@Z ENDP					; ocslen
_TEXT	ENDS
EXTRN	__imp__VariantInit@4:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ??0CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CComVariant@ATL@@QAE@XZ PROC NEAR			; ATL::CComVariant::CComVariant, COMDAT
; _this$ = ecx

; 1531 : 	CComVariant() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1532 : 	{
; 1533 : 		::VariantInit(this);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__VariantInit@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1534 : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CComVariant@ATL@@QAE@XZ ENDP				; ATL::CComVariant::CComVariant
_TEXT	ENDS
PUBLIC	?Clear@CComVariant@ATL@@QAEJXZ			; ATL::CComVariant::Clear
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CComVariant@ATL@@QAE@XZ PROC NEAR			; ATL::CComVariant::~CComVariant, COMDAT
; _this$ = ecx

; 1536 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1537 : 		Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@CComVariant@ATL@@QAEJXZ		; ATL::CComVariant::Clear

; 1538 : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CComVariant@ATL@@QAE@XZ ENDP				; ATL::CComVariant::~CComVariant
_TEXT	ENDS
PUBLIC	??4CComVariant@ATL@@QAEAAV01@PBG@Z		; ATL::CComVariant::operator=
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0CComVariant@ATL@@QAE@PBG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszSrc$ = 8						; size = 4
??0CComVariant@ATL@@QAE@PBG@Z PROC NEAR			; ATL::CComVariant::CComVariant, COMDAT
; _this$ = ecx

; 1551 : 	CComVariant(LPCOLESTR lpszSrc)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1552 : 	{
; 1553 : 		vt = VT_EMPTY;

	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax], 0

; 1554 : 		*this = lpszSrc;

	mov	ecx, DWORD PTR _lpszSrc$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4CComVariant@ATL@@QAEAAV01@PBG@Z	; ATL::CComVariant::operator=

; 1555 : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CComVariant@ATL@@QAE@PBG@Z ENDP			; ATL::CComVariant::CComVariant
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszSrc$ = 8						; size = 4
??4CComVariant@ATL@@QAEAAV01@PBG@Z PROC NEAR		; ATL::CComVariant::operator=, COMDAT
; _this$ = ecx

; 1708 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1709 : 		Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@CComVariant@ATL@@QAEJXZ		; ATL::CComVariant::Clear

; 1710 : 		vt = VT_BSTR;

	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax], 8

; 1711 : 		bstrVal = ::SysAllocString(lpszSrc);

	mov	esi, esp
	mov	ecx, DWORD PTR _lpszSrc$[ebp]
	push	ecx
	call	DWORD PTR __imp__SysAllocString@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax

; 1712 : 
; 1713 : 		if (bstrVal == NULL && lpszSrc != NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $L82697
	cmp	DWORD PTR _lpszSrc$[ebp], 0
	je	SHORT $L82697

; 1714 : 		{
; 1715 : 			vt = VT_ERROR;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx], 10			; 0000000aH

; 1716 : 			scode = E_OUTOFMEMORY;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], -2147024882		; 8007000eH
$L82697:

; 1717 : 		}
; 1718 : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1719 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CComVariant@ATL@@QAEAAV01@PBG@Z ENDP			; ATL::CComVariant::operator=
_TEXT	ENDS
EXTRN	__imp__VariantClear@4:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Clear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@CComVariant@ATL@@QAEJXZ PROC NEAR		; ATL::CComVariant::Clear, COMDAT
; _this$ = ecx

; 2095 : 	HRESULT Clear() { return ::VariantClear(this); }

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__VariantClear@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@CComVariant@ATL@@QAEJXZ ENDP			; ATL::CComVariant::Clear
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
_TEXT	ENDS
;	COMDAT ?SetWindowLongA@CWindow@ATL@@QAEJHJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_dwNewLong$ = 12					; size = 4
?SetWindowLongA@CWindow@ATL@@QAEJHJ@Z PROC NEAR		; ATL::CWindow::SetWindowLongA, COMDAT
; _this$ = ecx

; 761  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 762  : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L212307
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	762					; 000002faH
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212307
	int	3
$L212307:

; 763  : 		return ::SetWindowLong(m_hWnd, nIndex, dwNewLong);

	mov	esi, esp
	mov	eax, DWORD PTR _dwNewLong$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__SetWindowLongA@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 764  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetWindowLongA@CWindow@ATL@@QAEJHJ@Z ENDP		; ATL::CWindow::SetWindowLongA
_TEXT	ENDS
PUBLIC	??_C@_06FGFHJIJL@?$CD32770?$AA@			; `string'
PUBLIC	?GetParent@CWindow@ATL@@QBE?AV12@XZ		; ATL::CWindow::GetParent
EXTRN	__imp__lstrcmpA@8:NEAR
EXTRN	__imp__GetClassNameA@12:NEAR
;	COMDAT ??_C@_06FGFHJIJL@?$CD32770?$AA@
CONST	SEGMENT
??_C@_06FGFHJIJL@?$CD32770?$AA@ DB '#32770', 00H	; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?IsParentDialog@CWindow@ATL@@QAEHXZ
_TEXT	SEGMENT
$T212312 = -28						; size = 4
_szBuf$ = -20						; size = 8
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?IsParentDialog@CWindow@ATL@@QAEHXZ PROC NEAR		; ATL::CWindow::IsParentDialog, COMDAT
; _this$ = ecx

; 1690 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1691 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L212311
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	1691					; 0000069bH
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212311
	int	3
$L212311:

; 1692 : 		TCHAR szBuf[8]; // "#32770" + NUL character
; 1693 : 		if (GetClassName(GetParent(), szBuf, sizeof(szBuf)/sizeof(TCHAR)) == 0)

	mov	esi, esp
	push	8
	lea	eax, DWORD PTR _szBuf$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T212312[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetParent@CWindow@ATL@@QBE?AV12@XZ	; ATL::CWindow::GetParent
	mov	ecx, eax
	call	??BCWindow@ATL@@QBEPAUHWND__@@XZ	; ATL::CWindow::operator HWND__ *
	push	eax
	call	DWORD PTR __imp__GetClassNameA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L102452

; 1694 : 			return FALSE;

	xor	eax, eax
	jmp	SHORT $L102447
$L102452:

; 1695 : 		return lstrcmp(szBuf, _T("#32770")) == 0;

	mov	esi, esp
	push	OFFSET FLAT:??_C@_06FGFHJIJL@?$CD32770?$AA@
	lea	edx, DWORD PTR _szBuf$[ebp]
	push	edx
	call	DWORD PTR __imp__lstrcmpA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	neg	eax
	sbb	eax, eax
	inc	eax
$L102447:

; 1696 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212316
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L212316:
	DD	1
	DD	$L212315
$L212315:
	DD	-20					; ffffffecH
	DD	8
	DD	$L212313
$L212313:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?IsParentDialog@CWindow@ATL@@QAEHXZ ENDP		; ATL::CWindow::IsParentDialog
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?GetParent@CWindow@ATL@@QBE?AV12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetParent@CWindow@ATL@@QBE?AV12@XZ PROC NEAR		; ATL::CWindow::GetParent, COMDAT
; _this$ = ecx

; 1442 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1443 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L212319
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	1443					; 000005a3H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212319
	int	3
$L212319:

; 1444 : 		return CWindow(::GetParent(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__GetParent@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0CWindow@ATL@@QAE@PAUHWND__@@@Z	; ATL::CWindow::CWindow
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1445 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetParent@CWindow@ATL@@QBE?AV12@XZ ENDP		; ATL::CWindow::GetParent
_TEXT	ENDS
PUBLIC	__GUID_25336920_03f9_11cf_8fd0_00aa00686f13
PUBLIC	__GUID_8856f961_340a_11d0_a96b_00c04fd705a2
PUBLIC	??I?$CComPtrBase@UIClassFactory2@@@ATL@@QAEPAPAUIClassFactory2@@XZ ; ATL::CComPtrBase<IClassFactory2>::operator&
PUBLIC	??C?$CComPtrBase@UIClassFactory2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIClassFactory2@@@1@XZ ; ATL::CComPtrBase<IClassFactory2>::operator->
PUBLIC	??0?$CComPtr@UIClassFactory2@@@ATL@@QAE@XZ	; ATL::CComPtr<IClassFactory2>::CComPtr<IClassFactory2>
PUBLIC	??1?$CComPtr@UIClassFactory2@@@ATL@@QAE@XZ	; ATL::CComPtr<IClassFactory2>::~CComPtr<IClassFactory2>
PUBLIC	__GUID_b196b28f_bab4_101a_b69c_00aa00341d07
PUBLIC	?FindOneOf@CAtlModule@ATL@@SAPBDPBD0@Z		; ATL::CAtlModule::FindOneOf
EXTRN	__imp__CoGetClassObject@20:NEAR
EXTRN	__imp__CoCreateInstance@20:NEAR
EXTRN	__imp__CLSIDFromString@8:NEAR
EXTRN	__imp__CLSIDFromProgID@8:NEAR
xdata$x	SEGMENT
$T212335 DD	0ffffffffH
	DD	FLAT:$L212326
$T212328 DD	019930520H
	DD	01H
	DD	FLAT:$T212335
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT __GUID_25336920_03f9_11cf_8fd0_00aa00686f13
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
CONST	SEGMENT
__GUID_25336920_03f9_11cf_8fd0_00aa00686f13 DD 025336920H
	DW	03f9H
	DW	011cfH
	DB	08fH
	DB	0d0H
	DB	00H
	DB	0aaH
	DB	00H
	DB	068H
	DB	06fH
	DB	013H
CONST	ENDS
;	COMDAT __GUID_8856f961_340a_11d0_a96b_00c04fd705a2
CONST	SEGMENT
__GUID_8856f961_340a_11d0_a96b_00c04fd705a2 DD 08856f961H
	DW	0340aH
	DW	011d0H
	DB	0a9H
	DB	06bH
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0d7H
	DB	05H
	DB	0a2H
CONST	ENDS
;	COMDAT __GUID_b196b28f_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT
__GUID_b196b28f_bab4_101a_b69c_00aa00341d07 DD 0b196b28fH
	DW	0bab4H
	DW	0101aH
	DB	0b6H
	DB	09cH
	DB	00H
	DB	0aaH
	DB	00H
	DB	034H
	DB	01dH
	DB	07H
; Function compile flags: /Odt /RTCsu
CONST	ENDS
_TEXT	SEGMENT
tv205 = -84						; size = 4
tv165 = -80						; size = 4
tv168 = -76						; size = 4
_spClassFactory$147571 = -68				; size = 4
__lpa$ = -60						; size = 4
__lpw$ = -56						; size = 4
__acp$ = -52						; size = 4
__convert$ = -48					; size = 4
_hr$ = -44						; size = 4
_clsid$ = -36						; size = 16
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_lpszTricsData$ = 8					; size = 4
_riid$ = 12						; size = 4
_ppvObj$ = 16						; size = 4
_bWasHTML$ = 20						; size = 4
_bstrLicKey$ = 24					; size = 4
?CreateNormalizedObject@ATL@@YAJPBGABU_GUID@@PAPAXAA_NPAG@Z PROC NEAR ; ATL::CreateNormalizedObject

; 63   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateNormalizedObject@ATL@@YAJPBGABU_GUID@@PAPAXAA_NPAG@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 72					; 00000048H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-84]
	mov	ecx, 18					; 00000012H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 64   : 	ATLASSERT(ppvObj);

	cmp	DWORD PTR _ppvObj$[ebp], 0
	jne	SHORT $L212323
	push	OFFSET FLAT:$SG147460
	push	0
	push	64					; 00000040H
	push	OFFSET FLAT:$SG147461
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212323
	int	3
$L212323:

; 65   : 	if (ppvObj == NULL)

	cmp	DWORD PTR _ppvObj$[ebp], 0
	jne	SHORT $L147462

; 66   : 		return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	$L147458
$L147462:

; 67   : 	*ppvObj = NULL;

	mov	ecx, DWORD PTR _ppvObj$[ebp]
	mov	DWORD PTR [ecx], 0

; 68   : 
; 69   : 	CLSID clsid;
; 70   : 	HRESULT hr = E_FAIL;

	mov	DWORD PTR _hr$[ebp], -2147467259	; 80004005H

; 71   : 
; 72   : 	bWasHTML = false;

	mov	edx, DWORD PTR _bWasHTML$[ebp]
	mov	BYTE PTR [edx], 0

; 73   : 
; 74   : 
; 75   : 	if (lpszTricsData == NULL || lpszTricsData[0] == 0)

	cmp	DWORD PTR _lpszTricsData$[ebp], 0
	je	SHORT $L147468
	mov	eax, DWORD PTR _lpszTricsData$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	jne	SHORT $L147467
$L147468:

; 76   : 		return S_OK;

	xor	eax, eax
	jmp	$L147458
$L147467:

; 77   : 
; 78   : 	// Is it HTML ?
; 79   : 	USES_CONVERSION;

	mov	DWORD PTR __convert$[ebp], 0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	mov	DWORD PTR __acp$[ebp], eax
	mov	DWORD PTR __lpw$[ebp], 0
	mov	DWORD PTR __lpa$[ebp], 0

; 80   : 	if ((lpszTricsData[0] == OLECHAR('M') || lpszTricsData[0] == OLECHAR('m')) &&
; 81   : 		(lpszTricsData[1] == OLECHAR('S') || lpszTricsData[1] == OLECHAR('s')) &&
; 82   : 		(lpszTricsData[2] == OLECHAR('H') || lpszTricsData[2] == OLECHAR('h')) &&
; 83   : 		(lpszTricsData[3] == OLECHAR('T') || lpszTricsData[3] == OLECHAR('t')) &&
; 84   : 		(lpszTricsData[4] == OLECHAR('M') || lpszTricsData[4] == OLECHAR('m')) &&
; 85   : 		(lpszTricsData[5] == OLECHAR('L') || lpszTricsData[5] == OLECHAR('l')) &&
; 86   : 		(lpszTricsData[6] == OLECHAR(':')))

	mov	edx, DWORD PTR _lpszTricsData$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	eax, 77					; 0000004dH
	je	SHORT $L147475
	mov	ecx, DWORD PTR _lpszTricsData$[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	edx, 109				; 0000006dH
	jne	$L147474
$L147475:
	mov	eax, DWORD PTR _lpszTricsData$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	cmp	ecx, 83					; 00000053H
	je	SHORT $L147476
	mov	edx, DWORD PTR _lpszTricsData$[ebp]
	movzx	eax, WORD PTR [edx+2]
	cmp	eax, 115				; 00000073H
	jne	$L147474
$L147476:
	mov	ecx, DWORD PTR _lpszTricsData$[ebp]
	movzx	edx, WORD PTR [ecx+4]
	cmp	edx, 72					; 00000048H
	je	SHORT $L147477
	mov	eax, DWORD PTR _lpszTricsData$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	cmp	ecx, 104				; 00000068H
	jne	$L147474
$L147477:
	mov	edx, DWORD PTR _lpszTricsData$[ebp]
	movzx	eax, WORD PTR [edx+6]
	cmp	eax, 84					; 00000054H
	je	SHORT $L147478
	mov	ecx, DWORD PTR _lpszTricsData$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	cmp	edx, 116				; 00000074H
	jne	SHORT $L147474
$L147478:
	mov	eax, DWORD PTR _lpszTricsData$[ebp]
	movzx	ecx, WORD PTR [eax+8]
	cmp	ecx, 77					; 0000004dH
	je	SHORT $L147479
	mov	edx, DWORD PTR _lpszTricsData$[ebp]
	movzx	eax, WORD PTR [edx+8]
	cmp	eax, 109				; 0000006dH
	jne	SHORT $L147474
$L147479:
	mov	ecx, DWORD PTR _lpszTricsData$[ebp]
	movzx	edx, WORD PTR [ecx+10]
	cmp	edx, 76					; 0000004cH
	je	SHORT $L147480
	mov	eax, DWORD PTR _lpszTricsData$[ebp]
	movzx	ecx, WORD PTR [eax+10]
	cmp	ecx, 108				; 0000006cH
	jne	SHORT $L147474
$L147480:
	mov	edx, DWORD PTR _lpszTricsData$[ebp]
	movzx	eax, WORD PTR [edx+12]
	cmp	eax, 58					; 0000003aH
	jne	SHORT $L147474

; 87   : 	{
; 88   : 		// It's HTML, so let's create mshtml
; 89   : 		hr = CoCreateInstance(__uuidof(HTMLDocument), NULL, CLSCTX_INPROC_SERVER, riid, ppvObj);

	mov	esi, esp
	mov	ecx, DWORD PTR _ppvObj$[ebp]
	push	ecx
	mov	edx, DWORD PTR _riid$[ebp]
	push	edx
	push	1
	push	0
	push	OFFSET FLAT:__GUID_25336920_03f9_11cf_8fd0_00aa00686f13
	call	DWORD PTR __imp__CoCreateInstance@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 90   : 		bWasHTML = true;

	mov	eax, DWORD PTR _bWasHTML$[ebp]
	mov	BYTE PTR [eax], 1

; 91   : 	}
; 92   : 	// Is it a URL?
; 93   : 	else if (CAtlModule::FindOneOf(OLE2CT(lpszTricsData), _T(":")))

	jmp	$L147482
$L147474:
	mov	ecx, DWORD PTR _lpszTricsData$[ebp]
	mov	DWORD PTR __lpw$[ebp], ecx
	cmp	DWORD PTR __lpw$[ebp], 0
	jne	SHORT $L212324
	mov	DWORD PTR tv168[ebp], 0
	jmp	SHORT $L212325
$L212324:
	mov	esi, esp
	mov	edx, DWORD PTR __lpw$[ebp]
	push	edx
	call	DWORD PTR __imp__lstrlenW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	lea	eax, DWORD PTR [eax+eax+2]
	mov	DWORD PTR __convert$[ebp], eax
	mov	eax, DWORD PTR __convert$[ebp]
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv165[ebp], esp
	mov	ecx, DWORD PTR __acp$[ebp]
	push	ecx
	mov	edx, DWORD PTR __convert$[ebp]
	push	edx
	mov	eax, DWORD PTR __lpw$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv165[ebp]
	push	ecx
	call	?AtlW2AHelper@@YGPADPADPBGHI@Z		; AtlW2AHelper
	mov	DWORD PTR tv168[ebp], eax
$L212325:
	push	OFFSET FLAT:$SG147486
	mov	edx, DWORD PTR tv168[ebp]
	push	edx
	call	?FindOneOf@CAtlModule@ATL@@SAPBDPBD0@Z	; ATL::CAtlModule::FindOneOf
	add	esp, 8
	test	eax, eax
	je	SHORT $L147485

; 94   : 	{
; 95   : 		// URL so let's create shdocvw
; 96   : 		hr = CoCreateInstance(__uuidof(WebBrowser), NULL, CLSCTX_INPROC_SERVER, riid, ppvObj);

	mov	esi, esp
	mov	eax, DWORD PTR _ppvObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _riid$[ebp]
	push	ecx
	push	1
	push	0
	push	OFFSET FLAT:__GUID_8856f961_340a_11d0_a96b_00c04fd705a2
	call	DWORD PTR __imp__CoCreateInstance@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 97   : 		bWasHTML = true;

	mov	edx, DWORD PTR _bWasHTML$[ebp]
	mov	BYTE PTR [edx], 1

; 98   : 	}
; 99   : 	// assume ProgID or CLSID
; 100  : 	else

	jmp	$L147482
$L147485:

; 101  : 	{
; 102  : 		// Can't be clsid, or progid if length is greater than 255
; 103  : 		if (ocslen(lpszTricsData) < 255)

	mov	eax, DWORD PTR _lpszTricsData$[ebp]
	push	eax
	call	?ocslen@@YAHPBG@Z			; ocslen
	add	esp, 4
	cmp	eax, 255				; 000000ffH
	jge	SHORT $L147489

; 104  : 		{
; 105  : 			if (lpszTricsData[0] == '{') // Is it a CLSID?

	mov	ecx, DWORD PTR _lpszTricsData$[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	edx, 123				; 0000007bH
	jne	SHORT $L147490

; 106  : 				hr = CLSIDFromString((LPOLESTR)lpszTricsData, &clsid);

	mov	esi, esp
	lea	eax, DWORD PTR _clsid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpszTricsData$[ebp]
	push	ecx
	call	DWORD PTR __imp__CLSIDFromString@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 107  : 			else

	jmp	SHORT $L147489
$L147490:

; 108  : 				hr = CLSIDFromProgID((LPOLESTR)lpszTricsData, &clsid); // How about a ProgID?

	mov	esi, esp
	lea	edx, DWORD PTR _clsid$[ebp]
	push	edx
	mov	eax, DWORD PTR _lpszTricsData$[ebp]
	push	eax
	call	DWORD PTR __imp__CLSIDFromProgID@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$L147489:

; 109  : 		}
; 110  : 		if (SUCCEEDED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jl	$L147482

; 111  : 		{
; 112  : 			// If the license key is present
; 113  : 			// Create using IClassFactory2.
; 114  : 			if (bstrLicKey != NULL)

	cmp	DWORD PTR _bstrLicKey$[ebp], 0
	je	$L147496

; 115  : 			{
; 116  : 				CComPtr<IClassFactory2> spClassFactory;

	lea	ecx, DWORD PTR _spClassFactory$147571[ebp]
	call	??0?$CComPtr@UIClassFactory2@@@ATL@@QAE@XZ ; ATL::CComPtr<IClassFactory2>::CComPtr<IClassFactory2>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 117  : 				hr = CoGetClassObject(clsid, CLSCTX_INPROC_SERVER, NULL, __uuidof(IClassFactory2), (void**)&spClassFactory);

	lea	ecx, DWORD PTR _spClassFactory$147571[ebp]
	call	??I?$CComPtrBase@UIClassFactory2@@@ATL@@QAEPAPAUIClassFactory2@@XZ ; ATL::CComPtrBase<IClassFactory2>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET FLAT:__GUID_b196b28f_bab4_101a_b69c_00aa00341d07
	push	0
	push	1
	lea	ecx, DWORD PTR _clsid$[ebp]
	push	ecx
	call	DWORD PTR __imp__CoGetClassObject@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 118  : 				if (SUCCEEDED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $L147575

; 119  : 					hr = spClassFactory->CreateInstanceLic(NULL, NULL, riid, bstrLicKey, ppvObj);

	lea	ecx, DWORD PTR _spClassFactory$147571[ebp]
	call	??C?$CComPtrBase@UIClassFactory2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIClassFactory2@@@1@XZ ; ATL::CComPtrBase<IClassFactory2>::operator->
	mov	DWORD PTR tv205[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR _ppvObj$[ebp]
	push	edx
	mov	eax, DWORD PTR _bstrLicKey$[ebp]
	push	eax
	mov	ecx, DWORD PTR _riid$[ebp]
	push	ecx
	push	0
	push	0
	mov	edx, DWORD PTR tv205[ebp]
	push	edx
	mov	eax, DWORD PTR tv205[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+28]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$L147575:

; 120  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spClassFactory$147571[ebp]
	call	??1?$CComPtr@UIClassFactory2@@@ATL@@QAE@XZ

; 121  : 			else

	jmp	SHORT $L147482
$L147496:

; 122  : 				hr = CoCreateInstance(clsid, NULL, CLSCTX_INPROC_SERVER, riid, ppvObj);

	mov	esi, esp
	mov	edx, DWORD PTR _ppvObj$[ebp]
	push	edx
	mov	eax, DWORD PTR _riid$[ebp]
	push	eax
	push	1
	push	0
	lea	ecx, DWORD PTR _clsid$[ebp]
	push	ecx
	call	DWORD PTR __imp__CoCreateInstance@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$L147482:

; 123  : 		}
; 124  : 	}
; 125  : 	return hr;

	mov	eax, DWORD PTR _hr$[ebp]
$L147458:

; 126  : }

	lea	esp, DWORD PTR [ebp-92]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212334
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
$L212334:
	DD	2
	DD	$L212333
$L212333:
	DD	-36					; ffffffdcH
	DD	16					; 00000010H
	DD	$L212329
	DD	-68					; ffffffbcH
	DD	4
	DD	$L212330
$L212330:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	70					; 00000046H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	121					; 00000079H
	DB	0
$L212329:
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
$L212326:
	lea	ecx, DWORD PTR _spClassFactory$147571[ebp]
	jmp	??1?$CComPtr@UIClassFactory2@@@ATL@@QAE@XZ
__ehhandler$?CreateNormalizedObject@ATL@@YAJPBGABU_GUID@@PAPAXAA_NPAG@Z:
	mov	eax, OFFSET FLAT:$T212328
	jmp	___CxxFrameHandler
text$x	ENDS
?CreateNormalizedObject@ATL@@YAJPBGABU_GUID@@PAPAXAA_NPAG@Z ENDP ; ATL::CreateNormalizedObject
EXTRN	__imp__CharNextA@4:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
;	COMDAT ?FindOneOf@CAtlModule@ATL@@SAPBDPBD0@Z
_TEXT	SEGMENT
_p$88247 = -4						; size = 4
_p1$ = 8						; size = 4
_p2$ = 12						; size = 4
?FindOneOf@CAtlModule@ATL@@SAPBDPBD0@Z PROC NEAR	; ATL::CAtlModule::FindOneOf, COMDAT

; 2779 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
$L88245:

; 2780 : 		while (p1 != NULL && *p1 != NULL)

	cmp	DWORD PTR _p1$[ebp], 0
	je	SHORT $L88246
	mov	eax, DWORD PTR _p1$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $L88246

; 2781 : 		{
; 2782 : 			LPCTSTR p = p2;

	mov	edx, DWORD PTR _p2$[ebp]
	mov	DWORD PTR _p$88247[ebp], edx
$L88249:

; 2783 : 			while (p != NULL && *p != NULL)

	cmp	DWORD PTR _p$88247[ebp], 0
	je	SHORT $L88250
	mov	eax, DWORD PTR _p$88247[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $L88250

; 2784 : 			{
; 2785 : 				if (*p1 == *p)

	mov	edx, DWORD PTR _p1$[ebp]
	movsx	eax, BYTE PTR [edx]
	mov	ecx, DWORD PTR _p$88247[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	eax, edx
	jne	SHORT $L88251

; 2786 : 					return CharNext(p1);

	mov	esi, esp
	mov	eax, DWORD PTR _p1$[ebp]
	push	eax
	call	DWORD PTR __imp__CharNextA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $L88243
$L88251:

; 2787 : 				p = CharNext(p);

	mov	esi, esp
	mov	ecx, DWORD PTR _p$88247[ebp]
	push	ecx
	call	DWORD PTR __imp__CharNextA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _p$88247[ebp], eax

; 2788 : 			}

	jmp	SHORT $L88249
$L88250:

; 2789 : 			p1 = CharNext(p1);

	mov	esi, esp
	mov	edx, DWORD PTR _p1$[ebp]
	push	edx
	call	DWORD PTR __imp__CharNextA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _p1$[ebp], eax

; 2790 : 		}

	jmp	SHORT $L88245
$L88246:

; 2791 : 		return NULL;

	xor	eax, eax
$L88243:

; 2792 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FindOneOf@CAtlModule@ATL@@SAPBDPBD0@Z ENDP		; ATL::CAtlModule::FindOneOf
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UIClassFactory2@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IClassFactory2>::~CComPtrBase<IClassFactory2>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIClassFactory2@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIClassFactory2@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<IClassFactory2>::~CComPtr<IClassFactory2>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIClassFactory2@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IClassFactory2>::~CComPtrBase<IClassFactory2>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIClassFactory2@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IClassFactory2>::~CComPtr<IClassFactory2>
_TEXT	ENDS
PUBLIC	??B?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAUIDocHostUIHandlerDispatch@@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator IDocHostUIHandlerDispatch *
PUBLIC	??C?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDocHostUIHandlerDispatch@@@1@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator->
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
;	COMDAT ?ShowContextMenu@CAxHostWindow@ATL@@UAGJKPAUtagPOINT@@PAUIUnknown@@PAUIDispatch@@@Z
_TEXT	SEGMENT
tv81 = -16						; size = 4
_hr$ = -8						; size = 4
_this$ = 8						; size = 4
_dwID$ = 12						; size = 4
_pptPosition$ = 16					; size = 4
_pCommandTarget$ = 20					; size = 4
_pDispatchObjectHit$ = 24				; size = 4
?ShowContextMenu@CAxHostWindow@ATL@@UAGJKPAUtagPOINT@@PAUIUnknown@@PAUIDispatch@@@Z PROC NEAR ; ATL::CAxHostWindow::ShowContextMenu, COMDAT

; 917  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 918  : 		HRESULT hr = m_bAllowContextMenu ? S_FALSE : S_OK;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	shr	ecx, 5
	and	ecx, 1
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	DWORD PTR _hr$[ebp], ecx

; 919  : 		if (m_spIDocHostUIHandlerDispatch != NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAUIDocHostUIHandlerDispatch@@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator IDocHostUIHandlerDispatch *
	test	eax, eax
	je	SHORT $L150213

; 920  : 			m_spIDocHostUIHandlerDispatch->ShowContextMenu(
; 921  : 				dwID,
; 922  : 				pptPosition->x,
; 923  : 				pptPosition->y,
; 924  : 				pCommandTarget,
; 925  : 				pDispatchObjectHit,
; 926  : 				&hr);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDocHostUIHandlerDispatch@@@1@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator->
	mov	DWORD PTR tv81[ebp], eax
	mov	esi, esp
	lea	edx, DWORD PTR _hr$[ebp]
	push	edx
	mov	eax, DWORD PTR _pDispatchObjectHit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pCommandTarget$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pptPosition$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _pptPosition$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _dwID$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv81[ebp]
	push	ecx
	mov	edx, DWORD PTR tv81[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax+28]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L150213:

; 927  : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 928  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212343
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$L212343:
	DD	1
	DD	$L212342
$L212342:
	DD	-8					; fffffff8H
	DD	4
	DD	$L212341
$L212341:
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	0
?ShowContextMenu@CAxHostWindow@ATL@@UAGJKPAUtagPOINT@@PAUIUnknown@@PAUIDispatch@@@Z ENDP ; ATL::CAxHostWindow::ShowContextMenu
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?GetHostInfo@CAxHostWindow@ATL@@UAGJPAU_DOCHOSTUIINFO@@@Z
_TEXT	SEGMENT
tv76 = -4						; size = 4
_this$ = 8						; size = 4
_pInfo$ = 12						; size = 4
?GetHostInfo@CAxHostWindow@ATL@@UAGJPAU_DOCHOSTUIINFO@@@Z PROC NEAR ; ATL::CAxHostWindow::GetHostInfo, COMDAT

; 931  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 932  : 		if (pInfo == NULL)

	cmp	DWORD PTR _pInfo$[ebp], 0
	jne	SHORT $L150227

; 933  : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L150226
$L150227:

; 934  : 
; 935  : 		if (m_spIDocHostUIHandlerDispatch != NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAUIDocHostUIHandlerDispatch@@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator IDocHostUIHandlerDispatch *
	test	eax, eax
	je	SHORT $L150229

; 936  : 			return m_spIDocHostUIHandlerDispatch->GetHostInfo(&pInfo->dwFlags, &pInfo->dwDoubleClick);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDocHostUIHandlerDispatch@@@1@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator->
	mov	DWORD PTR tv76[ebp], eax
	mov	eax, DWORD PTR _pInfo$[ebp]
	add	eax, 8
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pInfo$[ebp]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR tv76[ebp]
	push	edx
	mov	eax, DWORD PTR tv76[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+32]
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $L150226
$L150229:

; 937  : 
; 938  : 		pInfo->dwFlags = m_dwDocHostFlags;

	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	DWORD PTR [edx+4], ecx

; 939  : 		pInfo->dwDoubleClick = m_dwDocHostDoubleClickFlags;

	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+156]
	mov	DWORD PTR [edx+8], ecx

; 940  : 
; 941  : 		return S_OK;

	xor	eax, eax
$L150226:

; 942  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetHostInfo@CAxHostWindow@ATL@@UAGJPAU_DOCHOSTUIINFO@@@Z ENDP ; ATL::CAxHostWindow::GetHostInfo
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?ShowUI@CAxHostWindow@ATL@@UAGJKPAUIOleInPlaceActiveObject@@PAUIOleCommandTarget@@PAUIOleInPlaceFrame@@PAUIOleInPlaceUIWindow@@@Z
_TEXT	SEGMENT
tv81 = -16						; size = 4
_hr$ = -8						; size = 4
_this$ = 8						; size = 4
_dwID$ = 12						; size = 4
_pActiveObject$ = 16					; size = 4
_pCommandTarget$ = 20					; size = 4
_pFrame$ = 24						; size = 4
_pDoc$ = 28						; size = 4
?ShowUI@CAxHostWindow@ATL@@UAGJKPAUIOleInPlaceActiveObject@@PAUIOleCommandTarget@@PAUIOleInPlaceFrame@@PAUIOleInPlaceUIWindow@@@Z PROC NEAR ; ATL::CAxHostWindow::ShowUI, COMDAT

; 945  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 946  : 		HRESULT hr = m_bAllowShowUI ? S_FALSE : S_OK;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	shr	ecx, 6
	and	ecx, 1
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	DWORD PTR _hr$[ebp], ecx

; 947  : 		if (m_spIDocHostUIHandlerDispatch != NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAUIDocHostUIHandlerDispatch@@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator IDocHostUIHandlerDispatch *
	test	eax, eax
	je	SHORT $L150236

; 948  : 			m_spIDocHostUIHandlerDispatch->ShowUI(
; 949  : 				dwID,
; 950  : 				pActiveObject, 
; 951  : 				pCommandTarget, 
; 952  : 				pFrame, 
; 953  : 				pDoc,
; 954  : 				&hr);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDocHostUIHandlerDispatch@@@1@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator->
	mov	DWORD PTR tv81[ebp], eax
	mov	esi, esp
	lea	edx, DWORD PTR _hr$[ebp]
	push	edx
	mov	eax, DWORD PTR _pDoc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pFrame$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pCommandTarget$[ebp]
	push	edx
	mov	eax, DWORD PTR _pActiveObject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dwID$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv81[ebp]
	push	edx
	mov	eax, DWORD PTR tv81[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+36]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L150236:

; 955  : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 956  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212350
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
$L212350:
	DD	1
	DD	$L212349
$L212349:
	DD	-8					; fffffff8H
	DD	4
	DD	$L212348
$L212348:
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	0
?ShowUI@CAxHostWindow@ATL@@UAGJKPAUIOleInPlaceActiveObject@@PAUIOleCommandTarget@@PAUIOleInPlaceFrame@@PAUIOleInPlaceUIWindow@@@Z ENDP ; ATL::CAxHostWindow::ShowUI
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?HideUI@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT
tv75 = -8						; size = 4
_hr$ = -4						; size = 4
_this$ = 8						; size = 4
?HideUI@CAxHostWindow@ATL@@UAGJXZ PROC NEAR		; ATL::CAxHostWindow::HideUI, COMDAT

; 959  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 960  : 		HRESULT hr = S_OK;

	mov	DWORD PTR _hr$[ebp], 0

; 961  : 		if (m_spIDocHostUIHandlerDispatch != NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAUIDocHostUIHandlerDispatch@@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator IDocHostUIHandlerDispatch *
	test	eax, eax
	je	SHORT $L150241

; 962  : 			hr = m_spIDocHostUIHandlerDispatch->HideUI();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDocHostUIHandlerDispatch@@@1@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator->
	mov	DWORD PTR tv75[ebp], eax
	mov	eax, DWORD PTR tv75[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	call	DWORD PTR [ecx+40]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$L150241:

; 963  : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 964  : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?HideUI@CAxHostWindow@ATL@@UAGJXZ ENDP			; ATL::CAxHostWindow::HideUI
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?UpdateUI@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT
tv75 = -8						; size = 4
_hr$ = -4						; size = 4
_this$ = 8						; size = 4
?UpdateUI@CAxHostWindow@ATL@@UAGJXZ PROC NEAR		; ATL::CAxHostWindow::UpdateUI, COMDAT

; 967  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 968  : 		HRESULT hr = S_OK;

	mov	DWORD PTR _hr$[ebp], 0

; 969  : 		if (m_spIDocHostUIHandlerDispatch != NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAUIDocHostUIHandlerDispatch@@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator IDocHostUIHandlerDispatch *
	test	eax, eax
	je	SHORT $L150246

; 970  : 			hr = m_spIDocHostUIHandlerDispatch->UpdateUI();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDocHostUIHandlerDispatch@@@1@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator->
	mov	DWORD PTR tv75[ebp], eax
	mov	eax, DWORD PTR tv75[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	call	DWORD PTR [ecx+44]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$L150246:

; 971  : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 972  : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?UpdateUI@CAxHostWindow@ATL@@UAGJXZ ENDP		; ATL::CAxHostWindow::UpdateUI
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?EnableModeless@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT
tv75 = -8						; size = 4
_hr$ = -4						; size = 4
_this$ = 8						; size = 4
_fEnable$ = 12						; size = 4
?EnableModeless@CAxHostWindow@ATL@@UAGJH@Z PROC NEAR	; ATL::CAxHostWindow::EnableModeless, COMDAT

; 975  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 976  : 		HRESULT hr = S_OK;

	mov	DWORD PTR _hr$[ebp], 0

; 977  : 		if (m_spIDocHostUIHandlerDispatch != NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAUIDocHostUIHandlerDispatch@@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator IDocHostUIHandlerDispatch *
	test	eax, eax
	je	SHORT $L150251

; 978  : 			hr = m_spIDocHostUIHandlerDispatch->EnableModeless(fEnable ? ATL_VARIANT_TRUE : ATL_VARIANT_FALSE);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDocHostUIHandlerDispatch@@@1@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator->
	mov	DWORD PTR tv75[ebp], eax
	mov	eax, DWORD PTR _fEnable$[ebp]
	neg	eax
	sbb	eax, eax
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR tv75[ebp]
	push	ecx
	mov	edx, DWORD PTR tv75[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax+48]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$L150251:

; 979  : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 980  : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?EnableModeless@CAxHostWindow@ATL@@UAGJH@Z ENDP		; ATL::CAxHostWindow::EnableModeless
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?OnDocWindowActivate@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT
tv75 = -8						; size = 4
_hr$ = -4						; size = 4
_this$ = 8						; size = 4
_fActivate$ = 12					; size = 4
?OnDocWindowActivate@CAxHostWindow@ATL@@UAGJH@Z PROC NEAR ; ATL::CAxHostWindow::OnDocWindowActivate, COMDAT

; 983  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 984  : 		HRESULT hr = S_OK;

	mov	DWORD PTR _hr$[ebp], 0

; 985  : 		if (m_spIDocHostUIHandlerDispatch != NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAUIDocHostUIHandlerDispatch@@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator IDocHostUIHandlerDispatch *
	test	eax, eax
	je	SHORT $L150256

; 986  : 			hr = m_spIDocHostUIHandlerDispatch->OnDocWindowActivate(fActivate ? ATL_VARIANT_TRUE : ATL_VARIANT_FALSE);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDocHostUIHandlerDispatch@@@1@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator->
	mov	DWORD PTR tv75[ebp], eax
	mov	eax, DWORD PTR _fActivate$[ebp]
	neg	eax
	sbb	eax, eax
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR tv75[ebp]
	push	ecx
	mov	edx, DWORD PTR tv75[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax+52]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$L150256:

; 987  : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 988  : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?OnDocWindowActivate@CAxHostWindow@ATL@@UAGJH@Z ENDP	; ATL::CAxHostWindow::OnDocWindowActivate
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?OnFrameWindowActivate@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT
tv75 = -8						; size = 4
_hr$ = -4						; size = 4
_this$ = 8						; size = 4
_fActivate$ = 12					; size = 4
?OnFrameWindowActivate@CAxHostWindow@ATL@@UAGJH@Z PROC NEAR ; ATL::CAxHostWindow::OnFrameWindowActivate, COMDAT

; 991  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 992  : 		HRESULT hr = S_OK;

	mov	DWORD PTR _hr$[ebp], 0

; 993  : 		if (m_spIDocHostUIHandlerDispatch != NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAUIDocHostUIHandlerDispatch@@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator IDocHostUIHandlerDispatch *
	test	eax, eax
	je	SHORT $L150261

; 994  : 			hr = m_spIDocHostUIHandlerDispatch->OnFrameWindowActivate(fActivate ? ATL_VARIANT_TRUE : ATL_VARIANT_FALSE);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDocHostUIHandlerDispatch@@@1@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator->
	mov	DWORD PTR tv75[ebp], eax
	mov	eax, DWORD PTR _fActivate$[ebp]
	neg	eax
	sbb	eax, eax
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR tv75[ebp]
	push	ecx
	mov	edx, DWORD PTR tv75[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax+56]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$L150261:

; 995  : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 996  : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?OnFrameWindowActivate@CAxHostWindow@ATL@@UAGJH@Z ENDP	; ATL::CAxHostWindow::OnFrameWindowActivate
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?ResizeBorder@CAxHostWindow@ATL@@UAGJPBUtagRECT@@PAUIOleInPlaceUIWindow@@H@Z
_TEXT	SEGMENT
tv75 = -8						; size = 4
_hr$ = -4						; size = 4
_this$ = 8						; size = 4
_prcBorder$ = 12					; size = 4
_pUIWindow$ = 16					; size = 4
_fFrameWindow$ = 20					; size = 4
?ResizeBorder@CAxHostWindow@ATL@@UAGJPBUtagRECT@@PAUIOleInPlaceUIWindow@@H@Z PROC NEAR ; ATL::CAxHostWindow::ResizeBorder, COMDAT

; 999  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1000 : 		HRESULT hr = S_OK;

	mov	DWORD PTR _hr$[ebp], 0

; 1001 : 		if (m_spIDocHostUIHandlerDispatch != NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAUIDocHostUIHandlerDispatch@@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator IDocHostUIHandlerDispatch *
	test	eax, eax
	je	SHORT $L150266

; 1002 : 			hr = m_spIDocHostUIHandlerDispatch->ResizeBorder(
; 1003 : 				prcBorder->left,
; 1004 : 				prcBorder->top,
; 1005 : 				prcBorder->right,
; 1006 : 				prcBorder->bottom,
; 1007 : 				pUIWindow,
; 1008 : 				fFrameWindow ? ATL_VARIANT_TRUE : ATL_VARIANT_FALSE);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDocHostUIHandlerDispatch@@@1@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator->
	mov	DWORD PTR tv75[ebp], eax
	mov	eax, DWORD PTR _fFrameWindow$[ebp]
	neg	eax
	sbb	eax, eax
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pUIWindow$[ebp]
	push	ecx
	mov	edx, DWORD PTR _prcBorder$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _prcBorder$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _prcBorder$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _prcBorder$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR tv75[ebp]
	push	ecx
	mov	edx, DWORD PTR tv75[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax+60]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$L150266:

; 1009 : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 1010 : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?ResizeBorder@CAxHostWindow@ATL@@UAGJPBUtagRECT@@PAUIOleInPlaceUIWindow@@H@Z ENDP ; ATL::CAxHostWindow::ResizeBorder
_TEXT	ENDS
PUBLIC	??0CComBSTR@ATL@@QAE@ABU_GUID@@@Z		; ATL::CComBSTR::CComBSTR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T212373 DD	0ffffffffH
	DD	FLAT:$L212366
$T212368 DD	019930520H
	DD	01H
	DD	FLAT:$T212373
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?TranslateAcceleratorA@CAxHostWindow@ATL@@UAGJPAUtagMSG@@PBU_GUID@@K@Z
_TEXT	SEGMENT
tv75 = -40						; size = 4
tv128 = -36						; size = 4
tv129 = -32						; size = 4
$T212365 = -28						; size = 4
_hr$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_lpMsg$ = 12						; size = 4
_pguidCmdGroup$ = 16					; size = 4
_nCmdID$ = 20						; size = 4
?TranslateAcceleratorA@CAxHostWindow@ATL@@UAGJPAUtagMSG@@PBU_GUID@@K@Z PROC NEAR ; ATL::CAxHostWindow::TranslateAcceleratorA, COMDAT

; 1013 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?TranslateAcceleratorA@CAxHostWindow@ATL@@UAGJPAUtagMSG@@PBU_GUID@@K@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax

; 1014 : 		HRESULT hr = S_FALSE;

	mov	DWORD PTR _hr$[ebp], 1

; 1015 : 		if (m_spIDocHostUIHandlerDispatch != NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAUIDocHostUIHandlerDispatch@@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator IDocHostUIHandlerDispatch *
	test	eax, eax
	je	SHORT $L150271

; 1016 : 			m_spIDocHostUIHandlerDispatch->TranslateAccelerator(
; 1017 : 				(DWORD_PTR) lpMsg->hwnd,
; 1018 : 				lpMsg->message,
; 1019 : 				lpMsg->wParam,
; 1020 : 				lpMsg->lParam,
; 1021 : 				CComBSTR(*pguidCmdGroup), 
; 1022 : 				nCmdID,
; 1023 : 				&hr);

	mov	eax, DWORD PTR _pguidCmdGroup$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T212365[ebp]
	call	??0CComBSTR@ATL@@QAE@ABU_GUID@@@Z	; ATL::CComBSTR::CComBSTR
	mov	DWORD PTR tv129[ebp], eax
	mov	ecx, DWORD PTR tv129[ebp]
	mov	DWORD PTR tv128[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDocHostUIHandlerDispatch@@@1@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator->
	mov	DWORD PTR tv75[ebp], eax
	mov	esi, esp
	lea	edx, DWORD PTR _hr$[ebp]
	push	edx
	mov	eax, DWORD PTR _nCmdID$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv128[ebp]
	call	??BCComBSTR@ATL@@QBEPAGXZ		; ATL::CComBSTR::operator unsigned short *
	push	eax
	mov	ecx, DWORD PTR _lpMsg$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _lpMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _lpMsg$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _lpMsg$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR tv75[ebp]
	push	eax
	mov	ecx, DWORD PTR tv75[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+64]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T212365[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
$L150271:

; 1024 : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 1025 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212372
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$L212372:
	DD	1
	DD	$L212371
$L212371:
	DD	-20					; ffffffecH
	DD	4
	DD	$L212369
$L212369:
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L212366:
	lea	ecx, DWORD PTR $T212365[ebp]
	jmp	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
__ehhandler$?TranslateAcceleratorA@CAxHostWindow@ATL@@UAGJPAUtagMSG@@PBU_GUID@@K@Z:
	mov	eax, OFFSET FLAT:$T212368
	jmp	___CxxFrameHandler
text$x	ENDS
?TranslateAcceleratorA@CAxHostWindow@ATL@@UAGJPAUtagMSG@@PBU_GUID@@K@Z ENDP ; ATL::CAxHostWindow::TranslateAcceleratorA
EXTRN	__imp__StringFromGUID2@12:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ??0CComBSTR@ATL@@QAE@ABU_GUID@@@Z
_TEXT	SEGMENT
_szGUID$ = -140						; size = 128
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_guid$ = 8						; size = 4
??0CComBSTR@ATL@@QAE@ABU_GUID@@@Z PROC NEAR		; ATL::CComBSTR::CComBSTR, COMDAT
; _this$ = ecx

; 589  : 	CComBSTR(REFGUID guid)

	push	ebp
	mov	ebp, esp
	sub	esp, 144				; 00000090H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-144]
	mov	ecx, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 590  : 	{
; 591  : 		OLECHAR szGUID[64];
; 592  : 		::StringFromGUID2(guid, szGUID, 64);

	mov	esi, esp
	push	64					; 00000040H
	lea	eax, DWORD PTR _szGUID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guid$[ebp]
	push	ecx
	call	DWORD PTR __imp__StringFromGUID2@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 593  : 		m_str = ::SysAllocString(szGUID);

	mov	esi, esp
	lea	edx, DWORD PTR _szGUID$[ebp]
	push	edx
	call	DWORD PTR __imp__SysAllocString@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 594  : 		if (m_str == NULL)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $L81703

; 595  : 			AtlThrow(E_OUTOFMEMORY);

	push	-2147024882				; 8007000eH
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L81703:

; 596  : 	}

	mov	eax, DWORD PTR _this$[ebp]
$L212378:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212382
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	add	esp, 144				; 00000090H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$L212382:
	DD	1
	DD	$L212381
$L212381:
	DD	-140					; ffffff74H
	DD	128					; 00000080H
	DD	$L212379
$L212379:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	71					; 00000047H
	DB	85					; 00000055H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
??0CComBSTR@ATL@@QAE@ABU_GUID@@@Z ENDP			; ATL::CComBSTR::CComBSTR
_TEXT	ENDS
PUBLIC	?ocscpy@@YAPAGPAGPBG@Z				; ocscpy
PUBLIC	?ByteLength@CComBSTR@ATL@@QBEIXZ		; ATL::CComBSTR::ByteLength
EXTRN	__imp__CoTaskMemAlloc@4:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
;	COMDAT ?GetOptionKeyPath@CAxHostWindow@ATL@@UAGJPAPAGK@Z
_TEXT	SEGMENT
tv76 = -16						; size = 4
_pStr$150288 = -12					; size = 4
_nByteLength$150287 = -8				; size = 4
_hr$ = -4						; size = 4
_this$ = 8						; size = 4
_pchKey$ = 12						; size = 4
_dwReserved$ = 16					; size = 4
?GetOptionKeyPath@CAxHostWindow@ATL@@UAGJPAPAGK@Z PROC NEAR ; ATL::CAxHostWindow::GetOptionKeyPath, COMDAT

; 1029 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 1030 : 		HRESULT hr = S_FALSE;

	mov	DWORD PTR _hr$[ebp], 1

; 1031 : 		if (pchKey == NULL)

	cmp	DWORD PTR _pchKey$[ebp], 0
	jne	SHORT $L150278

; 1032 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	$L150275
$L150278:

; 1033 : 		*pchKey = NULL;

	mov	eax, DWORD PTR _pchKey$[ebp]
	mov	DWORD PTR [eax], 0

; 1034 : 		if (m_spIDocHostUIHandlerDispatch != NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAUIDocHostUIHandlerDispatch@@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator IDocHostUIHandlerDispatch *
	test	eax, eax
	je	SHORT $L150280

; 1035 : 		{
; 1036 : 			hr = m_spIDocHostUIHandlerDispatch->GetOptionKeyPath(pchKey, dwReserved);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDocHostUIHandlerDispatch@@@1@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator->
	mov	DWORD PTR tv76[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _dwReserved$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pchKey$[ebp]
	push	edx
	mov	eax, DWORD PTR tv76[ebp]
	push	eax
	mov	ecx, DWORD PTR tv76[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+68]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 1037 : 			if (FAILED(hr) || *pchKey == NULL)

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $L150283
	mov	eax, DWORD PTR _pchKey$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L150282
$L150283:

; 1038 : 				hr = S_FALSE;

	mov	DWORD PTR _hr$[ebp], 1
$L150282:

; 1039 : 		}
; 1040 : 		else

	jmp	SHORT $L150285
$L150280:

; 1041 : 		{
; 1042 : 			if (m_bstrOptionKeyPath.m_str != NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+160], 0
	je	SHORT $L150285

; 1043 : 			{
; 1044 : 				UINT nByteLength = m_bstrOptionKeyPath.ByteLength();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 160				; 000000a0H
	call	?ByteLength@CComBSTR@ATL@@QBEIXZ	; ATL::CComBSTR::ByteLength
	mov	DWORD PTR _nByteLength$150287[ebp], eax

; 1045 : 				LPOLESTR pStr = (LPOLESTR)CoTaskMemAlloc(nByteLength + sizeof(OLECHAR));

	mov	edx, DWORD PTR _nByteLength$150287[ebp]
	add	edx, 2
	mov	esi, esp
	push	edx
	call	DWORD PTR __imp__CoTaskMemAlloc@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pStr$150288[ebp], eax

; 1046 : 				if (pStr == NULL)

	cmp	DWORD PTR _pStr$150288[ebp], 0
	jne	SHORT $L150291

; 1047 : 					return E_OUTOFMEMORY;

	mov	eax, -2147024882			; 8007000eH
	jmp	SHORT $L150275
$L150291:

; 1048 : 				ocscpy(pStr, m_bstrOptionKeyPath.m_str);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+160]
	push	ecx
	mov	edx, DWORD PTR _pStr$150288[ebp]
	push	edx
	call	?ocscpy@@YAPAGPAGPBG@Z			; ocscpy
	add	esp, 8

; 1049 : 				*pchKey = pStr;

	mov	eax, DWORD PTR _pchKey$[ebp]
	mov	ecx, DWORD PTR _pStr$150288[ebp]
	mov	DWORD PTR [eax], ecx

; 1050 : 				hr = S_OK;

	mov	DWORD PTR _hr$[ebp], 0
$L150285:

; 1051 : 			}
; 1052 : 		}
; 1053 : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]
$L150275:

; 1054 : 	}

	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetOptionKeyPath@CAxHostWindow@ATL@@UAGJPAPAGK@Z ENDP	; ATL::CAxHostWindow::GetOptionKeyPath
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
_TEXT	ENDS
;	COMDAT ?ocscpy@@YAPAGPAGPBG@Z
_TEXT	SEGMENT
_dest$ = 8						; size = 4
_src$ = 12						; size = 4
?ocscpy@@YAPAGPAGPBG@Z PROC NEAR			; ocscpy, COMDAT

; 682  : 	{return (LPOLESTR) memcpy(dest, src, (lstrlenW(src)+1)*sizeof(WCHAR));}

	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, esp
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	call	DWORD PTR __imp__lstrlenW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	lea	ecx, DWORD PTR [eax+eax+2]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?ocscpy@@YAPAGPAGPBG@Z ENDP				; ocscpy
_TEXT	ENDS
EXTRN	__imp__SysStringByteLen@4:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ?ByteLength@CComBSTR@ATL@@QBEIXZ
_TEXT	SEGMENT
tv67 = -8						; size = 4
_this$ = -4						; size = 4
?ByteLength@CComBSTR@ATL@@QBEIXZ PROC NEAR		; ATL::CComBSTR::ByteLength, COMDAT
; _this$ = ecx

; 636  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 637  : 		return (m_str == NULL)? 0 : SysStringByteLen(m_str);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L212389
	mov	DWORD PTR tv67[ebp], 0
	jmp	SHORT $L212390
$L212389:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__SysStringByteLen@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv67[ebp], eax
$L212390:
	mov	eax, DWORD PTR tv67[ebp]

; 638  : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ByteLength@CComBSTR@ATL@@QBEIXZ ENDP			; ATL::CComBSTR::ByteLength
_TEXT	ENDS
PUBLIC	??_C@_0BC@PLOCGENL@ppDropTarget?5?$CB?$DN?50?$AA@ ; `string'
PUBLIC	__GUID_00000122_0000_0000_c000_000000000046
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
xdata$x	SEGMENT
$T212401 DD	0ffffffffH
	DD	FLAT:$L212394
$T212396 DD	019930520H
	DD	01H
	DD	FLAT:$T212401
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BC@PLOCGENL@ppDropTarget?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BC@PLOCGENL@ppDropTarget?5?$CB?$DN?50?$AA@ DB 'ppDropTarget != 0', 00H ; `string'
CONST	ENDS
;	COMDAT __GUID_00000122_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000122_0000_0000_c000_000000000046 DD 0122H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?GetDropTarget@CAxHostWindow@ATL@@UAGJPAUIDropTarget@@PAPAU3@@Z
_TEXT	SEGMENT
tv134 = -36						; size = 4
tv88 = -32						; size = 4
_spUnk$150303 = -24					; size = 4
_hr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_pDropTarget$ = 12					; size = 4
_ppDropTarget$ = 16					; size = 4
?GetDropTarget@CAxHostWindow@ATL@@UAGJPAUIDropTarget@@PAPAU3@@Z PROC NEAR ; ATL::CAxHostWindow::GetDropTarget, COMDAT

; 1057 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetDropTarget@CAxHostWindow@ATL@@UAGJPAUIDropTarget@@PAPAU3@@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax

; 1058 : 		ATLASSERT(ppDropTarget != NULL);

	cmp	DWORD PTR _ppDropTarget$[ebp], 0
	jne	SHORT $L212393
	push	OFFSET FLAT:??_C@_0BC@PLOCGENL@ppDropTarget?5?$CB?$DN?50?$AA@
	push	0
	push	1058					; 00000422H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212393
	int	3
$L212393:

; 1059 : 		if (ppDropTarget == NULL)

	cmp	DWORD PTR _ppDropTarget$[ebp], 0
	jne	SHORT $L150298

; 1060 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	$L150295
$L150298:

; 1061 : 		*ppDropTarget = NULL;

	mov	ecx, DWORD PTR _ppDropTarget$[ebp]
	mov	DWORD PTR [ecx], 0

; 1062 : 
; 1063 : 		HRESULT hr = E_NOTIMPL;

	mov	DWORD PTR _hr$[ebp], -2147467263	; 80004001H

; 1064 : 		if (m_spIDocHostUIHandlerDispatch != NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAUIDocHostUIHandlerDispatch@@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator IDocHostUIHandlerDispatch *
	test	eax, eax
	je	$L150302

; 1065 : 		{
; 1066 : 			CComPtr<IUnknown> spUnk;

	lea	ecx, DWORD PTR _spUnk$150303[ebp]
	call	??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ	; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1067 : 			hr = m_spIDocHostUIHandlerDispatch->GetDropTarget(pDropTarget, &spUnk);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDocHostUIHandlerDispatch@@@1@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator->
	mov	DWORD PTR tv88[ebp], eax
	lea	ecx, DWORD PTR _spUnk$150303[ebp]
	call	??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator&
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _pDropTarget$[ebp]
	push	edx
	mov	eax, DWORD PTR tv88[ebp]
	push	eax
	mov	ecx, DWORD PTR tv88[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+72]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 1068 : 			if (spUnk)

	lea	ecx, DWORD PTR _spUnk$150303[ebp]
	call	??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
	test	eax, eax
	je	SHORT $L150304

; 1069 : 				hr = spUnk->QueryInterface(__uuidof(IDropTarget), (void**)ppDropTarget);

	lea	ecx, DWORD PTR _spUnk$150303[ebp]
	call	??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ ; ATL::CComPtrBase<IUnknown>::operator->
	mov	DWORD PTR tv134[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _ppDropTarget$[ebp]
	push	eax
	push	OFFSET FLAT:__GUID_00000122_0000_0000_c000_000000000046
	mov	ecx, DWORD PTR tv134[ebp]
	push	ecx
	mov	edx, DWORD PTR tv134[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$L150304:

; 1070 : 			if (FAILED(hr) || *ppDropTarget == NULL)

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $L150309
	mov	ecx, DWORD PTR _ppDropTarget$[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $L150308
$L150309:

; 1071 : 				hr = S_FALSE;

	mov	DWORD PTR _hr$[ebp], 1
$L150308:

; 1072 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spUnk$150303[ebp]
	call	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
$L150302:

; 1073 : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]
$L150295:

; 1074 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212400
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$L212400:
	DD	1
	DD	$L212399
$L212399:
	DD	-24					; ffffffe8H
	DD	4
	DD	$L212397
$L212397:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	85					; 00000055H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L212394:
	lea	ecx, DWORD PTR _spUnk$150303[ebp]
	jmp	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
__ehhandler$?GetDropTarget@CAxHostWindow@ATL@@UAGJPAUIDropTarget@@PAPAU3@@Z:
	mov	eax, OFFSET FLAT:$T212396
	jmp	___CxxFrameHandler
text$x	ENDS
?GetDropTarget@CAxHostWindow@ATL@@UAGJPAUIDropTarget@@PAPAU3@@Z ENDP ; ATL::CAxHostWindow::GetDropTarget
PUBLIC	?CopyTo@?$CComPtrBase@UIDispatch@@@ATL@@QAEJPAPAUIDispatch@@@Z ; ATL::CComPtrBase<IDispatch>::CopyTo
PUBLIC	??_C@_0BA@NNOLHPBE@ppDispatch?5?$CB?$DN?50?$AA@	; `string'
;	COMDAT ??_C@_0BA@NNOLHPBE@ppDispatch?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BA@NNOLHPBE@ppDispatch?5?$CB?$DN?50?$AA@ DB 'ppDispatch != 0', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?GetExternal@CAxHostWindow@ATL@@UAGJPAPAUIDispatch@@@Z
_TEXT	SEGMENT
tv85 = -8						; size = 4
_hr$ = -4						; size = 4
_this$ = 8						; size = 4
_ppDispatch$ = 12					; size = 4
?GetExternal@CAxHostWindow@ATL@@UAGJPAPAUIDispatch@@@Z PROC NEAR ; ATL::CAxHostWindow::GetExternal, COMDAT

; 1077 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1078 : 		ATLASSERT(ppDispatch != NULL);

	cmp	DWORD PTR _ppDispatch$[ebp], 0
	jne	SHORT $L212406
	push	OFFSET FLAT:??_C@_0BA@NNOLHPBE@ppDispatch?5?$CB?$DN?50?$AA@
	push	0
	push	1078					; 00000436H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212406
	int	3
$L212406:

; 1079 : 		if (ppDispatch == NULL)

	cmp	DWORD PTR _ppDispatch$[ebp], 0
	jne	SHORT $L150315

; 1080 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	$L150312
$L150315:

; 1081 : 		*ppDispatch = NULL;

	mov	ecx, DWORD PTR _ppDispatch$[ebp]
	mov	DWORD PTR [ecx], 0

; 1082 : 
; 1083 : 		HRESULT hr = E_NOINTERFACE;

	mov	DWORD PTR _hr$[ebp], -2147467262	; 80004002H

; 1084 : 		if (m_spIDocHostUIHandlerDispatch != NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAUIDocHostUIHandlerDispatch@@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator IDocHostUIHandlerDispatch *
	test	eax, eax
	je	SHORT $L150319

; 1085 : 		{
; 1086 : 			hr = m_spIDocHostUIHandlerDispatch->GetExternal(ppDispatch);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDocHostUIHandlerDispatch@@@1@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator->
	mov	DWORD PTR tv85[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR _ppDispatch$[ebp]
	push	edx
	mov	eax, DWORD PTR tv85[ebp]
	push	eax
	mov	ecx, DWORD PTR tv85[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+76]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 1087 : 			if (FAILED(hr) || *ppDispatch == NULL)

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $L150322
	mov	eax, DWORD PTR _ppDispatch$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L150321
$L150322:

; 1088 : 				hr = E_NOINTERFACE;

	mov	DWORD PTR _hr$[ebp], -2147467262	; 80004002H
$L150321:

; 1089 : 		}
; 1090 : 		else

	jmp	SHORT $L150324
$L150319:

; 1091 : 		{
; 1092 : 			// return the IDispatch we have for extending the object Model
; 1093 : 			if (ppDispatch != NULL)

	cmp	DWORD PTR _ppDispatch$[ebp], 0
	je	SHORT $L150325

; 1094 : 			{
; 1095 : 				m_spExternalDispatch.CopyTo(ppDispatch);

	mov	ecx, DWORD PTR _ppDispatch$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?CopyTo@?$CComPtrBase@UIDispatch@@@ATL@@QAEJPAPAUIDispatch@@@Z ; ATL::CComPtrBase<IDispatch>::CopyTo

; 1096 : 				hr = S_OK;

	mov	DWORD PTR _hr$[ebp], 0

; 1097 : 			}
; 1098 : 			else

	jmp	SHORT $L150324
$L150325:

; 1099 : 				hr = E_POINTER;

	mov	DWORD PTR _hr$[ebp], -2147467261	; 80004003H
$L150324:

; 1100 : 		}
; 1101 : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]
$L150312:

; 1102 : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetExternal@CAxHostWindow@ATL@@UAGJPAPAUIDispatch@@@Z ENDP ; ATL::CAxHostWindow::GetExternal
_TEXT	ENDS
PUBLIC	??ICComBSTR@ATL@@QAEPAPAGXZ			; ATL::CComBSTR::operator&
PUBLIC	??_C@_0BA@INEFCEPO@ppchURLOut?5?$CB?$DN?50?$AA@	; `string'
;	COMDAT xdata$x
xdata$x	SEGMENT
$T212420 DD	0ffffffffH
	DD	FLAT:$L212412
	DD	00H
	DD	FLAT:$L212413
$T212415 DD	019930520H
	DD	02H
	DD	FLAT:$T212420
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BA@INEFCEPO@ppchURLOut?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BA@INEFCEPO@ppchURLOut?5?$CB?$DN?50?$AA@ DB 'ppchURLOut != 0', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?TranslateUrl@CAxHostWindow@ATL@@UAGJKPAGPAPAG@Z
_TEXT	SEGMENT
tv88 = -52						; size = 4
tv150 = -48						; size = 4
tv80 = -44						; size = 4
$T212411 = -40						; size = 4
$T212410 = -36						; size = 4
_nLen$150342 = -32					; size = 4
_bstrURLOut$150338 = -24				; size = 4
_hr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_dwTranslate$ = 12					; size = 4
_pchURLIn$ = 16						; size = 4
_ppchURLOut$ = 20					; size = 4
?TranslateUrl@CAxHostWindow@ATL@@UAGJKPAGPAPAG@Z PROC NEAR ; ATL::CAxHostWindow::TranslateUrl, COMDAT

; 1105 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?TranslateUrl@CAxHostWindow@ATL@@UAGJKPAGPAPAG@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1106 : 		ATLASSERT(ppchURLOut != NULL);

	cmp	DWORD PTR _ppchURLOut$[ebp], 0
	jne	SHORT $L212409
	push	OFFSET FLAT:??_C@_0BA@INEFCEPO@ppchURLOut?5?$CB?$DN?50?$AA@
	push	0
	push	1106					; 00000452H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212409
	int	3
$L212409:

; 1107 : 		if (ppchURLOut == NULL)

	cmp	DWORD PTR _ppchURLOut$[ebp], 0
	jne	SHORT $L150333

; 1108 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	$L150330
$L150333:

; 1109 : 		*ppchURLOut = NULL;

	mov	ecx, DWORD PTR _ppchURLOut$[ebp]
	mov	DWORD PTR [ecx], 0

; 1110 : 
; 1111 : 		HRESULT hr = S_FALSE;

	mov	DWORD PTR _hr$[ebp], 1

; 1112 : 		if (m_spIDocHostUIHandlerDispatch != NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAUIDocHostUIHandlerDispatch@@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator IDocHostUIHandlerDispatch *
	test	eax, eax
	je	$L150337

; 1113 : 		{
; 1114 : 			CComBSTR bstrURLOut;

	lea	ecx, DWORD PTR _bstrURLOut$150338[ebp]
	call	??0CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::CComBSTR
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1115 : 			hr = m_spIDocHostUIHandlerDispatch->TranslateUrl(dwTranslate, CComBSTR(pchURLIn), &bstrURLOut);

	mov	edx, DWORD PTR _pchURLIn$[ebp]
	push	edx
	lea	ecx, DWORD PTR $T212410[ebp]
	call	??0CComBSTR@ATL@@QAE@PBG@Z		; ATL::CComBSTR::CComBSTR
	mov	DWORD PTR tv80[ebp], eax
	mov	eax, DWORD PTR tv80[ebp]
	mov	DWORD PTR tv150[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDocHostUIHandlerDispatch@@@1@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator->
	mov	DWORD PTR tv88[ebp], eax
	lea	ecx, DWORD PTR _bstrURLOut$150338[ebp]
	call	??ICComBSTR@ATL@@QAEPAPAGXZ		; ATL::CComBSTR::operator&
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR tv150[ebp]
	call	??BCComBSTR@ATL@@QBEPAGXZ		; ATL::CComBSTR::operator unsigned short *
	push	eax
	mov	ecx, DWORD PTR _dwTranslate$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv88[ebp]
	push	edx
	mov	eax, DWORD PTR tv88[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+80]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T212410[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR

; 1116 : 			if (SUCCEEDED(hr) && bstrURLOut.m_str != NULL)

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $L150341
	cmp	DWORD PTR _bstrURLOut$150338[ebp], 0
	je	SHORT $L150341

; 1117 : 			{
; 1118 : 				UINT nLen = (bstrURLOut.Length() + 1) * 2;

	lea	ecx, DWORD PTR _bstrURLOut$150338[ebp]
	call	?Length@CComBSTR@ATL@@QBEIXZ		; ATL::CComBSTR::Length
	lea	edx, DWORD PTR [eax+eax+2]
	mov	DWORD PTR _nLen$150342[ebp], edx

; 1119 : 				*ppchURLOut = (OLECHAR*) CoTaskMemAlloc(nLen);

	mov	esi, esp
	mov	eax, DWORD PTR _nLen$150342[ebp]
	push	eax
	call	DWORD PTR __imp__CoTaskMemAlloc@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ppchURLOut$[ebp]
	mov	DWORD PTR [ecx], eax

; 1120 : 				if (*ppchURLOut == NULL)

	mov	edx, DWORD PTR _ppchURLOut$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $L150344

; 1121 : 					return E_OUTOFMEMORY;

	mov	DWORD PTR $T212411[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bstrURLOut$150338[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
	mov	eax, DWORD PTR $T212411[ebp]
	jmp	SHORT $L150330
$L150344:

; 1122 : 				memcpy(*ppchURLOut, bstrURLOut.m_str, nLen);

	mov	eax, DWORD PTR _nLen$150342[ebp]
	push	eax
	mov	ecx, DWORD PTR _bstrURLOut$150338[ebp]
	push	ecx
	mov	edx, DWORD PTR _ppchURLOut$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 1123 : 			}
; 1124 : 			else

	jmp	SHORT $L150347
$L150341:

; 1125 : 				hr = S_FALSE;

	mov	DWORD PTR _hr$[ebp], 1
$L150347:

; 1126 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bstrURLOut$150338[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
$L150337:

; 1127 : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]
$L150330:

; 1128 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212419
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	add	esp, 52					; 00000034H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$L212419:
	DD	1
	DD	$L212418
$L212418:
	DD	-24					; ffffffe8H
	DD	4
	DD	$L212416
$L212416:
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	85					; 00000055H
	DB	82					; 00000052H
	DB	76					; 0000004cH
	DB	79					; 0000004fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L212412:
	lea	ecx, DWORD PTR _bstrURLOut$150338[ebp]
	jmp	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
$L212413:
	lea	ecx, DWORD PTR $T212410[ebp]
	jmp	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
__ehhandler$?TranslateUrl@CAxHostWindow@ATL@@UAGJKPAGPAPAG@Z:
	mov	eax, OFFSET FLAT:$T212415
	jmp	___CxxFrameHandler
text$x	ENDS
?TranslateUrl@CAxHostWindow@ATL@@UAGJKPAGPAPAG@Z ENDP	; ATL::CAxHostWindow::TranslateUrl
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ??ICComBSTR@ATL@@QAEPAPAGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??ICComBSTR@ATL@@QAEPAPAGXZ PROC NEAR			; ATL::CComBSTR::operator&, COMDAT
; _this$ = ecx

; 644  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 645  : 		return &m_str;

	mov	eax, DWORD PTR _this$[ebp]

; 646  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??ICComBSTR@ATL@@QAEPAPAGXZ ENDP			; ATL::CComBSTR::operator&
_TEXT	ENDS
PUBLIC	??_C@_0N@KFNKBCLH@ppDORet?5?$CB?$DN?50?$AA@	; `string'
PUBLIC	__GUID_0000010e_0000_0000_c000_000000000046
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
xdata$x	SEGMENT
$T212435 DD	0ffffffffH
	DD	FLAT:$L212428
$T212430 DD	019930520H
	DD	01H
	DD	FLAT:$T212435
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0N@KFNKBCLH@ppDORet?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0N@KFNKBCLH@ppDORet?5?$CB?$DN?50?$AA@ DB 'ppDORet != 0', 00H ; `string'
CONST	ENDS
;	COMDAT __GUID_0000010e_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_0000010e_0000_0000_c000_000000000046 DD 010eH
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?FilterDataObject@CAxHostWindow@ATL@@UAGJPAUIDataObject@@PAPAU3@@Z
_TEXT	SEGMENT
tv88 = -32						; size = 4
_spUnk$150358 = -24					; size = 4
_hr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_pDO$ = 12						; size = 4
_ppDORet$ = 16						; size = 4
?FilterDataObject@CAxHostWindow@ATL@@UAGJPAUIDataObject@@PAPAU3@@Z PROC NEAR ; ATL::CAxHostWindow::FilterDataObject, COMDAT

; 1132 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FilterDataObject@CAxHostWindow@ATL@@UAGJPAUIDataObject@@PAPAU3@@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax

; 1133 : 		ATLASSERT(ppDORet != NULL);

	cmp	DWORD PTR _ppDORet$[ebp], 0
	jne	SHORT $L212427
	push	OFFSET FLAT:??_C@_0N@KFNKBCLH@ppDORet?5?$CB?$DN?50?$AA@
	push	0
	push	1133					; 0000046dH
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212427
	int	3
$L212427:

; 1134 : 		if (ppDORet == NULL)

	cmp	DWORD PTR _ppDORet$[ebp], 0
	jne	SHORT $L150353

; 1135 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	$L150350
$L150353:

; 1136 : 		*ppDORet = NULL;

	mov	ecx, DWORD PTR _ppDORet$[ebp]
	mov	DWORD PTR [ecx], 0

; 1137 : 
; 1138 : 		HRESULT hr = S_FALSE;

	mov	DWORD PTR _hr$[ebp], 1

; 1139 : 		if (m_spIDocHostUIHandlerDispatch != NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAUIDocHostUIHandlerDispatch@@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator IDocHostUIHandlerDispatch *
	test	eax, eax
	je	$L150357

; 1140 : 		{
; 1141 : 			CComPtr<IUnknown> spUnk;

	lea	ecx, DWORD PTR _spUnk$150358[ebp]
	call	??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ	; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1142 : 			hr = m_spIDocHostUIHandlerDispatch->FilterDataObject(pDO, &spUnk);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDocHostUIHandlerDispatch@@@1@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator->
	mov	DWORD PTR tv88[ebp], eax
	lea	ecx, DWORD PTR _spUnk$150358[ebp]
	call	??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator&
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _pDO$[ebp]
	push	edx
	mov	eax, DWORD PTR tv88[ebp]
	push	eax
	mov	ecx, DWORD PTR tv88[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+84]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 1143 : 			if (spUnk)

	lea	ecx, DWORD PTR _spUnk$150358[ebp]
	call	??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
	test	eax, eax
	je	SHORT $L150359

; 1144 : 				hr = QueryInterface(__uuidof(IDataObject), (void**)ppDORet);

	mov	esi, esp
	mov	eax, DWORD PTR _ppDORet$[ebp]
	push	eax
	push	OFFSET FLAT:__GUID_0000010e_0000_0000_c000_000000000046
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 36					; 00000024H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx-36]
	push	ecx
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$L150359:

; 1145 : 			if (FAILED(hr) || *ppDORet == NULL)

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $L150364
	mov	ecx, DWORD PTR _ppDORet$[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $L150363
$L150364:

; 1146 : 				hr = S_FALSE;

	mov	DWORD PTR _hr$[ebp], 1
$L150363:

; 1147 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spUnk$150358[ebp]
	call	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
$L150357:

; 1148 : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]
$L150350:

; 1149 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212434
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$L212434:
	DD	1
	DD	$L212433
$L212433:
	DD	-24					; ffffffe8H
	DD	4
	DD	$L212431
$L212431:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	85					; 00000055H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L212428:
	lea	ecx, DWORD PTR _spUnk$150358[ebp]
	jmp	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
__ehhandler$?FilterDataObject@CAxHostWindow@ATL@@UAGJPAUIDataObject@@PAPAU3@@Z:
	mov	eax, OFFSET FLAT:$T212430
	jmp	___CxxFrameHandler
text$x	ENDS
?FilterDataObject@CAxHostWindow@ATL@@UAGJPAUIDataObject@@PAPAU3@@Z ENDP ; ATL::CAxHostWindow::FilterDataObject
PUBLIC	??B?$CComPtrBase@UIDispatch@@@ATL@@QBEPAUIDispatch@@XZ ; ATL::CComPtrBase<IDispatch>::operator IDispatch *
PUBLIC	??C?$CComPtrBase@UIDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDispatch@@@1@XZ ; ATL::CComPtrBase<IDispatch>::operator->
PUBLIC	?Invoke@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ; ATL::IDispatchImpl<IAxWinAmbientDispatchEx,&_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5,&ATL::CAtlModule::m_libid,65535,65535,ATL::CComTypeInfoHolder>::Invoke
PUBLIC	?FireAmbientPropertyChange@CAxHostWindow@ATL@@QAEJJ@Z ; ATL::CAxHostWindow::FireAmbientPropertyChange
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Invoke@CAxHostWindow@ATL@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z
_TEXT	SEGMENT
tv90 = -8						; size = 4
_hr$ = -4						; size = 4
_this$ = 8						; size = 4
_dispIdMember$ = 12					; size = 4
_riid$ = 16						; size = 4
_lcid$ = 20						; size = 4
_wFlags$ = 24						; size = 2
_pDispParams$ = 28					; size = 4
_pVarResult$ = 32					; size = 4
_pExcepInfo$ = 36					; size = 4
_puArgErr$ = 40						; size = 4
?Invoke@CAxHostWindow@ATL@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z PROC NEAR ; ATL::CAxHostWindow::Invoke, COMDAT

; 1167 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1168 : 		HRESULT hr = IDispatchImpl<IAxWinAmbientDispatchEx, &__uuidof(IAxWinAmbientDispatchEx), &CAtlModule::m_libid, 0xFFFF, 0xFFFF>::Invoke
; 1169 : 			(dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr);

	mov	eax, DWORD PTR _puArgErr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pExcepInfo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pVarResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _pDispParams$[ebp]
	push	eax
	mov	cx, WORD PTR _wFlags$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lcid$[ebp]
	push	edx
	mov	eax, DWORD PTR _riid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dispIdMember$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?Invoke@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ; ATL::IDispatchImpl<IAxWinAmbientDispatchEx,&_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5,&ATL::CAtlModule::m_libid,65535,65535,ATL::CComTypeInfoHolder>::Invoke
	mov	DWORD PTR _hr$[ebp], eax

; 1170 : 		if ((hr == DISP_E_MEMBERNOTFOUND || hr == TYPE_E_ELEMENTNOTFOUND) && m_spAmbientDispatch != NULL)

	cmp	DWORD PTR _hr$[ebp], -2147352573	; 80020003H
	je	SHORT $L150491
	cmp	DWORD PTR _hr$[ebp], -2147319765	; 8002802bH
	jne	SHORT $L150490
$L150491:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??B?$CComPtrBase@UIDispatch@@@ATL@@QBEPAUIDispatch@@XZ ; ATL::CComPtrBase<IDispatch>::operator IDispatch *
	test	eax, eax
	je	SHORT $L150490

; 1171 : 		{
; 1172 : 			hr = m_spAmbientDispatch->Invoke(dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$CComPtrBase@UIDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDispatch@@@1@XZ ; ATL::CComPtrBase<IDispatch>::operator->
	mov	DWORD PTR tv90[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _puArgErr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pExcepInfo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pVarResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _pDispParams$[ebp]
	push	eax
	mov	cx, WORD PTR _wFlags$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lcid$[ebp]
	push	edx
	mov	eax, DWORD PTR _riid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dispIdMember$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv90[ebp]
	push	edx
	mov	eax, DWORD PTR tv90[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+24]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 1173 : 			if (SUCCEEDED(hr) && (wFlags & DISPATCH_PROPERTYPUT) != 0)

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $L150490
	movzx	edx, WORD PTR _wFlags$[ebp]
	and	edx, 4
	je	SHORT $L150490

; 1174 : 			{
; 1175 : 				hr = FireAmbientPropertyChange(dispIdMember);

	mov	eax, DWORD PTR _dispIdMember$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 76					; 0000004cH
	call	?FireAmbientPropertyChange@CAxHostWindow@ATL@@QAEJJ@Z ; ATL::CAxHostWindow::FireAmbientPropertyChange
	mov	DWORD PTR _hr$[ebp], eax
$L150490:

; 1176 : 			}
; 1177 : 		}
; 1178 : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 1179 : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
?Invoke@CAxHostWindow@ATL@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ENDP ; ATL::CAxHostWindow::Invoke
_TEXT	ENDS
PUBLIC	??B?$CComPtrBase@UIOleControl@@@ATL@@QBEPAUIOleControl@@XZ ; ATL::CComPtrBase<IOleControl>::operator IOleControl *
PUBLIC	??C?$CComPtrBase@UIOleControl@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleControl@@@1@XZ ; ATL::CComPtrBase<IOleControl>::operator->
PUBLIC	??0?$CComQIPtr@UIOleControl@@$1?_GUID_b196b288_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComQIPtr<IOleControl,&_GUID_b196b288_bab4_101a_b69c_00aa00341d07>::CComQIPtr<IOleControl,&_GUID_b196b288_bab4_101a_b69c_00aa00341d07>
PUBLIC	??1?$CComQIPtr@UIOleControl@@$1?_GUID_b196b288_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ ; ATL::CComQIPtr<IOleControl,&_GUID_b196b288_bab4_101a_b69c_00aa00341d07>::~CComQIPtr<IOleControl,&_GUID_b196b288_bab4_101a_b69c_00aa00341d07>
;	COMDAT xdata$x
xdata$x	SEGMENT
$T212450 DD	0ffffffffH
	DD	FLAT:$L212443
$T212445 DD	019930520H
	DD	01H
	DD	FLAT:$T212450
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?FireAmbientPropertyChange@CAxHostWindow@ATL@@QAEJJ@Z
_TEXT	SEGMENT
tv77 = -40						; size = 4
$T212442 = -36						; size = 4
_spOleControl$ = -28					; size = 4
_hr$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dispChanged$ = 8					; size = 4
?FireAmbientPropertyChange@CAxHostWindow@ATL@@QAEJJ@Z PROC NEAR ; ATL::CAxHostWindow::FireAmbientPropertyChange, COMDAT
; _this$ = ecx

; 1153 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FireAmbientPropertyChange@CAxHostWindow@ATL@@QAEJJ@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1154 : 		HRESULT hr = S_OK;

	mov	DWORD PTR _hr$[ebp], 0

; 1155 : 		CComQIPtr<IOleControl, &__uuidof(IOleControl)> spOleControl(m_spUnknown);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
	push	eax
	lea	ecx, DWORD PTR _spOleControl$[ebp]
	call	??0?$CComQIPtr@UIOleControl@@$1?_GUID_b196b288_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComQIPtr<IOleControl,&_GUID_b196b288_bab4_101a_b69c_00aa00341d07>::CComQIPtr<IOleControl,&_GUID_b196b288_bab4_101a_b69c_00aa00341d07>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1156 : 		if (spOleControl != NULL)

	lea	ecx, DWORD PTR _spOleControl$[ebp]
	call	??B?$CComPtrBase@UIOleControl@@@ATL@@QBEPAUIOleControl@@XZ ; ATL::CComPtrBase<IOleControl>::operator IOleControl *
	test	eax, eax
	je	SHORT $L150467

; 1157 : 			hr = spOleControl->OnAmbientPropertyChange(dispChanged);

	lea	ecx, DWORD PTR _spOleControl$[ebp]
	call	??C?$CComPtrBase@UIOleControl@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleControl@@@1@XZ ; ATL::CComPtrBase<IOleControl>::operator->
	mov	DWORD PTR tv77[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _dispChanged$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv77[ebp]
	push	ecx
	mov	edx, DWORD PTR tv77[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax+20]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$L150467:

; 1158 : 		return hr;

	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T212442[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spOleControl$[ebp]
	call	??1?$CComQIPtr@UIOleControl@@$1?_GUID_b196b288_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ
	mov	eax, DWORD PTR $T212442[ebp]

; 1159 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212449
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$L212449:
	DD	1
	DD	$L212448
$L212448:
	DD	-28					; ffffffe4H
	DD	4
	DD	$L212446
$L212446:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	79					; 0000004fH
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L212443:
	lea	ecx, DWORD PTR _spOleControl$[ebp]
	jmp	??1?$CComQIPtr@UIOleControl@@$1?_GUID_b196b288_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ
__ehhandler$?FireAmbientPropertyChange@CAxHostWindow@ATL@@QAEJJ@Z:
	mov	eax, OFFSET FLAT:$T212445
	jmp	___CxxFrameHandler
text$x	ENDS
?FireAmbientPropertyChange@CAxHostWindow@ATL@@QAEJJ@Z ENDP ; ATL::CAxHostWindow::FireAmbientPropertyChange
; Function compile flags: /Odt /RTCsu
;	COMDAT ?put_AllowWindowlessActivation@CAxHostWindow@ATL@@UAGJF@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bAllowWindowless$ = 12					; size = 2
?put_AllowWindowlessActivation@CAxHostWindow@ATL@@UAGJF@Z PROC NEAR ; ATL::CAxHostWindow::put_AllowWindowlessActivation, COMDAT

; 1182 : 	{

	push	ebp
	mov	ebp, esp

; 1183 : 		m_bCanWindowlessActivate = bAllowWindowless;

	movsx	eax, WORD PTR _bAllowWindowless$[ebp]
	and	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	and	edx, -2					; fffffffeH
	or	edx, eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+124], edx

; 1184 : 		return S_OK;

	xor	eax, eax

; 1185 : 	}

	pop	ebp
	ret	8
?put_AllowWindowlessActivation@CAxHostWindow@ATL@@UAGJF@Z ENDP ; ATL::CAxHostWindow::put_AllowWindowlessActivation
_TEXT	ENDS
PUBLIC	??_C@_0BH@JHFFPENB@pbAllowWindowless?5?$CB?$DN?50?$AA@ ; `string'
;	COMDAT ??_C@_0BH@JHFFPENB@pbAllowWindowless?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BH@JHFFPENB@pbAllowWindowless?5?$CB?$DN?50?$AA@ DB 'pbAllowWindowl'
	DB	'ess != 0', 00H				; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?get_AllowWindowlessActivation@CAxHostWindow@ATL@@UAGJPAF@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pbAllowWindowless$ = 12				; size = 4
?get_AllowWindowlessActivation@CAxHostWindow@ATL@@UAGJPAF@Z PROC NEAR ; ATL::CAxHostWindow::get_AllowWindowlessActivation, COMDAT

; 1187 : 	{

	push	ebp
	mov	ebp, esp

; 1188 : 		ATLASSERT(pbAllowWindowless != NULL);

	cmp	DWORD PTR _pbAllowWindowless$[ebp], 0
	jne	SHORT $L212457
	push	OFFSET FLAT:??_C@_0BH@JHFFPENB@pbAllowWindowless?5?$CB?$DN?50?$AA@
	push	0
	push	1188					; 000004a4H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212457
	int	3
$L212457:

; 1189 : 		if (pbAllowWindowless == NULL)

	cmp	DWORD PTR _pbAllowWindowless$[ebp], 0
	jne	SHORT $L150501

; 1190 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L150498
$L150501:

; 1191 : 
; 1192 : 		*pbAllowWindowless = m_bCanWindowlessActivate ? ATL_VARIANT_TRUE : ATL_VARIANT_FALSE;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	and	edx, 1
	neg	edx
	sbb	edx, edx
	mov	eax, DWORD PTR _pbAllowWindowless$[ebp]
	mov	WORD PTR [eax], dx

; 1193 : 		return S_OK;

	xor	eax, eax
$L150498:

; 1194 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?get_AllowWindowlessActivation@CAxHostWindow@ATL@@UAGJPAF@Z ENDP ; ATL::CAxHostWindow::get_AllowWindowlessActivation
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?put_BackColor@CAxHostWindow@ATL@@UAGJK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_clrBackground$ = 12					; size = 4
?put_BackColor@CAxHostWindow@ATL@@UAGJK@Z PROC NEAR	; ATL::CAxHostWindow::put_BackColor, COMDAT

; 1196 : 	{

	push	ebp
	mov	ebp, esp
	push	esi

; 1197 : 		m_clrBackground = clrBackground;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _clrBackground$[ebp]
	mov	DWORD PTR [eax+128], ecx

; 1198 : 		FireAmbientPropertyChange(DISPID_AMBIENT_BACKCOLOR);

	push	-701					; fffffd43H
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 76					; 0000004cH
	call	?FireAmbientPropertyChange@CAxHostWindow@ATL@@QAEJJ@Z ; ATL::CAxHostWindow::FireAmbientPropertyChange

; 1199 : 		InvalidateRect(0, FALSE);

	mov	esi, esp
	push	0
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	sub	edx, 32					; 00000020H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-32]
	push	edx
	call	DWORD PTR [ecx+100]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1200 : 		return S_OK;

	xor	eax, eax

; 1201 : 	}

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?put_BackColor@CAxHostWindow@ATL@@UAGJK@Z ENDP		; ATL::CAxHostWindow::put_BackColor
_TEXT	ENDS
PUBLIC	??_C@_0BE@DDJGHAOM@pclrBackground?5?$CB?$DN?50?$AA@ ; `string'
;	COMDAT ??_C@_0BE@DDJGHAOM@pclrBackground?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BE@DDJGHAOM@pclrBackground?5?$CB?$DN?50?$AA@ DB 'pclrBackground !='
	DB	' 0', 00H					; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?get_BackColor@CAxHostWindow@ATL@@UAGJPAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pclrBackground$ = 12					; size = 4
?get_BackColor@CAxHostWindow@ATL@@UAGJPAK@Z PROC NEAR	; ATL::CAxHostWindow::get_BackColor, COMDAT

; 1203 : 	{

	push	ebp
	mov	ebp, esp

; 1204 : 		ATLASSERT(pclrBackground != NULL);

	cmp	DWORD PTR _pclrBackground$[ebp], 0
	jne	SHORT $L212462
	push	OFFSET FLAT:??_C@_0BE@DDJGHAOM@pclrBackground?5?$CB?$DN?50?$AA@
	push	0
	push	1204					; 000004b4H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212462
	int	3
$L212462:

; 1205 : 		if (pclrBackground == NULL)

	cmp	DWORD PTR _pclrBackground$[ebp], 0
	jne	SHORT $L150511

; 1206 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L150508
$L150511:

; 1207 : 
; 1208 : 		*pclrBackground = m_clrBackground;

	mov	ecx, DWORD PTR _pclrBackground$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+128]
	mov	DWORD PTR [ecx], eax

; 1209 : 		return S_OK;

	xor	eax, eax
$L150508:

; 1210 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?get_BackColor@CAxHostWindow@ATL@@UAGJPAK@Z ENDP	; ATL::CAxHostWindow::get_BackColor
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?put_ForeColor@CAxHostWindow@ATL@@UAGJK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_clrForeground$ = 12					; size = 4
?put_ForeColor@CAxHostWindow@ATL@@UAGJK@Z PROC NEAR	; ATL::CAxHostWindow::put_ForeColor, COMDAT

; 1212 : 	{

	push	ebp
	mov	ebp, esp

; 1213 : 		m_clrForeground = clrForeground;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _clrForeground$[ebp]
	mov	DWORD PTR [eax+132], ecx

; 1214 : 		FireAmbientPropertyChange(DISPID_AMBIENT_FORECOLOR);

	push	-704					; fffffd40H
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 76					; 0000004cH
	call	?FireAmbientPropertyChange@CAxHostWindow@ATL@@QAEJJ@Z ; ATL::CAxHostWindow::FireAmbientPropertyChange

; 1215 : 		return S_OK;

	xor	eax, eax

; 1216 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?put_ForeColor@CAxHostWindow@ATL@@UAGJK@Z ENDP		; ATL::CAxHostWindow::put_ForeColor
_TEXT	ENDS
PUBLIC	??_C@_0BE@LIPPFLE@pclrForeground?5?$CB?$DN?50?$AA@ ; `string'
;	COMDAT ??_C@_0BE@LIPPFLE@pclrForeground?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BE@LIPPFLE@pclrForeground?5?$CB?$DN?50?$AA@ DB 'pclrForeground != '
	DB	'0', 00H					; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?get_ForeColor@CAxHostWindow@ATL@@UAGJPAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pclrForeground$ = 12					; size = 4
?get_ForeColor@CAxHostWindow@ATL@@UAGJPAK@Z PROC NEAR	; ATL::CAxHostWindow::get_ForeColor, COMDAT

; 1218 : 	{

	push	ebp
	mov	ebp, esp

; 1219 : 		ATLASSERT(pclrForeground != NULL);

	cmp	DWORD PTR _pclrForeground$[ebp], 0
	jne	SHORT $L212467
	push	OFFSET FLAT:??_C@_0BE@LIPPFLE@pclrForeground?5?$CB?$DN?50?$AA@
	push	0
	push	1219					; 000004c3H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212467
	int	3
$L212467:

; 1220 : 		if (pclrForeground == NULL)

	cmp	DWORD PTR _pclrForeground$[ebp], 0
	jne	SHORT $L150521

; 1221 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L150518
$L150521:

; 1222 : 
; 1223 : 		*pclrForeground = m_clrForeground;

	mov	ecx, DWORD PTR _pclrForeground$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+132]
	mov	DWORD PTR [ecx], eax

; 1224 : 		return S_OK;

	xor	eax, eax
$L150518:

; 1225 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?get_ForeColor@CAxHostWindow@ATL@@UAGJPAK@Z ENDP	; ATL::CAxHostWindow::get_ForeColor
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?put_LocaleID@CAxHostWindow@ATL@@UAGJK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_lcidLocaleID$ = 12					; size = 4
?put_LocaleID@CAxHostWindow@ATL@@UAGJK@Z PROC NEAR	; ATL::CAxHostWindow::put_LocaleID, COMDAT

; 1227 : 	{

	push	ebp
	mov	ebp, esp

; 1228 : 		m_lcidLocaleID = lcidLocaleID;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _lcidLocaleID$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 1229 : 		FireAmbientPropertyChange(DISPID_AMBIENT_LOCALEID);

	push	-705					; fffffd3fH
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 76					; 0000004cH
	call	?FireAmbientPropertyChange@CAxHostWindow@ATL@@QAEJJ@Z ; ATL::CAxHostWindow::FireAmbientPropertyChange

; 1230 : 		return S_OK;

	xor	eax, eax

; 1231 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?put_LocaleID@CAxHostWindow@ATL@@UAGJK@Z ENDP		; ATL::CAxHostWindow::put_LocaleID
_TEXT	ENDS
PUBLIC	??_C@_0BD@GDKLOMEM@plcidLocaleID?5?$CB?$DN?50?$AA@ ; `string'
;	COMDAT ??_C@_0BD@GDKLOMEM@plcidLocaleID?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BD@GDKLOMEM@plcidLocaleID?5?$CB?$DN?50?$AA@ DB 'plcidLocaleID != 0'
	DB	00H						; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?get_LocaleID@CAxHostWindow@ATL@@UAGJPAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_plcidLocaleID$ = 12					; size = 4
?get_LocaleID@CAxHostWindow@ATL@@UAGJPAK@Z PROC NEAR	; ATL::CAxHostWindow::get_LocaleID, COMDAT

; 1233 : 	{

	push	ebp
	mov	ebp, esp

; 1234 : 		ATLASSERT(plcidLocaleID != NULL);

	cmp	DWORD PTR _plcidLocaleID$[ebp], 0
	jne	SHORT $L212472
	push	OFFSET FLAT:??_C@_0BD@GDKLOMEM@plcidLocaleID?5?$CB?$DN?50?$AA@
	push	0
	push	1234					; 000004d2H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212472
	int	3
$L212472:

; 1235 : 		if (plcidLocaleID == NULL)

	cmp	DWORD PTR _plcidLocaleID$[ebp], 0
	jne	SHORT $L150531

; 1236 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L150528
$L150531:

; 1237 : 
; 1238 : 		*plcidLocaleID = m_lcidLocaleID;

	mov	ecx, DWORD PTR _plcidLocaleID$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+136]
	mov	DWORD PTR [ecx], eax

; 1239 : 		return S_OK;

	xor	eax, eax
$L150528:

; 1240 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?get_LocaleID@CAxHostWindow@ATL@@UAGJPAK@Z ENDP		; ATL::CAxHostWindow::get_LocaleID
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?put_UserMode@CAxHostWindow@ATL@@UAGJF@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bUserMode$ = 12					; size = 2
?put_UserMode@CAxHostWindow@ATL@@UAGJF@Z PROC NEAR	; ATL::CAxHostWindow::put_UserMode, COMDAT

; 1242 : 	{

	push	ebp
	mov	ebp, esp

; 1243 : 		m_bUserMode = bUserMode;

	movsx	eax, WORD PTR _bUserMode$[ebp]
	and	eax, 1
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	and	edx, -3					; fffffffdH
	or	edx, eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+124], edx

; 1244 : 		FireAmbientPropertyChange(DISPID_AMBIENT_USERMODE);

	push	-709					; fffffd3bH
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 76					; 0000004cH
	call	?FireAmbientPropertyChange@CAxHostWindow@ATL@@QAEJJ@Z ; ATL::CAxHostWindow::FireAmbientPropertyChange

; 1245 : 		return S_OK;

	xor	eax, eax

; 1246 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?put_UserMode@CAxHostWindow@ATL@@UAGJF@Z ENDP		; ATL::CAxHostWindow::put_UserMode
_TEXT	ENDS
PUBLIC	??_C@_0BA@OPEFOKNK@pbUserMode?5?$CB?$DN?50?$AA@	; `string'
;	COMDAT ??_C@_0BA@OPEFOKNK@pbUserMode?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BA@OPEFOKNK@pbUserMode?5?$CB?$DN?50?$AA@ DB 'pbUserMode != 0', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?get_UserMode@CAxHostWindow@ATL@@UAGJPAF@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pbUserMode$ = 12					; size = 4
?get_UserMode@CAxHostWindow@ATL@@UAGJPAF@Z PROC NEAR	; ATL::CAxHostWindow::get_UserMode, COMDAT

; 1248 : 	{

	push	ebp
	mov	ebp, esp

; 1249 : 		ATLASSERT(pbUserMode != NULL);

	cmp	DWORD PTR _pbUserMode$[ebp], 0
	jne	SHORT $L212477
	push	OFFSET FLAT:??_C@_0BA@OPEFOKNK@pbUserMode?5?$CB?$DN?50?$AA@
	push	0
	push	1249					; 000004e1H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212477
	int	3
$L212477:

; 1250 : 		if (pbUserMode == NULL)

	cmp	DWORD PTR _pbUserMode$[ebp], 0
	jne	SHORT $L150541

; 1251 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L150538
$L150541:

; 1252 : 
; 1253 : 		*pbUserMode = m_bUserMode ? ATL_VARIANT_TRUE : ATL_VARIANT_FALSE;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	shr	edx, 1
	and	edx, 1
	neg	edx
	sbb	edx, edx
	mov	eax, DWORD PTR _pbUserMode$[ebp]
	mov	WORD PTR [eax], dx

; 1254 : 		return S_OK;

	xor	eax, eax
$L150538:

; 1255 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?get_UserMode@CAxHostWindow@ATL@@UAGJPAF@Z ENDP		; ATL::CAxHostWindow::get_UserMode
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?put_DisplayAsDefault@CAxHostWindow@ATL@@UAGJF@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bDisplayAsDefault$ = 12				; size = 2
?put_DisplayAsDefault@CAxHostWindow@ATL@@UAGJF@Z PROC NEAR ; ATL::CAxHostWindow::put_DisplayAsDefault, COMDAT

; 1257 : 	{

	push	ebp
	mov	ebp, esp

; 1258 : 		m_bDisplayAsDefault = bDisplayAsDefault;

	movsx	eax, WORD PTR _bDisplayAsDefault$[ebp]
	and	eax, 1
	shl	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	and	edx, -5					; fffffffbH
	or	edx, eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+124], edx

; 1259 : 		FireAmbientPropertyChange(DISPID_AMBIENT_DISPLAYASDEFAULT);

	push	-713					; fffffd37H
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 76					; 0000004cH
	call	?FireAmbientPropertyChange@CAxHostWindow@ATL@@QAEJJ@Z ; ATL::CAxHostWindow::FireAmbientPropertyChange

; 1260 : 		return S_OK;

	xor	eax, eax

; 1261 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?put_DisplayAsDefault@CAxHostWindow@ATL@@UAGJF@Z ENDP	; ATL::CAxHostWindow::put_DisplayAsDefault
_TEXT	ENDS
PUBLIC	??_C@_0BI@NOFOIMNO@pbDisplayAsDefault?5?$CB?$DN?50?$AA@ ; `string'
;	COMDAT ??_C@_0BI@NOFOIMNO@pbDisplayAsDefault?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BI@NOFOIMNO@pbDisplayAsDefault?5?$CB?$DN?50?$AA@ DB 'pbDisplayAsDe'
	DB	'fault != 0', 00H				; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?get_DisplayAsDefault@CAxHostWindow@ATL@@UAGJPAF@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pbDisplayAsDefault$ = 12				; size = 4
?get_DisplayAsDefault@CAxHostWindow@ATL@@UAGJPAF@Z PROC NEAR ; ATL::CAxHostWindow::get_DisplayAsDefault, COMDAT

; 1263 : 	{

	push	ebp
	mov	ebp, esp

; 1264 : 		ATLASSERT(pbDisplayAsDefault != NULL);

	cmp	DWORD PTR _pbDisplayAsDefault$[ebp], 0
	jne	SHORT $L212482
	push	OFFSET FLAT:??_C@_0BI@NOFOIMNO@pbDisplayAsDefault?5?$CB?$DN?50?$AA@
	push	0
	push	1264					; 000004f0H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212482
	int	3
$L212482:

; 1265 : 		if (pbDisplayAsDefault == NULL)

	cmp	DWORD PTR _pbDisplayAsDefault$[ebp], 0
	jne	SHORT $L150551

; 1266 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L150548
$L150551:

; 1267 : 
; 1268 : 		*pbDisplayAsDefault = m_bDisplayAsDefault ? ATL_VARIANT_TRUE : ATL_VARIANT_FALSE;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	shr	edx, 2
	and	edx, 1
	neg	edx
	sbb	edx, edx
	mov	eax, DWORD PTR _pbDisplayAsDefault$[ebp]
	mov	WORD PTR [eax], dx

; 1269 : 		return S_OK;

	xor	eax, eax
$L150548:

; 1270 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?get_DisplayAsDefault@CAxHostWindow@ATL@@UAGJPAF@Z ENDP	; ATL::CAxHostWindow::get_DisplayAsDefault
_TEXT	ENDS
PUBLIC	??4?$CComPtr@UIFontDisp@@@ATL@@QAEPAUIFontDisp@@PAU2@@Z ; ATL::CComPtr<IFontDisp>::operator=
; Function compile flags: /Odt /RTCsu
;	COMDAT ?put_Font@CAxHostWindow@ATL@@UAGJPAUIFontDisp@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pFont$ = 12						; size = 4
?put_Font@CAxHostWindow@ATL@@UAGJPAUIFontDisp@@@Z PROC NEAR ; ATL::CAxHostWindow::put_Font, COMDAT

; 1272 : 	{

	push	ebp
	mov	ebp, esp

; 1273 : 		m_spFont = pFont;

	mov	eax, DWORD PTR _pFont$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??4?$CComPtr@UIFontDisp@@@ATL@@QAEPAUIFontDisp@@PAU2@@Z ; ATL::CComPtr<IFontDisp>::operator=

; 1274 : 		FireAmbientPropertyChange(DISPID_AMBIENT_FONT);

	push	-703					; fffffd41H
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 76					; 0000004cH
	call	?FireAmbientPropertyChange@CAxHostWindow@ATL@@QAEJJ@Z ; ATL::CAxHostWindow::FireAmbientPropertyChange

; 1275 : 		return S_OK;

	xor	eax, eax

; 1276 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?put_Font@CAxHostWindow@ATL@@UAGJPAUIFontDisp@@@Z ENDP	; ATL::CAxHostWindow::put_Font
_TEXT	ENDS
PUBLIC	??_C@_0L@LJCFDACO@pFont?5?$CB?$DN?50?$AA@	; `string'
PUBLIC	__GUID_bef6e003_a874_101a_8bba_00aa00300cab
PUBLIC	??I?$CComPtrBase@UIFontDisp@@@ATL@@QAEPAPAUIFontDisp@@XZ ; ATL::CComPtrBase<IFontDisp>::operator&
PUBLIC	??8?$CComPtrBase@UIFontDisp@@@ATL@@QBE_NPAUIFontDisp@@@Z ; ATL::CComPtrBase<IFontDisp>::operator==
PUBLIC	?CopyTo@?$CComPtrBase@UIFontDisp@@@ATL@@QAEJPAPAUIFontDisp@@@Z ; ATL::CComPtrBase<IFontDisp>::CopyTo
EXTRN	__imp__GetDC@4:NEAR
EXTRN	__imp__ReleaseDC@8:NEAR
EXTRN	__imp__GetObjectA@12:NEAR
EXTRN	__imp__GetDeviceCaps@8:NEAR
EXTRN	__imp__GetStockObject@4:NEAR
EXTRN	__imp__GetDesktopWindow@0:NEAR
EXTRN	__imp__OleCreateFontIndirect@12:NEAR
;	COMDAT ??_C@_0L@LJCFDACO@pFont?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0L@LJCFDACO@pFont?5?$CB?$DN?50?$AA@ DB 'pFont != 0', 00H ; `string'
CONST	ENDS
;	COMDAT __GUID_bef6e003_a874_101a_8bba_00aa00300cab
CONST	SEGMENT
__GUID_bef6e003_a874_101a_8bba_00aa00300cab DD 0bef6e003H
	DW	0a874H
	DW	0101aH
	DB	08bH
	DB	0baH
	DB	00H
	DB	0aaH
	DB	00H
	DB	030H
	DB	0cH
	DB	0abH
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?get_Font@CAxHostWindow@ATL@@UAGJPAPAUIFontDisp@@@Z
_TEXT	SEGMENT
tv134 = -152						; size = 4
tv138 = -148						; size = 4
_hdc$150581 = -144					; size = 4
_ppi$150580 = -140					; size = 4
_lfHeight$150578 = -136					; size = 4
_fd$150574 = -128					; size = 32
_logfont$150573 = -88					; size = 60
_hSystemFont$150568 = -24				; size = 4
__lpa$150567 = -20					; size = 4
__lpw$150566 = -16					; size = 4
__acp$150565 = -12					; size = 4
__convert$150564 = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_this$ = 8						; size = 4
_pFont$ = 12						; size = 4
?get_Font@CAxHostWindow@ATL@@UAGJPAPAUIFontDisp@@@Z PROC NEAR ; ATL::CAxHostWindow::get_Font, COMDAT

; 1278 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 152				; 00000098H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-152]
	mov	ecx, 38					; 00000026H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 1279 : 		ATLASSERT(pFont != NULL);

	cmp	DWORD PTR _pFont$[ebp], 0
	jne	SHORT $L212488
	push	OFFSET FLAT:??_C@_0L@LJCFDACO@pFont?5?$CB?$DN?50?$AA@
	push	0
	push	1279					; 000004ffH
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212488
	int	3
$L212488:

; 1280 : 		if (pFont == NULL)

	cmp	DWORD PTR _pFont$[ebp], 0
	jne	SHORT $L150561

; 1281 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	$L150558
$L150561:

; 1282 : 		*pFont = NULL;

	mov	ecx, DWORD PTR _pFont$[ebp]
	mov	DWORD PTR [ecx], 0

; 1283 : 
; 1284 : 		if (m_spFont == NULL)

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??8?$CComPtrBase@UIFontDisp@@@ATL@@QBE_NPAUIFontDisp@@@Z ; ATL::CComPtrBase<IFontDisp>::operator==
	movzx	edx, al
	test	edx, edx
	je	$L150563

; 1285 : 		{
; 1286 : 			USES_CONVERSION;

	mov	DWORD PTR __convert$150564[ebp], 0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	mov	DWORD PTR __acp$150565[ebp], eax
	mov	DWORD PTR __lpw$150566[ebp], 0
	mov	DWORD PTR __lpa$150567[ebp], 0

; 1287 : 			HFONT hSystemFont = (HFONT) GetStockObject(DEFAULT_GUI_FONT);

	mov	esi, esp
	push	17					; 00000011H
	call	DWORD PTR __imp__GetStockObject@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hSystemFont$150568[ebp], eax

; 1288 : 			if (hSystemFont == NULL)

	cmp	DWORD PTR _hSystemFont$150568[ebp], 0
	jne	SHORT $L150570

; 1289 : 				hSystemFont = (HFONT) GetStockObject(SYSTEM_FONT);

	mov	esi, esp
	push	13					; 0000000dH
	call	DWORD PTR __imp__GetStockObject@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hSystemFont$150568[ebp], eax
$L150570:

; 1290 : 			if (hSystemFont == NULL)

	cmp	DWORD PTR _hSystemFont$150568[ebp], 0
	jne	SHORT $L150572

; 1291 : 				return AtlHresultFromLastError();

	call	?AtlHresultFromLastError@ATL@@YAJXZ	; ATL::AtlHresultFromLastError
	jmp	$L150558
$L150572:

; 1292 : 			LOGFONT logfont;
; 1293 : 			GetObject(hSystemFont, sizeof(logfont), &logfont);

	mov	esi, esp
	lea	eax, DWORD PTR _logfont$150573[ebp]
	push	eax
	push	60					; 0000003cH
	mov	ecx, DWORD PTR _hSystemFont$150568[ebp]
	push	ecx
	call	DWORD PTR __imp__GetObjectA@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1294 : 			FONTDESC fd;
; 1295 : 			fd.cbSizeofstruct = sizeof(FONTDESC);

	mov	DWORD PTR _fd$150574[ebp], 32		; 00000020H

; 1296 : 			fd.lpstrName = T2OLE(logfont.lfFaceName);

	lea	edx, DWORD PTR _logfont$150573[ebp+28]
	mov	DWORD PTR __lpa$150567[ebp], edx
	cmp	DWORD PTR __lpa$150567[ebp], 0
	jne	SHORT $L212489
	mov	DWORD PTR tv138[ebp], 0
	jmp	SHORT $L212490
$L212489:
	mov	esi, esp
	mov	eax, DWORD PTR __lpa$150567[ebp]
	push	eax
	call	DWORD PTR __imp__lstrlenA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	mov	DWORD PTR __convert$150564[ebp], eax
	mov	eax, DWORD PTR __convert$150564[ebp]
	shl	eax, 1
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv134[ebp], esp
	mov	ecx, DWORD PTR __acp$150565[ebp]
	push	ecx
	mov	edx, DWORD PTR __convert$150564[ebp]
	push	edx
	mov	eax, DWORD PTR __lpa$150567[ebp]
	push	eax
	mov	ecx, DWORD PTR tv134[ebp]
	push	ecx
	call	?AtlA2WHelper@@YGPAGPAGPBDHI@Z		; AtlA2WHelper
	mov	DWORD PTR tv138[ebp], eax
$L212490:
	mov	edx, DWORD PTR tv138[ebp]
	mov	DWORD PTR _fd$150574[ebp+4], edx

; 1297 : 			fd.sWeight = (short)logfont.lfWeight;

	mov	ax, WORD PTR _logfont$150573[ebp+16]
	mov	WORD PTR _fd$150574[ebp+16], ax

; 1298 : 			fd.sCharset = logfont.lfCharSet;

	movzx	cx, BYTE PTR _logfont$150573[ebp+23]
	mov	WORD PTR _fd$150574[ebp+18], cx

; 1299 : 			fd.fItalic = logfont.lfItalic;

	movzx	edx, BYTE PTR _logfont$150573[ebp+20]
	mov	DWORD PTR _fd$150574[ebp+20], edx

; 1300 : 			fd.fUnderline = logfont.lfUnderline;

	movzx	eax, BYTE PTR _logfont$150573[ebp+21]
	mov	DWORD PTR _fd$150574[ebp+24], eax

; 1301 : 			fd.fStrikethrough = logfont.lfStrikeOut;

	movzx	ecx, BYTE PTR _logfont$150573[ebp+22]
	mov	DWORD PTR _fd$150574[ebp+28], ecx

; 1302 : 
; 1303 : 			long lfHeight = logfont.lfHeight;

	mov	edx, DWORD PTR _logfont$150573[ebp]
	mov	DWORD PTR _lfHeight$150578[ebp], edx

; 1304 : 			if (lfHeight < 0)

	cmp	DWORD PTR _lfHeight$150578[ebp], 0
	jge	SHORT $L150579

; 1305 : 				lfHeight = -lfHeight;

	mov	eax, DWORD PTR _lfHeight$150578[ebp]
	neg	eax
	mov	DWORD PTR _lfHeight$150578[ebp], eax
$L150579:

; 1306 : 
; 1307 : 			int ppi;
; 1308 : 			HDC hdc;
; 1309 : 			if (m_hWnd)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx-72], 0
	je	SHORT $L150582

; 1310 : 			{
; 1311 : 				hdc = ::GetDC(m_hWnd);

	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx-72]
	push	eax
	call	DWORD PTR __imp__GetDC@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hdc$150581[ebp], eax

; 1312 : 				if (hdc == NULL)

	cmp	DWORD PTR _hdc$150581[ebp], 0
	jne	SHORT $L150583

; 1313 : 					return AtlHresultFromLastError();

	call	?AtlHresultFromLastError@ATL@@YAJXZ	; ATL::AtlHresultFromLastError
	jmp	$L150558
$L150583:

; 1314 : 				ppi = GetDeviceCaps(hdc, LOGPIXELSY);

	mov	esi, esp
	push	90					; 0000005aH
	mov	ecx, DWORD PTR _hdc$150581[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDeviceCaps@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ppi$150580[ebp], eax

; 1315 : 				::ReleaseDC(m_hWnd, hdc);

	mov	esi, esp
	mov	edx, DWORD PTR _hdc$150581[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-72]
	push	ecx
	call	DWORD PTR __imp__ReleaseDC@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1316 : 			}
; 1317 : 			else

	jmp	SHORT $L150584
$L150582:

; 1318 : 			{
; 1319 : 				hdc = ::GetDC(GetDesktopWindow());

	mov	esi, esp
	call	DWORD PTR __imp__GetDesktopWindow@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__GetDC@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hdc$150581[ebp], eax

; 1320 : 				if (hdc == NULL)

	cmp	DWORD PTR _hdc$150581[ebp], 0
	jne	SHORT $L150585

; 1321 : 					return AtlHresultFromLastError();

	call	?AtlHresultFromLastError@ATL@@YAJXZ	; ATL::AtlHresultFromLastError
	jmp	$L150558
$L150585:

; 1322 : 				ppi = GetDeviceCaps(hdc, LOGPIXELSY);

	mov	esi, esp
	push	90					; 0000005aH
	mov	edx, DWORD PTR _hdc$150581[ebp]
	push	edx
	call	DWORD PTR __imp__GetDeviceCaps@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ppi$150580[ebp], eax

; 1323 : 				::ReleaseDC(GetDesktopWindow(), hdc);

	mov	esi, esp
	mov	eax, DWORD PTR _hdc$150581[ebp]
	push	eax
	mov	edi, esp
	call	DWORD PTR __imp__GetDesktopWindow@0
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__ReleaseDC@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$L150584:

; 1324 : 			}
; 1325 : 			fd.cySize.Lo = lfHeight * 720000 / ppi;

	mov	eax, DWORD PTR _lfHeight$150578[ebp]
	imul	eax, 720000				; 000afc80H
	cdq
	idiv	DWORD PTR _ppi$150580[ebp]
	mov	DWORD PTR _fd$150574[ebp+8], eax

; 1326 : 			fd.cySize.Hi = 0;

	mov	DWORD PTR _fd$150574[ebp+12], 0

; 1327 : 
; 1328 : 			OleCreateFontIndirect(&fd, __uuidof(IFontDisp), (void**) &m_spFont);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??I?$CComPtrBase@UIFontDisp@@@ATL@@QAEPAPAUIFontDisp@@XZ ; ATL::CComPtrBase<IFontDisp>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET FLAT:__GUID_bef6e003_a874_101a_8bba_00aa00300cab
	lea	ecx, DWORD PTR _fd$150574[ebp]
	push	ecx
	call	DWORD PTR __imp__OleCreateFontIndirect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
$L150563:

; 1329 : 		}
; 1330 : 
; 1331 : 		return m_spFont.CopyTo(pFont);

	mov	edx, DWORD PTR _pFont$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	?CopyTo@?$CComPtrBase@UIFontDisp@@@ATL@@QAEJPAPAUIFontDisp@@@Z ; ATL::CComPtrBase<IFontDisp>::CopyTo
$L150558:

; 1332 : 	}

	lea	esp, DWORD PTR [ebp-160]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212495
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
$L212495:
	DD	2
	DD	$L212494
$L212494:
	DD	-88					; ffffffa8H
	DD	60					; 0000003cH
	DD	$L212491
	DD	-128					; ffffff80H
	DD	32					; 00000020H
	DD	$L212492
$L212492:
	DB	102					; 00000066H
	DB	100					; 00000064H
	DB	0
$L212491:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
?get_Font@CAxHostWindow@ATL@@UAGJPAPAUIFontDisp@@@Z ENDP ; ATL::CAxHostWindow::get_Font
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?put_MessageReflect@CAxHostWindow@ATL@@UAGJF@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bMessageReflect$ = 12					; size = 2
?put_MessageReflect@CAxHostWindow@ATL@@UAGJF@Z PROC NEAR ; ATL::CAxHostWindow::put_MessageReflect, COMDAT

; 1334 : 	{

	push	ebp
	mov	ebp, esp

; 1335 : 		m_bMessageReflect = bMessageReflect;

	movsx	eax, WORD PTR _bMessageReflect$[ebp]
	and	eax, 1
	shl	eax, 3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	and	edx, -9					; fffffff7H
	or	edx, eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+124], edx

; 1336 : 		FireAmbientPropertyChange(DISPID_AMBIENT_MESSAGEREFLECT);

	push	-706					; fffffd3eH
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 76					; 0000004cH
	call	?FireAmbientPropertyChange@CAxHostWindow@ATL@@QAEJJ@Z ; ATL::CAxHostWindow::FireAmbientPropertyChange

; 1337 : 		return S_OK;

	xor	eax, eax

; 1338 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?put_MessageReflect@CAxHostWindow@ATL@@UAGJF@Z ENDP	; ATL::CAxHostWindow::put_MessageReflect
_TEXT	ENDS
PUBLIC	??_C@_0BG@FLHHODIE@pbMessageReflect?5?$CB?$DN?50?$AA@ ; `string'
;	COMDAT ??_C@_0BG@FLHHODIE@pbMessageReflect?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BG@FLHHODIE@pbMessageReflect?5?$CB?$DN?50?$AA@ DB 'pbMessageReflec'
	DB	't != 0', 00H				; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?get_MessageReflect@CAxHostWindow@ATL@@UAGJPAF@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pbMessageReflect$ = 12					; size = 4
?get_MessageReflect@CAxHostWindow@ATL@@UAGJPAF@Z PROC NEAR ; ATL::CAxHostWindow::get_MessageReflect, COMDAT

; 1340 : 	{

	push	ebp
	mov	ebp, esp

; 1341 : 
; 1342 : 		ATLASSERT(pbMessageReflect != NULL);

	cmp	DWORD PTR _pbMessageReflect$[ebp], 0
	jne	SHORT $L212500
	push	OFFSET FLAT:??_C@_0BG@FLHHODIE@pbMessageReflect?5?$CB?$DN?50?$AA@
	push	0
	push	1342					; 0000053eH
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212500
	int	3
$L212500:

; 1343 : 		if (pbMessageReflect == NULL)

	cmp	DWORD PTR _pbMessageReflect$[ebp], 0
	jne	SHORT $L150595

; 1344 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L150592
$L150595:

; 1345 : 
; 1346 : 		*pbMessageReflect = m_bMessageReflect ? ATL_VARIANT_TRUE : ATL_VARIANT_FALSE;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	shr	edx, 3
	and	edx, 1
	neg	edx
	sbb	edx, edx
	mov	eax, DWORD PTR _pbMessageReflect$[ebp]
	mov	WORD PTR [eax], dx

; 1347 : 		return S_OK;

	xor	eax, eax
$L150592:

; 1348 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?get_MessageReflect@CAxHostWindow@ATL@@UAGJPAF@Z ENDP	; ATL::CAxHostWindow::get_MessageReflect
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?get_ShowGrabHandles@CAxHostWindow@ATL@@UAGJPAF@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pbShowGrabHandles$ = 12				; size = 4
?get_ShowGrabHandles@CAxHostWindow@ATL@@UAGJPAF@Z PROC NEAR ; ATL::CAxHostWindow::get_ShowGrabHandles, COMDAT

; 1350 : 	{

	push	ebp
	mov	ebp, esp

; 1351 : 		*pbShowGrabHandles = ATL_VARIANT_FALSE;

	mov	eax, DWORD PTR _pbShowGrabHandles$[ebp]
	mov	WORD PTR [eax], 0

; 1352 : 		return S_OK;

	xor	eax, eax

; 1353 : 	}

	pop	ebp
	ret	8
?get_ShowGrabHandles@CAxHostWindow@ATL@@UAGJPAF@Z ENDP	; ATL::CAxHostWindow::get_ShowGrabHandles
_TEXT	ENDS
PUBLIC	??_C@_0BE@JEDDFNM@pbShowHatching?5?$CB?$DN?50?$AA@ ; `string'
;	COMDAT ??_C@_0BE@JEDDFNM@pbShowHatching?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BE@JEDDFNM@pbShowHatching?5?$CB?$DN?50?$AA@ DB 'pbShowHatching != '
	DB	'0', 00H					; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?get_ShowHatching@CAxHostWindow@ATL@@UAGJPAF@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pbShowHatching$ = 12					; size = 4
?get_ShowHatching@CAxHostWindow@ATL@@UAGJPAF@Z PROC NEAR ; ATL::CAxHostWindow::get_ShowHatching, COMDAT

; 1355 : 	{

	push	ebp
	mov	ebp, esp

; 1356 : 		ATLASSERT(pbShowHatching != NULL);

	cmp	DWORD PTR _pbShowHatching$[ebp], 0
	jne	SHORT $L212505
	push	OFFSET FLAT:??_C@_0BE@JEDDFNM@pbShowHatching?5?$CB?$DN?50?$AA@
	push	0
	push	1356					; 0000054cH
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212505
	int	3
$L212505:

; 1357 : 		if (pbShowHatching == NULL)

	cmp	DWORD PTR _pbShowHatching$[ebp], 0
	jne	SHORT $L150605

; 1358 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L150602
$L150605:

; 1359 : 
; 1360 : 		*pbShowHatching = ATL_VARIANT_FALSE;

	mov	ecx, DWORD PTR _pbShowHatching$[ebp]
	mov	WORD PTR [ecx], 0

; 1361 : 		return S_OK;

	xor	eax, eax
$L150602:

; 1362 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?get_ShowHatching@CAxHostWindow@ATL@@UAGJPAF@Z ENDP	; ATL::CAxHostWindow::get_ShowHatching
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?put_DocHostFlags@CAxHostWindow@ATL@@UAGJK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_dwDocHostFlags$ = 12					; size = 4
?put_DocHostFlags@CAxHostWindow@ATL@@UAGJK@Z PROC NEAR	; ATL::CAxHostWindow::put_DocHostFlags, COMDAT

; 1364 : 	{

	push	ebp
	mov	ebp, esp

; 1365 : 		m_dwDocHostFlags = dwDocHostFlags;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _dwDocHostFlags$[ebp]
	mov	DWORD PTR [eax+148], ecx

; 1366 : 		FireAmbientPropertyChange(DISPID_UNKNOWN);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 76					; 0000004cH
	call	?FireAmbientPropertyChange@CAxHostWindow@ATL@@QAEJJ@Z ; ATL::CAxHostWindow::FireAmbientPropertyChange

; 1367 : 		return S_OK;

	xor	eax, eax

; 1368 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?put_DocHostFlags@CAxHostWindow@ATL@@UAGJK@Z ENDP	; ATL::CAxHostWindow::put_DocHostFlags
_TEXT	ENDS
PUBLIC	??_C@_0BF@IJHKDPOI@pdwDocHostFlags?5?$CB?$DN?50?$AA@ ; `string'
;	COMDAT ??_C@_0BF@IJHKDPOI@pdwDocHostFlags?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BF@IJHKDPOI@pdwDocHostFlags?5?$CB?$DN?50?$AA@ DB 'pdwDocHostFlags '
	DB	'!= 0', 00H					; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?get_DocHostFlags@CAxHostWindow@ATL@@UAGJPAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pdwDocHostFlags$ = 12					; size = 4
?get_DocHostFlags@CAxHostWindow@ATL@@UAGJPAK@Z PROC NEAR ; ATL::CAxHostWindow::get_DocHostFlags, COMDAT

; 1370 : 	{

	push	ebp
	mov	ebp, esp

; 1371 : 		ATLASSERT(pdwDocHostFlags != NULL);

	cmp	DWORD PTR _pdwDocHostFlags$[ebp], 0
	jne	SHORT $L212510
	push	OFFSET FLAT:??_C@_0BF@IJHKDPOI@pdwDocHostFlags?5?$CB?$DN?50?$AA@
	push	0
	push	1371					; 0000055bH
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212510
	int	3
$L212510:

; 1372 : 		if (pdwDocHostFlags == NULL)

	cmp	DWORD PTR _pdwDocHostFlags$[ebp], 0
	jne	SHORT $L150615

; 1373 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L150612
$L150615:

; 1374 : 
; 1375 : 		*pdwDocHostFlags = m_dwDocHostFlags;

	mov	ecx, DWORD PTR _pdwDocHostFlags$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+148]
	mov	DWORD PTR [ecx], eax

; 1376 : 		return S_OK;

	xor	eax, eax
$L150612:

; 1377 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?get_DocHostFlags@CAxHostWindow@ATL@@UAGJPAK@Z ENDP	; ATL::CAxHostWindow::get_DocHostFlags
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?put_DocHostDoubleClickFlags@CAxHostWindow@ATL@@UAGJK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_dwDocHostDoubleClickFlags$ = 12			; size = 4
?put_DocHostDoubleClickFlags@CAxHostWindow@ATL@@UAGJK@Z PROC NEAR ; ATL::CAxHostWindow::put_DocHostDoubleClickFlags, COMDAT

; 1379 : 	{

	push	ebp
	mov	ebp, esp

; 1380 : 		m_dwDocHostDoubleClickFlags = dwDocHostDoubleClickFlags;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _dwDocHostDoubleClickFlags$[ebp]
	mov	DWORD PTR [eax+152], ecx

; 1381 : 		return S_OK;

	xor	eax, eax

; 1382 : 	}

	pop	ebp
	ret	8
?put_DocHostDoubleClickFlags@CAxHostWindow@ATL@@UAGJK@Z ENDP ; ATL::CAxHostWindow::put_DocHostDoubleClickFlags
_TEXT	ENDS
PUBLIC	??_C@_0CA@LFBHCFDK@pdwDocHostDoubleClickFlags?5?$CB?$DN?50?$AA@ ; `string'
;	COMDAT ??_C@_0CA@LFBHCFDK@pdwDocHostDoubleClickFlags?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0CA@LFBHCFDK@pdwDocHostDoubleClickFlags?5?$CB?$DN?50?$AA@ DB 'pdwDo'
	DB	'cHostDoubleClickFlags != 0', 00H		; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?get_DocHostDoubleClickFlags@CAxHostWindow@ATL@@UAGJPAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pdwDocHostDoubleClickFlags$ = 12			; size = 4
?get_DocHostDoubleClickFlags@CAxHostWindow@ATL@@UAGJPAK@Z PROC NEAR ; ATL::CAxHostWindow::get_DocHostDoubleClickFlags, COMDAT

; 1384 : 	{

	push	ebp
	mov	ebp, esp

; 1385 : 		ATLASSERT(pdwDocHostDoubleClickFlags != NULL);

	cmp	DWORD PTR _pdwDocHostDoubleClickFlags$[ebp], 0
	jne	SHORT $L212515
	push	OFFSET FLAT:??_C@_0CA@LFBHCFDK@pdwDocHostDoubleClickFlags?5?$CB?$DN?50?$AA@
	push	0
	push	1385					; 00000569H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212515
	int	3
$L212515:

; 1386 : 		if (pdwDocHostDoubleClickFlags == NULL)

	cmp	DWORD PTR _pdwDocHostDoubleClickFlags$[ebp], 0
	jne	SHORT $L150625

; 1387 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L150622
$L150625:

; 1388 : 
; 1389 : 		*pdwDocHostDoubleClickFlags = m_dwDocHostDoubleClickFlags;

	mov	ecx, DWORD PTR _pdwDocHostDoubleClickFlags$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+152]
	mov	DWORD PTR [ecx], eax

; 1390 : 		return S_OK;

	xor	eax, eax
$L150622:

; 1391 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?get_DocHostDoubleClickFlags@CAxHostWindow@ATL@@UAGJPAK@Z ENDP ; ATL::CAxHostWindow::get_DocHostDoubleClickFlags
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?put_AllowContextMenu@CAxHostWindow@ATL@@UAGJF@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bAllowContextMenu$ = 12				; size = 2
?put_AllowContextMenu@CAxHostWindow@ATL@@UAGJF@Z PROC NEAR ; ATL::CAxHostWindow::put_AllowContextMenu, COMDAT

; 1393 : 	{

	push	ebp
	mov	ebp, esp

; 1394 : 		m_bAllowContextMenu = bAllowContextMenu;

	movsx	eax, WORD PTR _bAllowContextMenu$[ebp]
	and	eax, 1
	shl	eax, 5
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	and	edx, -33				; ffffffdfH
	or	edx, eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+124], edx

; 1395 : 		return S_OK;

	xor	eax, eax

; 1396 : 	}

	pop	ebp
	ret	8
?put_AllowContextMenu@CAxHostWindow@ATL@@UAGJF@Z ENDP	; ATL::CAxHostWindow::put_AllowContextMenu
_TEXT	ENDS
PUBLIC	??_C@_0BI@OGJLKJIH@pbAllowContextMenu?5?$CB?$DN?50?$AA@ ; `string'
;	COMDAT ??_C@_0BI@OGJLKJIH@pbAllowContextMenu?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BI@OGJLKJIH@pbAllowContextMenu?5?$CB?$DN?50?$AA@ DB 'pbAllowContex'
	DB	'tMenu != 0', 00H				; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?get_AllowContextMenu@CAxHostWindow@ATL@@UAGJPAF@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pbAllowContextMenu$ = 12				; size = 4
?get_AllowContextMenu@CAxHostWindow@ATL@@UAGJPAF@Z PROC NEAR ; ATL::CAxHostWindow::get_AllowContextMenu, COMDAT

; 1398 : 	{

	push	ebp
	mov	ebp, esp

; 1399 : 		ATLASSERT(pbAllowContextMenu != NULL);

	cmp	DWORD PTR _pbAllowContextMenu$[ebp], 0
	jne	SHORT $L212520
	push	OFFSET FLAT:??_C@_0BI@OGJLKJIH@pbAllowContextMenu?5?$CB?$DN?50?$AA@
	push	0
	push	1399					; 00000577H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212520
	int	3
$L212520:

; 1400 : 		if (pbAllowContextMenu == NULL)

	cmp	DWORD PTR _pbAllowContextMenu$[ebp], 0
	jne	SHORT $L150635

; 1401 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L150632
$L150635:

; 1402 : 
; 1403 : 		*pbAllowContextMenu = m_bAllowContextMenu ? ATL_VARIANT_TRUE : ATL_VARIANT_FALSE;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	shr	edx, 5
	and	edx, 1
	neg	edx
	sbb	edx, edx
	mov	eax, DWORD PTR _pbAllowContextMenu$[ebp]
	mov	WORD PTR [eax], dx

; 1404 : 		return S_OK;

	xor	eax, eax
$L150632:

; 1405 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?get_AllowContextMenu@CAxHostWindow@ATL@@UAGJPAF@Z ENDP	; ATL::CAxHostWindow::get_AllowContextMenu
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?put_AllowShowUI@CAxHostWindow@ATL@@UAGJF@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bAllowShowUI$ = 12					; size = 2
?put_AllowShowUI@CAxHostWindow@ATL@@UAGJF@Z PROC NEAR	; ATL::CAxHostWindow::put_AllowShowUI, COMDAT

; 1407 : 	{

	push	ebp
	mov	ebp, esp

; 1408 : 		m_bAllowShowUI = bAllowShowUI;

	movsx	eax, WORD PTR _bAllowShowUI$[ebp]
	and	eax, 1
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	and	edx, -65				; ffffffbfH
	or	edx, eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+124], edx

; 1409 : 		return S_OK;

	xor	eax, eax

; 1410 : 	}

	pop	ebp
	ret	8
?put_AllowShowUI@CAxHostWindow@ATL@@UAGJF@Z ENDP	; ATL::CAxHostWindow::put_AllowShowUI
_TEXT	ENDS
PUBLIC	??_C@_0BD@CGGOPJAM@pbAllowShowUI?5?$CB?$DN?50?$AA@ ; `string'
;	COMDAT ??_C@_0BD@CGGOPJAM@pbAllowShowUI?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BD@CGGOPJAM@pbAllowShowUI?5?$CB?$DN?50?$AA@ DB 'pbAllowShowUI != 0'
	DB	00H						; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?get_AllowShowUI@CAxHostWindow@ATL@@UAGJPAF@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pbAllowShowUI$ = 12					; size = 4
?get_AllowShowUI@CAxHostWindow@ATL@@UAGJPAF@Z PROC NEAR	; ATL::CAxHostWindow::get_AllowShowUI, COMDAT

; 1412 : 	{

	push	ebp
	mov	ebp, esp

; 1413 : 		ATLASSERT(pbAllowShowUI != NULL);

	cmp	DWORD PTR _pbAllowShowUI$[ebp], 0
	jne	SHORT $L212525
	push	OFFSET FLAT:??_C@_0BD@CGGOPJAM@pbAllowShowUI?5?$CB?$DN?50?$AA@
	push	0
	push	1413					; 00000585H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212525
	int	3
$L212525:

; 1414 : 		if (pbAllowShowUI == NULL)

	cmp	DWORD PTR _pbAllowShowUI$[ebp], 0
	jne	SHORT $L150645

; 1415 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L150642
$L150645:

; 1416 : 
; 1417 : 		*pbAllowShowUI = m_bAllowShowUI ? ATL_VARIANT_TRUE : ATL_VARIANT_FALSE;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	shr	edx, 6
	and	edx, 1
	neg	edx
	sbb	edx, edx
	mov	eax, DWORD PTR _pbAllowShowUI$[ebp]
	mov	WORD PTR [eax], dx

; 1418 : 		return S_OK;

	xor	eax, eax
$L150642:

; 1419 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?get_AllowShowUI@CAxHostWindow@ATL@@UAGJPAF@Z ENDP	; ATL::CAxHostWindow::get_AllowShowUI
_TEXT	ENDS
PUBLIC	??4CComBSTR@ATL@@QAEAAV01@PBG@Z			; ATL::CComBSTR::operator=
; Function compile flags: /Odt /RTCsu
;	COMDAT ?put_OptionKeyPath@CAxHostWindow@ATL@@UAGJPAG@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bstrOptionKeyPath$ = 12				; size = 4
?put_OptionKeyPath@CAxHostWindow@ATL@@UAGJPAG@Z PROC NEAR ; ATL::CAxHostWindow::put_OptionKeyPath, COMDAT

; 1421 : 	{

	push	ebp
	mov	ebp, esp

; 1422 : 		m_bstrOptionKeyPath = bstrOptionKeyPath;;

	mov	eax, DWORD PTR _bstrOptionKeyPath$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	call	??4CComBSTR@ATL@@QAEAAV01@PBG@Z		; ATL::CComBSTR::operator=

; 1423 : 		return S_OK;

	xor	eax, eax

; 1424 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?put_OptionKeyPath@CAxHostWindow@ATL@@UAGJPAG@Z ENDP	; ATL::CAxHostWindow::put_OptionKeyPath
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
_TEXT	ENDS
;	COMDAT ??4CComBSTR@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pSrc$ = 8						; size = 4
??4CComBSTR@ATL@@QAEAAV01@PBG@Z PROC NEAR		; ATL::CComBSTR::operator=, COMDAT
; _this$ = ecx

; 611  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 612  : 		if (pSrc != m_str)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pSrc$[ebp]
	cmp	ecx, DWORD PTR [eax]
	je	SHORT $L81714

; 613  : 		{
; 614  : 			::SysFreeString(m_str);

	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__SysFreeString@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 615  : 			if (pSrc != NULL)

	cmp	DWORD PTR _pSrc$[ebp], 0
	je	SHORT $L81715

; 616  : 			{
; 617  : 				m_str = ::SysAllocString(pSrc);

	mov	esi, esp
	mov	ecx, DWORD PTR _pSrc$[ebp]
	push	ecx
	call	DWORD PTR __imp__SysAllocString@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax

; 618  : 				if (m_str == NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L81716

; 619  : 					AtlThrow(E_OUTOFMEMORY);

	push	-2147024882				; 8007000eH
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L81716:

; 620  : 			}
; 621  : 			else

	jmp	SHORT $L81714
$L81715:

; 622  : 				m_str = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
$L81714:

; 623  : 		}
; 624  : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]
$L212529:

; 625  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CComBSTR@ATL@@QAEAAV01@PBG@Z ENDP			; ATL::CComBSTR::operator=
_TEXT	ENDS
PUBLIC	??_C@_0BI@IKNLNBPD@pbstrOptionKeyPath?5?$CB?$DN?50?$AA@ ; `string'
;	COMDAT ??_C@_0BI@IKNLNBPD@pbstrOptionKeyPath?5?$CB?$DN?50?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
CONST	SEGMENT
??_C@_0BI@IKNLNBPD@pbstrOptionKeyPath?5?$CB?$DN?50?$AA@ DB 'pbstrOptionKe'
	DB	'yPath != 0', 00H				; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?get_OptionKeyPath@CAxHostWindow@ATL@@UAGJPAPAG@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pbstrOptionKeyPath$ = 12				; size = 4
?get_OptionKeyPath@CAxHostWindow@ATL@@UAGJPAPAG@Z PROC NEAR ; ATL::CAxHostWindow::get_OptionKeyPath, COMDAT

; 1426 : 	{

	push	ebp
	mov	ebp, esp

; 1427 : 		ATLASSERT(pbstrOptionKeyPath != NULL);

	cmp	DWORD PTR _pbstrOptionKeyPath$[ebp], 0
	jne	SHORT $L212532
	push	OFFSET FLAT:??_C@_0BI@IKNLNBPD@pbstrOptionKeyPath?5?$CB?$DN?50?$AA@
	push	0
	push	1427					; 00000593H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212532
	int	3
$L212532:

; 1428 : 		if (pbstrOptionKeyPath == NULL)

	cmp	DWORD PTR _pbstrOptionKeyPath$[ebp], 0
	jne	SHORT $L150655

; 1429 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L150652
$L150655:

; 1430 : 
; 1431 : 		*pbstrOptionKeyPath = m_bstrOptionKeyPath;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	call	??BCComBSTR@ATL@@QBEPAGXZ		; ATL::CComBSTR::operator unsigned short *
	mov	ecx, DWORD PTR _pbstrOptionKeyPath$[ebp]
	mov	DWORD PTR [ecx], eax

; 1432 : 		return S_OK;

	xor	eax, eax
$L150652:

; 1433 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?get_OptionKeyPath@CAxHostWindow@ATL@@UAGJPAPAG@Z ENDP	; ATL::CAxHostWindow::get_OptionKeyPath
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?SetAmbientDispatch@CAxHostWindow@ATL@@UAGJPAUIDispatch@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pDispatch$ = 12					; size = 4
?SetAmbientDispatch@CAxHostWindow@ATL@@UAGJPAUIDispatch@@@Z PROC NEAR ; ATL::CAxHostWindow::SetAmbientDispatch, COMDAT

; 1436 : 	{

	push	ebp
	mov	ebp, esp

; 1437 : 		m_spAmbientDispatch = pDispatch;

	mov	eax, DWORD PTR _pDispatch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??4?$CComPtr@UIDispatch@@@ATL@@QAEPAUIDispatch@@PAU2@@Z ; ATL::CComPtr<IDispatch>::operator=

; 1438 : 		return S_OK;

	xor	eax, eax

; 1439 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?SetAmbientDispatch@CAxHostWindow@ATL@@UAGJPAUIDispatch@@@Z ENDP ; ATL::CAxHostWindow::SetAmbientDispatch
_TEXT	ENDS
PUBLIC	??_C@_0BE@MNNNBAEJ@No?5ServiceProvider?$CB?$AA@	; `string'
PUBLIC	??_C@_0BN@CCGAKCJM@?$CBhr?5?$CG?$CG?5?$CCNo?5ServiceProvider?$CB?$CC?$AA@ ; `string'
PUBLIC	??I?$CComPtrBase@UIServiceProvider@@@ATL@@QAEPAPAUIServiceProvider@@XZ ; ATL::CComPtrBase<IServiceProvider>::operator&
PUBLIC	?Release@?$CComPtrBase@UIServiceProvider@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IServiceProvider>::Release
PUBLIC	?SetSite@?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@UAGJPAUIUnknown@@@Z ; ATL::IObjectWithSiteImpl<ATL::CAxHostWindow>::SetSite
;	COMDAT ??_C@_0BE@MNNNBAEJ@No?5ServiceProvider?$CB?$AA@
CONST	SEGMENT
??_C@_0BE@MNNNBAEJ@No?5ServiceProvider?$CB?$AA@ DB 'No ServiceProvider!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@CCGAKCJM@?$CBhr?5?$CG?$CG?5?$CCNo?5ServiceProvider?$CB?$CC?$AA@
CONST	SEGMENT
??_C@_0BN@CCGAKCJM@?$CBhr?5?$CG?$CG?5?$CCNo?5ServiceProvider?$CB?$CC?$AA@ DB '!'
	DB	'hr && "No ServiceProvider!"', 00H		; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?SetSite@CAxHostWindow@ATL@@UAGJPAUIUnknown@@@Z
_TEXT	SEGMENT
tv85 = -8						; size = 4
_hr$ = -4						; size = 4
_this$ = 8						; size = 4
_pUnkSite$ = 12						; size = 4
?SetSite@CAxHostWindow@ATL@@UAGJPAUIUnknown@@@Z PROC NEAR ; ATL::CAxHostWindow::SetSite, COMDAT

; 1443 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1444 : 		HRESULT hr = IObjectWithSiteImpl<CAxHostWindow>::SetSite(pUnkSite);

	mov	eax, DWORD PTR _pUnkSite$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?SetSite@?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@UAGJPAUIUnknown@@@Z ; ATL::IObjectWithSiteImpl<ATL::CAxHostWindow>::SetSite
	mov	DWORD PTR _hr$[ebp], eax

; 1445 : 
; 1446 : 		if (SUCCEEDED(hr) && m_spUnkSite)

	cmp	DWORD PTR _hr$[ebp], 0
	setge	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $L150665
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
	test	eax, eax
	je	SHORT $L150665

; 1447 : 		{
; 1448 : 			// Look for "outer" IServiceProvider
; 1449 : 			hr = m_spUnkSite->QueryInterface(__uuidof(IServiceProvider), (void**)&m_spServices);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ ; ATL::CComPtrBase<IUnknown>::operator->
	mov	DWORD PTR tv85[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	??I?$CComPtrBase@UIServiceProvider@@@ATL@@QAEPAPAUIServiceProvider@@XZ ; ATL::CComPtrBase<IServiceProvider>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET FLAT:__GUID_6d5140c1_7436_11ce_8034_00aa006009fa
	mov	ecx, DWORD PTR tv85[ebp]
	push	ecx
	mov	edx, DWORD PTR tv85[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 1450 : 			ATLASSERT( !hr && "No ServiceProvider!" );

	cmp	DWORD PTR _hr$[ebp], 0
	jne	SHORT $L212537
	mov	ecx, OFFSET FLAT:??_C@_0BE@MNNNBAEJ@No?5ServiceProvider?$CB?$AA@
	test	ecx, ecx
	jne	SHORT $L150665
$L212537:
	push	OFFSET FLAT:??_C@_0BN@CCGAKCJM@?$CBhr?5?$CG?$CG?5?$CCNo?5ServiceProvider?$CB?$CC?$AA@
	push	0
	push	1450					; 000005aaH
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L150665
	int	3
$L150665:

; 1451 : 		}
; 1452 : 
; 1453 : 		if (pUnkSite == NULL)

	cmp	DWORD PTR _pUnkSite$[ebp], 0
	jne	SHORT $L150670

; 1454 : 			m_spServices.Release();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	call	?Release@?$CComPtrBase@UIServiceProvider@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IServiceProvider>::Release
$L150670:

; 1455 : 
; 1456 : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 1457 : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetSite@CAxHostWindow@ATL@@UAGJPAUIUnknown@@@Z ENDP	; ATL::CAxHostWindow::SetSite
_TEXT	ENDS
PUBLIC	??_C@_0BL@CNPLMFBE@IOleClientSite?3?3SaveObject?$AA@ ; `string'
PUBLIC	??_C@_0BK@HFBNDALM@ATL?3?5?$CFs?5not?5implemented?4?6?$AA@ ; `string'
EXTRN	?atlTraceNotImpl@ATL@@3VCTraceCategory@1@A:DWORD ; ATL::atlTraceNotImpl
;	COMDAT ??_C@_0BL@CNPLMFBE@IOleClientSite?3?3SaveObject?$AA@
CONST	SEGMENT
??_C@_0BL@CNPLMFBE@IOleClientSite?3?3SaveObject?$AA@ DB 'IOleClientSite::'
	DB	'SaveObject', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HFBNDALM@ATL?3?5?$CFs?5not?5implemented?4?6?$AA@
CONST	SEGMENT
??_C@_0BK@HFBNDALM@ATL?3?5?$CFs?5not?5implemented?4?6?$AA@ DB 'ATL: %s no'
	DB	't implemented.', 0aH, 00H			; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?SaveObject@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT
$T212541 = -8						; size = 8
_this$ = 8						; size = 4
?SaveObject@CAxHostWindow@ATL@@UAGJXZ PROC NEAR		; ATL::CAxHostWindow::SaveObject, COMDAT

; 1461 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1462 : 		ATLTRACENOTIMPL(_T("IOleClientSite::SaveObject"));

	push	OFFSET FLAT:??_C@_0BL@CNPLMFBE@IOleClientSite?3?3SaveObject?$AA@
	push	OFFSET FLAT:??_C@_0BK@HFBNDALM@ATL?3?5?$CFs?5not?5implemented?4?6?$AA@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceNotImpl@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceNotImpl
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	1462					; 000005b6H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T212541[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H
	mov	eax, -2147467263			; 80004001H

; 1463 : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SaveObject@CAxHostWindow@ATL@@UAGJXZ ENDP		; ATL::CAxHostWindow::SaveObject
_TEXT	ENDS
PUBLIC	??_C@_0BL@HDINKMHC@IOleClientSite?3?3GetMoniker?$AA@ ; `string'
;	COMDAT ??_C@_0BL@HDINKMHC@IOleClientSite?3?3GetMoniker?$AA@
CONST	SEGMENT
??_C@_0BL@HDINKMHC@IOleClientSite?3?3GetMoniker?$AA@ DB 'IOleClientSite::'
	DB	'GetMoniker', 00H				; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?GetMoniker@CAxHostWindow@ATL@@UAGJKKPAPAUIMoniker@@@Z
_TEXT	SEGMENT
$T212544 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
?GetMoniker@CAxHostWindow@ATL@@UAGJKKPAPAUIMoniker@@@Z PROC NEAR ; ATL::CAxHostWindow::GetMoniker, COMDAT

; 1465 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1466 : 		ATLTRACENOTIMPL(_T("IOleClientSite::GetMoniker"));

	push	OFFSET FLAT:??_C@_0BL@HDINKMHC@IOleClientSite?3?3GetMoniker?$AA@
	push	OFFSET FLAT:??_C@_0BK@HFBNDALM@ATL?3?5?$CFs?5not?5implemented?4?6?$AA@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceNotImpl@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceNotImpl
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	1466					; 000005baH
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T212544[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H
	mov	eax, -2147467263			; 80004001H

; 1467 : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetMoniker@CAxHostWindow@ATL@@UAGJKKPAPAUIMoniker@@@Z ENDP ; ATL::CAxHostWindow::GetMoniker
_TEXT	ENDS
PUBLIC	??_C@_0BO@KEMGAJPK@IOleClientSite?3?3GetContainer?6?$AA@ ; `string'
PUBLIC	??_C@_0BB@IKOGDFNC@ppContainer?5?$CB?$DN?50?$AA@ ; `string'
;	COMDAT ??_C@_0BO@KEMGAJPK@IOleClientSite?3?3GetContainer?6?$AA@
CONST	SEGMENT
??_C@_0BO@KEMGAJPK@IOleClientSite?3?3GetContainer?6?$AA@ DB 'IOleClientSi'
	DB	'te::GetContainer', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IKOGDFNC@ppContainer?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BB@IKOGDFNC@ppContainer?5?$CB?$DN?50?$AA@ DB 'ppContainer != 0', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?GetContainer@CAxHostWindow@ATL@@UAGJPAPAUIOleContainer@@@Z
_TEXT	SEGMENT
tv95 = -16						; size = 4
$T212547 = -12						; size = 8
_hr$ = -4						; size = 4
_this$ = 8						; size = 4
_ppContainer$ = 12					; size = 4
?GetContainer@CAxHostWindow@ATL@@UAGJPAPAUIOleContainer@@@Z PROC NEAR ; ATL::CAxHostWindow::GetContainer, COMDAT

; 1469 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 1470 : 		ATLTRACE(atlTraceHosting, 2, _T("IOleClientSite::GetContainer\n"));

	push	OFFSET FLAT:??_C@_0BO@KEMGAJPK@IOleClientSite?3?3GetContainer?6?$AA@
	push	2
	mov	ecx, OFFSET FLAT:?atlTraceHosting@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceHosting
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	1470					; 000005beH
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T212547[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 16					; 00000010H

; 1471 : 		ATLASSERT(ppContainer != NULL);

	cmp	DWORD PTR _ppContainer$[ebp], 0
	jne	SHORT $L212548
	push	OFFSET FLAT:??_C@_0BB@IKOGDFNC@ppContainer?5?$CB?$DN?50?$AA@
	push	0
	push	1471					; 000005bfH
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212548
	int	3
$L212548:

; 1472 : 
; 1473 : 		HRESULT hr = E_POINTER;

	mov	DWORD PTR _hr$[ebp], -2147467261	; 80004003H

; 1474 : 		if (ppContainer)

	cmp	DWORD PTR _ppContainer$[ebp], 0
	je	SHORT $L150689

; 1475 : 		{
; 1476 : 			hr = E_NOTIMPL;

	mov	DWORD PTR _hr$[ebp], -2147467263	; 80004001H

; 1477 : 			(*ppContainer) = NULL;

	mov	ecx, DWORD PTR _ppContainer$[ebp]
	mov	DWORD PTR [ecx], 0

; 1478 : 			if (m_spUnkSite)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
	test	eax, eax
	je	SHORT $L150691

; 1479 : 				hr = m_spUnkSite->QueryInterface(__uuidof(IOleContainer), (void**)ppContainer);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ ; ATL::CComPtrBase<IUnknown>::operator->
	mov	DWORD PTR tv95[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR _ppContainer$[ebp]
	push	edx
	push	OFFSET FLAT:__GUID_0000011b_0000_0000_c000_000000000046
	mov	eax, DWORD PTR tv95[ebp]
	push	eax
	mov	ecx, DWORD PTR tv95[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$L150691:

; 1480 : 			if (FAILED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L150689

; 1481 : 				hr = QueryInterface(__uuidof(IOleContainer), (void**)ppContainer);

	mov	esi, esp
	mov	eax, DWORD PTR _ppContainer$[ebp]
	push	eax
	push	OFFSET FLAT:__GUID_0000011b_0000_0000_c000_000000000046
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx-4]
	push	ecx
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$L150689:

; 1482 : 		}
; 1483 : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 1484 : 	}

	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetContainer@CAxHostWindow@ATL@@UAGJPAPAUIOleContainer@@@Z ENDP ; ATL::CAxHostWindow::GetContainer
_TEXT	ENDS
PUBLIC	?GetDC@CWindow@ATL@@QAEPAUHDC__@@XZ		; ATL::CWindow::GetDC
PUBLIC	?ReleaseDC@CWindow@ATL@@QAEHPAUHDC__@@@Z	; ATL::CWindow::ReleaseDC
PUBLIC	??_C@_0BN@FMNOCGEC@IOleClientSite?3?3ShowObject?$AN?6?$AA@ ; `string'
;	COMDAT ??_C@_0BN@FMNOCGEC@IOleClientSite?3?3ShowObject?$AN?6?$AA@
CONST	SEGMENT
??_C@_0BN@FMNOCGEC@IOleClientSite?3?3ShowObject?$AN?6?$AA@ DB 'IOleClient'
	DB	'Site::ShowObject', 0dH, 0aH, 00H		; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?ShowObject@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT
tv91 = -16						; size = 4
$T212551 = -12						; size = 8
_hdc$ = -4						; size = 4
_this$ = 8						; size = 4
?ShowObject@CAxHostWindow@ATL@@UAGJXZ PROC NEAR		; ATL::CAxHostWindow::ShowObject, COMDAT

; 1486 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 1487 : 		ATLTRACE(atlTraceHosting, 2, _T("IOleClientSite::ShowObject\r\n"));

	push	OFFSET FLAT:??_C@_0BN@FMNOCGEC@IOleClientSite?3?3ShowObject?$AN?6?$AA@
	push	2
	mov	ecx, OFFSET FLAT:?atlTraceHosting@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceHosting
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	1487					; 000005cfH
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T212551[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 16					; 00000010H

; 1488 : 
; 1489 : 		HDC hdc = CWindowImpl<CAxHostWindow>::GetDC();

	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 36					; 00000024H
	call	?GetDC@CWindow@ATL@@QAEPAUHDC__@@XZ	; ATL::CWindow::GetDC
	mov	DWORD PTR _hdc$[ebp], eax

; 1490 : 		if (hdc == NULL)

	cmp	DWORD PTR _hdc$[ebp], 0
	jne	SHORT $L150704

; 1491 : 			return E_FAIL;

	mov	eax, -2147467259			; 80004005H
	jmp	SHORT $L150697
$L150704:

; 1492 : 		if (m_spViewObject)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??B?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAUIViewObjectEx@@XZ ; ATL::CComPtrBase<IViewObjectEx>::operator IViewObjectEx *
	test	eax, eax
	je	SHORT $L150706

; 1493 : 			m_spViewObject->Draw(DVASPECT_CONTENT, -1, NULL, NULL, NULL, hdc, (RECTL*)&m_rcPos, (RECTL*)&m_rcPos, NULL, NULL); 

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??C?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIViewObjectEx@@@1@XZ ; ATL::CComPtrBase<IViewObjectEx>::operator->
	mov	DWORD PTR tv91[ebp], eax
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 140				; 0000008cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	push	ecx
	mov	edx, DWORD PTR _hdc$[ebp]
	push	edx
	push	0
	push	0
	push	0
	push	-1
	push	1
	mov	eax, DWORD PTR tv91[ebp]
	push	eax
	mov	ecx, DWORD PTR tv91[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L150706:

; 1494 : 		CWindowImpl<CAxHostWindow>::ReleaseDC(hdc);

	mov	eax, DWORD PTR _hdc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 36					; 00000024H
	call	?ReleaseDC@CWindow@ATL@@QAEHPAUHDC__@@@Z ; ATL::CWindow::ReleaseDC

; 1495 : 		return S_OK;

	xor	eax, eax
$L150697:

; 1496 : 	}

	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ShowObject@CAxHostWindow@ATL@@UAGJXZ ENDP		; ATL::CAxHostWindow::ShowObject
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
_TEXT	ENDS
;	COMDAT ?GetDC@CWindow@ATL@@QAEPAUHDC__@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDC@CWindow@ATL@@QAEPAUHDC__@@XZ PROC NEAR		; ATL::CWindow::GetDC, COMDAT
; _this$ = ecx

; 1019 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1020 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L212554
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	1020					; 000003fcH
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212554
	int	3
$L212554:

; 1021 : 		return ::GetDC(m_hWnd);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__GetDC@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1022 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDC@CWindow@ATL@@QAEPAUHDC__@@XZ ENDP		; ATL::CWindow::GetDC
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?ReleaseDC@CWindow@ATL@@QAEHPAUHDC__@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hDC$ = 8						; size = 4
?ReleaseDC@CWindow@ATL@@QAEHPAUHDC__@@@Z PROC NEAR	; ATL::CWindow::ReleaseDC, COMDAT
; _this$ = ecx

; 1031 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1032 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L212557
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	1032					; 00000408H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212557
	int	3
$L212557:

; 1033 : 		return ::ReleaseDC(m_hWnd, hDC);

	mov	esi, esp
	mov	eax, DWORD PTR _hDC$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__ReleaseDC@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1034 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ReleaseDC@CWindow@ATL@@QAEHPAUHDC__@@@Z ENDP		; ATL::CWindow::ReleaseDC
_TEXT	ENDS
PUBLIC	??_C@_0BN@BIBMKNOD@IOleClientSite?3?3OnShowWindow?$AA@ ; `string'
;	COMDAT ??_C@_0BN@BIBMKNOD@IOleClientSite?3?3OnShowWindow?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
CONST	SEGMENT
??_C@_0BN@BIBMKNOD@IOleClientSite?3?3OnShowWindow?$AA@ DB 'IOleClientSite'
	DB	'::OnShowWindow', 00H			; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?OnShowWindow@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT
$T212560 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?OnShowWindow@CAxHostWindow@ATL@@UAGJH@Z PROC NEAR	; ATL::CAxHostWindow::OnShowWindow, COMDAT

; 1498 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1499 : 		ATLTRACENOTIMPL(_T("IOleClientSite::OnShowWindow"));

	push	OFFSET FLAT:??_C@_0BN@BIBMKNOD@IOleClientSite?3?3OnShowWindow?$AA@
	push	OFFSET FLAT:??_C@_0BK@HFBNDALM@ATL?3?5?$CFs?5not?5implemented?4?6?$AA@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceNotImpl@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceNotImpl
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	1499					; 000005dbH
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T212560[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H
	mov	eax, -2147467263			; 80004001H

; 1500 : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?OnShowWindow@CAxHostWindow@ATL@@UAGJH@Z ENDP		; ATL::CAxHostWindow::OnShowWindow
_TEXT	ENDS
PUBLIC	??_C@_0CH@INFDHCMD@IOleClientSite?3?3RequestNewObject@ ; `string'
;	COMDAT ??_C@_0CH@INFDHCMD@IOleClientSite?3?3RequestNewObject@
CONST	SEGMENT
??_C@_0CH@INFDHCMD@IOleClientSite?3?3RequestNewObject@ DB 'IOleClientSite'
	DB	'::RequestNewObjectLayout', 00H		; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?RequestNewObjectLayout@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT
$T212563 = -8						; size = 8
_this$ = 8						; size = 4
?RequestNewObjectLayout@CAxHostWindow@ATL@@UAGJXZ PROC NEAR ; ATL::CAxHostWindow::RequestNewObjectLayout, COMDAT

; 1502 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1503 : 		ATLTRACENOTIMPL(_T("IOleClientSite::RequestNewObjectLayout"));

	push	OFFSET FLAT:??_C@_0CH@INFDHCMD@IOleClientSite?3?3RequestNewObject@
	push	OFFSET FLAT:??_C@_0BK@HFBNDALM@ATL?3?5?$CFs?5not?5implemented?4?6?$AA@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceNotImpl@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceNotImpl
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	1503					; 000005dfH
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T212563[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H
	mov	eax, -2147467263			; 80004001H

; 1504 : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RequestNewObjectLayout@CAxHostWindow@ATL@@UAGJXZ ENDP	; ATL::CAxHostWindow::RequestNewObjectLayout
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?GetWindow@CAxHostWindow@ATL@@UAGJPAPAUHWND__@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_phwnd$ = 12						; size = 4
?GetWindow@CAxHostWindow@ATL@@UAGJPAPAUHWND__@@@Z PROC NEAR ; ATL::CAxHostWindow::GetWindow, COMDAT

; 1508 : 	{

	push	ebp
	mov	ebp, esp

; 1509 : 		*phwnd = m_hWnd;

	mov	eax, DWORD PTR _phwnd$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-40]
	mov	DWORD PTR [eax], edx

; 1510 : 		return S_OK;

	xor	eax, eax

; 1511 : 	}

	pop	ebp
	ret	8
?GetWindow@CAxHostWindow@ATL@@UAGJPAPAUHWND__@@@Z ENDP	; ATL::CAxHostWindow::GetWindow
_TEXT	ENDS
PUBLIC	??_C@_0CG@NBALHJKL@IOleInPlaceSite?3?3ContextSensitiv@ ; `string'
;	COMDAT ??_C@_0CG@NBALHJKL@IOleInPlaceSite?3?3ContextSensitiv@
CONST	SEGMENT
??_C@_0CG@NBALHJKL@IOleInPlaceSite?3?3ContextSensitiv@ DB 'IOleInPlaceSit'
	DB	'e::ContextSensitiveHelp', 00H		; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?ContextSensitiveHelp@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT
$T212568 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?ContextSensitiveHelp@CAxHostWindow@ATL@@UAGJH@Z PROC NEAR ; ATL::CAxHostWindow::ContextSensitiveHelp, COMDAT

; 1513 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1514 : 		ATLTRACENOTIMPL(_T("IOleInPlaceSite::ContextSensitiveHelp"));

	push	OFFSET FLAT:??_C@_0CG@NBALHJKL@IOleInPlaceSite?3?3ContextSensitiv@
	push	OFFSET FLAT:??_C@_0BK@HFBNDALM@ATL?3?5?$CFs?5not?5implemented?4?6?$AA@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceNotImpl@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceNotImpl
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	1514					; 000005eaH
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T212568[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H
	mov	eax, -2147467263			; 80004001H

; 1515 : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ContextSensitiveHelp@CAxHostWindow@ATL@@UAGJH@Z ENDP	; ATL::CAxHostWindow::ContextSensitiveHelp
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?CanInPlaceActivate@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?CanInPlaceActivate@CAxHostWindow@ATL@@UAGJXZ PROC NEAR	; ATL::CAxHostWindow::CanInPlaceActivate, COMDAT

; 1517 : 	{

	push	ebp
	mov	ebp, esp

; 1518 : 		return S_OK;

	xor	eax, eax

; 1519 : 	}

	pop	ebp
	ret	4
?CanInPlaceActivate@CAxHostWindow@ATL@@UAGJXZ ENDP	; ATL::CAxHostWindow::CanInPlaceActivate
_TEXT	ENDS
PUBLIC	??_C@_0BG@DFBPOHKH@m_bInPlaceActive?5?$DN?$DN?50?$AA@ ; `string'
PUBLIC	??_C@_0CB@FKHKLPMP@m_spInPlaceObjectWindowless?5?$DN?$DN?50@ ; `string'
PUBLIC	__GUID_00000113_0000_0000_c000_000000000046
PUBLIC	??I?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QAEPAPAUIOleInPlaceObjectWindowless@@XZ ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator&
PUBLIC	??8?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBE_NPAUIOleInPlaceObjectWindowless@@@Z ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator==
EXTRN	__imp__OleLockRunning@12:NEAR
;	COMDAT ??_C@_0BG@DFBPOHKH@m_bInPlaceActive?5?$DN?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BG@DFBPOHKH@m_bInPlaceActive?5?$DN?$DN?50?$AA@ DB 'm_bInPlaceActiv'
	DB	'e == 0', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@FKHKLPMP@m_spInPlaceObjectWindowless?5?$DN?$DN?50@
CONST	SEGMENT
??_C@_0CB@FKHKLPMP@m_spInPlaceObjectWindowless?5?$DN?$DN?50@ DB 'm_spInPl'
	DB	'aceObjectWindowless == 0', 00H		; `string'
CONST	ENDS
;	COMDAT __GUID_00000113_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000113_0000_0000_c000_000000000046 DD 0113H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?OnInPlaceActivate@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT
tv147 = -4						; size = 4
_this$ = 8						; size = 4
?OnInPlaceActivate@CAxHostWindow@ATL@@UAGJXZ PROC NEAR	; ATL::CAxHostWindow::OnInPlaceActivate, COMDAT

; 1521 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1522 : 		// should only be called once the first time control is inplace-activated
; 1523 : 		ATLASSERT(m_bInPlaceActive == FALSE);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	and	ecx, 1
	je	SHORT $L212573
	push	OFFSET FLAT:??_C@_0BG@DFBPOHKH@m_bInPlaceActive?5?$DN?$DN?50?$AA@
	push	0
	push	1523					; 000005f3H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212573
	int	3
$L212573:

; 1524 : 		ATLASSERT(m_spInPlaceObjectWindowless == NULL);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??8?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBE_NPAUIOleInPlaceObjectWindowless@@@Z ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator==
	movzx	eax, al
	test	eax, eax
	jne	SHORT $L212574
	push	OFFSET FLAT:??_C@_0CB@FKHKLPMP@m_spInPlaceObjectWindowless?5?$DN?$DN?50@
	push	0
	push	1524					; 000005f4H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212574
	int	3
$L212574:

; 1525 : 
; 1526 : 		m_bInPlaceActive = TRUE;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+108]
	or	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+108], eax

; 1527 : 		OleLockRunning(m_spOleObject, TRUE, FALSE);

	mov	esi, esp
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??B?$CComPtrBase@UIOleObject@@@ATL@@QBEPAUIOleObject@@XZ ; ATL::CComPtrBase<IOleObject>::operator IOleObject *
	push	eax
	call	DWORD PTR __imp__OleLockRunning@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1528 : 		m_bWindowless = FALSE;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+108]
	and	eax, -9					; fffffff7H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+108], eax

; 1529 : 		m_spOleObject->QueryInterface(__uuidof(IOleInPlaceObject), (void**) &m_spInPlaceObjectWindowless);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
	mov	DWORD PTR tv147[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??I?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QAEPAPAUIOleInPlaceObjectWindowless@@XZ ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET FLAT:__GUID_00000113_0000_0000_c000_000000000046
	mov	edx, DWORD PTR tv147[ebp]
	push	edx
	mov	eax, DWORD PTR tv147[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1530 : 		return S_OK;

	xor	eax, eax

; 1531 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnInPlaceActivate@CAxHostWindow@ATL@@UAGJXZ ENDP	; ATL::CAxHostWindow::OnInPlaceActivate
_TEXT	ENDS
PUBLIC	??_C@_0BP@BDGDJPEF@IOleInPlaceSite?3?3OnUIActivate?6?$AA@ ; `string'
;	COMDAT ??_C@_0BP@BDGDJPEF@IOleInPlaceSite?3?3OnUIActivate?6?$AA@
CONST	SEGMENT
??_C@_0BP@BDGDJPEF@IOleInPlaceSite?3?3OnUIActivate?6?$AA@ DB 'IOleInPlace'
	DB	'Site::OnUIActivate', 0aH, 00H		; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?OnUIActivate@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT
$T212577 = -8						; size = 8
_this$ = 8						; size = 4
?OnUIActivate@CAxHostWindow@ATL@@UAGJXZ PROC NEAR	; ATL::CAxHostWindow::OnUIActivate, COMDAT

; 1533 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1534 : 		ATLTRACE(atlTraceHosting, 2, _T("IOleInPlaceSite::OnUIActivate\n"));

	push	OFFSET FLAT:??_C@_0BP@BDGDJPEF@IOleInPlaceSite?3?3OnUIActivate?6?$AA@
	push	2
	mov	ecx, OFFSET FLAT:?atlTraceHosting@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceHosting
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	1534					; 000005feH
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T212577[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 16					; 00000010H

; 1535 : 		m_bUIActive = TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	or	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+108], ecx

; 1536 : 		return S_OK;

	xor	eax, eax

; 1537 : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnUIActivate@CAxHostWindow@ATL@@UAGJXZ ENDP		; ATL::CAxHostWindow::OnUIActivate
_TEXT	ENDS
PUBLIC	??_C@_05LAPONLG@false?$AA@			; `string'
PUBLIC	??B?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBEPAUIOleInPlaceFrame@@XZ ; ATL::CComPtrBase<IOleInPlaceFrame>::operator IOleInPlaceFrame *
PUBLIC	??I?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEPAPAUIOleInPlaceFrame@@XZ ; ATL::CComPtrBase<IOleInPlaceFrame>::operator&
PUBLIC	??7?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBE_NXZ ; ATL::CComPtrBase<IOleInPlaceFrame>::operator!
PUBLIC	?CreateInstance@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@SGJPAPAV12@@Z ; ATL::CComObject<ATL::CAxFrameWindow>::CreateInstance
PUBLIC	?CopyTo@?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEJPAPAUIOleInPlaceFrame@@@Z ; ATL::CComPtrBase<IOleInPlaceFrame>::CopyTo
PUBLIC	??_C@_0BB@OJFGBHML@m_spInPlaceFrame?$AA@	; `string'
PUBLIC	?CreateInstance@?$CComObject@VCAxUIWindow@ATL@@@ATL@@SGJPAPAV12@@Z ; ATL::CComObject<ATL::CAxUIWindow>::CreateInstance
PUBLIC	??_C@_0BE@OHNINIJH@m_spInPlaceUIWindow?$AA@	; `string'
PUBLIC	??B?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBEPAUIOleInPlaceUIWindow@@XZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator IOleInPlaceUIWindow *
PUBLIC	??I?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEPAPAUIOleInPlaceUIWindow@@XZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator&
PUBLIC	??7?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBE_NXZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator!
PUBLIC	?CopyTo@?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEJPAPAUIOleInPlaceUIWindow@@@Z ; ATL::CComPtrBase<IOleInPlaceUIWindow>::CopyTo
PUBLIC	__GUID_00000116_0000_0000_c000_000000000046
PUBLIC	__GUID_00000115_0000_0000_c000_000000000046
EXTRN	__imp__CreateAcceleratorTableA@8:NEAR
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT
??_C@_05LAPONLG@false?$AA@ DB 'false', 00H		; `string'
CONST	ENDS
;	COMDAT __GUID_00000116_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000116_0000_0000_c000_000000000046 DD 0116H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ??_C@_0BB@OJFGBHML@m_spInPlaceFrame?$AA@
CONST	SEGMENT
??_C@_0BB@OJFGBHML@m_spInPlaceFrame?$AA@ DB 'm_spInPlaceFrame', 00H ; `string'
CONST	ENDS
;	COMDAT __GUID_00000115_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000115_0000_0000_c000_000000000046 DD 0115H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ??_C@_0BE@OHNINIJH@m_spInPlaceUIWindow?$AA@
CONST	SEGMENT
??_C@_0BE@OHNINIJH@m_spInPlaceUIWindow?$AA@ DB 'm_spInPlaceUIWindow', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?GetWindowContext@CAxHostWindow@ATL@@UAGJPAPAUIOleInPlaceFrame@@PAPAUIOleInPlaceUIWindow@@PAUtagRECT@@2PAUtagOIFI@@@Z
_TEXT	SEGMENT
$T212583 = -44						; size = 4
_ac$150828 = -36					; size = 6
_pUIWindow$150794 = -20					; size = 4
_pFrameWindow$150759 = -8				; size = 4
_this$ = 8						; size = 4
_ppFrame$ = 12						; size = 4
_ppDoc$ = 16						; size = 4
_lprcPosRect$ = 20					; size = 4
_lprcClipRect$ = 24					; size = 4
_pFrameInfo$ = 28					; size = 4
?GetWindowContext@CAxHostWindow@ATL@@UAGJPAPAUIOleInPlaceFrame@@PAPAUIOleInPlaceUIWindow@@PAUtagRECT@@2PAUtagOIFI@@@Z PROC NEAR ; ATL::CAxHostWindow::GetWindowContext, COMDAT

; 1539 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-44]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1540 : 		if (ppFrame != NULL)

	cmp	DWORD PTR _ppFrame$[ebp], 0
	je	SHORT $L150750

; 1541 : 			*ppFrame = NULL;

	mov	eax, DWORD PTR _ppFrame$[ebp]
	mov	DWORD PTR [eax], 0
$L150750:

; 1542 : 		if (ppDoc != NULL)

	cmp	DWORD PTR _ppDoc$[ebp], 0
	je	SHORT $L150751

; 1543 : 			*ppDoc = NULL;

	mov	ecx, DWORD PTR _ppDoc$[ebp]
	mov	DWORD PTR [ecx], 0
$L150751:

; 1544 : 		if (ppFrame == NULL || ppDoc == NULL || lprcPosRect == NULL || lprcClipRect == NULL)

	cmp	DWORD PTR _ppFrame$[ebp], 0
	je	SHORT $L150753
	cmp	DWORD PTR _ppDoc$[ebp], 0
	je	SHORT $L150753
	cmp	DWORD PTR _lprcPosRect$[ebp], 0
	je	SHORT $L150753
	cmp	DWORD PTR _lprcClipRect$[ebp], 0
	jne	SHORT $L150752
$L150753:

; 1545 : 		{
; 1546 : 			ATLASSERT(false);

	xor	edx, edx
	jne	SHORT $L212580
	push	OFFSET FLAT:??_C@_05LAPONLG@false?$AA@
	push	0
	push	1546					; 0000060aH
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212580
	int	3
$L212580:

; 1547 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	$L150749
$L150752:

; 1548 : 		}
; 1549 : 
; 1550 : 		if (!m_spInPlaceFrame)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??7?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBE_NXZ ; ATL::CComPtrBase<IOleInPlaceFrame>::operator!
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $L150757

; 1551 : 		{
; 1552 : 			CComObject<CAxFrameWindow>* pFrameWindow;
; 1553 : 			CComObject<CAxFrameWindow>::CreateInstance(&pFrameWindow);

	lea	edx, DWORD PTR _pFrameWindow$150759[ebp]
	push	edx
	call	?CreateInstance@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@SGJPAPAV12@@Z ; ATL::CComObject<ATL::CAxFrameWindow>::CreateInstance

; 1554 : 			pFrameWindow->QueryInterface(__uuidof(IOleInPlaceFrame), (void**) &m_spInPlaceFrame);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??I?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEPAPAUIOleInPlaceFrame@@XZ ; ATL::CComPtrBase<IOleInPlaceFrame>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET FLAT:__GUID_00000116_0000_0000_c000_000000000046
	mov	eax, DWORD PTR _pFrameWindow$150759[ebp]
	add	eax, 36					; 00000024H
	mov	ecx, DWORD PTR _pFrameWindow$150759[ebp]
	mov	edx, DWORD PTR [ecx+36]
	push	eax
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1555 : 			ATLASSERT(m_spInPlaceFrame);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??B?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBEPAUIOleInPlaceFrame@@XZ ; ATL::CComPtrBase<IOleInPlaceFrame>::operator IOleInPlaceFrame *
	test	eax, eax
	jne	SHORT $L150757
	push	OFFSET FLAT:??_C@_0BB@OJFGBHML@m_spInPlaceFrame?$AA@
	push	0
	push	1555					; 00000613H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	setne	al
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $L150757
	int	3
$L150757:

; 1556 : 		}
; 1557 : 		if (!m_spInPlaceUIWindow)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??7?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBE_NXZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator!
	movzx	eax, al
	test	eax, eax
	je	SHORT $L150792

; 1558 : 		{
; 1559 : 			CComObject<CAxUIWindow>* pUIWindow;
; 1560 : 			CComObject<CAxUIWindow>::CreateInstance(&pUIWindow);

	lea	ecx, DWORD PTR _pUIWindow$150794[ebp]
	push	ecx
	call	?CreateInstance@?$CComObject@VCAxUIWindow@ATL@@@ATL@@SGJPAPAV12@@Z ; ATL::CComObject<ATL::CAxUIWindow>::CreateInstance

; 1561 : 			pUIWindow->QueryInterface(__uuidof(IOleInPlaceUIWindow), (void**) &m_spInPlaceUIWindow);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??I?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEPAPAUIOleInPlaceUIWindow@@XZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET FLAT:__GUID_00000115_0000_0000_c000_000000000046
	mov	edx, DWORD PTR _pUIWindow$150794[ebp]
	add	edx, 36					; 00000024H
	mov	eax, DWORD PTR _pUIWindow$150794[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	edx
	call	DWORD PTR [ecx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1562 : 			ATLASSERT(m_spInPlaceUIWindow);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??B?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBEPAUIOleInPlaceUIWindow@@XZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator IOleInPlaceUIWindow *
	test	eax, eax
	jne	SHORT $L150792
	push	OFFSET FLAT:??_C@_0BE@OHNINIJH@m_spInPlaceUIWindow?$AA@
	push	0
	push	1562					; 0000061aH
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	setne	dl
	movzx	eax, dl
	test	eax, eax
	jne	SHORT $L150792
	int	3
$L150792:

; 1563 : 		}
; 1564 : 		m_spInPlaceFrame.CopyTo(ppFrame);

	mov	edx, DWORD PTR _ppFrame$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	?CopyTo@?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEJPAPAUIOleInPlaceFrame@@@Z ; ATL::CComPtrBase<IOleInPlaceFrame>::CopyTo

; 1565 : 		m_spInPlaceUIWindow.CopyTo(ppDoc);

	mov	eax, DWORD PTR _ppDoc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	?CopyTo@?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEJPAPAUIOleInPlaceUIWindow@@@Z ; ATL::CComPtrBase<IOleInPlaceUIWindow>::CopyTo

; 1566 : 		GetClientRect(lprcPosRect);

	mov	ecx, DWORD PTR _lprcPosRect$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 40					; 00000028H
	call	?GetClientRect@CWindow@ATL@@QBEHPAUtagRECT@@@Z ; ATL::CWindow::GetClientRect

; 1567 : 		GetClientRect(lprcClipRect);

	mov	edx, DWORD PTR _lprcClipRect$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 40					; 00000028H
	call	?GetClientRect@CWindow@ATL@@QBEHPAUtagRECT@@@Z ; ATL::CWindow::GetClientRect

; 1568 : 
; 1569 : 		if (m_hAccel == NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 0
	jne	SHORT $L150827

; 1570 : 		{
; 1571 : 			ACCEL ac = { 0,0,0 };

	mov	BYTE PTR _ac$150828[ebp], 0
	mov	WORD PTR _ac$150828[ebp+2], 0
	mov	WORD PTR _ac$150828[ebp+4], 0

; 1572 : 			m_hAccel = CreateAcceleratorTable(&ac, 1);

	mov	esi, esp
	push	1
	lea	ecx, DWORD PTR _ac$150828[ebp]
	push	ecx
	call	DWORD PTR __imp__CreateAcceleratorTableA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+152], eax
$L150827:

; 1573 : 		}
; 1574 : 		pFrameInfo->cb = sizeof(OLEINPLACEFRAMEINFO);

	mov	eax, DWORD PTR _pFrameInfo$[ebp]
	mov	DWORD PTR [eax], 20			; 00000014H

; 1575 : 		pFrameInfo->fMDIApp = m_bMDIApp;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	shr	edx, 2
	and	edx, 1
	mov	eax, DWORD PTR _pFrameInfo$[ebp]
	mov	DWORD PTR [eax+4], edx

; 1576 : 		pFrameInfo->hwndFrame = GetParent();

	lea	ecx, DWORD PTR $T212583[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 40					; 00000028H
	call	?GetParent@CWindow@ATL@@QBE?AV12@XZ	; ATL::CWindow::GetParent
	mov	ecx, eax
	call	??BCWindow@ATL@@QBEPAUHWND__@@XZ	; ATL::CWindow::operator HWND__ *
	mov	edx, DWORD PTR _pFrameInfo$[ebp]
	mov	DWORD PTR [edx+8], eax

; 1577 : 		pFrameInfo->haccel = m_hAccel;

	mov	eax, DWORD PTR _pFrameInfo$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+152]
	mov	DWORD PTR [eax+12], edx

; 1578 : 		pFrameInfo->cAccelEntries = (m_hAccel != NULL) ? 1 : 0;

	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+152], 0
	setne	cl
	mov	edx, DWORD PTR _pFrameInfo$[ebp]
	mov	DWORD PTR [edx+16], ecx

; 1579 : 
; 1580 : 		return S_OK;

	xor	eax, eax
$L150749:

; 1581 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212588
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
$L212588:
	DD	3
	DD	$L212587
$L212587:
	DD	-8					; fffffff8H
	DD	4
	DD	$L212584
	DD	-20					; ffffffecH
	DD	4
	DD	$L212585
	DD	-36					; ffffffdcH
	DD	6
	DD	$L212586
$L212586:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	0
$L212585:
	DB	112					; 00000070H
	DB	85					; 00000055H
	DB	73					; 00000049H
	DB	87					; 00000057H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	0
$L212584:
	DB	112					; 00000070H
	DB	70					; 00000046H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	87					; 00000057H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	0
?GetWindowContext@CAxHostWindow@ATL@@UAGJPAPAUIOleInPlaceFrame@@PAPAUIOleInPlaceUIWindow@@PAUtagRECT@@2PAUtagOIFI@@@Z ENDP ; ATL::CAxHostWindow::GetWindowContext
_TEXT	ENDS
PUBLIC	??_C@_0BI@LMFIJFLF@IOleInPlaceSite?3?3Scroll?$AA@ ; `string'
;	COMDAT ??_C@_0BI@LMFIJFLF@IOleInPlaceSite?3?3Scroll?$AA@
CONST	SEGMENT
??_C@_0BI@LMFIJFLF@IOleInPlaceSite?3?3Scroll?$AA@ DB 'IOleInPlaceSite::Sc'
	DB	'roll', 00H					; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?Scroll@CAxHostWindow@ATL@@UAGJUtagSIZE@@@Z
_TEXT	SEGMENT
$T212591 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 8
?Scroll@CAxHostWindow@ATL@@UAGJUtagSIZE@@@Z PROC NEAR	; ATL::CAxHostWindow::Scroll, COMDAT

; 1583 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1584 : 		ATLTRACENOTIMPL(_T("IOleInPlaceSite::Scroll"));

	push	OFFSET FLAT:??_C@_0BI@LMFIJFLF@IOleInPlaceSite?3?3Scroll?$AA@
	push	OFFSET FLAT:??_C@_0BK@HFBNDALM@ATL?3?5?$CFs?5not?5implemented?4?6?$AA@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceNotImpl@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceNotImpl
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	1584					; 00000630H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T212591[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H
	mov	eax, -2147467263			; 80004001H

; 1585 : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Scroll@CAxHostWindow@ATL@@UAGJUtagSIZE@@@Z ENDP	; ATL::CAxHostWindow::Scroll
_TEXT	ENDS
PUBLIC	??_C@_0CB@DPJACDKI@IOleInPlaceSite?3?3OnUIDeactivate?6@ ; `string'
;	COMDAT ??_C@_0CB@DPJACDKI@IOleInPlaceSite?3?3OnUIDeactivate?6@
CONST	SEGMENT
??_C@_0CB@DPJACDKI@IOleInPlaceSite?3?3OnUIDeactivate?6@ DB 'IOleInPlaceSi'
	DB	'te::OnUIDeactivate', 0aH, 00H		; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?OnUIDeactivate@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT
$T212594 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?OnUIDeactivate@CAxHostWindow@ATL@@UAGJH@Z PROC NEAR	; ATL::CAxHostWindow::OnUIDeactivate, COMDAT

; 1587 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1588 : 		ATLTRACE(atlTraceHosting, 2, _T("IOleInPlaceSite::OnUIDeactivate\n"));

	push	OFFSET FLAT:??_C@_0CB@DPJACDKI@IOleInPlaceSite?3?3OnUIDeactivate?6@
	push	2
	mov	ecx, OFFSET FLAT:?atlTraceHosting@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceHosting
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	1588					; 00000634H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T212594[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 16					; 00000010H

; 1589 : 		m_bUIActive = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	and	ecx, -3					; fffffffdH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+108], ecx

; 1590 : 		return S_OK;

	xor	eax, eax

; 1591 : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?OnUIDeactivate@CAxHostWindow@ATL@@UAGJH@Z ENDP		; ATL::CAxHostWindow::OnUIDeactivate
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?OnInPlaceDeactivate@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?OnInPlaceDeactivate@CAxHostWindow@ATL@@UAGJXZ PROC NEAR ; ATL::CAxHostWindow::OnInPlaceDeactivate, COMDAT

; 1593 : 	{

	push	ebp
	mov	ebp, esp

; 1594 : 		m_bInPlaceActive = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	and	ecx, -2					; fffffffeH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+108], ecx

; 1595 : 		m_spInPlaceObjectWindowless.Release();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?Release@?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::Release

; 1596 : 		return S_OK;

	xor	eax, eax

; 1597 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?OnInPlaceDeactivate@CAxHostWindow@ATL@@UAGJXZ ENDP	; ATL::CAxHostWindow::OnInPlaceDeactivate
_TEXT	ENDS
PUBLIC	??_C@_0CC@DHNOFCHL@IOleInPlaceSite?3?3DiscardUndoStat@ ; `string'
;	COMDAT ??_C@_0CC@DHNOFCHL@IOleInPlaceSite?3?3DiscardUndoStat@
CONST	SEGMENT
??_C@_0CC@DHNOFCHL@IOleInPlaceSite?3?3DiscardUndoStat@ DB 'IOleInPlaceSit'
	DB	'e::DiscardUndoState', 00H			; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?DiscardUndoState@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT
$T212599 = -8						; size = 8
_this$ = 8						; size = 4
?DiscardUndoState@CAxHostWindow@ATL@@UAGJXZ PROC NEAR	; ATL::CAxHostWindow::DiscardUndoState, COMDAT

; 1599 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1600 : 		ATLTRACENOTIMPL(_T("IOleInPlaceSite::DiscardUndoState"));

	push	OFFSET FLAT:??_C@_0CC@DHNOFCHL@IOleInPlaceSite?3?3DiscardUndoStat@
	push	OFFSET FLAT:??_C@_0BK@HFBNDALM@ATL?3?5?$CFs?5not?5implemented?4?6?$AA@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceNotImpl@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceNotImpl
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	1600					; 00000640H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T212599[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H
	mov	eax, -2147467263			; 80004001H

; 1601 : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?DiscardUndoState@CAxHostWindow@ATL@@UAGJXZ ENDP	; ATL::CAxHostWindow::DiscardUndoState
_TEXT	ENDS
PUBLIC	??_C@_0CD@HDPLACCC@IOleInPlaceSite?3?3DeactivateAndUn@ ; `string'
;	COMDAT ??_C@_0CD@HDPLACCC@IOleInPlaceSite?3?3DeactivateAndUn@
CONST	SEGMENT
??_C@_0CD@HDPLACCC@IOleInPlaceSite?3?3DeactivateAndUn@ DB 'IOleInPlaceSit'
	DB	'e::DeactivateAndUndo', 00H			; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?DeactivateAndUndo@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT
$T212602 = -8						; size = 8
_this$ = 8						; size = 4
?DeactivateAndUndo@CAxHostWindow@ATL@@UAGJXZ PROC NEAR	; ATL::CAxHostWindow::DeactivateAndUndo, COMDAT

; 1603 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1604 : 		ATLTRACENOTIMPL(_T("IOleInPlaceSite::DeactivateAndUndo"));

	push	OFFSET FLAT:??_C@_0CD@HDPLACCC@IOleInPlaceSite?3?3DeactivateAndUn@
	push	OFFSET FLAT:??_C@_0BK@HFBNDALM@ATL?3?5?$CFs?5not?5implemented?4?6?$AA@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceNotImpl@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceNotImpl
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	1604					; 00000644H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T212602[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H
	mov	eax, -2147467263			; 80004001H

; 1605 : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?DeactivateAndUndo@CAxHostWindow@ATL@@UAGJXZ ENDP	; ATL::CAxHostWindow::DeactivateAndUndo
_TEXT	ENDS
PUBLIC	??_C@_0CB@EMPHOJEH@IOleInPlaceSite?3?3OnPosRectChange@ ; `string'
;	COMDAT ??_C@_0CB@EMPHOJEH@IOleInPlaceSite?3?3OnPosRectChange@
CONST	SEGMENT
??_C@_0CB@EMPHOJEH@IOleInPlaceSite?3?3OnPosRectChange@ DB 'IOleInPlaceSit'
	DB	'e::OnPosRectChange', 00H			; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?OnPosRectChange@CAxHostWindow@ATL@@UAGJPBUtagRECT@@@Z
_TEXT	SEGMENT
$T212605 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?OnPosRectChange@CAxHostWindow@ATL@@UAGJPBUtagRECT@@@Z PROC NEAR ; ATL::CAxHostWindow::OnPosRectChange, COMDAT

; 1607 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1608 : 		ATLTRACENOTIMPL(_T("IOleInPlaceSite::OnPosRectChange"));

	push	OFFSET FLAT:??_C@_0CB@EMPHOJEH@IOleInPlaceSite?3?3OnPosRectChange@
	push	OFFSET FLAT:??_C@_0BK@HFBNDALM@ATL?3?5?$CFs?5not?5implemented?4?6?$AA@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceNotImpl@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceNotImpl
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	1608					; 00000648H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T212605[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H
	mov	eax, -2147467263			; 80004001H

; 1609 : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?OnPosRectChange@CAxHostWindow@ATL@@UAGJPBUtagRECT@@@Z ENDP ; ATL::CAxHostWindow::OnPosRectChange
_TEXT	ENDS
PUBLIC	__GUID_1c2056cc_5ef4_101b_8bc8_00aa003e3b29
;	COMDAT __GUID_1c2056cc_5ef4_101b_8bc8_00aa003e3b29
CONST	SEGMENT
__GUID_1c2056cc_5ef4_101b_8bc8_00aa003e3b29 DD 01c2056ccH
	DW	05ef4H
	DW	0101bH
	DB	08bH
	DB	0c8H
	DB	00H
	DB	0aaH
	DB	00H
	DB	03eH
	DB	03bH
	DB	029H
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?OnInPlaceActivateEx@CAxHostWindow@ATL@@UAGJPAHK@Z
_TEXT	SEGMENT
tv194 = -16						; size = 4
tv172 = -12						; size = 4
tv149 = -8						; size = 4
_hr$ = -4						; size = 4
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
_dwFlags$ = 16						; size = 4
?OnInPlaceActivateEx@CAxHostWindow@ATL@@UAGJPAHK@Z PROC NEAR ; ATL::CAxHostWindow::OnInPlaceActivateEx, COMDAT

; 1613 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 1614 : 		// should only be called once the first time control is inplace-activated
; 1615 : 		ATLASSERT(m_bInPlaceActive == FALSE);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	and	ecx, 1
	je	SHORT $L212608
	push	OFFSET FLAT:??_C@_0BG@DFBPOHKH@m_bInPlaceActive?5?$DN?$DN?50?$AA@
	push	0
	push	1615					; 0000064fH
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212608
	int	3
$L212608:

; 1616 : 		ATLASSERT(m_spInPlaceObjectWindowless == NULL);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??8?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBE_NPAUIOleInPlaceObjectWindowless@@@Z ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator==
	movzx	eax, al
	test	eax, eax
	jne	SHORT $L212609
	push	OFFSET FLAT:??_C@_0CB@FKHKLPMP@m_spInPlaceObjectWindowless?5?$DN?$DN?50@
	push	0
	push	1616					; 00000650H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212609
	int	3
$L212609:

; 1617 : 
; 1618 : 		m_bInPlaceActive = TRUE;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+108]
	or	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+108], eax

; 1619 : 		OleLockRunning(m_spOleObject, TRUE, FALSE);

	mov	esi, esp
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??B?$CComPtrBase@UIOleObject@@@ATL@@QBEPAUIOleObject@@XZ ; ATL::CComPtrBase<IOleObject>::operator IOleObject *
	push	eax
	call	DWORD PTR __imp__OleLockRunning@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1620 : 		HRESULT hr = E_FAIL;

	mov	DWORD PTR _hr$[ebp], -2147467259	; 80004005H

; 1621 : 		if (dwFlags & ACTIVATE_WINDOWLESS)

	mov	edx, DWORD PTR _dwFlags$[ebp]
	and	edx, 1
	je	SHORT $L150866

; 1622 : 		{
; 1623 : 			m_bWindowless = TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	or	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+108], ecx

; 1624 : 			hr = m_spOleObject->QueryInterface(__uuidof(IOleInPlaceObjectWindowless), (void**) &m_spInPlaceObjectWindowless);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
	mov	DWORD PTR tv149[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??I?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QAEPAPAUIOleInPlaceObjectWindowless@@XZ ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET FLAT:__GUID_1c2056cc_5ef4_101b_8bc8_00aa003e3b29
	mov	eax, DWORD PTR tv149[ebp]
	push	eax
	mov	ecx, DWORD PTR tv149[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$L150866:

; 1625 : 		}
; 1626 : 		if (FAILED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L150870

; 1627 : 		{
; 1628 : 			m_bWindowless = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	and	ecx, -9					; fffffff7H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+108], ecx

; 1629 : 			hr = m_spOleObject->QueryInterface(__uuidof(IOleInPlaceObject), (void**) &m_spInPlaceObjectWindowless);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
	mov	DWORD PTR tv172[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??I?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QAEPAPAUIOleInPlaceObjectWindowless@@XZ ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET FLAT:__GUID_00000113_0000_0000_c000_000000000046
	mov	eax, DWORD PTR tv172[ebp]
	push	eax
	mov	ecx, DWORD PTR tv172[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$L150870:

; 1630 : 		}
; 1631 : 		if (m_spInPlaceObjectWindowless)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??B?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBEPAUIOleInPlaceObjectWindowless@@XZ ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator IOleInPlaceObjectWindowless *
	test	eax, eax
	je	SHORT $L150872

; 1632 : 			m_spInPlaceObjectWindowless->SetObjectRects(&m_rcPos, &m_rcPos);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??C?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceObjectWindowless@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator->
	mov	DWORD PTR tv194[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 136				; 00000088H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	push	ecx
	mov	edx, DWORD PTR tv194[ebp]
	push	edx
	mov	eax, DWORD PTR tv194[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+28]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L150872:

; 1633 : 		return S_OK;

	xor	eax, eax

; 1634 : 	}

	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?OnInPlaceActivateEx@CAxHostWindow@ATL@@UAGJPAHK@Z ENDP	; ATL::CAxHostWindow::OnInPlaceActivateEx
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?OnInPlaceDeactivateEx@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?OnInPlaceDeactivateEx@CAxHostWindow@ATL@@UAGJH@Z PROC NEAR ; ATL::CAxHostWindow::OnInPlaceDeactivateEx, COMDAT

; 1636 : 	{

	push	ebp
	mov	ebp, esp

; 1637 : 		m_bInPlaceActive = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	and	ecx, -2					; fffffffeH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+108], ecx

; 1638 : 		m_spInPlaceObjectWindowless.Release();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?Release@?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::Release

; 1639 : 		return S_OK;

	xor	eax, eax

; 1640 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?OnInPlaceDeactivateEx@CAxHostWindow@ATL@@UAGJH@Z ENDP	; ATL::CAxHostWindow::OnInPlaceDeactivateEx
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?RequestUIActivate@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?RequestUIActivate@CAxHostWindow@ATL@@UAGJXZ PROC NEAR	; ATL::CAxHostWindow::RequestUIActivate, COMDAT

; 1642 : 	{

	push	ebp
	mov	ebp, esp

; 1643 : 		return S_OK;

	xor	eax, eax

; 1644 : 	}

	pop	ebp
	ret	4
?RequestUIActivate@CAxHostWindow@ATL@@UAGJXZ ENDP	; ATL::CAxHostWindow::RequestUIActivate
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?CanWindowlessActivate@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?CanWindowlessActivate@CAxHostWindow@ATL@@UAGJXZ PROC NEAR ; ATL::CAxHostWindow::CanWindowlessActivate, COMDAT

; 1651 : 	{

	push	ebp
	mov	ebp, esp

; 1652 : 		return m_bCanWindowlessActivate ? S_OK : S_FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+156]
	and	eax, 1
	neg	eax
	sbb	eax, eax
	inc	eax

; 1653 : 	}

	pop	ebp
	ret	4
?CanWindowlessActivate@CAxHostWindow@ATL@@UAGJXZ ENDP	; ATL::CAxHostWindow::CanWindowlessActivate
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?GetCapture@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetCapture@CAxHostWindow@ATL@@UAGJXZ PROC NEAR		; ATL::CAxHostWindow::GetCapture, COMDAT

; 1655 : 	{

	push	ebp
	mov	ebp, esp

; 1656 : 		return m_bCapture ? S_OK : S_FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+108]
	shr	eax, 4
	and	eax, 1
	neg	eax
	sbb	eax, eax
	inc	eax

; 1657 : 	}

	pop	ebp
	ret	4
?GetCapture@CAxHostWindow@ATL@@UAGJXZ ENDP		; ATL::CAxHostWindow::GetCapture
_TEXT	ENDS
PUBLIC	?SetCapture@CWindow@ATL@@QAEPAUHWND__@@XZ	; ATL::CWindow::SetCapture
EXTRN	__imp__ReleaseCapture@0:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?SetCapture@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_fCapture$ = 12						; size = 4
?SetCapture@CAxHostWindow@ATL@@UAGJH@Z PROC NEAR	; ATL::CAxHostWindow::SetCapture, COMDAT

; 1659 : 	{

	push	ebp
	mov	ebp, esp
	push	esi

; 1660 : 		if (fCapture)

	cmp	DWORD PTR _fCapture$[ebp], 0
	je	SHORT $L150890

; 1661 : 		{
; 1662 : 			CWindow::SetCapture();

	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 40					; 00000028H
	call	?SetCapture@CWindow@ATL@@QAEPAUHWND__@@XZ ; ATL::CWindow::SetCapture

; 1663 : 			m_bCapture = TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	or	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+108], ecx

; 1664 : 		}
; 1665 : 		else

	jmp	SHORT $L150891
$L150890:

; 1666 : 		{
; 1667 : 			ReleaseCapture();

	mov	esi, esp
	call	DWORD PTR __imp__ReleaseCapture@0
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1668 : 			m_bCapture = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	and	ecx, -17				; ffffffefH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+108], ecx
$L150891:

; 1669 : 		}
; 1670 : 		return S_OK;

	xor	eax, eax

; 1671 : 	}

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?SetCapture@CAxHostWindow@ATL@@UAGJH@Z ENDP		; ATL::CAxHostWindow::SetCapture
_TEXT	ENDS
EXTRN	__imp__SetCapture@4:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
;	COMDAT ?SetCapture@CWindow@ATL@@QAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetCapture@CWindow@ATL@@QAEPAUHWND__@@XZ PROC NEAR	; ATL::CWindow::SetCapture, COMDAT
; _this$ = ecx

; 1173 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1174 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L212622
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	1174					; 00000496H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212622
	int	3
$L212622:

; 1175 : 		return ::SetCapture(m_hWnd);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SetCapture@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1176 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?SetCapture@CWindow@ATL@@QAEPAUHWND__@@XZ ENDP		; ATL::CWindow::SetCapture
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
_TEXT	ENDS
;	COMDAT ?GetFocus@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetFocus@CAxHostWindow@ATL@@UAGJXZ PROC NEAR		; ATL::CAxHostWindow::GetFocus, COMDAT

; 1673 : 	{

	push	ebp
	mov	ebp, esp

; 1674 : 		return m_bHaveFocus ? S_OK : S_FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+108]
	shr	eax, 5
	and	eax, 1
	neg	eax
	sbb	eax, eax
	inc	eax

; 1675 : 	}

	pop	ebp
	ret	4
?GetFocus@CAxHostWindow@ATL@@UAGJXZ ENDP		; ATL::CAxHostWindow::GetFocus
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?SetFocus@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_fGotFocus$ = 12					; size = 4
?SetFocus@CAxHostWindow@ATL@@UAGJH@Z PROC NEAR		; ATL::CAxHostWindow::SetFocus, COMDAT

; 1677 : 	{

	push	ebp
	mov	ebp, esp

; 1678 : 		m_bHaveFocus = fGotFocus;

	mov	eax, DWORD PTR _fGotFocus$[ebp]
	and	eax, 1
	shl	eax, 5
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	and	edx, -33				; ffffffdfH
	or	edx, eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+108], edx

; 1679 : 		return S_OK;

	xor	eax, eax

; 1680 : 	}

	pop	ebp
	ret	8
?SetFocus@CAxHostWindow@ATL@@UAGJH@Z ENDP		; ATL::CAxHostWindow::SetFocus
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?GetDC@CAxHostWindow@ATL@@UAGJPBUtagRECT@@KPAPAUHDC__@@@Z
_TEXT	SEGMENT
_hOldBitmap$150920 = -36				; size = 4
_hBitmap$150917 = -32					; size = 4
_hDCOffscreen$150915 = -28				; size = 4
_rect$ = -20						; size = 16
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
_grfFlags$ = 16						; size = 4
_phDC$ = 20						; size = 4
?GetDC@CAxHostWindow@ATL@@UAGJPBUtagRECT@@KPAPAUHDC__@@@Z PROC NEAR ; ATL::CAxHostWindow::GetDC, COMDAT

; 1682 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 1683 : 		if (phDC == NULL)

	cmp	DWORD PTR _phDC$[ebp], 0
	jne	SHORT $L150902

; 1684 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	$L150901
$L150902:

; 1685 : 		if (!m_bDCReleased)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+48]
	test	ecx, ecx
	jne	SHORT $L150904

; 1686 : 			return E_FAIL;

	mov	eax, -2147467259			; 80004005H
	jmp	$L150901
$L150904:

; 1687 : 
; 1688 : 		*phDC = CWindowImpl<CAxHostWindow>::GetDC();

	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 40					; 00000028H
	call	?GetDC@CWindow@ATL@@QAEPAUHDC__@@XZ	; ATL::CWindow::GetDC
	mov	edx, DWORD PTR _phDC$[ebp]
	mov	DWORD PTR [edx], eax

; 1689 : 		if (*phDC == NULL)

	mov	eax, DWORD PTR _phDC$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L150909

; 1690 : 			return E_FAIL;

	mov	eax, -2147467259			; 80004005H
	jmp	$L150901
$L150909:

; 1691 : 
; 1692 : 		m_bDCReleased = false;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+48], 0

; 1693 : 
; 1694 : 		if (grfFlags & OLEDC_NODRAW)

	mov	edx, DWORD PTR _grfFlags$[ebp]
	and	edx, 1
	je	SHORT $L150911

; 1695 : 			return S_OK;

	xor	eax, eax
	jmp	$L150901
$L150911:

; 1696 : 
; 1697 : 		RECT rect;
; 1698 : 		GetClientRect(&rect);

	lea	eax, DWORD PTR _rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 40					; 00000028H
	call	?GetClientRect@CWindow@ATL@@QBEHPAUtagRECT@@@Z ; ATL::CWindow::GetClientRect

; 1699 : 		if (grfFlags & OLEDC_OFFSCREEN)

	mov	ecx, DWORD PTR _grfFlags$[ebp]
	and	ecx, 4
	je	$L150914

; 1700 : 		{
; 1701 : 			HDC hDCOffscreen = CreateCompatibleDC(*phDC);

	mov	esi, esp
	mov	edx, DWORD PTR _phDC$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__CreateCompatibleDC@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hDCOffscreen$150915[ebp], eax

; 1702 : 			if (hDCOffscreen != NULL)

	cmp	DWORD PTR _hDCOffscreen$150915[ebp], 0
	je	$L150914

; 1703 : 			{
; 1704 : 				HBITMAP hBitmap = CreateCompatibleBitmap(*phDC, rect.right - rect.left, rect.bottom - rect.top);

	mov	ecx, DWORD PTR _rect$[ebp+12]
	sub	ecx, DWORD PTR _rect$[ebp+4]
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _rect$[ebp+8]
	sub	edx, DWORD PTR _rect$[ebp]
	push	edx
	mov	eax, DWORD PTR _phDC$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__CreateCompatibleBitmap@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hBitmap$150917[ebp], eax

; 1705 : 				if (hBitmap == NULL)

	cmp	DWORD PTR _hBitmap$150917[ebp], 0
	jne	SHORT $L150918

; 1706 : 					DeleteDC(hDCOffscreen);

	mov	esi, esp
	mov	edx, DWORD PTR _hDCOffscreen$150915[ebp]
	push	edx
	call	DWORD PTR __imp__DeleteDC@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1707 : 				else

	jmp	SHORT $L150914
$L150918:

; 1708 : 				{
; 1709 : 					HGDIOBJ hOldBitmap = SelectObject(hDCOffscreen, hBitmap);

	mov	esi, esp
	mov	eax, DWORD PTR _hBitmap$150917[ebp]
	push	eax
	mov	ecx, DWORD PTR _hDCOffscreen$150915[ebp]
	push	ecx
	call	DWORD PTR __imp__SelectObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hOldBitmap$150920[ebp], eax

; 1710 : 					if (hOldBitmap == NULL)

	cmp	DWORD PTR _hOldBitmap$150920[ebp], 0
	jne	SHORT $L150921

; 1711 : 					{
; 1712 : 						DeleteObject(hBitmap);

	mov	esi, esp
	mov	edx, DWORD PTR _hBitmap$150917[ebp]
	push	edx
	call	DWORD PTR __imp__DeleteObject@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1713 : 						DeleteDC(hDCOffscreen);

	mov	esi, esp
	mov	eax, DWORD PTR _hDCOffscreen$150915[ebp]
	push	eax
	call	DWORD PTR __imp__DeleteDC@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1714 : 					}
; 1715 : 					else

	jmp	SHORT $L150914
$L150921:

; 1716 : 					{
; 1717 : 						DeleteObject(hOldBitmap);

	mov	esi, esp
	mov	ecx, DWORD PTR _hOldBitmap$150920[ebp]
	push	ecx
	call	DWORD PTR __imp__DeleteObject@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1718 : 						m_hDCScreen = *phDC;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _phDC$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+44], ecx

; 1719 : 						*phDC = hDCOffscreen;

	mov	edx, DWORD PTR _phDC$[ebp]
	mov	eax, DWORD PTR _hDCOffscreen$150915[ebp]
	mov	DWORD PTR [edx], eax
$L150914:

; 1720 : 					}
; 1721 : 				}
; 1722 : 			}
; 1723 : 		}
; 1724 : 
; 1725 : 		if (grfFlags & OLEDC_PAINTBKGND)

	mov	ecx, DWORD PTR _grfFlags$[ebp]
	and	ecx, 2
	je	SHORT $L150923

; 1726 : 			::FillRect(*phDC, &rect, (HBRUSH) (COLOR_WINDOW+1));

	mov	esi, esp
	push	6
	lea	edx, DWORD PTR _rect$[ebp]
	push	edx
	mov	eax, DWORD PTR _phDC$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__FillRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
$L150923:

; 1727 : 		return S_OK;

	xor	eax, eax
$L150901:

; 1728 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212631
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$L212631:
	DD	1
	DD	$L212630
$L212630:
	DD	-20					; ffffffecH
	DD	16					; 00000010H
	DD	$L212629
$L212629:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
?GetDC@CAxHostWindow@ATL@@UAGJPBUtagRECT@@KPAPAUHDC__@@@Z ENDP ; ATL::CAxHostWindow::GetDC
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?ReleaseDC@CAxHostWindow@ATL@@UAGJPAUHDC__@@@Z
_TEXT	SEGMENT
_rect$150929 = -20					; size = 16
_this$ = 8						; size = 4
_hDC$ = 12						; size = 4
?ReleaseDC@CAxHostWindow@ATL@@UAGJPAUHDC__@@@Z PROC NEAR ; ATL::CAxHostWindow::ReleaseDC, COMDAT

; 1730 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 1731 : 		m_bDCReleased = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+48], 1

; 1732 : 		if (m_hDCScreen != NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+44], 0
	je	SHORT $L150928

; 1733 : 		{
; 1734 : 			RECT rect;
; 1735 : 			GetClientRect(&rect);

	lea	edx, DWORD PTR _rect$150929[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 40					; 00000028H
	call	?GetClientRect@CWindow@ATL@@QBEHPAUtagRECT@@@Z ; ATL::CWindow::GetClientRect

; 1736 : 			// Offscreen DC has to be copied to screen DC before releasing the screen dc;
; 1737 : 			BitBlt(m_hDCScreen, rect.left, rect.top, rect.right - rect.left, rect.bottom - rect.top, hDC, 0, 0, SRCCOPY);

	mov	esi, esp
	push	13369376				; 00cc0020H
	push	0
	push	0
	mov	eax, DWORD PTR _hDC$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rect$150929[ebp+12]
	sub	ecx, DWORD PTR _rect$150929[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _rect$150929[ebp+8]
	sub	edx, DWORD PTR _rect$150929[ebp]
	push	edx
	mov	eax, DWORD PTR _rect$150929[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _rect$150929[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	DWORD PTR __imp__BitBlt@36
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1738 : 			DeleteDC(hDC);

	mov	esi, esp
	mov	ecx, DWORD PTR _hDC$[ebp]
	push	ecx
	call	DWORD PTR __imp__DeleteDC@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1739 : 			hDC = m_hDCScreen;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR _hDC$[ebp], eax
$L150928:

; 1740 : 		}
; 1741 : 
; 1742 : 		CWindowImpl<CAxHostWindow>::ReleaseDC(hDC);

	mov	ecx, DWORD PTR _hDC$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 40					; 00000028H
	call	?ReleaseDC@CWindow@ATL@@QAEHPAUHDC__@@@Z ; ATL::CWindow::ReleaseDC

; 1743 : 		return S_OK;

	xor	eax, eax

; 1744 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212636
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$L212636:
	DD	1
	DD	$L212635
$L212635:
	DD	-20					; ffffffecH
	DD	16					; 00000010H
	DD	$L212634
$L212634:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
?ReleaseDC@CAxHostWindow@ATL@@UAGJPAUHDC__@@@Z ENDP	; ATL::CAxHostWindow::ReleaseDC
_TEXT	ENDS
PUBLIC	?InvalidateRect@CWindow@ATL@@QAEHPBUtagRECT@@H@Z ; ATL::CWindow::InvalidateRect
; Function compile flags: /Odt /RTCsu
;	COMDAT ?InvalidateRect@CAxHostWindow@ATL@@UAGJPBUtagRECT@@H@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pRect$ = 12						; size = 4
_fErase$ = 16						; size = 4
?InvalidateRect@CAxHostWindow@ATL@@UAGJPBUtagRECT@@H@Z PROC NEAR ; ATL::CAxHostWindow::InvalidateRect, COMDAT

; 1746 : 	{

	push	ebp
	mov	ebp, esp

; 1747 : 		CWindowImpl<CAxHostWindow>::InvalidateRect(pRect, fErase);

	mov	eax, DWORD PTR _fErase$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pRect$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 40					; 00000028H
	call	?InvalidateRect@CWindow@ATL@@QAEHPBUtagRECT@@H@Z ; ATL::CWindow::InvalidateRect

; 1748 : 		return S_OK;

	xor	eax, eax

; 1749 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?InvalidateRect@CAxHostWindow@ATL@@UAGJPBUtagRECT@@H@Z ENDP ; ATL::CAxHostWindow::InvalidateRect
_TEXT	ENDS
EXTRN	__imp__InvalidateRect@12:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
;	COMDAT ?InvalidateRect@CWindow@ATL@@QAEHPBUtagRECT@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpRect$ = 8						; size = 4
_bErase$ = 12						; size = 4
?InvalidateRect@CWindow@ATL@@QAEHPBUtagRECT@@H@Z PROC NEAR ; ATL::CWindow::InvalidateRect, COMDAT
; _this$ = ecx

; 1079 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1080 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L212641
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	1080					; 00000438H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212641
	int	3
$L212641:

; 1081 : 		return ::InvalidateRect(m_hWnd, lpRect, bErase);

	mov	esi, esp
	mov	eax, DWORD PTR _bErase$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpRect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__InvalidateRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1082 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?InvalidateRect@CWindow@ATL@@QAEHPBUtagRECT@@H@Z ENDP	; ATL::CWindow::InvalidateRect
_TEXT	ENDS
PUBLIC	?InvalidateRgn@CWindow@ATL@@QAEXPAUHRGN__@@H@Z	; ATL::CWindow::InvalidateRgn
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
;	COMDAT ?InvalidateRgn@CAxHostWindow@ATL@@UAGJPAUHRGN__@@H@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_hRGN$ = 12						; size = 4
_fErase$ = 16						; size = 4
?InvalidateRgn@CAxHostWindow@ATL@@UAGJPAUHRGN__@@H@Z PROC NEAR ; ATL::CAxHostWindow::InvalidateRgn, COMDAT

; 1751 : 	{

	push	ebp
	mov	ebp, esp

; 1752 : 		CWindowImpl<CAxHostWindow>::InvalidateRgn(hRGN, fErase);

	mov	eax, DWORD PTR _fErase$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hRGN$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 40					; 00000028H
	call	?InvalidateRgn@CWindow@ATL@@QAEXPAUHRGN__@@H@Z ; ATL::CWindow::InvalidateRgn

; 1753 : 		return S_OK;

	xor	eax, eax

; 1754 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?InvalidateRgn@CAxHostWindow@ATL@@UAGJPAUHRGN__@@H@Z ENDP ; ATL::CAxHostWindow::InvalidateRgn
_TEXT	ENDS
EXTRN	__imp__InvalidateRgn@12:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
;	COMDAT ?InvalidateRgn@CWindow@ATL@@QAEXPAUHRGN__@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hRgn$ = 8						; size = 4
_bErase$ = 12						; size = 4
?InvalidateRgn@CWindow@ATL@@QAEXPAUHRGN__@@H@Z PROC NEAR ; ATL::CWindow::InvalidateRgn, COMDAT
; _this$ = ecx

; 1091 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1092 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L212646
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	1092					; 00000444H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212646
	int	3
$L212646:

; 1093 : 		::InvalidateRgn(m_hWnd, hRgn, bErase);

	mov	esi, esp
	mov	eax, DWORD PTR _bErase$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hRgn$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__InvalidateRgn@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1094 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?InvalidateRgn@CWindow@ATL@@QAEXPAUHRGN__@@H@Z ENDP	; ATL::CWindow::InvalidateRgn
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
_TEXT	ENDS
;	COMDAT ?ScrollRect@CAxHostWindow@ATL@@UAGJHHPBUtagRECT@@0@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
?ScrollRect@CAxHostWindow@ATL@@UAGJHHPBUtagRECT@@0@Z PROC NEAR ; ATL::CAxHostWindow::ScrollRect, COMDAT

; 1756 : 	{

	push	ebp
	mov	ebp, esp

; 1757 : 		return S_OK;

	xor	eax, eax

; 1758 : 	}

	pop	ebp
	ret	20					; 00000014H
?ScrollRect@CAxHostWindow@ATL@@UAGJHHPBUtagRECT@@0@Z ENDP ; ATL::CAxHostWindow::ScrollRect
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?AdjustRect@CAxHostWindow@ATL@@UAGJPAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?AdjustRect@CAxHostWindow@ATL@@UAGJPAUtagRECT@@@Z PROC NEAR ; ATL::CAxHostWindow::AdjustRect, COMDAT

; 1760 : 	{

	push	ebp
	mov	ebp, esp

; 1761 : 		return S_OK;

	xor	eax, eax

; 1762 : 	}

	pop	ebp
	ret	8
?AdjustRect@CAxHostWindow@ATL@@UAGJPAUtagRECT@@@Z ENDP	; ATL::CAxHostWindow::AdjustRect
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?OnDefWindowMessage@CAxHostWindow@ATL@@UAGJIIJPAJ@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_msg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
_plResult$ = 24						; size = 4
?OnDefWindowMessage@CAxHostWindow@ATL@@UAGJIIJPAJ@Z PROC NEAR ; ATL::CAxHostWindow::OnDefWindowMessage, COMDAT

; 1764 : 	{

	push	ebp
	mov	ebp, esp

; 1765 : 		*plResult = DefWindowProc(msg, wParam, lParam);

	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _msg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 44					; 0000002cH
	call	?DefWindowProcA@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEJIIJ@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::DefWindowProcA
	mov	ecx, DWORD PTR _plResult$[ebp]
	mov	DWORD PTR [ecx], eax

; 1766 : 		return S_OK;

	xor	eax, eax

; 1767 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	20					; 00000014H
?OnDefWindowMessage@CAxHostWindow@ATL@@UAGJIIJPAJ@Z ENDP ; ATL::CAxHostWindow::OnDefWindowMessage
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?OnControlInfoChanged@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?OnControlInfoChanged@CAxHostWindow@ATL@@UAGJXZ PROC NEAR ; ATL::CAxHostWindow::OnControlInfoChanged, COMDAT

; 1771 : 	{

	push	ebp
	mov	ebp, esp

; 1772 : 		return S_OK;

	xor	eax, eax

; 1773 : 	}

	pop	ebp
	ret	4
?OnControlInfoChanged@CAxHostWindow@ATL@@UAGJXZ ENDP	; ATL::CAxHostWindow::OnControlInfoChanged
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?LockInPlaceActive@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?LockInPlaceActive@CAxHostWindow@ATL@@UAGJH@Z PROC NEAR	; ATL::CAxHostWindow::LockInPlaceActive, COMDAT

; 1775 : 	{

	push	ebp
	mov	ebp, esp

; 1776 : 		return S_OK;

	xor	eax, eax

; 1777 : 	}

	pop	ebp
	ret	8
?LockInPlaceActive@CAxHostWindow@ATL@@UAGJH@Z ENDP	; ATL::CAxHostWindow::LockInPlaceActive
_TEXT	ENDS
PUBLIC	??$QueryInterface@UIDispatch@@@?$CComPtrBase@UIOleObject@@@ATL@@QBEJPAPAUIDispatch@@@Z ; ATL::CComPtrBase<IOleObject>::QueryInterface<IDispatch>
; Function compile flags: /Odt /RTCsu
;	COMDAT ?GetExtendedControl@CAxHostWindow@ATL@@UAGJPAPAUIDispatch@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ppDisp$ = 12						; size = 4
?GetExtendedControl@CAxHostWindow@ATL@@UAGJPAPAUIDispatch@@@Z PROC NEAR ; ATL::CAxHostWindow::GetExtendedControl, COMDAT

; 1779 : 	{

	push	ebp
	mov	ebp, esp

; 1780 : 		if (ppDisp == NULL)

	cmp	DWORD PTR _ppDisp$[ebp], 0
	jne	SHORT $L150964

; 1781 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L150963
$L150964:

; 1782 : 		return m_spOleObject.QueryInterface(ppDisp);

	mov	eax, DWORD PTR _ppDisp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??$QueryInterface@UIDispatch@@@?$CComPtrBase@UIOleObject@@@ATL@@QBEJPAPAUIDispatch@@@Z ; ATL::CComPtrBase<IOleObject>::QueryInterface<IDispatch>
$L150963:

; 1783 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?GetExtendedControl@CAxHostWindow@ATL@@UAGJPAPAUIDispatch@@@Z ENDP ; ATL::CAxHostWindow::GetExtendedControl
_TEXT	ENDS
PUBLIC	??_C@_0BP@OACOCMEL@CAxHostWindow?3?3TransformCoords?$AA@ ; `string'
;	COMDAT ??_C@_0BP@OACOCMEL@CAxHostWindow?3?3TransformCoords?$AA@
CONST	SEGMENT
??_C@_0BP@OACOCMEL@CAxHostWindow?3?3TransformCoords?$AA@ DB 'CAxHostWindo'
	DB	'w::TransformCoords', 00H			; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?TransformCoords@CAxHostWindow@ATL@@UAGJPAU_POINTL@@PAUtagPOINTF@@K@Z
_TEXT	SEGMENT
$T212661 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
?TransformCoords@CAxHostWindow@ATL@@UAGJPAU_POINTL@@PAUtagPOINTF@@K@Z PROC NEAR ; ATL::CAxHostWindow::TransformCoords, COMDAT

; 1785 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1786 : 		ATLTRACENOTIMPL(_T("CAxHostWindow::TransformCoords"));

	push	OFFSET FLAT:??_C@_0BP@OACOCMEL@CAxHostWindow?3?3TransformCoords?$AA@
	push	OFFSET FLAT:??_C@_0BK@HFBNDALM@ATL?3?5?$CFs?5not?5implemented?4?6?$AA@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceNotImpl@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceNotImpl
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	1786					; 000006faH
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T212661[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H
	mov	eax, -2147467263			; 80004001H

; 1787 : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?TransformCoords@CAxHostWindow@ATL@@UAGJPAU_POINTL@@PAUtagPOINTF@@K@Z ENDP ; ATL::CAxHostWindow::TransformCoords
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?TranslateAcceleratorA@CAxHostWindow@ATL@@UAGJPAUtagMSG@@K@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?TranslateAcceleratorA@CAxHostWindow@ATL@@UAGJPAUtagMSG@@K@Z PROC NEAR ; ATL::CAxHostWindow::TranslateAcceleratorA, COMDAT

; 1789 : 	{

	push	ebp
	mov	ebp, esp

; 1790 : 		return S_FALSE;

	mov	eax, 1

; 1791 : 	}

	pop	ebp
	ret	12					; 0000000cH
?TranslateAcceleratorA@CAxHostWindow@ATL@@UAGJPAUtagMSG@@K@Z ENDP ; ATL::CAxHostWindow::TranslateAcceleratorA
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?OnFocus@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_fGotFocus$ = 12					; size = 4
?OnFocus@CAxHostWindow@ATL@@UAGJH@Z PROC NEAR		; ATL::CAxHostWindow::OnFocus, COMDAT

; 1793 : 	{

	push	ebp
	mov	ebp, esp

; 1794 : 		m_bHaveFocus = fGotFocus;

	mov	eax, DWORD PTR _fGotFocus$[ebp]
	and	eax, 1
	shl	eax, 5
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	and	edx, -33				; ffffffdfH
	or	edx, eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], edx

; 1795 : 		return S_OK;

	xor	eax, eax

; 1796 : 	}

	pop	ebp
	ret	8
?OnFocus@CAxHostWindow@ATL@@UAGJH@Z ENDP		; ATL::CAxHostWindow::OnFocus
_TEXT	ENDS
PUBLIC	??_C@_0CB@LHNPGPLG@CAxHostWindow?3?3ShowPropertyFrame@ ; `string'
;	COMDAT ??_C@_0CB@LHNPGPLG@CAxHostWindow?3?3ShowPropertyFrame@
CONST	SEGMENT
??_C@_0CB@LHNPGPLG@CAxHostWindow?3?3ShowPropertyFrame@ DB 'CAxHostWindow:'
	DB	':ShowPropertyFrame', 00H			; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?ShowPropertyFrame@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT
$T212668 = -8						; size = 8
_this$ = 8						; size = 4
?ShowPropertyFrame@CAxHostWindow@ATL@@UAGJXZ PROC NEAR	; ATL::CAxHostWindow::ShowPropertyFrame, COMDAT

; 1798 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1799 : 		ATLTRACENOTIMPL(_T("CAxHostWindow::ShowPropertyFrame"));

	push	OFFSET FLAT:??_C@_0CB@LHNPGPLG@CAxHostWindow?3?3ShowPropertyFrame@
	push	OFFSET FLAT:??_C@_0BK@HFBNDALM@ATL?3?5?$CFs?5not?5implemented?4?6?$AA@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceNotImpl@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceNotImpl
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	1799					; 00000707H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T212668[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H
	mov	eax, -2147467263			; 80004001H

; 1800 : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ShowPropertyFrame@CAxHostWindow@ATL@@UAGJXZ ENDP	; ATL::CAxHostWindow::ShowPropertyFrame
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?OnDataChange@CAxHostWindow@ATL@@UAGXPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?OnDataChange@CAxHostWindow@ATL@@UAGXPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z PROC NEAR ; ATL::CAxHostWindow::OnDataChange, COMDAT

; 1804 : 	{

	push	ebp
	mov	ebp, esp

; 1805 : 	}

	pop	ebp
	ret	12					; 0000000cH
?OnDataChange@CAxHostWindow@ATL@@UAGXPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z ENDP ; ATL::CAxHostWindow::OnDataChange
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?OnViewChange@CAxHostWindow@ATL@@UAGXKJ@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?OnViewChange@CAxHostWindow@ATL@@UAGXKJ@Z PROC NEAR	; ATL::CAxHostWindow::OnViewChange, COMDAT

; 1807 : 	{

	push	ebp
	mov	ebp, esp

; 1808 : 	}

	pop	ebp
	ret	12					; 0000000cH
?OnViewChange@CAxHostWindow@ATL@@UAGXKJ@Z ENDP		; ATL::CAxHostWindow::OnViewChange
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?OnRename@CAxHostWindow@ATL@@UAGXPAUIMoniker@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?OnRename@CAxHostWindow@ATL@@UAGXPAUIMoniker@@@Z PROC NEAR ; ATL::CAxHostWindow::OnRename, COMDAT

; 1810 : 	{

	push	ebp
	mov	ebp, esp

; 1811 : 	}

	pop	ebp
	ret	8
?OnRename@CAxHostWindow@ATL@@UAGXPAUIMoniker@@@Z ENDP	; ATL::CAxHostWindow::OnRename
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?OnSave@CAxHostWindow@ATL@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?OnSave@CAxHostWindow@ATL@@UAGXXZ PROC NEAR		; ATL::CAxHostWindow::OnSave, COMDAT

; 1813 : 	{

	push	ebp
	mov	ebp, esp

; 1814 : 	}

	pop	ebp
	ret	4
?OnSave@CAxHostWindow@ATL@@UAGXXZ ENDP			; ATL::CAxHostWindow::OnSave
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?OnClose@CAxHostWindow@ATL@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?OnClose@CAxHostWindow@ATL@@UAGXXZ PROC NEAR		; ATL::CAxHostWindow::OnClose, COMDAT

; 1816 : 	{

	push	ebp
	mov	ebp, esp

; 1817 : 	}

	pop	ebp
	ret	4
?OnClose@CAxHostWindow@ATL@@UAGXXZ ENDP			; ATL::CAxHostWindow::OnClose
_TEXT	ENDS
PUBLIC	??_C@_0CA@JLJFMEKB@CAxHostWindow?3?3ParseDisplayName?$AA@ ; `string'
;	COMDAT ??_C@_0CA@JLJFMEKB@CAxHostWindow?3?3ParseDisplayName?$AA@
CONST	SEGMENT
??_C@_0CA@JLJFMEKB@CAxHostWindow?3?3ParseDisplayName?$AA@ DB 'CAxHostWind'
	DB	'ow::ParseDisplayName', 00H			; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?ParseDisplayName@CAxHostWindow@ATL@@UAGJPAUIBindCtx@@PAGPAKPAPAUIMoniker@@@Z
_TEXT	SEGMENT
$T212681 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
?ParseDisplayName@CAxHostWindow@ATL@@UAGJPAUIBindCtx@@PAGPAKPAPAUIMoniker@@@Z PROC NEAR ; ATL::CAxHostWindow::ParseDisplayName, COMDAT

; 1821 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1822 : 		ATLTRACENOTIMPL(_T("CAxHostWindow::ParseDisplayName"));

	push	OFFSET FLAT:??_C@_0CA@JLJFMEKB@CAxHostWindow?3?3ParseDisplayName?$AA@
	push	OFFSET FLAT:??_C@_0BK@HFBNDALM@ATL?3?5?$CFs?5not?5implemented?4?6?$AA@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceNotImpl@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceNotImpl
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	1822					; 0000071eH
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T212681[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H
	mov	eax, -2147467263			; 80004001H

; 1823 : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?ParseDisplayName@CAxHostWindow@ATL@@UAGJPAUIBindCtx@@PAGPAKPAPAUIMoniker@@@Z ENDP ; ATL::CAxHostWindow::ParseDisplayName
_TEXT	ENDS
PUBLIC	__GUID_00000100_0000_0000_c000_000000000046
PUBLIC	?Init@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@QAEJPAPAUIUnknown@@0PAU3@W4CComEnumFlags@2@@Z ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::Init
PUBLIC	??0?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QAE@PAX@Z ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >
;	COMDAT xdata$x
xdata$x	SEGMENT
$T212699 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
$T212701 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L212692
$T212700 DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:$T212701
$T212694 DD	019930520H
	DD	02H
	DD	FLAT:$T212699
	DD	01H
	DD	FLAT:$T212700
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT __GUID_00000100_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000100_0000_0000_c000_000000000046 DD 0100H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?EnumObjects@CAxHostWindow@ATL@@UAGJKPAPAUIEnumUnknown@@@Z
_TEXT	SEGMENT
tv136 = -60						; size = 4
tv71 = -56						; size = 4
tv138 = -52						; size = 4
$T212688 = -48						; size = 4
$T212687 = -44						; size = 4
$T212684 = -40						; size = 4
_hRes$ = -36						; size = 4
_pTemp$ = -28						; size = 4
_p$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
_ppenum$ = 16						; size = 4
?EnumObjects@CAxHostWindow@ATL@@UAGJKPAPAUIEnumUnknown@@@Z PROC NEAR ; ATL::CAxHostWindow::EnumObjects, COMDAT

; 1825 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?EnumObjects@CAxHostWindow@ATL@@UAGJKPAPAUIEnumUnknown@@@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	ecx
	sub	esp, 44					; 0000002cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR __$EHRec$[ebp], esp

; 1826 : 		if (ppenum == NULL)

	cmp	DWORD PTR _ppenum$[ebp], 0
	jne	SHORT $L151002

; 1827 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	$L151001
$L151002:

; 1828 : 		*ppenum = NULL;

	mov	eax, DWORD PTR _ppenum$[ebp]
	mov	DWORD PTR [eax], 0

; 1829 : 		typedef CComObject<CComEnum<IEnumUnknown, &__uuidof(IEnumUnknown), IUnknown*, _CopyInterface<IUnknown> > > enumunk;
; 1830 : 		enumunk* p = NULL;

	mov	DWORD PTR _p$[ebp], 0

; 1831 : 		ATLTRY(p = new enumunk);

	mov	DWORD PTR __$EHRec$[ebp+12], 0
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv138[ebp], eax
	mov	ecx, DWORD PTR tv138[ebp]
	mov	DWORD PTR $T212684[ebp], ecx
	cmp	DWORD PTR $T212684[ebp], 0
	je	SHORT $L212685
	push	0
	mov	ecx, DWORD PTR $T212684[ebp]
	call	??0?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QAE@PAX@Z ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $L212686
$L212685:
	mov	DWORD PTR tv71[ebp], 0
$L212686:
	mov	edx, DWORD PTR tv71[ebp]
	mov	DWORD PTR _p$[ebp], edx
	jmp	SHORT $L212691
$L212692:
	mov	eax, $L212691
	ret	0
$L212691:
	mov	DWORD PTR __$EHRec$[ebp+12], -1

; 1832 : 		if(p == NULL)

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $L151128

; 1833 : 			return E_OUTOFMEMORY;

	mov	eax, -2147024882			; 8007000eH
	jmp	$L151001
$L151128:

; 1834 : 		IUnknown* pTemp = m_spUnknown;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
	mov	DWORD PTR _pTemp$[ebp], eax

; 1835 : 		// There is always only one object.
; 1836 : 		HRESULT hRes = p->Init(reinterpret_cast<IUnknown**>(&pTemp), reinterpret_cast<IUnknown**>(&pTemp + 1), GetControllingUnknown(), AtlFlagCopy);

	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 52					; 00000034H
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax-52]
	call	DWORD PTR [edx+16]
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	eax, DWORD PTR _pTemp$[ebp+4]
	push	eax
	lea	ecx, DWORD PTR _pTemp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _p$[ebp]
	call	?Init@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@QAEJPAPAUIUnknown@@0PAU3@W4CComEnumFlags@2@@Z ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::Init
	mov	DWORD PTR _hRes$[ebp], eax

; 1837 : 		if (SUCCEEDED(hRes))

	cmp	DWORD PTR _hRes$[ebp], 0
	jl	SHORT $L151135

; 1838 : 			hRes = p->QueryInterface(__uuidof(IEnumUnknown), (void**)ppenum);

	mov	esi, esp
	mov	edx, DWORD PTR _ppenum$[ebp]
	push	edx
	push	OFFSET FLAT:__GUID_00000100_0000_0000_c000_000000000046
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRes$[ebp], eax
$L151135:

; 1839 : 		if (FAILED(hRes))

	cmp	DWORD PTR _hRes$[ebp], 0
	jge	SHORT $L151138

; 1840 : 			delete p;

	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR $T212688[ebp], eax
	mov	ecx, DWORD PTR $T212688[ebp]
	mov	DWORD PTR $T212687[ebp], ecx
	cmp	DWORD PTR $T212687[ebp], 0
	je	SHORT $L212689
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T212687[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T212687[ebp]
	call	DWORD PTR [eax+28]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv136[ebp], eax
	jmp	SHORT $L151138
$L212689:
	mov	DWORD PTR tv136[ebp], 0
$L151138:

; 1841 : 		return hRes;

	mov	eax, DWORD PTR _hRes$[ebp]
$L151001:

; 1842 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212698
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 60					; 0000003cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$L212698:
	DD	1
	DD	$L212697
$L212697:
	DD	-28					; ffffffe4H
	DD	4
	DD	$L212695
$L212695:
	DB	112					; 00000070H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?EnumObjects@CAxHostWindow@ATL@@UAGJKPAPAUIEnumUnknown@@@Z:
	mov	eax, OFFSET FLAT:$T212694
	jmp	___CxxFrameHandler
text$x	ENDS
?EnumObjects@CAxHostWindow@ATL@@UAGJKPAPAUIEnumUnknown@@@Z ENDP ; ATL::CAxHostWindow::EnumObjects
; Function compile flags: /Odt /RTCsu
;	COMDAT ?LockContainer@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_fLock$ = 12						; size = 4
?LockContainer@CAxHostWindow@ATL@@UAGJH@Z PROC NEAR	; ATL::CAxHostWindow::LockContainer, COMDAT

; 1844 : 	{

	push	ebp
	mov	ebp, esp

; 1845 : 		m_bLocked = fLock;

	mov	eax, DWORD PTR _fLock$[ebp]
	and	eax, 1
	shl	eax, 7
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	and	edx, -129				; ffffff7fH
	or	edx, eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+100], edx

; 1846 : 		return S_OK;

	xor	eax, eax

; 1847 : 	}

	pop	ebp
	ret	8
?LockContainer@CAxHostWindow@ATL@@UAGJH@Z ENDP		; ATL::CAxHostWindow::LockContainer
_TEXT	ENDS
PUBLIC	??I?$CComPtrBase@UIOleObject@@@ATL@@QAEPAPAUIOleObject@@XZ ; ATL::CComPtrBase<IOleObject>::operator&
PUBLIC	??I?$CComPtrBase@UIViewObjectEx@@@ATL@@QAEPAPAUIViewObjectEx@@XZ ; ATL::CComPtrBase<IViewObjectEx>::operator&
PUBLIC	??B?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBEPAUIPersistStreamInit@@XZ ; ATL::CComPtrBase<IPersistStreamInit>::operator IPersistStreamInit *
PUBLIC	?AtlHiMetricToPixel@ATL@@YGXPBUtagSIZE@@PAU2@@Z	; ATL::AtlHiMetricToPixel
PUBLIC	??4?$CComPtr@UIUnknown@@@ATL@@QAEPAUIUnknown@@PAU2@@Z ; ATL::CComPtr<IUnknown>::operator=
PUBLIC	__GUID_00000112_0000_0000_c000_000000000046
PUBLIC	??0?$CComQIPtr@UIOleClientSite@@$1?_GUID_00000118_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComQIPtr<IOleClientSite,&_GUID_00000118_0000_0000_c000_000000000046>::CComQIPtr<IOleClientSite,&_GUID_00000118_0000_0000_c000_000000000046>
PUBLIC	??1?$CComQIPtr@UIOleClientSite@@$1?_GUID_00000118_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ ; ATL::CComQIPtr<IOleClientSite,&_GUID_00000118_0000_0000_c000_000000000046>::~CComQIPtr<IOleClientSite,&_GUID_00000118_0000_0000_c000_000000000046>
PUBLIC	??0?$CComQIPtr@UIPersistStreamInit@@$1?_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComQIPtr<IPersistStreamInit,&_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713>::CComQIPtr<IPersistStreamInit,&_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713>
PUBLIC	??1?$CComQIPtr@UIPersistStreamInit@@$1?_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713@@3U__s_GUID@@B@ATL@@QAE@XZ ; ATL::CComQIPtr<IPersistStreamInit,&_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713>::~CComQIPtr<IPersistStreamInit,&_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713>
PUBLIC	??0?$CComQIPtr@UIPersistStream@@$1?_GUID_00000109_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComQIPtr<IPersistStream,&_GUID_00000109_0000_0000_c000_000000000046>::CComQIPtr<IPersistStream,&_GUID_00000109_0000_0000_c000_000000000046>
PUBLIC	??1?$CComQIPtr@UIPersistStream@@$1?_GUID_00000109_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ ; ATL::CComQIPtr<IPersistStream,&_GUID_00000109_0000_0000_c000_000000000046>::~CComQIPtr<IPersistStream,&_GUID_00000109_0000_0000_c000_000000000046>
PUBLIC	__GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8
PUBLIC	__GUID_00000127_0000_0000_c000_000000000046
PUBLIC	__GUID_0000010d_0000_0000_c000_000000000046
PUBLIC	??B?$CComPtrBase@UIAdviseSink@@@ATL@@QBEPAUIAdviseSink@@XZ ; ATL::CComPtrBase<IAdviseSink>::operator IAdviseSink *
PUBLIC	??0?$CComQIPtr@UIAdviseSink@@$1?_GUID_0000010f_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComQIPtr<IAdviseSink,&_GUID_0000010f_0000_0000_c000_000000000046>::CComQIPtr<IAdviseSink,&_GUID_0000010f_0000_0000_c000_000000000046>
PUBLIC	??1?$CComQIPtr@UIAdviseSink@@$1?_GUID_0000010f_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ ; ATL::CComQIPtr<IAdviseSink,&_GUID_0000010f_0000_0000_c000_000000000046>::~CComQIPtr<IAdviseSink,&_GUID_0000010f_0000_0000_c000_000000000046>
PUBLIC	??_C@_1M@IJFAIKMG@?$AAA?$AAX?$AAW?$AAI?$AAN?$AA?$AA@ ; `string'
PUBLIC	??B?$CComPtrBase@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ ; ATL::CComPtrBase<IPersistStream>::operator IPersistStream *
PUBLIC	??C?$CComPtrBase@UIPersistStream@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStream@@@1@XZ ; ATL::CComPtrBase<IPersistStream>::operator->
;	COMDAT xdata$x
xdata$x	SEGMENT
$T212729 DD	0ffffffffH
	DD	FLAT:$L212710
	DD	0ffffffffH
	DD	FLAT:$L212711
	DD	01H
	DD	FLAT:$L212712
	DD	0ffffffffH
	DD	FLAT:$L212713
	DD	0ffffffffH
	DD	FLAT:$L212714
	DD	04H
	DD	FLAT:$L212715
	DD	0ffffffffH
	DD	FLAT:$L212716
$T212718 DD	019930520H
	DD	07H
	DD	FLAT:$T212729
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT __GUID_00000112_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000112_0000_0000_c000_000000000046 DD 0112H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT __GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8
CONST	SEGMENT
__GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8 DD 03af24292H
	DW	0c96H
	DW	011ceH
	DB	0a0H
	DB	0cfH
	DB	00H
	DB	0aaH
	DB	00H
	DB	060H
	DB	0aH
	DB	0b8H
CONST	ENDS
;	COMDAT __GUID_00000127_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000127_0000_0000_c000_000000000046 DD 0127H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT __GUID_0000010d_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_0000010d_0000_0000_c000_000000000046 DD 010dH
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ??_C@_1M@IJFAIKMG@?$AAA?$AAX?$AAW?$AAI?$AAN?$AA?$AA@
CONST	SEGMENT
??_C@_1M@IJFAIKMG@?$AAA?$AAX?$AAW?$AAI?$AAN?$AA?$AA@ DB 'A', 00H, 'X', 00H
	DB	'W', 00H, 'I', 00H, 'N', 00H, 00H, 00H	; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?ActivateAx@CAxHostWindow@ATL@@QAEJPAUIUnknown@@_NPAUIStream@@@Z
_TEXT	SEGMENT
tv449 = -180						; size = 4
tv414 = -176						; size = 4
tv377 = -172						; size = 4
tv366 = -168						; size = 4
tv331 = -164						; size = 4
tv318 = -160						; size = 4
tv301 = -156						; size = 4
tv276 = -152						; size = 4
tv257 = -148						; size = 4
tv241 = -144						; size = 4
tv229 = -140						; size = 4
tv202 = -136						; size = 4
tv188 = -132						; size = 4
tv170 = -128						; size = 4
tv162 = -124						; size = 4
tv140 = -120						; size = 4
tv86 = -116						; size = 4
$T212709 = -112						; size = 4
$T212708 = -108						; size = 4
_spSite$ = -100						; size = 4
_spClientSite$151353 = -88				; size = 4
_spAdviseSink$151348 = -76				; size = 4
_spClientSite$151236 = -64				; size = 4
_spPS$151228 = -52					; size = 4
_spPSI$151200 = -40					; size = 4
_spClientSite$151176 = -28				; size = 4
_hr$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pUnkControl$ = 8					; size = 4
_bInited$ = 12						; size = 1
_pStream$ = 16						; size = 4
?ActivateAx@CAxHostWindow@ATL@@QAEJPAUIUnknown@@_NPAUIStream@@@Z PROC NEAR ; ATL::CAxHostWindow::ActivateAx, COMDAT
; _this$ = ecx

; 1850 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ActivateAx@CAxHostWindow@ATL@@QAEJPAUIUnknown@@_NPAUIStream@@@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 168				; 000000a8H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-180]
	mov	ecx, 42					; 0000002aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1851 : 		if (pUnkControl == NULL)

	cmp	DWORD PTR _pUnkControl$[ebp], 0
	jne	SHORT $L151146

; 1852 : 			return S_OK;

	xor	eax, eax
	jmp	$L151145
$L151146:

; 1853 : 
; 1854 : 		m_spUnknown = pUnkControl;

	mov	eax, DWORD PTR _pUnkControl$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??4?$CComPtr@UIUnknown@@@ATL@@QAEPAUIUnknown@@PAU2@@Z ; ATL::CComPtr<IUnknown>::operator=

; 1855 : 
; 1856 : 		HRESULT hr = S_OK;

	mov	DWORD PTR _hr$[ebp], 0

; 1857 : 		pUnkControl->QueryInterface(__uuidof(IOleObject), (void**)&m_spOleObject);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??I?$CComPtrBase@UIOleObject@@@ATL@@QAEPAPAUIOleObject@@XZ ; ATL::CComPtrBase<IOleObject>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET FLAT:__GUID_00000112_0000_0000_c000_000000000046
	mov	ecx, DWORD PTR _pUnkControl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pUnkControl$[ebp]
	push	eax
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1858 : 		if (m_spOleObject)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??B?$CComPtrBase@UIOleObject@@@ATL@@QBEPAUIOleObject@@XZ ; ATL::CComPtrBase<IOleObject>::operator IOleObject *
	test	eax, eax
	je	$L151152

; 1859 : 		{
; 1860 : 			m_spOleObject->GetMiscStatus(DVASPECT_CONTENT, &m_dwMiscStatus);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
	mov	DWORD PTR tv86[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 160				; 000000a0H
	mov	esi, esp
	push	ecx
	push	1
	mov	edx, DWORD PTR tv86[ebp]
	push	edx
	mov	eax, DWORD PTR tv86[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+88]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1861 : 			if (m_dwMiscStatus & OLEMISC_SETCLIENTSITEFIRST)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+160]
	and	eax, 131072				; 00020000H
	je	SHORT $L151153

; 1862 : 			{
; 1863 : 				CComQIPtr<IOleClientSite> spClientSite(GetControllingUnknown());

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR [edx+16]
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _spClientSite$151176[ebp]
	call	??0?$CComQIPtr@UIOleClientSite@@$1?_GUID_00000118_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComQIPtr<IOleClientSite,&_GUID_00000118_0000_0000_c000_000000000046>::CComQIPtr<IOleClientSite,&_GUID_00000118_0000_0000_c000_000000000046>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1864 : 				m_spOleObject->SetClientSite(spClientSite);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
	mov	DWORD PTR tv140[ebp], eax
	lea	ecx, DWORD PTR _spClientSite$151176[ebp]
	call	??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ ; ATL::CComPtrBase<IOleClientSite>::operator IOleClientSite *
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR tv140[ebp]
	push	eax
	mov	ecx, DWORD PTR tv140[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1865 : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spClientSite$151176[ebp]
	call	??1?$CComQIPtr@UIOleClientSite@@$1?_GUID_00000118_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
$L151153:

; 1866 : 
; 1867 : 			if (!bInited) // If user hasn't initialized the control, initialize/load using IPersistStreamInit or IPersistStream

	movzx	eax, BYTE PTR _bInited$[ebp]
	test	eax, eax
	jne	$L151177

; 1868 : 			{
; 1869 : 				CComQIPtr<IPersistStreamInit> spPSI(m_spOleObject);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??B?$CComPtrBase@UIOleObject@@@ATL@@QBEPAUIOleObject@@XZ ; ATL::CComPtrBase<IOleObject>::operator IOleObject *
	push	eax
	lea	ecx, DWORD PTR _spPSI$151200[ebp]
	call	??0?$CComQIPtr@UIPersistStreamInit@@$1?_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComQIPtr<IPersistStreamInit,&_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713>::CComQIPtr<IPersistStreamInit,&_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713>
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1870 : 				if (spPSI)

	lea	ecx, DWORD PTR _spPSI$151200[ebp]
	call	??B?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBEPAUIPersistStreamInit@@XZ ; ATL::CComPtrBase<IPersistStreamInit>::operator IPersistStreamInit *
	test	eax, eax
	je	SHORT $L151201

; 1871 : 				{
; 1872 : 					if (pStream)

	cmp	DWORD PTR _pStream$[ebp], 0
	je	SHORT $L151202

; 1873 : 						hr = spPSI->Load(pStream);

	lea	ecx, DWORD PTR _spPSI$151200[ebp]
	call	??C?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStreamInit@@@1@XZ ; ATL::CComPtrBase<IPersistStreamInit>::operator->
	mov	DWORD PTR tv162[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _pStream$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv162[ebp]
	push	edx
	mov	eax, DWORD PTR tv162[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+20]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 1874 : 					else

	jmp	SHORT $L151203
$L151202:

; 1875 : 						hr = spPSI->InitNew();

	lea	ecx, DWORD PTR _spPSI$151200[ebp]
	call	??C?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStreamInit@@@1@XZ ; ATL::CComPtrBase<IPersistStreamInit>::operator->
	mov	DWORD PTR tv170[ebp], eax
	mov	edx, DWORD PTR tv170[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv170[ebp]
	push	ecx
	call	DWORD PTR [eax+32]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$L151203:

; 1876 : 				}
; 1877 : 				else if (pStream)

	jmp	SHORT $L151204
$L151201:
	cmp	DWORD PTR _pStream$[ebp], 0
	je	SHORT $L151204

; 1878 : 				{
; 1879 : 					CComQIPtr<IPersistStream> spPS(m_spOleObject);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??B?$CComPtrBase@UIOleObject@@@ATL@@QBEPAUIOleObject@@XZ ; ATL::CComPtrBase<IOleObject>::operator IOleObject *
	push	eax
	lea	ecx, DWORD PTR _spPS$151228[ebp]
	call	??0?$CComQIPtr@UIPersistStream@@$1?_GUID_00000109_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComQIPtr<IPersistStream,&_GUID_00000109_0000_0000_c000_000000000046>::CComQIPtr<IPersistStream,&_GUID_00000109_0000_0000_c000_000000000046>
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 1880 : 					if (spPS)

	lea	ecx, DWORD PTR _spPS$151228[ebp]
	call	??B?$CComPtrBase@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ ; ATL::CComPtrBase<IPersistStream>::operator IPersistStream *
	test	eax, eax
	je	SHORT $L151229

; 1881 : 						hr = spPS->Load(pStream);

	lea	ecx, DWORD PTR _spPS$151228[ebp]
	call	??C?$CComPtrBase@UIPersistStream@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStream@@@1@XZ ; ATL::CComPtrBase<IPersistStream>::operator->
	mov	DWORD PTR tv188[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR _pStream$[ebp]
	push	edx
	mov	eax, DWORD PTR tv188[ebp]
	push	eax
	mov	ecx, DWORD PTR tv188[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+20]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$L151229:

; 1882 : 				}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _spPS$151228[ebp]
	call	??1?$CComQIPtr@UIPersistStream@@$1?_GUID_00000109_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
$L151204:

; 1883 : 
; 1884 : 				if (FAILED(hr)) // If the initialization of the control failed...

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L151231

; 1885 : 				{
; 1886 : 					// Clean up and return
; 1887 : 					if (m_dwMiscStatus & OLEMISC_SETCLIENTSITEFIRST)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+160]
	and	ecx, 131072				; 00020000H
	je	SHORT $L151232

; 1888 : 						m_spOleObject->SetClientSite(NULL);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
	mov	DWORD PTR tv202[ebp], eax
	mov	esi, esp
	push	0
	mov	edx, DWORD PTR tv202[ebp]
	push	edx
	mov	eax, DWORD PTR tv202[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L151232:

; 1889 : 
; 1890 : 					m_dwMiscStatus = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+160], 0

; 1891 : 					m_spOleObject.Release();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?Release@?$CComPtrBase@UIOleObject@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IOleObject>::Release

; 1892 : 					m_spUnknown.Release();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	?Release@?$CComPtrBase@UIUnknown@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IUnknown>::Release

; 1893 : 
; 1894 : 					return hr;

	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T212708[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spPSI$151200[ebp]
	call	??1?$CComQIPtr@UIPersistStreamInit@@$1?_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713@@3U__s_GUID@@B@ATL@@QAE@XZ
	mov	eax, DWORD PTR $T212708[ebp]
	jmp	$L151145
$L151231:

; 1895 : 				}
; 1896 : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spPSI$151200[ebp]
	call	??1?$CComQIPtr@UIPersistStreamInit@@$1?_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713@@3U__s_GUID@@B@ATL@@QAE@XZ
$L151177:

; 1897 : 
; 1898 : 			if (0 == (m_dwMiscStatus & OLEMISC_SETCLIENTSITEFIRST))

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+160]
	and	edx, 131072				; 00020000H
	jne	SHORT $L151234

; 1899 : 			{
; 1900 : 				CComQIPtr<IOleClientSite> spClientSite(GetControllingUnknown());

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR [edx+16]
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _spClientSite$151236[ebp]
	call	??0?$CComQIPtr@UIOleClientSite@@$1?_GUID_00000118_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComQIPtr<IOleClientSite,&_GUID_00000118_0000_0000_c000_000000000046>::CComQIPtr<IOleClientSite,&_GUID_00000118_0000_0000_c000_000000000046>
	mov	DWORD PTR __$EHRec$[ebp+8], 3

; 1901 : 				m_spOleObject->SetClientSite(spClientSite);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
	mov	DWORD PTR tv229[ebp], eax
	lea	ecx, DWORD PTR _spClientSite$151236[ebp]
	call	??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ ; ATL::CComPtrBase<IOleClientSite>::operator IOleClientSite *
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR tv229[ebp]
	push	eax
	mov	ecx, DWORD PTR tv229[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1902 : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spClientSite$151236[ebp]
	call	??1?$CComQIPtr@UIOleClientSite@@$1?_GUID_00000118_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
$L151234:

; 1903 : 
; 1904 : 			m_dwViewObjectType = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+144], 0

; 1905 : 			hr = m_spOleObject->QueryInterface(__uuidof(IViewObjectEx), (void**) &m_spViewObject);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
	mov	DWORD PTR tv241[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??I?$CComPtrBase@UIViewObjectEx@@@ATL@@QAEPAPAUIViewObjectEx@@XZ ; ATL::CComPtrBase<IViewObjectEx>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET FLAT:__GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8
	mov	ecx, DWORD PTR tv241[ebp]
	push	ecx
	mov	edx, DWORD PTR tv241[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 1906 : 			if (FAILED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L151240

; 1907 : 			{
; 1908 : 				hr = m_spOleObject->QueryInterface(__uuidof(IViewObject2), (void**) &m_spViewObject);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
	mov	DWORD PTR tv257[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??I?$CComPtrBase@UIViewObjectEx@@@ATL@@QAEPAPAUIViewObjectEx@@XZ ; ATL::CComPtrBase<IViewObjectEx>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET FLAT:__GUID_00000127_0000_0000_c000_000000000046
	mov	ecx, DWORD PTR tv257[ebp]
	push	ecx
	mov	edx, DWORD PTR tv257[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 1909 : 				if (SUCCEEDED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $L151244

; 1910 : 					m_dwViewObjectType = 3;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+144], 3
$L151244:

; 1911 : 			} else

	jmp	SHORT $L151245
$L151240:

; 1912 : 				m_dwViewObjectType = 7;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+144], 7
$L151245:

; 1913 : 
; 1914 : 			if (FAILED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L151247

; 1915 : 			{
; 1916 : 				hr = m_spOleObject->QueryInterface(__uuidof(IViewObject), (void**) &m_spViewObject);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
	mov	DWORD PTR tv276[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??I?$CComPtrBase@UIViewObjectEx@@@ATL@@QAEPAPAUIViewObjectEx@@XZ ; ATL::CComPtrBase<IViewObjectEx>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET FLAT:__GUID_0000010d_0000_0000_c000_000000000046
	mov	eax, DWORD PTR tv276[ebp]
	push	eax
	mov	ecx, DWORD PTR tv276[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 1917 : 				if (SUCCEEDED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $L151247

; 1918 : 					m_dwViewObjectType = 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+144], 1
$L151247:

; 1919 : 			}
; 1920 : 			CComQIPtr<IAdviseSink> spAdviseSink(GetControllingUnknown());

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR [edx+16]
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _spAdviseSink$151348[ebp]
	call	??0?$CComQIPtr@UIAdviseSink@@$1?_GUID_0000010f_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComQIPtr<IAdviseSink,&_GUID_0000010f_0000_0000_c000_000000000046>::CComQIPtr<IAdviseSink,&_GUID_0000010f_0000_0000_c000_000000000046>
	mov	DWORD PTR __$EHRec$[ebp+8], 4

; 1921 : 			m_spOleObject->Advise(spAdviseSink, &m_dwOleObject);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
	mov	DWORD PTR tv301[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 156				; 0000009cH
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _spAdviseSink$151348[ebp]
	call	??B?$CComPtrBase@UIAdviseSink@@@ATL@@QBEPAUIAdviseSink@@XZ ; ATL::CComPtrBase<IAdviseSink>::operator IAdviseSink *
	push	eax
	mov	ecx, DWORD PTR tv301[ebp]
	push	ecx
	mov	edx, DWORD PTR tv301[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax+76]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1922 : 			if (m_spViewObject)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??B?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAUIViewObjectEx@@XZ ; ATL::CComPtrBase<IViewObjectEx>::operator IViewObjectEx *
	test	eax, eax
	je	SHORT $L151349

; 1923 : 				m_spViewObject->SetAdvise(DVASPECT_CONTENT, 0, spAdviseSink);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??C?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIViewObjectEx@@@1@XZ ; ATL::CComPtrBase<IViewObjectEx>::operator->
	mov	DWORD PTR tv318[ebp], eax
	lea	ecx, DWORD PTR _spAdviseSink$151348[ebp]
	call	??B?$CComPtrBase@UIAdviseSink@@@ATL@@QBEPAUIAdviseSink@@XZ ; ATL::CComPtrBase<IAdviseSink>::operator IAdviseSink *
	mov	esi, esp
	push	eax
	push	0
	push	1
	mov	ecx, DWORD PTR tv318[ebp]
	push	ecx
	mov	edx, DWORD PTR tv318[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax+28]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L151349:

; 1924 : 			m_spOleObject->SetHostNames(OLESTR("AXWIN"), NULL);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
	mov	DWORD PTR tv331[ebp], eax
	mov	esi, esp
	push	0
	push	OFFSET FLAT:??_C@_1M@IJFAIKMG@?$AAA?$AAX?$AAW?$AAI?$AAN?$AA?$AA@
	mov	ecx, DWORD PTR tv331[ebp]
	push	ecx
	mov	edx, DWORD PTR tv331[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax+20]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1925 : 
; 1926 : 			if ((m_dwMiscStatus & OLEMISC_INVISIBLEATRUNTIME) == 0)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+160]
	and	edx, 1024				; 00000400H
	jne	$L151351

; 1927 : 			{
; 1928 : 				GetClientRect(&m_rcPos);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 180				; 000000b4H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetClientRect@CWindow@ATL@@QBEHPAUtagRECT@@@Z ; ATL::CWindow::GetClientRect

; 1929 : 				m_pxSize.cx = m_rcPos.right - m_rcPos.left;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+188]
	sub	eax, DWORD PTR [edx+180]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+172], eax

; 1930 : 				m_pxSize.cy = m_rcPos.bottom - m_rcPos.top;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+192]
	sub	ecx, DWORD PTR [eax+184]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+176], ecx

; 1931 : 				AtlPixelToHiMetric(&m_pxSize, &m_hmSize);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 164				; 000000a4H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	push	ecx
	call	?AtlPixelToHiMetric@ATL@@YGXPBUtagSIZE@@PAU2@@Z ; ATL::AtlPixelToHiMetric

; 1932 : 				m_spOleObject->SetExtent(DVASPECT_CONTENT, &m_hmSize);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
	mov	DWORD PTR tv366[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 164				; 000000a4H
	mov	esi, esp
	push	edx
	push	1
	mov	eax, DWORD PTR tv366[ebp]
	push	eax
	mov	ecx, DWORD PTR tv366[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+68]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1933 : 				m_spOleObject->GetExtent(DVASPECT_CONTENT, &m_hmSize);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
	mov	DWORD PTR tv377[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 164				; 000000a4H
	mov	esi, esp
	push	eax
	push	1
	mov	ecx, DWORD PTR tv377[ebp]
	push	ecx
	mov	edx, DWORD PTR tv377[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax+72]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1934 : 				AtlHiMetricToPixel(&m_hmSize, &m_pxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 164				; 000000a4H
	push	edx
	call	?AtlHiMetricToPixel@ATL@@YGXPBUtagSIZE@@PAU2@@Z ; ATL::AtlHiMetricToPixel

; 1935 : 				m_rcPos.right = m_rcPos.left + m_pxSize.cx;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+180]
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+172]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+188], ecx

; 1936 : 				m_rcPos.bottom = m_rcPos.top + m_pxSize.cy;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+176]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+192], edx

; 1937 : 
; 1938 : 				CComQIPtr<IOleClientSite> spClientSite(GetControllingUnknown());

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR [eax+16]
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _spClientSite$151353[ebp]
	call	??0?$CComQIPtr@UIOleClientSite@@$1?_GUID_00000118_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComQIPtr<IOleClientSite,&_GUID_00000118_0000_0000_c000_000000000046>::CComQIPtr<IOleClientSite,&_GUID_00000118_0000_0000_c000_000000000046>
	mov	BYTE PTR __$EHRec$[ebp+8], 5

; 1939 : 				hr = m_spOleObject->DoVerb(OLEIVERB_INPLACEACTIVATE, NULL, spClientSite, 0, m_hWnd, &m_rcPos);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ ; ATL::CComPtrBase<IOleObject>::operator->
	mov	DWORD PTR tv414[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 180				; 000000b4H
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	push	0
	lea	ecx, DWORD PTR _spClientSite$151353[ebp]
	call	??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ ; ATL::CComPtrBase<IOleClientSite>::operator IOleClientSite *
	push	eax
	push	0
	push	-5					; fffffffbH
	mov	ecx, DWORD PTR tv414[ebp]
	push	ecx
	mov	edx, DWORD PTR tv414[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax+44]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 1940 : 				RedrawWindow(NULL, NULL, RDW_INVALIDATE | RDW_UPDATENOW | RDW_ERASE | RDW_INTERNALPAINT | RDW_FRAME);

	push	1287					; 00000507H
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?RedrawWindow@CWindow@ATL@@QAEHPBUtagRECT@@PAUHRGN__@@I@Z ; ATL::CWindow::RedrawWindow

; 1941 : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _spClientSite$151353[ebp]
	call	??1?$CComQIPtr@UIOleClientSite@@$1?_GUID_00000118_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
$L151351:

; 1942 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spAdviseSink$151348[ebp]
	call	??1?$CComQIPtr@UIAdviseSink@@$1?_GUID_0000010f_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
$L151152:

; 1943 : 		CComPtr<IObjectWithSite> spSite;

	lea	ecx, DWORD PTR _spSite$[ebp]
	call	??0?$CComPtr@UIObjectWithSite@@@ATL@@QAE@XZ ; ATL::CComPtr<IObjectWithSite>::CComPtr<IObjectWithSite>
	mov	DWORD PTR __$EHRec$[ebp+8], 6

; 1944 : 		pUnkControl->QueryInterface(__uuidof(IObjectWithSite), (void**)&spSite);

	lea	ecx, DWORD PTR _spSite$[ebp]
	call	??I?$CComPtrBase@UIObjectWithSite@@@ATL@@QAEPAPAUIObjectWithSite@@XZ ; ATL::CComPtrBase<IObjectWithSite>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET FLAT:__GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
	mov	ecx, DWORD PTR _pUnkControl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pUnkControl$[ebp]
	push	eax
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1945 : 		if (spSite != NULL)

	lea	ecx, DWORD PTR _spSite$[ebp]
	call	??B?$CComPtrBase@UIObjectWithSite@@@ATL@@QBEPAUIObjectWithSite@@XZ ; ATL::CComPtrBase<IObjectWithSite>::operator IObjectWithSite *
	test	eax, eax
	je	SHORT $L151356

; 1946 : 			spSite->SetSite(GetControllingUnknown());

	lea	ecx, DWORD PTR _spSite$[ebp]
	call	??C?$CComPtrBase@UIObjectWithSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIObjectWithSite@@@1@XZ ; ATL::CComPtrBase<IObjectWithSite>::operator->
	mov	DWORD PTR tv449[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR [edx+16]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR tv449[ebp]
	push	eax
	mov	ecx, DWORD PTR tv449[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L151356:

; 1947 : 
; 1948 : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T212709[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _spSite$[ebp]
	call	??1?$CComPtr@UIObjectWithSite@@@ATL@@QAE@XZ
	mov	eax, DWORD PTR $T212709[ebp]
$L151145:

; 1949 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212728
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	add	esp, 180				; 000000b4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$L212728:
	DD	7
	DD	$L212727
$L212727:
	DD	-28					; ffffffe4H
	DD	4
	DD	$L212719
	DD	-40					; ffffffd8H
	DD	4
	DD	$L212720
	DD	-52					; ffffffccH
	DD	4
	DD	$L212721
	DD	-64					; ffffffc0H
	DD	4
	DD	$L212722
	DD	-76					; ffffffb4H
	DD	4
	DD	$L212723
	DD	-88					; ffffffa8H
	DD	4
	DD	$L212724
	DD	-100					; ffffff9cH
	DD	4
	DD	$L212725
$L212725:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$L212724:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$L212723:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	65					; 00000041H
	DB	100					; 00000064H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	0
$L212722:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$L212721:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	80					; 00000050H
	DB	83					; 00000053H
	DB	0
$L212720:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	80					; 00000050H
	DB	83					; 00000053H
	DB	73					; 00000049H
	DB	0
$L212719:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L212710:
	lea	ecx, DWORD PTR _spClientSite$151176[ebp]
	jmp	??1?$CComQIPtr@UIOleClientSite@@$1?_GUID_00000118_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
$L212711:
	lea	ecx, DWORD PTR _spPSI$151200[ebp]
	jmp	??1?$CComQIPtr@UIPersistStreamInit@@$1?_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713@@3U__s_GUID@@B@ATL@@QAE@XZ
$L212712:
	lea	ecx, DWORD PTR _spPS$151228[ebp]
	jmp	??1?$CComQIPtr@UIPersistStream@@$1?_GUID_00000109_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
$L212713:
	lea	ecx, DWORD PTR _spClientSite$151236[ebp]
	jmp	??1?$CComQIPtr@UIOleClientSite@@$1?_GUID_00000118_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
$L212714:
	lea	ecx, DWORD PTR _spAdviseSink$151348[ebp]
	jmp	??1?$CComQIPtr@UIAdviseSink@@$1?_GUID_0000010f_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
$L212715:
	lea	ecx, DWORD PTR _spClientSite$151353[ebp]
	jmp	??1?$CComQIPtr@UIOleClientSite@@$1?_GUID_00000118_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
$L212716:
	lea	ecx, DWORD PTR _spSite$[ebp]
	jmp	??1?$CComPtr@UIObjectWithSite@@@ATL@@QAE@XZ
__ehhandler$?ActivateAx@CAxHostWindow@ATL@@QAEJPAUIUnknown@@_NPAUIStream@@@Z:
	mov	eax, OFFSET FLAT:$T212718
	jmp	___CxxFrameHandler
text$x	ENDS
?ActivateAx@CAxHostWindow@ATL@@QAEJPAUIUnknown@@_NPAUIStream@@@Z ENDP ; ATL::CAxHostWindow::ActivateAx
PUBLIC	?SubclassWindow@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEHPAUHWND__@@@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::SubclassWindow
; Function compile flags: /Odt /RTCsu
;	COMDAT ?SubclassWindow@CAxHostWindow@ATL@@QAEXPAUHWND__@@@Z
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
_hWnd$ = 8						; size = 4
?SubclassWindow@CAxHostWindow@ATL@@QAEXPAUHWND__@@@Z PROC NEAR ; ATL::CAxHostWindow::SubclassWindow, COMDAT
; _this$ = ecx

; 2004 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2005 : 		m_bSubclassed = CWindowImpl<CAxHostWindow>::SubclassWindow(hWnd);

	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SubclassWindow@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEHPAUHWND__@@@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::SubclassWindow
	mov	DWORD PTR tv68[ebp], eax
	mov	ecx, DWORD PTR tv68[ebp]
	and	ecx, 1
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+200]
	and	eax, -17				; ffffffefH
	or	eax, ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+200], eax

; 2006 : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SubclassWindow@CAxHostWindow@ATL@@QAEXPAUHWND__@@@Z ENDP ; ATL::CAxHostWindow::SubclassWindow
_TEXT	ENDS
PUBLIC	?DestroyWindow@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEHXZ ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::DestroyWindow
PUBLIC	?UnsubclassWindow@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@H@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::UnsubclassWindow
; Function compile flags: /Odt /RTCsu
;	COMDAT ?ReleaseWindow@CAxHostWindow@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ReleaseWindow@CAxHostWindow@ATL@@QAEXXZ PROC NEAR	; ATL::CAxHostWindow::ReleaseWindow, COMDAT
; _this$ = ecx

; 2009 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2010 : 		if (m_bSubclassed)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	shr	ecx, 4
	and	ecx, 1
	je	SHORT $L151365

; 2011 : 		{
; 2012 : 			if(UnsubclassWindow(TRUE) != NULL)

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?UnsubclassWindow@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@H@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::UnsubclassWindow
	test	eax, eax
	je	SHORT $L151366

; 2013 : 				m_bSubclassed = FALSE;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+200]
	and	eax, -17				; ffffffefH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+200], eax
$L151366:

; 2014 : 		}
; 2015 : 		else

	jmp	SHORT $L151364
$L151365:

; 2016 : 			DestroyWindow();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DestroyWindow@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEHXZ ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::DestroyWindow
$L151364:

; 2017 : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReleaseWindow@CAxHostWindow@ATL@@QAEXXZ ENDP		; ATL::CAxHostWindow::ReleaseWindow
_TEXT	ENDS
PUBLIC	?DefWindowProcA@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEJXZ ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::DefWindowProcA
PUBLIC	??_C@_0BG@FBJLDDEB@?3?3IsWindow?$CIhWndChild?$CJ?$AA@ ; `string'
;	COMDAT ??_C@_0BG@FBJLDDEB@?3?3IsWindow?$CIhWndChild?$CJ?$AA@
CONST	SEGMENT
??_C@_0BG@FBJLDDEB@?3?3IsWindow?$CIhWndChild?$CJ?$AA@ DB '::IsWindow(hWnd'
	DB	'Child)', 00H				; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?ReflectNotifications@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT
tv174 = -56						; size = 4
tv70 = -52						; size = 4
tv64 = -48						; size = 4
$T212741 = -44						; size = 4
$T212740 = -40						; size = 4
$T212739 = -36						; size = 4
$T212738 = -32						; size = 4
_lRes$151417 = -24					; size = 4
_pmis$151400 = -16					; size = 4
_pdis$151394 = -12					; size = 4
_hWndChild$ = -8					; size = 4
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
_bHandled$ = 20						; size = 4
?ReflectNotifications@CAxHostWindow@ATL@@QAEJIIJAAH@Z PROC NEAR ; ATL::CAxHostWindow::ReflectNotifications, COMDAT
; _this$ = ecx

; 2021 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 14					; 0000000eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2022 : 		HWND hWndChild = NULL;

	mov	DWORD PTR _hWndChild$[ebp], 0

; 2023 : 
; 2024 : 		switch(uMsg)

	mov	eax, DWORD PTR _uMsg$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 78			; 0000004eH
	ja	SHORT $L212742
	cmp	DWORD PTR tv64[ebp], 78			; 0000004eH
	je	$L151378
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 43					; 0000002bH
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 14			; 0000000eH
	ja	$L151372
	mov	edx, DWORD PTR tv64[ebp]
	movzx	eax, BYTE PTR $L212745[edx]
	jmp	DWORD PTR $L212749[eax*4]
$L212742:
	cmp	DWORD PTR tv64[ebp], 312		; 00000138H
	ja	SHORT $L212743
	cmp	DWORD PTR tv64[ebp], 306		; 00000132H
	jae	$L151412
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	SHORT $L151375
	cmp	DWORD PTR tv64[ebp], 275		; 00000113H
	jbe	$L151372
	cmp	DWORD PTR tv64[ebp], 277		; 00000115H
	jbe	$L151410
	jmp	$L151372
$L212743:
	cmp	DWORD PTR tv64[ebp], 528		; 00000210H
	je	SHORT $L151380
	jmp	$L151372
$L151375:

; 2025 : 		{
; 2026 : 		case WM_COMMAND:
; 2027 : 			if(lParam != NULL)	// not from a menu

	cmp	DWORD PTR _lParam$[ebp], 0
	je	SHORT $L151376

; 2028 : 				hWndChild = (HWND)lParam;

	mov	ecx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _hWndChild$[ebp], ecx
$L151376:

; 2029 : 			break;

	jmp	$L151372
$L151378:

; 2030 : 		case WM_NOTIFY:
; 2031 : 			hWndChild = ((LPNMHDR)lParam)->hwndFrom;

	mov	edx, DWORD PTR _lParam$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _hWndChild$[ebp], eax

; 2032 : 			break;

	jmp	$L151372
$L151380:

; 2033 : 		case WM_PARENTNOTIFY:
; 2034 : 			DefWindowProc();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DefWindowProcA@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEJXZ ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::DefWindowProcA

; 2035 : 			switch(LOWORD(wParam))

	mov	ecx, DWORD PTR _wParam$[ebp]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	mov	DWORD PTR tv70[ebp], edx
	cmp	DWORD PTR tv70[ebp], 0
	jle	SHORT $L151389
	cmp	DWORD PTR tv70[ebp], 2
	jle	SHORT $L151387
	jmp	SHORT $L151389
$L151387:

; 2036 : 			{
; 2037 : 			case WM_CREATE:
; 2038 : 			case WM_DESTROY:
; 2039 : 				hWndChild = (HWND)lParam;

	mov	eax, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _hWndChild$[ebp], eax

; 2040 : 				break;

	jmp	SHORT $L151384
$L151389:

; 2041 : 			default:
; 2042 : 				hWndChild = GetDlgItem(HIWORD(wParam));

	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	movzx	edx, cx
	push	edx
	lea	eax, DWORD PTR $T212738[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetDlgItem@CWindow@ATL@@QBE?AV12@H@Z	; ATL::CWindow::GetDlgItem
	mov	ecx, eax
	call	??BCWindow@ATL@@QBEPAUHWND__@@XZ	; ATL::CWindow::operator HWND__ *
	mov	DWORD PTR _hWndChild$[ebp], eax
$L151384:

; 2043 : 				break;
; 2044 : 			}
; 2045 : 			break;

	jmp	$L151372
$L151393:

; 2046 : 		case WM_DRAWITEM:
; 2047 : 			{
; 2048 : 				DRAWITEMSTRUCT* pdis = ((LPDRAWITEMSTRUCT)lParam);

	mov	ecx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _pdis$151394[ebp], ecx

; 2049 : 				if (pdis->CtlType != ODT_MENU)	// not from a menu

	mov	edx, DWORD PTR _pdis$151394[ebp]
	cmp	DWORD PTR [edx], 1
	je	SHORT $L151396

; 2050 : 					hWndChild = pdis->hwndItem;

	mov	eax, DWORD PTR _pdis$151394[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _hWndChild$[ebp], ecx

; 2051 : 				else							// Status bar control sends this message with type set to ODT_MENU

	jmp	SHORT $L151397
$L151396:

; 2052 : 					if (::IsWindow(pdis->hwndItem))

	mov	esi, esp
	mov	edx, DWORD PTR _pdis$151394[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $L151397

; 2053 : 						hWndChild = pdis->hwndItem;

	mov	ecx, DWORD PTR _pdis$151394[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR _hWndChild$[ebp], edx
$L151397:

; 2054 : 			}
; 2055 : 			break;

	jmp	$L151372
$L151399:

; 2056 : 		case WM_MEASUREITEM:
; 2057 : 			{
; 2058 : 				MEASUREITEMSTRUCT* pmis = ((LPMEASUREITEMSTRUCT)lParam);

	mov	eax, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _pmis$151400[ebp], eax

; 2059 : 				if(pmis->CtlType != ODT_MENU)	// not from a menu

	mov	ecx, DWORD PTR _pmis$151400[ebp]
	cmp	DWORD PTR [ecx], 1
	je	SHORT $L151402

; 2060 : 					hWndChild = GetDlgItem(pmis->CtlID);

	mov	edx, DWORD PTR _pmis$151400[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T212739[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetDlgItem@CWindow@ATL@@QBE?AV12@H@Z	; ATL::CWindow::GetDlgItem
	mov	ecx, eax
	call	??BCWindow@ATL@@QBEPAUHWND__@@XZ	; ATL::CWindow::operator HWND__ *
	mov	DWORD PTR _hWndChild$[ebp], eax
$L151402:

; 2061 : 			}
; 2062 : 			break;

	jmp	SHORT $L151372
$L151404:

; 2063 : 		case WM_COMPAREITEM:
; 2064 : 				// Sent only by combo or list box
; 2065 : 				hWndChild = GetDlgItem(((LPCOMPAREITEMSTRUCT)lParam)->CtlID);

	mov	edx, DWORD PTR _lParam$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T212740[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetDlgItem@CWindow@ATL@@QBE?AV12@H@Z	; ATL::CWindow::GetDlgItem
	mov	ecx, eax
	call	??BCWindow@ATL@@QBEPAUHWND__@@XZ	; ATL::CWindow::operator HWND__ *
	mov	DWORD PTR _hWndChild$[ebp], eax

; 2066 : 			break;

	jmp	SHORT $L151372
$L151407:

; 2067 : 		case WM_DELETEITEM:
; 2068 : 				// Sent only by combo or list box
; 2069 : 				hWndChild = GetDlgItem(((LPDELETEITEMSTRUCT)lParam)->CtlID);

	mov	edx, DWORD PTR _lParam$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T212741[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?GetDlgItem@CWindow@ATL@@QBE?AV12@H@Z	; ATL::CWindow::GetDlgItem
	mov	ecx, eax
	call	??BCWindow@ATL@@QBEPAUHWND__@@XZ	; ATL::CWindow::operator HWND__ *
	mov	DWORD PTR _hWndChild$[ebp], eax

; 2070 : 			break;

	jmp	SHORT $L151372
$L151410:

; 2071 : 		case WM_VKEYTOITEM:
; 2072 : 		case WM_CHARTOITEM:
; 2073 : 		case WM_HSCROLL:
; 2074 : 		case WM_VSCROLL:
; 2075 : 			hWndChild = (HWND)lParam;

	mov	edx, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _hWndChild$[ebp], edx

; 2076 : 			break;

	jmp	SHORT $L151372
$L151412:

; 2077 : 		case WM_CTLCOLORBTN:
; 2078 : 		case WM_CTLCOLORDLG:
; 2079 : 		case WM_CTLCOLOREDIT:
; 2080 : 		case WM_CTLCOLORLISTBOX:
; 2081 : 		case WM_CTLCOLORMSGBOX:
; 2082 : 		case WM_CTLCOLORSCROLLBAR:
; 2083 : 		case WM_CTLCOLORSTATIC:
; 2084 : 			hWndChild = (HWND)lParam;

	mov	eax, DWORD PTR _lParam$[ebp]
	mov	DWORD PTR _hWndChild$[ebp], eax
$L151372:

; 2085 : 			break;
; 2086 : 		default:
; 2087 : 			break;
; 2088 : 		}
; 2089 : 
; 2090 : 		if(hWndChild == NULL)

	cmp	DWORD PTR _hWndChild$[ebp], 0
	jne	SHORT $L151415

; 2091 : 		{
; 2092 : 			bHandled = FALSE;

	mov	ecx, DWORD PTR _bHandled$[ebp]
	mov	DWORD PTR [ecx], 0

; 2093 : 			return 1;

	mov	eax, 1
	jmp	$L151369
$L151415:

; 2094 : 		}
; 2095 : 
; 2096 : 		if (m_bWindowless)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+152]
	shr	eax, 3
	and	eax, 1
	je	SHORT $L151416

; 2097 : 		{
; 2098 : 			LRESULT lRes = 0;

	mov	DWORD PTR _lRes$151417[ebp], 0

; 2099 : 			if (m_bInPlaceActive && m_spInPlaceObjectWindowless)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+152]
	and	edx, 1
	je	SHORT $L151418
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??B?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBEPAUIOleInPlaceObjectWindowless@@XZ ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator IOleInPlaceObjectWindowless *
	test	eax, eax
	je	SHORT $L151418

; 2100 : 				m_spInPlaceObjectWindowless->OnWindowMessage(OCM__BASE + uMsg, wParam, lParam, &lRes);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??C?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceObjectWindowless@@@1@XZ ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator->
	mov	DWORD PTR tv174[ebp], eax
	mov	esi, esp
	lea	eax, DWORD PTR _lRes$151417[ebp]
	push	eax
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _uMsg$[ebp]
	add	eax, 8192				; 00002000H
	push	eax
	mov	ecx, DWORD PTR tv174[ebp]
	push	ecx
	mov	edx, DWORD PTR tv174[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax+36]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L151418:

; 2101 : 			return lRes;

	mov	eax, DWORD PTR _lRes$151417[ebp]
	jmp	SHORT $L151369
$L151416:

; 2102 : 		}
; 2103 : 
; 2104 : 		ATLASSERT(::IsWindow(hWndChild));

	mov	esi, esp
	mov	ecx, DWORD PTR _hWndChild$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L212744
	push	OFFSET FLAT:??_C@_0BG@FBJLDDEB@?3?3IsWindow?$CIhWndChild?$CJ?$AA@
	push	0
	push	2104					; 00000838H
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212744
	int	3
$L212744:

; 2105 : 		return ::SendMessage(hWndChild, OCM__BASE + uMsg, wParam, lParam);

	mov	esi, esp
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	add	edx, 8192				; 00002000H
	push	edx
	mov	eax, DWORD PTR _hWndChild$[ebp]
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$L151369:

; 2106 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212748
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$L212748:
	DD	1
	DD	$L212747
$L212747:
	DD	-24					; ffffffe8H
	DD	4
	DD	$L212746
$L212746:
	DB	108					; 0000006cH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$L212749:
	DD	$L151393
	DD	$L151399
	DD	$L151407
	DD	$L151410
	DD	$L151404
	DD	$L151372
$L212745:
	DB	0
	DB	1
	DB	2
	DB	3
	DB	3
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	4
?ReflectNotifications@CAxHostWindow@ATL@@QAEJIIJAAH@Z ENDP ; ATL::CAxHostWindow::ReflectNotifications
_TEXT	ENDS
PUBLIC	??B?$CComPtrBase@UIServiceProvider@@@ATL@@QBEPAUIServiceProvider@@XZ ; ATL::CComPtrBase<IServiceProvider>::operator IServiceProvider *
PUBLIC	??C?$CComPtrBase@UIServiceProvider@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIServiceProvider@@@1@XZ ; ATL::CComPtrBase<IServiceProvider>::operator->
PUBLIC	??_C@_0M@HHBDEBO@ppvObj?5?$CB?$DN?50?$AA@	; `string'
;	COMDAT ??_C@_0M@HHBDEBO@ppvObj?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0M@HHBDEBO@ppvObj?5?$CB?$DN?50?$AA@ DB 'ppvObj != 0', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?QueryService@CAxHostWindow@ATL@@UAGJABU_GUID@@0PAPAX@Z
_TEXT	SEGMENT
tv89 = -8						; size = 4
_hr$ = -4						; size = 4
_this$ = 8						; size = 4
_rsid$ = 12						; size = 4
_riid$ = 16						; size = 4
_ppvObj$ = 20						; size = 4
?QueryService@CAxHostWindow@ATL@@UAGJABU_GUID@@0PAPAX@Z PROC NEAR ; ATL::CAxHostWindow::QueryService, COMDAT

; 2109 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 2110 : 		ATLASSERT(ppvObj != NULL);

	cmp	DWORD PTR _ppvObj$[ebp], 0
	jne	SHORT $L212752
	push	OFFSET FLAT:??_C@_0M@HHBDEBO@ppvObj?5?$CB?$DN?50?$AA@
	push	0
	push	2110					; 0000083eH
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212752
	int	3
$L212752:

; 2111 : 		if (ppvObj == NULL)

	cmp	DWORD PTR _ppvObj$[ebp], 0
	jne	SHORT $L151425

; 2112 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L151422
$L151425:

; 2113 : 		*ppvObj = NULL;

	mov	ecx, DWORD PTR _ppvObj$[ebp]
	mov	DWORD PTR [ecx], 0

; 2114 : 
; 2115 : 		HRESULT hr = E_NOINTERFACE;

	mov	DWORD PTR _hr$[ebp], -2147467262	; 80004002H

; 2116 : 		// Try for service on this object
; 2117 : 
; 2118 : 		// No services currently
; 2119 : 
; 2120 : 		// If that failed try to find the service on the outer object
; 2121 : 		if (FAILED(hr) && m_spServices)

	cmp	DWORD PTR _hr$[ebp], 0
	setl	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $L151430
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	call	??B?$CComPtrBase@UIServiceProvider@@@ATL@@QBEPAUIServiceProvider@@XZ ; ATL::CComPtrBase<IServiceProvider>::operator IServiceProvider *
	test	eax, eax
	je	SHORT $L151430

; 2122 : 			hr = m_spServices->QueryService(rsid, riid, ppvObj);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 156				; 0000009cH
	call	??C?$CComPtrBase@UIServiceProvider@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIServiceProvider@@@1@XZ ; ATL::CComPtrBase<IServiceProvider>::operator->
	mov	DWORD PTR tv89[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _ppvObj$[ebp]
	push	ecx
	mov	edx, DWORD PTR _riid$[ebp]
	push	edx
	mov	eax, DWORD PTR _rsid$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv89[ebp]
	push	ecx
	mov	edx, DWORD PTR tv89[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$L151430:

; 2123 : 
; 2124 : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]
$L151422:

; 2125 : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?QueryService@CAxHostWindow@ATL@@UAGJABU_GUID@@0PAPAX@Z ENDP ; ATL::CAxHostWindow::QueryService
_TEXT	ENDS
PUBLIC	??0?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CWindowImpl@VCAxHostWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWindowImpl@VCAxHostWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ PROC NEAR ; ATL::CWindowImpl<ATL::CAxHostWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::CWindowImpl<ATL::CAxHostWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CWindowImpl@VCAxHostWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ ENDP ; ATL::CWindowImpl<ATL::CAxHostWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::CWindowImpl<ATL::CAxHostWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >
_TEXT	ENDS
PUBLIC	??0IAxWinHostWindow@@QAE@XZ			; IAxWinHostWindow::IAxWinHostWindow
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0IAxWinHostWindowLic@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IAxWinHostWindowLic@@QAE@XZ PROC NEAR		; IAxWinHostWindowLic::IAxWinHostWindowLic, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IAxWinHostWindow@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IAxWinHostWindowLic@@QAE@XZ ENDP			; IAxWinHostWindowLic::IAxWinHostWindowLic
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0IOleClientSite@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IOleClientSite@@QAE@XZ PROC NEAR			; IOleClientSite::IOleClientSite, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IOleClientSite@@QAE@XZ ENDP				; IOleClientSite::IOleClientSite
_TEXT	ENDS
PUBLIC	??0IOleInPlaceSiteEx@@QAE@XZ			; IOleInPlaceSiteEx::IOleInPlaceSiteEx
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0IOleInPlaceSiteWindowless@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IOleInPlaceSiteWindowless@@QAE@XZ PROC NEAR		; IOleInPlaceSiteWindowless::IOleInPlaceSiteWindowless, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IOleInPlaceSiteEx@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IOleInPlaceSiteWindowless@@QAE@XZ ENDP		; IOleInPlaceSiteWindowless::IOleInPlaceSiteWindowless
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0IOleControlSite@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IOleControlSite@@QAE@XZ PROC NEAR			; IOleControlSite::IOleControlSite, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IOleControlSite@@QAE@XZ ENDP				; IOleControlSite::IOleControlSite
_TEXT	ENDS
PUBLIC	??0IParseDisplayName@@QAE@XZ			; IParseDisplayName::IParseDisplayName
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0IOleContainer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IOleContainer@@QAE@XZ PROC NEAR			; IOleContainer::IOleContainer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IParseDisplayName@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IOleContainer@@QAE@XZ ENDP				; IOleContainer::IOleContainer
_TEXT	ENDS
PUBLIC	??0IObjectWithSite@@QAE@XZ			; IObjectWithSite::IObjectWithSite
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::IObjectWithSiteImpl<ATL::CAxHostWindow>::IObjectWithSiteImpl<ATL::CAxHostWindow>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IObjectWithSite@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ	; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@QAE@XZ ENDP ; ATL::IObjectWithSiteImpl<ATL::CAxHostWindow>::IObjectWithSiteImpl<ATL::CAxHostWindow>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0IServiceProvider@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IServiceProvider@@QAE@XZ PROC NEAR			; IServiceProvider::IServiceProvider, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IServiceProvider@@QAE@XZ ENDP			; IServiceProvider::IServiceProvider
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0IAdviseSink@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IAdviseSink@@QAE@XZ PROC NEAR			; IAdviseSink::IAdviseSink, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IAdviseSink@@QAE@XZ ENDP				; IAdviseSink::IAdviseSink
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0IDocHostUIHandler@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IDocHostUIHandler@@QAE@XZ PROC NEAR			; IDocHostUIHandler::IDocHostUIHandler, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IDocHostUIHandler@@QAE@XZ ENDP			; IDocHostUIHandler::IDocHostUIHandler
_TEXT	ENDS
PUBLIC	??0IAxWinAmbientDispatchEx@@QAE@XZ		; IAxWinAmbientDispatchEx::IAxWinAmbientDispatchEx
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::IDispatchImpl<IAxWinAmbientDispatchEx,&_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5,&ATL::CAtlModule::m_libid,65535,65535,ATL::CComTypeInfoHolder>::IDispatchImpl<IAxWinAmbientDispatchEx,&_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5,&ATL::CAtlModule::m_libid,65535,65535,ATL::CComTypeInfoHolder>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IAxWinAmbientDispatchEx@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@QAE@XZ ENDP ; ATL::IDispatchImpl<IAxWinAmbientDispatchEx,&_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5,&ATL::CAtlModule::m_libid,65535,65535,ATL::CComTypeInfoHolder>::IDispatchImpl<IAxWinAmbientDispatchEx,&_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5,&ATL::CAtlModule::m_libid,65535,65535,ATL::CComTypeInfoHolder>
_TEXT	ENDS
PUBLIC	??1?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleInPlaceActiveObject>::~CComPtr<IOleInPlaceActiveObject>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComQIPtr@UIOleInPlaceActiveObject@@$1?_GUID_00000117_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComQIPtr@UIOleInPlaceActiveObject@@$1?_GUID_00000117_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ PROC NEAR ; ATL::CComQIPtr<IOleInPlaceActiveObject,&_GUID_00000117_0000_0000_c000_000000000046>::~CComQIPtr<IOleInPlaceActiveObject,&_GUID_00000117_0000_0000_c000_000000000046>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComQIPtr@UIOleInPlaceActiveObject@@$1?_GUID_00000117_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ ENDP ; ATL::CComQIPtr<IOleInPlaceActiveObject,&_GUID_00000117_0000_0000_c000_000000000046>::~CComQIPtr<IOleInPlaceActiveObject,&_GUID_00000117_0000_0000_c000_000000000046>
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IOleInPlaceActiveObject>::~CComPtrBase<IOleInPlaceActiveObject>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtr<IOleInPlaceActiveObject>::~CComPtr<IOleInPlaceActiveObject>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IOleInPlaceActiveObject>::~CComPtrBase<IOleInPlaceActiveObject>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ ENDP ; ATL::CComPtr<IOleInPlaceActiveObject>::~CComPtr<IOleInPlaceActiveObject>
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UIOleClientSite@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IOleClientSite>::~CComPtrBase<IOleClientSite>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIOleClientSite@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIOleClientSite@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<IOleClientSite>::~CComPtr<IOleClientSite>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIOleClientSite@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IOleClientSite>::~CComPtrBase<IOleClientSite>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIOleClientSite@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IOleClientSite>::~CComPtr<IOleClientSite>
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UIPersistStreamInit@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IPersistStreamInit>::~CComPtrBase<IPersistStreamInit>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtr<IPersistStreamInit>::~CComPtr<IPersistStreamInit>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIPersistStreamInit@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IPersistStreamInit>::~CComPtrBase<IPersistStreamInit>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IPersistStreamInit>::~CComPtr<IPersistStreamInit>
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UIWebBrowser2@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IWebBrowser2>::~CComPtrBase<IWebBrowser2>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIWebBrowser2@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIWebBrowser2@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<IWebBrowser2>::~CComPtr<IWebBrowser2>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIWebBrowser2@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IWebBrowser2>::~CComPtrBase<IWebBrowser2>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIWebBrowser2@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IWebBrowser2>::~CComPtr<IWebBrowser2>
_TEXT	ENDS
PUBLIC	??1?$CComPtr@UIOleControl@@@ATL@@QAE@XZ		; ATL::CComPtr<IOleControl>::~CComPtr<IOleControl>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComQIPtr@UIOleControl@@$1?_GUID_b196b288_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComQIPtr@UIOleControl@@$1?_GUID_b196b288_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ PROC NEAR ; ATL::CComQIPtr<IOleControl,&_GUID_b196b288_bab4_101a_b69c_00aa00341d07>::~CComQIPtr<IOleControl,&_GUID_b196b288_bab4_101a_b69c_00aa00341d07>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtr@UIOleControl@@@ATL@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComQIPtr@UIOleControl@@$1?_GUID_b196b288_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ ENDP ; ATL::CComQIPtr<IOleControl,&_GUID_b196b288_bab4_101a_b69c_00aa00341d07>::~CComQIPtr<IOleControl,&_GUID_b196b288_bab4_101a_b69c_00aa00341d07>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComQIPtr@UIOleClientSite@@$1?_GUID_00000118_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComQIPtr@UIOleClientSite@@$1?_GUID_00000118_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ PROC NEAR ; ATL::CComQIPtr<IOleClientSite,&_GUID_00000118_0000_0000_c000_000000000046>::~CComQIPtr<IOleClientSite,&_GUID_00000118_0000_0000_c000_000000000046>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtr@UIOleClientSite@@@ATL@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComQIPtr@UIOleClientSite@@$1?_GUID_00000118_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ ENDP ; ATL::CComQIPtr<IOleClientSite,&_GUID_00000118_0000_0000_c000_000000000046>::~CComQIPtr<IOleClientSite,&_GUID_00000118_0000_0000_c000_000000000046>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComQIPtr@UIPersistStreamInit@@$1?_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713@@3U__s_GUID@@B@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComQIPtr@UIPersistStreamInit@@$1?_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713@@3U__s_GUID@@B@ATL@@QAE@XZ PROC NEAR ; ATL::CComQIPtr<IPersistStreamInit,&_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713>::~CComQIPtr<IPersistStreamInit,&_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComQIPtr@UIPersistStreamInit@@$1?_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713@@3U__s_GUID@@B@ATL@@QAE@XZ ENDP ; ATL::CComQIPtr<IPersistStreamInit,&_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713>::~CComQIPtr<IPersistStreamInit,&_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713>
_TEXT	ENDS
PUBLIC	??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ	; ATL::CComPtr<IPersistStream>::~CComPtr<IPersistStream>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComQIPtr@UIPersistStream@@$1?_GUID_00000109_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComQIPtr@UIPersistStream@@$1?_GUID_00000109_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ PROC NEAR ; ATL::CComQIPtr<IPersistStream,&_GUID_00000109_0000_0000_c000_000000000046>::~CComQIPtr<IPersistStream,&_GUID_00000109_0000_0000_c000_000000000046>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComQIPtr@UIPersistStream@@$1?_GUID_00000109_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ ENDP ; ATL::CComQIPtr<IPersistStream,&_GUID_00000109_0000_0000_c000_000000000046>::~CComQIPtr<IPersistStream,&_GUID_00000109_0000_0000_c000_000000000046>
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UIPersistStream@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IPersistStream>::~CComPtrBase<IPersistStream>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<IPersistStream>::~CComPtr<IPersistStream>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIPersistStream@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IPersistStream>::~CComPtrBase<IPersistStream>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IPersistStream>::~CComPtr<IPersistStream>
_TEXT	ENDS
PUBLIC	??1?$CComPtr@UIAdviseSink@@@ATL@@QAE@XZ		; ATL::CComPtr<IAdviseSink>::~CComPtr<IAdviseSink>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComQIPtr@UIAdviseSink@@$1?_GUID_0000010f_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComQIPtr@UIAdviseSink@@$1?_GUID_0000010f_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ PROC NEAR ; ATL::CComQIPtr<IAdviseSink,&_GUID_0000010f_0000_0000_c000_000000000046>::~CComQIPtr<IAdviseSink,&_GUID_0000010f_0000_0000_c000_000000000046>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtr@UIAdviseSink@@@ATL@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComQIPtr@UIAdviseSink@@$1?_GUID_0000010f_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ ENDP ; ATL::CComQIPtr<IAdviseSink,&_GUID_0000010f_0000_0000_c000_000000000046>::~CComQIPtr<IAdviseSink,&_GUID_0000010f_0000_0000_c000_000000000046>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0IAxWinHostWindow@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IAxWinHostWindow@@QAE@XZ PROC NEAR			; IAxWinHostWindow::IAxWinHostWindow, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IAxWinHostWindow@@QAE@XZ ENDP			; IAxWinHostWindow::IAxWinHostWindow
_TEXT	ENDS
PUBLIC	??0IOleInPlaceSite@@QAE@XZ			; IOleInPlaceSite::IOleInPlaceSite
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0IOleInPlaceSiteEx@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IOleInPlaceSiteEx@@QAE@XZ PROC NEAR			; IOleInPlaceSiteEx::IOleInPlaceSiteEx, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IOleInPlaceSite@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IOleInPlaceSiteEx@@QAE@XZ ENDP			; IOleInPlaceSiteEx::IOleInPlaceSiteEx
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0IParseDisplayName@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IParseDisplayName@@QAE@XZ PROC NEAR			; IParseDisplayName::IParseDisplayName, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IParseDisplayName@@QAE@XZ ENDP			; IParseDisplayName::IParseDisplayName
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0IObjectWithSite@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IObjectWithSite@@QAE@XZ PROC NEAR			; IObjectWithSite::IObjectWithSite, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IObjectWithSite@@QAE@XZ ENDP				; IObjectWithSite::IObjectWithSite
_TEXT	ENDS
PUBLIC	??0IAxWinAmbientDispatch@@QAE@XZ		; IAxWinAmbientDispatch::IAxWinAmbientDispatch
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0IAxWinAmbientDispatchEx@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IAxWinAmbientDispatchEx@@QAE@XZ PROC NEAR		; IAxWinAmbientDispatchEx::IAxWinAmbientDispatchEx, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IAxWinAmbientDispatch@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IAxWinAmbientDispatchEx@@QAE@XZ ENDP			; IAxWinAmbientDispatchEx::IAxWinAmbientDispatchEx
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UIOleControl@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IOleControl>::~CComPtrBase<IOleControl>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIOleControl@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIOleControl@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<IOleControl>::~CComPtr<IOleControl>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIOleControl@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IOleControl>::~CComPtrBase<IOleControl>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIOleControl@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IOleControl>::~CComPtr<IOleControl>
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UIAdviseSink@@@ATL@@QAE@XZ	; ATL::CComPtrBase<IAdviseSink>::~CComPtrBase<IAdviseSink>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UIAdviseSink@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UIAdviseSink@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<IAdviseSink>::~CComPtr<IAdviseSink>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UIAdviseSink@@@ATL@@QAE@XZ ; ATL::CComPtrBase<IAdviseSink>::~CComPtrBase<IAdviseSink>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UIAdviseSink@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IAdviseSink>::~CComPtr<IAdviseSink>
_TEXT	ENDS
PUBLIC	??0IOleWindow@@QAE@XZ				; IOleWindow::IOleWindow
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0IOleInPlaceSite@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IOleInPlaceSite@@QAE@XZ PROC NEAR			; IOleInPlaceSite::IOleInPlaceSite, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IOleWindow@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IOleInPlaceSite@@QAE@XZ ENDP				; IOleInPlaceSite::IOleInPlaceSite
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0IOleWindow@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IOleWindow@@QAE@XZ PROC NEAR				; IOleWindow::IOleWindow, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IOleWindow@@QAE@XZ ENDP				; IOleWindow::IOleWindow
_TEXT	ENDS
PUBLIC	??0IDispatch@@QAE@XZ				; IDispatch::IDispatch
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0IAxWinAmbientDispatch@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IAxWinAmbientDispatch@@QAE@XZ PROC NEAR		; IAxWinAmbientDispatch::IAxWinAmbientDispatch, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IDispatch@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IAxWinAmbientDispatch@@QAE@XZ ENDP			; IAxWinAmbientDispatch::IAxWinAmbientDispatch
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0IDispatch@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IDispatch@@QAE@XZ PROC NEAR				; IDispatch::IDispatch, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IDispatch@@QAE@XZ ENDP				; IDispatch::IDispatch
_TEXT	ENDS
PUBLIC	??_C@_0P@MGJHNDPC@hDCScreen?5?$CB?$DN?50?$AA@	; `string'
EXTRN	__imp__MulDiv@12:NEAR
;	COMDAT ??_C@_0P@MGJHNDPC@hDCScreen?5?$CB?$DN?50?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
CONST	SEGMENT
??_C@_0P@MGJHNDPC@hDCScreen?5?$CB?$DN?50?$AA@ DB 'hDCScreen != 0', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?AtlHiMetricToPixel@ATL@@YGXPBUtagSIZE@@PAU2@@Z
_TEXT	SEGMENT
_hDCScreen$ = -12					; size = 4
_nPixelsPerInchY$ = -8					; size = 4
_nPixelsPerInchX$ = -4					; size = 4
_lpSizeInHiMetric$ = 8					; size = 4
_lpSizeInPix$ = 12					; size = 4
?AtlHiMetricToPixel@ATL@@YGXPBUtagSIZE@@PAU2@@Z PROC NEAR ; ATL::AtlHiMetricToPixel, COMDAT

; 4490 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 4491 : 	int nPixelsPerInchX;    // Pixels per logical inch along width
; 4492 : 	int nPixelsPerInchY;    // Pixels per logical inch along height
; 4493 : 
; 4494 : 	HDC hDCScreen = GetDC(NULL);

	mov	esi, esp
	push	0
	call	DWORD PTR __imp__GetDC@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hDCScreen$[ebp], eax

; 4495 : 	ATLASSERT(hDCScreen != NULL);

	cmp	DWORD PTR _hDCScreen$[ebp], 0
	jne	SHORT $L212822
	push	OFFSET FLAT:??_C@_0P@MGJHNDPC@hDCScreen?5?$CB?$DN?50?$AA@
	push	0
	push	4495					; 0000118fH
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212822
	int	3
$L212822:

; 4496 : 	nPixelsPerInchX = GetDeviceCaps(hDCScreen, LOGPIXELSX);

	mov	esi, esp
	push	88					; 00000058H
	mov	ecx, DWORD PTR _hDCScreen$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDeviceCaps@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nPixelsPerInchX$[ebp], eax

; 4497 : 	nPixelsPerInchY = GetDeviceCaps(hDCScreen, LOGPIXELSY);

	mov	esi, esp
	push	90					; 0000005aH
	mov	edx, DWORD PTR _hDCScreen$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDeviceCaps@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nPixelsPerInchY$[ebp], eax

; 4498 : 	ReleaseDC(NULL, hDCScreen);

	mov	esi, esp
	mov	eax, DWORD PTR _hDCScreen$[ebp]
	push	eax
	push	0
	call	DWORD PTR __imp__ReleaseDC@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 4499 : 
; 4500 : 	lpSizeInPix->cx = MAP_LOGHIM_TO_PIX(lpSizeInHiMetric->cx, nPixelsPerInchX);

	mov	esi, esp
	push	2540					; 000009ecH
	mov	ecx, DWORD PTR _lpSizeInHiMetric$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _nPixelsPerInchX$[ebp]
	push	eax
	call	DWORD PTR __imp__MulDiv@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _lpSizeInPix$[ebp]
	mov	DWORD PTR [ecx], eax

; 4501 : 	lpSizeInPix->cy = MAP_LOGHIM_TO_PIX(lpSizeInHiMetric->cy, nPixelsPerInchY);

	mov	esi, esp
	push	2540					; 000009ecH
	mov	edx, DWORD PTR _lpSizeInHiMetric$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _nPixelsPerInchY$[ebp]
	push	ecx
	call	DWORD PTR __imp__MulDiv@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _lpSizeInPix$[ebp]
	mov	DWORD PTR [edx+4], eax

; 4502 : }

	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?AtlHiMetricToPixel@ATL@@YGXPBUtagSIZE@@PAU2@@Z ENDP	; ATL::AtlHiMetricToPixel
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?AtlPixelToHiMetric@ATL@@YGXPBUtagSIZE@@PAU2@@Z
_TEXT	SEGMENT
_hDCScreen$ = -12					; size = 4
_nPixelsPerInchY$ = -8					; size = 4
_nPixelsPerInchX$ = -4					; size = 4
_lpSizeInPix$ = 8					; size = 4
_lpSizeInHiMetric$ = 12					; size = 4
?AtlPixelToHiMetric@ATL@@YGXPBUtagSIZE@@PAU2@@Z PROC NEAR ; ATL::AtlPixelToHiMetric, COMDAT

; 4505 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 4506 : 	int nPixelsPerInchX;    // Pixels per logical inch along width
; 4507 : 	int nPixelsPerInchY;    // Pixels per logical inch along height
; 4508 : 
; 4509 : 	HDC hDCScreen = GetDC(NULL);

	mov	esi, esp
	push	0
	call	DWORD PTR __imp__GetDC@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hDCScreen$[ebp], eax

; 4510 : 	ATLASSERT(hDCScreen != NULL);

	cmp	DWORD PTR _hDCScreen$[ebp], 0
	jne	SHORT $L212825
	push	OFFSET FLAT:??_C@_0P@MGJHNDPC@hDCScreen?5?$CB?$DN?50?$AA@
	push	0
	push	4510					; 0000119eH
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212825
	int	3
$L212825:

; 4511 : 	nPixelsPerInchX = GetDeviceCaps(hDCScreen, LOGPIXELSX);

	mov	esi, esp
	push	88					; 00000058H
	mov	ecx, DWORD PTR _hDCScreen$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDeviceCaps@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nPixelsPerInchX$[ebp], eax

; 4512 : 	nPixelsPerInchY = GetDeviceCaps(hDCScreen, LOGPIXELSY);

	mov	esi, esp
	push	90					; 0000005aH
	mov	edx, DWORD PTR _hDCScreen$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDeviceCaps@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nPixelsPerInchY$[ebp], eax

; 4513 : 	ReleaseDC(NULL, hDCScreen);

	mov	esi, esp
	mov	eax, DWORD PTR _hDCScreen$[ebp]
	push	eax
	push	0
	call	DWORD PTR __imp__ReleaseDC@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 4514 : 
; 4515 : 	lpSizeInHiMetric->cx = MAP_PIX_TO_LOGHIM(lpSizeInPix->cx, nPixelsPerInchX);

	mov	esi, esp
	mov	ecx, DWORD PTR _nPixelsPerInchX$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpSizeInPix$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	2540					; 000009ecH
	call	DWORD PTR __imp__MulDiv@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _lpSizeInHiMetric$[ebp]
	mov	DWORD PTR [ecx], eax

; 4516 : 	lpSizeInHiMetric->cy = MAP_PIX_TO_LOGHIM(lpSizeInPix->cy, nPixelsPerInchY);

	mov	esi, esp
	mov	edx, DWORD PTR _nPixelsPerInchY$[ebp]
	push	edx
	mov	eax, DWORD PTR _lpSizeInPix$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	push	2540					; 000009ecH
	call	DWORD PTR __imp__MulDiv@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _lpSizeInHiMetric$[ebp]
	mov	DWORD PTR [edx+4], eax

; 4517 : }

	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?AtlPixelToHiMetric@ATL@@YGXPBUtagSIZE@@PAU2@@Z ENDP	; ATL::AtlPixelToHiMetric
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@XZ PROC NEAR	; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@XZ ENDP		; ATL::CComPtrBase<IDispatch>::CComPtrBase<IDispatch>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIDispatch@@@ATL@@QBEPAUIDispatch@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIDispatch@@@ATL@@QBEPAUIDispatch@@XZ PROC NEAR ; ATL::CComPtrBase<IDispatch>::operator IDispatch *, COMDAT
; _this$ = ecx

; 131  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 132  : 		return p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 133  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UIDispatch@@@ATL@@QBEPAUIDispatch@@XZ ENDP ; ATL::CComPtrBase<IDispatch>::operator IDispatch *
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDispatch@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDispatch@@@1@XZ PROC NEAR ; ATL::CComPtrBase<IDispatch>::operator->, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 148  : 		ATLASSERT(p!=NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L212832
	push	OFFSET FLAT:??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
	push	0
	push	148					; 00000094H
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212832
	int	3
$L212832:

; 149  : 		return (_NoAddRefReleaseOnCComPtr<T>*)p;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 150  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CComPtrBase@UIDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDispatch@@@1@XZ ENDP ; ATL::CComPtrBase<IDispatch>::operator->
_TEXT	ENDS
PUBLIC	??_C@_08IMNICHFN@ppT?5?$CB?$DN?50?$AA@		; `string'
;	COMDAT ??_C@_08IMNICHFN@ppT?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_08IMNICHFN@ppT?5?$CB?$DN?50?$AA@ DB 'ppT != 0', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?CopyTo@?$CComPtrBase@UIDispatch@@@ATL@@QAEJPAPAUIDispatch@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppT$ = 8						; size = 4
?CopyTo@?$CComPtrBase@UIDispatch@@@ATL@@QAEJPAPAUIDispatch@@@Z PROC NEAR ; ATL::CComPtrBase<IDispatch>::CopyTo, COMDAT
; _this$ = ecx

; 204  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 205  : 		ATLASSERT(ppT != NULL);

	cmp	DWORD PTR _ppT$[ebp], 0
	jne	SHORT $L212835
	push	OFFSET FLAT:??_C@_08IMNICHFN@ppT?5?$CB?$DN?50?$AA@
	push	0
	push	205					; 000000cdH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212835
	int	3
$L212835:

; 206  : 		if (ppT == NULL)

	cmp	DWORD PTR _ppT$[ebp], 0
	jne	SHORT $L162829

; 207  : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L162826
$L162829:

; 208  : 		*ppT = p;

	mov	ecx, DWORD PTR _ppT$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 209  : 		if (p)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $L162831

; 210  : 			p->AddRef();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	call	DWORD PTR [eax+4]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L162831:

; 211  : 		return S_OK;

	xor	eax, eax
$L162826:

; 212  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CopyTo@?$CComPtrBase@UIDispatch@@@ATL@@QAEJPAPAUIDispatch@@@Z ENDP ; ATL::CComPtrBase<IDispatch>::CopyTo
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@PAUIUnknown@@@Z ; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??0?$CComPtr@UIUnknown@@@ATL@@QAE@PAUIUnknown@@@Z PROC NEAR ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>, COMDAT
; _this$ = ecx

; 269  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _lp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@PAUIUnknown@@@Z ; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>

; 270  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CComPtr@UIUnknown@@@ATL@@QAE@PAUIUnknown@@@Z ENDP	; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIUnknown@@@ATL@@QAEPAUIUnknown@@PAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??4?$CComPtr@UIUnknown@@@ATL@@QAEPAUIUnknown@@PAU2@@Z PROC NEAR ; ATL::CComPtr<IUnknown>::operator=, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 292  : 		return static_cast<T*>(AtlComPtrAssign((IUnknown**)&p, lp));

	mov	eax, DWORD PTR _lp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z ; ATL::AtlComPtrAssign

; 293  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CComPtr@UIUnknown@@@ATL@@QAEPAUIUnknown@@PAU2@@Z ENDP ; ATL::CComPtr<IUnknown>::operator=
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??8?$CComPtrBase@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??8?$CComPtrBase@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z PROC NEAR ; ATL::CComPtrBase<IUnknown>::operator==, COMDAT
; _this$ = ecx

; 160  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 161  : 		return p == pT;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR _pT$[ebp]
	neg	eax
	sbb	eax, eax
	inc	eax

; 162  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$CComPtrBase@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z ENDP ; ATL::CComPtrBase<IUnknown>::operator==
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIPersistStream@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtrBase<IPersistStream>::~CComPtrBase<IPersistStream>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L162887

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L162887:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIPersistStream@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IPersistStream>::~CComPtrBase<IPersistStream>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ PROC NEAR ; ATL::CComPtrBase<IPersistStream>::operator IPersistStream *, COMDAT
; _this$ = ecx

; 131  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 132  : 		return p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 133  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ ENDP ; ATL::CComPtrBase<IPersistStream>::operator IPersistStream *
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIPersistStream@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStream@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIPersistStream@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStream@@@1@XZ PROC NEAR ; ATL::CComPtrBase<IPersistStream>::operator->, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 148  : 		ATLASSERT(p!=NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L212848
	push	OFFSET FLAT:??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
	push	0
	push	148					; 00000094H
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212848
	int	3
$L212848:

; 149  : 		return (_NoAddRefReleaseOnCComPtr<T>*)p;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 150  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CComPtrBase@UIPersistStream@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStream@@@1@XZ ENDP ; ATL::CComPtrBase<IPersistStream>::operator->
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIClassFactory2@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IClassFactory2>::CComPtrBase<IClassFactory2>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CComPtr@UIClassFactory2@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIClassFactory2@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<IClassFactory2>::CComPtr<IClassFactory2>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIClassFactory2@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IClassFactory2>::CComPtrBase<IClassFactory2>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIClassFactory2@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IClassFactory2>::CComPtr<IClassFactory2>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIClassFactory2@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIClassFactory2@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtrBase<IClassFactory2>::~CComPtrBase<IClassFactory2>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L163224

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163224:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIClassFactory2@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IClassFactory2>::~CComPtrBase<IClassFactory2>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIClassFactory2@@@ATL@@QAEPAPAUIClassFactory2@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIClassFactory2@@@ATL@@QAEPAPAUIClassFactory2@@XZ PROC NEAR ; ATL::CComPtrBase<IClassFactory2>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L212855
	push	OFFSET FLAT:??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
	push	0
	push	143					; 0000008fH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212855
	int	3
$L212855:

; 144  : 		return &p;

	mov	eax, DWORD PTR _this$[ebp]

; 145  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UIClassFactory2@@@ATL@@QAEPAPAUIClassFactory2@@XZ ENDP ; ATL::CComPtrBase<IClassFactory2>::operator&
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIClassFactory2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIClassFactory2@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIClassFactory2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIClassFactory2@@@1@XZ PROC NEAR ; ATL::CComPtrBase<IClassFactory2>::operator->, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 148  : 		ATLASSERT(p!=NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L212858
	push	OFFSET FLAT:??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
	push	0
	push	148					; 00000094H
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212858
	int	3
$L212858:

; 149  : 		return (_NoAddRefReleaseOnCComPtr<T>*)p;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 150  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CComPtrBase@UIClassFactory2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIClassFactory2@@@1@XZ ENDP ; ATL::CComPtrBase<IClassFactory2>::operator->
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
_TEXT	ENDS
;	COMDAT ??0?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ PROC NEAR ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >, COMDAT
; _this$ = ecx

; 2930 : 	{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CWindowImplRoot@VCWindow@ATL@@@ATL@@QAE@XZ ; ATL::CWindowImplRoot<ATL::CWindow>::CWindowImplRoot<ATL::CWindow>
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __imp__DefWindowProcA@16
	mov	DWORD PTR [eax+32], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ ENDP ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >
_TEXT	ENDS
PUBLIC	?WindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::WindowProc
; Function compile flags: /Odt /RTCsu
;	COMDAT ?GetWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEP6GJPAUHWND__@@IIJ@ZXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEP6GJPAUHWND__@@IIJ@ZXZ PROC NEAR ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWindowProc, COMDAT
; _this$ = ecx

; 2942 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2943 : 		return WindowProc;

	mov	eax, OFFSET FLAT:?WindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::WindowProc

; 2944 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEP6GJPAUHWND__@@IIJ@ZXZ ENDP ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWindowProc
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?DestroyWindow@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DestroyWindow@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEHXZ PROC NEAR ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::DestroyWindow, COMDAT
; _this$ = ecx

; 2950 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2951 : 		ATLASSERT(::IsWindow(m_hWnd));

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L212866
	push	OFFSET FLAT:??_C@_0BD@OAFOKPBM@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
	push	0
	push	2951					; 00000b87H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212866
	int	3
$L212866:

; 2952 : 		return ::DestroyWindow(m_hWnd);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__DestroyWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2953 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DestroyWindow@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEHXZ ENDP ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::DestroyWindow
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?DefWindowProcA@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEJXZ
_TEXT	SEGMENT
_lRes$ = -12						; size = 4
_pMsg$ = -8						; size = 4
_this$ = -4						; size = 4
?DefWindowProcA@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEJXZ PROC NEAR ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::DefWindowProcA, COMDAT
; _this$ = ecx

; 2958 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2959 : 		const _ATL_MSG* pMsg = m_pCurrentMsg;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _pMsg$[ebp], ecx

; 2960 : 		LRESULT lRes = 0;

	mov	DWORD PTR _lRes$[ebp], 0

; 2961 : 		if (pMsg != NULL)

	cmp	DWORD PTR _pMsg$[ebp], 0
	je	SHORT $L163249

; 2962 : 			lRes = DefWindowProc(pMsg->message, pMsg->wParam, pMsg->lParam);

	mov	edx, DWORD PTR _pMsg$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _pMsg$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DefWindowProcA@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEJIIJ@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::DefWindowProcA
	mov	DWORD PTR _lRes$[ebp], eax
$L163249:

; 2963 : 		return lRes;

	mov	eax, DWORD PTR _lRes$[ebp]

; 2964 : 	}

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DefWindowProcA@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEJXZ ENDP ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::DefWindowProcA
_TEXT	ENDS
EXTRN	__imp__CallWindowProcA@20:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?DefWindowProcA@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEJIIJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_uMsg$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?DefWindowProcA@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEJIIJ@Z PROC NEAR ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::DefWindowProcA, COMDAT
; _this$ = ecx

; 2967 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2968 : #ifdef STRICT
; 2969 : 		return ::CallWindowProc(m_pfnSuperWindowProc, m_hWnd, uMsg, wParam, lParam);

	mov	esi, esp
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	push	eax
	call	DWORD PTR __imp__CallWindowProcA@20
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2970 : #else
; 2971 : 		return ::CallWindowProc((FARPROC)m_pfnSuperWindowProc, m_hWnd, uMsg, wParam, lParam);
; 2972 : #endif
; 2973 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?DefWindowProcA@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEJIIJ@Z ENDP ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::DefWindowProcA
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtrBase<IOleInPlaceActiveObject>::~CComPtrBase<IOleInPlaceActiveObject>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L163261

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163261:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceActiveObject>::~CComPtrBase<IOleInPlaceActiveObject>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QBEPAUIOleInPlaceActiveObject@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QBEPAUIOleInPlaceActiveObject@@XZ PROC NEAR ; ATL::CComPtrBase<IOleInPlaceActiveObject>::operator IOleInPlaceActiveObject *, COMDAT
; _this$ = ecx

; 131  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 132  : 		return p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 133  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QBEPAUIOleInPlaceActiveObject@@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceActiveObject>::operator IOleInPlaceActiveObject *
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceActiveObject@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceActiveObject@@@1@XZ PROC NEAR ; ATL::CComPtrBase<IOleInPlaceActiveObject>::operator->, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 148  : 		ATLASSERT(p!=NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L212877
	push	OFFSET FLAT:??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
	push	0
	push	148					; 00000094H
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212877
	int	3
$L212877:

; 149  : 		return (_NoAddRefReleaseOnCComPtr<T>*)p;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 150  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceActiveObject@@@1@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceActiveObject>::operator->
_TEXT	ENDS
PUBLIC	??_C@_0BO@GGAAJPMM@IObjectWithSiteImpl?3?3SetSite?6?$AA@ ; `string'
EXTRN	?atlTraceCOM@ATL@@3VCTraceCategory@1@A:DWORD	; ATL::atlTraceCOM
;	COMDAT ??_C@_0BO@GGAAJPMM@IObjectWithSiteImpl?3?3SetSite?6?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcom.h
CONST	SEGMENT
??_C@_0BO@GGAAJPMM@IObjectWithSiteImpl?3?3SetSite?6?$AA@ DB 'IObjectWithS'
	DB	'iteImpl::SetSite', 0aH, 00H			; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?SetSite@?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@UAGJPAUIUnknown@@@Z
_TEXT	SEGMENT
tv76 = -16						; size = 4
$T212880 = -12						; size = 8
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_pUnkSite$ = 12						; size = 4
?SetSite@?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@UAGJPAUIUnknown@@@Z PROC NEAR ; ATL::IObjectWithSiteImpl<ATL::CAxHostWindow>::SetSite, COMDAT

; 3763 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 3764 : 		ATLTRACE(atlTraceCOM, 2, _T("IObjectWithSiteImpl::SetSite\n"));

	push	OFFSET FLAT:??_C@_0BO@GGAAJPMM@IObjectWithSiteImpl?3?3SetSite?6?$AA@
	push	2
	mov	ecx, OFFSET FLAT:?atlTraceCOM@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceCOM
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	3764					; 00000eb4H
	push	OFFSET FLAT:??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T212880[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 16					; 00000010H

; 3765 : 		T* pT = static_cast<T*>(this);

	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $L212881
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 56					; 00000038H
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $L212882
$L212881:
	mov	DWORD PTR tv76[ebp], 0
$L212882:
	mov	ecx, DWORD PTR tv76[ebp]
	mov	DWORD PTR _pT$[ebp], ecx

; 3766 : 		pT->m_spUnkSite = pUnkSite;

	mov	edx, DWORD PTR _pUnkSite$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pT$[ebp]
	add	ecx, 60					; 0000003cH
	call	??4?$CComPtr@UIUnknown@@@ATL@@QAEPAUIUnknown@@PAU2@@Z ; ATL::CComPtr<IUnknown>::operator=

; 3767 : 		return S_OK;

	xor	eax, eax

; 3768 : 	}

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetSite@?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@UAGJPAUIUnknown@@@Z ENDP ; ATL::IObjectWithSiteImpl<ATL::CAxHostWindow>::SetSite
_TEXT	ENDS
PUBLIC	??_C@_0BO@JHCMIMLB@IObjectWithSiteImpl?3?3GetSite?6?$AA@ ; `string'
PUBLIC	??_C@_07HFHBNNAN@ppvSite?$AA@			; `string'
;	COMDAT ??_C@_0BO@JHCMIMLB@IObjectWithSiteImpl?3?3GetSite?6?$AA@
CONST	SEGMENT
??_C@_0BO@JHCMIMLB@IObjectWithSiteImpl?3?3GetSite?6?$AA@ DB 'IObjectWithS'
	DB	'iteImpl::GetSite', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07HFHBNNAN@ppvSite?$AA@
CONST	SEGMENT
??_C@_07HFHBNNAN@ppvSite?$AA@ DB 'ppvSite', 00H		; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?GetSite@?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv128 = -24						; size = 4
tv76 = -20						; size = 4
$T212885 = -16						; size = 8
_hRes$ = -8						; size = 4
_pT$ = -4						; size = 4
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppvSite$ = 16						; size = 4
?GetSite@?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z PROC NEAR ; ATL::IObjectWithSiteImpl<ATL::CAxHostWindow>::GetSite, COMDAT

; 3770 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 3771 : 		ATLTRACE(atlTraceCOM, 2, _T("IObjectWithSiteImpl::GetSite\n"));

	push	OFFSET FLAT:??_C@_0BO@JHCMIMLB@IObjectWithSiteImpl?3?3GetSite?6?$AA@
	push	2
	mov	ecx, OFFSET FLAT:?atlTraceCOM@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceCOM
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	3771					; 00000ebbH
	push	OFFSET FLAT:??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T212885[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 16					; 00000010H

; 3772 : 		T* pT = static_cast<T*>(this);

	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $L212886
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 56					; 00000038H
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $L212887
$L212886:
	mov	DWORD PTR tv76[ebp], 0
$L212887:
	mov	ecx, DWORD PTR tv76[ebp]
	mov	DWORD PTR _pT$[ebp], ecx

; 3773 : 		ATLASSERT(ppvSite);

	cmp	DWORD PTR _ppvSite$[ebp], 0
	jne	SHORT $L212888
	push	OFFSET FLAT:??_C@_07HFHBNNAN@ppvSite?$AA@
	push	0
	push	3773					; 00000ebdH
	push	OFFSET FLAT:??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212888
	int	3
$L212888:

; 3774 : 		HRESULT hRes = E_POINTER;

	mov	DWORD PTR _hRes$[ebp], -2147467261	; 80004003H

; 3775 : 		if (ppvSite != NULL)

	cmp	DWORD PTR _ppvSite$[ebp], 0
	je	SHORT $L163297

; 3776 : 		{
; 3777 : 			if (pT->m_spUnkSite)

	mov	ecx, DWORD PTR _pT$[ebp]
	add	ecx, 60					; 0000003cH
	call	??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
	test	eax, eax
	je	SHORT $L163298

; 3778 : 				hRes = pT->m_spUnkSite->QueryInterface(riid, ppvSite);

	mov	ecx, DWORD PTR _pT$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ ; ATL::CComPtrBase<IUnknown>::operator->
	mov	DWORD PTR tv128[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _ppvSite$[ebp]
	push	eax
	mov	ecx, DWORD PTR _riid$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv128[ebp]
	push	edx
	mov	eax, DWORD PTR tv128[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRes$[ebp], eax

; 3779 : 			else

	jmp	SHORT $L163297
$L163298:

; 3780 : 			{
; 3781 : 				*ppvSite = NULL;

	mov	edx, DWORD PTR _ppvSite$[ebp]
	mov	DWORD PTR [edx], 0

; 3782 : 				hRes = E_FAIL;

	mov	DWORD PTR _hRes$[ebp], -2147467259	; 80004005H
$L163297:

; 3783 : 			}
; 3784 : 		}
; 3785 : 		return hRes;

	mov	eax, DWORD PTR _hRes$[ebp]

; 3786 : 	}

	pop	esi
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetSite@?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ENDP ; ATL::IObjectWithSiteImpl<ATL::CAxHostWindow>::GetSite
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?GetTypeInfoCount@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJPAI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pctinfo$ = 12						; size = 4
?GetTypeInfoCount@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJPAI@Z PROC NEAR ; ATL::IDispatchImpl<IAxWinAmbientDispatchEx,&_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5,&ATL::CAtlModule::m_libid,65535,65535,ATL::CComTypeInfoHolder>::GetTypeInfoCount, COMDAT

; 4391 : 	{

	push	ebp
	mov	ebp, esp

; 4392 : 		if (pctinfo == NULL) 

	cmp	DWORD PTR _pctinfo$[ebp], 0
	jne	SHORT $L163303

; 4393 : 			return E_POINTER; 

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L163302
$L163303:

; 4394 : 		*pctinfo = 1;

	mov	eax, DWORD PTR _pctinfo$[ebp]
	mov	DWORD PTR [eax], 1

; 4395 : 		return S_OK;

	xor	eax, eax
$L163302:

; 4396 : 	}

	pop	ebp
	ret	8
?GetTypeInfoCount@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJPAI@Z ENDP ; ATL::IDispatchImpl<IAxWinAmbientDispatchEx,&_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5,&ATL::CAtlModule::m_libid,65535,65535,ATL::CComTypeInfoHolder>::GetTypeInfoCount
_TEXT	ENDS
PUBLIC	?GetTypeInfo@CComTypeInfoHolder@ATL@@QAEJIKPAPAUITypeInfo@@@Z ; ATL::CComTypeInfoHolder::GetTypeInfo
PUBLIC	?_tih@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A ; ATL::IDispatchImpl<IAxWinAmbientDispatchEx,&_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5,&ATL::CAtlModule::m_libid,65535,65535,ATL::CComTypeInfoHolder>::_tih
;	COMDAT ?_tih@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A
_DATA	SEGMENT
?_tih@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A DD FLAT:__GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5 ; ATL::IDispatchImpl<IAxWinAmbientDispatchEx,&_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5,&ATL::CAtlModule::m_libid,65535,65535,ATL::CComTypeInfoHolder>::_tih
	DD	FLAT:?m_libid@CAtlModule@ATL@@2U_GUID@@A
	DW	0ffffH
	DW	0ffffH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
;	COMDAT ?GetTypeInfo@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJIKPAPAUITypeInfo@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_itinfo$ = 12						; size = 4
_lcid$ = 16						; size = 4
_pptinfo$ = 20						; size = 4
?GetTypeInfo@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJIKPAPAUITypeInfo@@@Z PROC NEAR ; ATL::IDispatchImpl<IAxWinAmbientDispatchEx,&_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5,&ATL::CAtlModule::m_libid,65535,65535,ATL::CComTypeInfoHolder>::GetTypeInfo, COMDAT

; 4398 : 	{

	push	ebp
	mov	ebp, esp

; 4399 : 		return _tih.GetTypeInfo(itinfo, lcid, pptinfo);

	mov	eax, DWORD PTR _pptinfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lcid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _itinfo$[ebp]
	push	edx
	mov	ecx, OFFSET FLAT:?_tih@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A
	call	?GetTypeInfo@CComTypeInfoHolder@ATL@@QAEJIKPAPAUITypeInfo@@@Z ; ATL::CComTypeInfoHolder::GetTypeInfo

; 4400 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	16					; 00000010H
?GetTypeInfo@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJIKPAPAUITypeInfo@@@Z ENDP ; ATL::IDispatchImpl<IAxWinAmbientDispatchEx,&_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5,&ATL::CAtlModule::m_libid,65535,65535,ATL::CComTypeInfoHolder>::GetTypeInfo
_TEXT	ENDS
PUBLIC	?GetTI@CComTypeInfoHolder@ATL@@QAEJKPAPAUITypeInfo@@@Z ; ATL::CComTypeInfoHolder::GetTI
; Function compile flags: /Odt /RTCsu
;	COMDAT ?GetTypeInfo@CComTypeInfoHolder@ATL@@QAEJIKPAPAUITypeInfo@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
_lcid$ = 12						; size = 4
_pptinfo$ = 16						; size = 4
?GetTypeInfo@CComTypeInfoHolder@ATL@@QAEJIKPAPAUITypeInfo@@@Z PROC NEAR ; ATL::CComTypeInfoHolder::GetTypeInfo, COMDAT
; _this$ = ecx

; 3544 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 3545 : 		return GetTI(lcid, pptinfo);

	mov	eax, DWORD PTR _pptinfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lcid$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTI@CComTypeInfoHolder@ATL@@QAEJKPAPAUITypeInfo@@@Z ; ATL::CComTypeInfoHolder::GetTI

; 3546 : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetTypeInfo@CComTypeInfoHolder@ATL@@QAEJIKPAPAUITypeInfo@@@Z ENDP ; ATL::CComTypeInfoHolder::GetTypeInfo
_TEXT	ENDS
PUBLIC	?GetTI@CComTypeInfoHolder@ATL@@QAEJK@Z		; ATL::CComTypeInfoHolder::GetTI
PUBLIC	??_C@_0M@NNHBFKBG@ppInfo?5?$CB?$DN?50?$AA@	; `string'
;	COMDAT ??_C@_0M@NNHBFKBG@ppInfo?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0M@NNHBFKBG@ppInfo?5?$CB?$DN?50?$AA@ DB 'ppInfo != 0', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?GetTI@CComTypeInfoHolder@ATL@@QAEJKPAPAUITypeInfo@@@Z
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_lcid$ = 8						; size = 4
_ppInfo$ = 12						; size = 4
?GetTI@CComTypeInfoHolder@ATL@@QAEJKPAPAUITypeInfo@@@Z PROC NEAR ; ATL::CComTypeInfoHolder::GetTI, COMDAT
; _this$ = ecx

; 3502 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 3503 : 		ATLASSERT(ppInfo != NULL);

	cmp	DWORD PTR _ppInfo$[ebp], 0
	jne	SHORT $L212897
	push	OFFSET FLAT:??_C@_0M@NNHBFKBG@ppInfo?5?$CB?$DN?50?$AA@
	push	0
	push	3503					; 00000dafH
	push	OFFSET FLAT:??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212897
	int	3
$L212897:

; 3504 : 		if (ppInfo == NULL)

	cmp	DWORD PTR _ppInfo$[ebp], 0
	jne	SHORT $L93872

; 3505 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L93869
$L93872:

; 3506 : 
; 3507 : 		HRESULT hr = S_OK;

	mov	DWORD PTR _hr$[ebp], 0

; 3508 : 		if (m_pInfo == NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	jne	SHORT $L93876

; 3509 : 			hr = GetTI(lcid);

	mov	edx, DWORD PTR _lcid$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTI@CComTypeInfoHolder@ATL@@QAEJK@Z	; ATL::CComTypeInfoHolder::GetTI
	mov	DWORD PTR _hr$[ebp], eax
$L93876:

; 3510 : 		*ppInfo = m_pInfo;

	mov	eax, DWORD PTR _ppInfo$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx

; 3511 : 		if (m_pInfo != NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $L93877

; 3512 : 		{
; 3513 : 			m_pInfo->AddRef();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+4]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 3514 : 			hr = S_OK;

	mov	DWORD PTR _hr$[ebp], 0
$L93877:

; 3515 : 		}
; 3516 : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]
$L93869:

; 3517 : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetTI@CComTypeInfoHolder@ATL@@QAEJKPAPAUITypeInfo@@@Z ENDP ; ATL::CComTypeInfoHolder::GetTI
_TEXT	ENDS
PUBLIC	?AddTermFunc@CAtlModule@ATL@@QAEJP6GXK@ZK@Z	; ATL::CAtlModule::AddTermFunc
PUBLIC	??I?$CComPtrBase@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ ; ATL::CComPtrBase<ITypeLib>::operator&
PUBLIC	??C?$CComPtrBase@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ ; ATL::CComPtrBase<ITypeLib>::operator->
PUBLIC	??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ		; ATL::CComPtr<ITypeLib>::CComPtr<ITypeLib>
PUBLIC	??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ		; ATL::CComPtr<ITypeLib>::~CComPtr<ITypeLib>
PUBLIC	?Cleanup@CComTypeInfoHolder@ATL@@SGXK@Z		; ATL::CComTypeInfoHolder::Cleanup
PUBLIC	?LoadNameCache@CComTypeInfoHolder@ATL@@QAEJPAUITypeInfo@@@Z ; ATL::CComTypeInfoHolder::LoadNameCache
PUBLIC	??_C@_0BO@GHLKPFE@m_plibid?5?$CB?$DN?50?5?$CG?$CG?5m_pguid?5?$CB?$DN?50?$AA@ ; `string'
PUBLIC	??_C@_0DG@CJCBGKEH@Did?5you?5forget?5to?5pass?5the?5LIBID@ ; `string'
PUBLIC	??_C@_0GE@MNEAPMLF@?$CBInlineIsEqualGUID?$CI?$CKm_plibid?0?5GU@ ; `string'
PUBLIC	??_C@_0EG@JLAFHAGH@ERROR?5?3?5Unable?5to?5lock?5critical?5@ ; `string'
PUBLIC	??_C@_0GE@IPBGNBKO@Warning?5?3?5CComTypeInfoHolder?3?3Ge@ ; `string'
PUBLIC	??_C@_0DN@OOAEELGE@?7See?5IDispatchImpl?5overview?5help@ ; `string'
PUBLIC	??_C@_0DG@JANIJOBP@ERROR?5?3?5Unable?5to?5load?5Typelibra@ ; `string'
PUBLIC	??_C@_0DE@PFCDKHBK@?7Verify?5TypelibID?5and?5major?5vers@ ; `string'
PUBLIC	??_C@_0FB@GGFNIACC@?7IDispatchImpl?0?5CStockPropImpl?0?5@ ; `string'
PUBLIC	??I?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAPAUITypeInfo@@XZ ; ATL::CComPtrBase<ITypeInfo>::operator&
PUBLIC	??C?$CComPtrBase@UITypeInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeInfo@@@1@XZ ; ATL::CComPtrBase<ITypeInfo>::operator->
PUBLIC	?Detach@?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@XZ ; ATL::CComPtrBase<ITypeInfo>::Detach
PUBLIC	??I?$CComPtrBase@UITypeInfo2@@@ATL@@QAEPAPAUITypeInfo2@@XZ ; ATL::CComPtrBase<ITypeInfo2>::operator&
PUBLIC	_InlineIsEqualGUID
PUBLIC	??0?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ		; ATL::CComPtr<ITypeInfo>::CComPtr<ITypeInfo>
PUBLIC	??0?$CComPtr@UITypeInfo@@@ATL@@QAE@ABV01@@Z	; ATL::CComPtr<ITypeInfo>::CComPtr<ITypeInfo>
PUBLIC	??0?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ		; ATL::CComPtr<ITypeInfo2>::CComPtr<ITypeInfo2>
PUBLIC	??1?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ		; ATL::CComPtr<ITypeInfo>::~CComPtr<ITypeInfo>
PUBLIC	??1?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ		; ATL::CComPtr<ITypeInfo2>::~CComPtr<ITypeInfo2>
PUBLIC	??$QueryInterface@UITypeInfo2@@@IUnknown@@QAGJPAPAUITypeInfo2@@@Z ; IUnknown::QueryInterface<ITypeInfo2>
PUBLIC	??$?4UITypeInfo2@@@?$CComPtr@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@ABV?$CComPtr@UITypeInfo2@@@1@@Z ; ATL::CComPtr<ITypeInfo>::operator=<ITypeInfo2>
EXTRN	__imp__GetModuleFileNameA@12:NEAR
EXTRN	__imp__LoadTypeLib@8:NEAR
EXTRN	__imp__LoadRegTypeLib@20:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T212947 DD	0ffffffffH
	DD	FLAT:$L212923
	DD	00H
	DD	FLAT:$L212924
	DD	00H
	DD	FLAT:$L212925
	DD	02H
	DD	FLAT:$L212926
	DD	00H
	DD	FLAT:$L212927
	DD	04H
	DD	FLAT:$L212928
	DD	05H
	DD	FLAT:$L212929
$T212931 DD	019930520H
	DD	07H
	DD	FLAT:$T212947
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BO@GHLKPFE@m_plibid?5?$CB?$DN?50?5?$CG?$CG?5m_pguid?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BO@GHLKPFE@m_plibid?5?$CB?$DN?50?5?$CG?$CG?5m_pguid?5?$CB?$DN?50?$AA@ DB 'm'
	DB	'_plibid != 0 && m_pguid != 0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@CJCBGKEH@Did?5you?5forget?5to?5pass?5the?5LIBID@
CONST	SEGMENT
??_C@_0DG@CJCBGKEH@Did?5you?5forget?5to?5pass?5the?5LIBID@ DB 'Did you fo'
	DB	'rget to pass the LIBID to CComModule::Init?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GE@MNEAPMLF@?$CBInlineIsEqualGUID?$CI?$CKm_plibid?0?5GU@
CONST	SEGMENT
??_C@_0GE@MNEAPMLF@?$CBInlineIsEqualGUID?$CI?$CKm_plibid?0?5GU@ DB '!Inli'
	DB	'neIsEqualGUID(*m_plibid, GUID_NULL) && "Did you forget to pas'
	DB	's the LIBID to CComModule::Init?"', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@JLAFHAGH@ERROR?5?3?5Unable?5to?5lock?5critical?5@
CONST	SEGMENT
??_C@_0EG@JLAFHAGH@ERROR?5?3?5Unable?5to?5lock?5critical?5@ DB 'ERROR : U'
	DB	'nable to lock critical section in CComTypeInfoHolder::GetTI', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0GE@IPBGNBKO@Warning?5?3?5CComTypeInfoHolder?3?3Ge@
CONST	SEGMENT
??_C@_0GE@IPBGNBKO@Warning?5?3?5CComTypeInfoHolder?3?3Ge@ DB 'Warning : C'
	DB	'ComTypeInfoHolder::GetTI : Loaded typelib does not match the '
	DB	'typelib in the module : %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@OOAEELGE@?7See?5IDispatchImpl?5overview?5help@
CONST	SEGMENT
??_C@_0DN@OOAEELGE@?7See?5IDispatchImpl?5overview?5help@ DB 09H, 'See IDi'
	DB	'spatchImpl overview help topic for more information', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@JANIJOBP@ERROR?5?3?5Unable?5to?5load?5Typelibra@
CONST	SEGMENT
??_C@_0DG@JANIJOBP@ERROR?5?3?5Unable?5to?5load?5Typelibra@ DB 'ERROR : Un'
	DB	'able to load Typelibrary. (HRESULT = 0x%x)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@PFCDKHBK@?7Verify?5TypelibID?5and?5major?5vers@
CONST	SEGMENT
??_C@_0DE@PFCDKHBK@?7Verify?5TypelibID?5and?5major?5vers@ DB 09H, 'Verify'
	DB	' TypelibID and major version specified with', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FB@GGFNIACC@?7IDispatchImpl?0?5CStockPropImpl?0?5@
CONST	SEGMENT
??_C@_0FB@GGFNIACC@?7IDispatchImpl?0?5CStockPropImpl?0?5@ DB 09H, 'IDispa'
	DB	'tchImpl, CStockPropImpl, IProvideClassInfoImpl or IProvideCLa'
	DB	'ssInfo2Impl', 0aH, 00H			; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?GetTI@CComTypeInfoHolder@ATL@@QAEJK@Z
_TEXT	SEGMENT
tv315 = -816						; size = 4
tv269 = -812						; size = 4
tv256 = -808						; size = 4
tv249 = -804						; size = 4
tv258 = -800						; size = 4
tv201 = -796						; size = 4
tv194 = -792						; size = 4
tv203 = -788						; size = 4
$T212922 = -784						; size = 4
$T212921 = -780						; size = 8
$T212920 = -772						; size = 8
$T212919 = -764						; size = 8
$T212918 = -756						; size = 8
$T212917 = -748						; size = 8
$T212912 = -740						; size = 4
$T212907 = -736						; size = 4
$T212905 = -732						; size = 8
_spTypeInfo2$94115 = -720				; size = 4
_spInfo$94040 = -708					; size = 4
_spTypeInfo$94037 = -696				; size = 4
_pLibAttr$94019 = -684					; size = 4
_pszFile$94008 = -676					; size = 4
_hRes2$94006 = -672					; size = 4
_spTypeLibModule$94005 = -664				; size = 4
__AtlSafeAllocaManager$94004 = -652			; size = 4
__lpa_ex$94003 = -644					; size = 4
__lpw_ex$94002 = -640					; size = 4
__acp_ex$94001 = -636					; size = 4
__convert_ex$94000 = -632				; size = 4
_dwFLen$93998 = -628					; size = 4
_szFilePath$93997 = -620				; size = 260
_pszFile$93985 = -356					; size = 4
__AtlSafeAllocaManager$93984 = -348			; size = 4
__lpa_ex$93983 = -340					; size = 4
__lpw_ex$93982 = -336					; size = 4
__acp_ex$93981 = -332					; size = 4
__convert_ex$93980 = -328				; size = 4
_dwFLen$93978 = -324					; size = 4
_szFilePath$93977 = -316				; size = 260
_pTypeLib$93975 = -48					; size = 4
_hRes$ = -40						; size = 4
_lock$ = -32						; size = 8
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_lcid$ = 8						; size = 4
?GetTI@CComTypeInfoHolder@ATL@@QAEJK@Z PROC NEAR	; ATL::CComTypeInfoHolder::GetTI, COMDAT
; _this$ = ecx

; 3632 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetTI@CComTypeInfoHolder@ATL@@QAEJK@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 804				; 00000324H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-816]
	mov	ecx, 201				; 000000c9H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 3633 : 	//If this assert occurs then most likely didn't initialize properly
; 3634 : 	ATLASSERT(m_plibid != NULL && m_pguid != NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $L212901
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $L212902
$L212901:
	push	OFFSET FLAT:??_C@_0BO@GHLKPFE@m_plibid?5?$CB?$DN?50?5?$CG?$CG?5m_pguid?5?$CB?$DN?50?$AA@
	push	0
	push	3634					; 00000e32H
	push	OFFSET FLAT:??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212902
	int	3
$L212902:

; 3635 : 	ATLASSERT(!InlineIsEqualGUID(*m_plibid, GUID_NULL) && "Did you forget to pass the LIBID to CComModule::Init?");

	push	OFFSET FLAT:_GUID_NULL
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_InlineIsEqualGUID
	add	esp, 8
	test	eax, eax
	jne	SHORT $L212903
	mov	edx, OFFSET FLAT:??_C@_0DG@CJCBGKEH@Did?5you?5forget?5to?5pass?5the?5LIBID@
	test	edx, edx
	jne	SHORT $L212904
$L212903:
	push	OFFSET FLAT:??_C@_0GE@MNEAPMLF@?$CBInlineIsEqualGUID?$CI?$CKm_plibid?0?5GU@
	push	0
	push	3635					; 00000e33H
	push	OFFSET FLAT:??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212904
	int	3
$L212904:

; 3636 : 
; 3637 : 	if (m_pInfo != NULL && m_pMap != NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	je	SHORT $L93963
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+20], 0
	je	SHORT $L93963

; 3638 : 		return S_OK;

	xor	eax, eax
	jmp	$L93957
$L93963:

; 3639 : 
; 3640 : 	CComCritSecLock<CComCriticalSection> lock(_pAtlModule->m_csStaticDataInitAndTypeInfo, false);

	push	0
	mov	eax, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	add	eax, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@AAVCComCriticalSection@1@_N@Z ; ATL::CComCritSecLock<ATL::CComCriticalSection>::CComCritSecLock<ATL::CComCriticalSection>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3641 : 	HRESULT hRes = lock.Lock();

	lea	ecx, DWORD PTR _lock$[ebp]
	call	?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Lock
	mov	DWORD PTR _hRes$[ebp], eax

; 3642 : 	if (FAILED(hRes))

	cmp	DWORD PTR _hRes$[ebp], 0
	jge	SHORT $L93968

; 3643 : 	{
; 3644 : 		ATLTRACE(atlTraceCOM, 0, _T("ERROR : Unable to lock critical section in CComTypeInfoHolder::GetTI\n"));

	push	OFFSET FLAT:??_C@_0EG@JLAFHAGH@ERROR?5?3?5Unable?5to?5lock?5critical?5@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceCOM@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceCOM
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	3644					; 00000e3cH
	push	OFFSET FLAT:??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T212905[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 16					; 00000010H

; 3645 : 		ATLASSERT(0);

	xor	ecx, ecx
	jne	SHORT $L212906
	push	OFFSET FLAT:??_C@_01GBGANLPD@0?$AA@
	push	0
	push	3645					; 00000e3dH
	push	OFFSET FLAT:??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212906
	int	3
$L212906:

; 3646 : 		return hRes;

	mov	eax, DWORD PTR _hRes$[ebp]
	mov	DWORD PTR $T212907[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
	mov	eax, DWORD PTR $T212907[ebp]
	jmp	$L93957
$L93968:

; 3647 : 	}
; 3648 : 	hRes = E_FAIL;

	mov	DWORD PTR _hRes$[ebp], -2147467259	; 80004005H

; 3649 : 	if (m_pInfo == NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	jne	$L93974

; 3650 : 	{
; 3651 : 		ITypeLib* pTypeLib = NULL;

	mov	DWORD PTR _pTypeLib$93975[ebp], 0

; 3652 : 		if (InlineIsEqualGUID(CAtlModule::m_libid, *m_plibid) && m_wMajor == 0xFFFF && m_wMinor == 0xFFFF)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	push	OFFSET FLAT:?m_libid@CAtlModule@ATL@@2U_GUID@@A ; ATL::CAtlModule::m_libid
	call	_InlineIsEqualGUID
	add	esp, 8
	test	eax, eax
	je	$L93976
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+8]
	cmp	edx, 65535				; 0000ffffH
	jne	$L93976
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+10]
	cmp	ecx, 65535				; 0000ffffH
	jne	$L93976

; 3653 : 		{
; 3654 : 			TCHAR szFilePath[MAX_PATH];
; 3655 : 			DWORD dwFLen = ::GetModuleFileName(_AtlBaseModule.GetModuleInstance(), szFilePath, MAX_PATH);

	mov	esi, esp
	push	260					; 00000104H
	lea	edx, DWORD PTR _szFilePath$93977[ebp]
	push	edx
	mov	ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
	call	?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
	push	eax
	call	DWORD PTR __imp__GetModuleFileNameA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dwFLen$93978[ebp], eax

; 3656 : 			if( dwFLen != 0 && dwFLen != MAX_PATH )

	cmp	DWORD PTR _dwFLen$93978[ebp], 0
	je	$L93979
	cmp	DWORD PTR _dwFLen$93978[ebp], 260	; 00000104H
	je	$L93979

; 3657 : 			{
; 3658 : 				USES_CONVERSION_EX;

	mov	DWORD PTR __convert_ex$93980[ebp], 0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	mov	DWORD PTR __acp_ex$93981[ebp], eax
	mov	DWORD PTR __lpw_ex$93982[ebp], 0
	mov	DWORD PTR __lpa_ex$93983[ebp], 0
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$93984[ebp]
	call	??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 3659 : 				LPOLESTR pszFile = T2OLE_EX(szFilePath, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

	lea	eax, DWORD PTR _szFilePath$93977[ebp]
	mov	DWORD PTR __lpa_ex$93983[ebp], eax
	cmp	DWORD PTR __lpa_ex$93983[ebp], 0
	jne	SHORT $L212910
	mov	DWORD PTR tv203[ebp], 0
	jmp	$L212911
$L212910:
	mov	esi, esp
	mov	ecx, DWORD PTR __lpa_ex$93983[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	mov	DWORD PTR __convert_ex$93980[ebp], eax
	mov	edx, DWORD PTR __convert_ex$93980[ebp]
	shl	edx, 1
	cmp	edx, 1024				; 00000400H
	ja	SHORT $L212908
	mov	eax, DWORD PTR __convert_ex$93980[ebp]
	shl	eax, 1
	push	eax
	call	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $L212908
	mov	eax, DWORD PTR __convert_ex$93980[ebp]
	shl	eax, 1
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv194[ebp], esp
	mov	edx, DWORD PTR tv194[ebp]
	mov	DWORD PTR tv201[ebp], edx
	jmp	SHORT $L212909
$L212908:
	mov	eax, DWORD PTR __convert_ex$93980[ebp]
	shl	eax, 1
	push	eax
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$93984[ebp]
	call	?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate
	mov	DWORD PTR tv201[ebp], eax
$L212909:
	mov	ecx, DWORD PTR __acp_ex$93981[ebp]
	push	ecx
	mov	edx, DWORD PTR __convert_ex$93980[ebp]
	push	edx
	mov	eax, DWORD PTR __lpa_ex$93983[ebp]
	push	eax
	mov	ecx, DWORD PTR tv201[ebp]
	push	ecx
	call	?AtlA2WHelper@@YGPAGPAGPBDHI@Z		; AtlA2WHelper
	mov	DWORD PTR tv203[ebp], eax
$L212911:
	mov	edx, DWORD PTR tv203[ebp]
	mov	DWORD PTR _pszFile$93985[ebp], edx

; 3660 : #ifndef _UNICODE
; 3661 : 				if (pszFile == NULL)

	cmp	DWORD PTR _pszFile$93985[ebp], 0
	jne	SHORT $L93991

; 3662 : 					return E_OUTOFMEMORY;

	mov	DWORD PTR $T212912[ebp], -2147024882	; 8007000eH
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$93984[ebp]
	call	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
	mov	eax, DWORD PTR $T212912[ebp]
	jmp	$L93957
$L93991:

; 3663 : #endif
; 3664 : 				hRes = LoadTypeLib(pszFile, &pTypeLib);

	mov	esi, esp
	lea	eax, DWORD PTR _pTypeLib$93975[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszFile$93985[ebp]
	push	ecx
	call	DWORD PTR __imp__LoadTypeLib@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRes$[ebp], eax

; 3665 : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$93984[ebp]
	call	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
$L93979:

; 3666 : 		}
; 3667 : 		else

	jmp	$L93994
$L93976:

; 3668 : 		{
; 3669 : 			hRes = LoadRegTypeLib(*m_plibid, m_wMajor, m_wMinor, lcid, &pTypeLib);

	mov	esi, esp
	lea	edx, DWORD PTR _pTypeLib$93975[ebp]
	push	edx
	mov	eax, DWORD PTR _lcid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR [ecx+10]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__LoadRegTypeLib@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRes$[ebp], eax

; 3670 : #ifdef _DEBUG			
; 3671 : 			if (SUCCEEDED(hRes))

	cmp	DWORD PTR _hRes$[ebp], 0
	jl	$L93996

; 3672 : 			{
; 3673 : 				// Trace out an warning if the requested TypelibID is the same as the modules TypelibID
; 3674 : 				// and versions do not match.
; 3675 : 				// 
; 3676 : 				// In most cases it is due to wrong version template parameters to IDispatchImpl, 
; 3677 : 				// IProvideClassInfoImpl or IProvideClassInfo2Impl.
; 3678 : 				// Set major and minor versions to 0xFFFF if the modules type lib has to be loaded
; 3679 : 				// irrespective of its version.
; 3680 : 				// 
; 3681 : 				// Get the module's file path
; 3682 : 				TCHAR szFilePath[MAX_PATH];
; 3683 : 				DWORD dwFLen = ::GetModuleFileName(_AtlBaseModule.GetModuleInstance(), szFilePath, MAX_PATH);

	mov	esi, esp
	push	260					; 00000104H
	lea	ecx, DWORD PTR _szFilePath$93997[ebp]
	push	ecx
	mov	ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
	call	?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
	push	eax
	call	DWORD PTR __imp__GetModuleFileNameA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dwFLen$93998[ebp], eax

; 3684 : 				if( dwFLen != 0 && dwFLen != MAX_PATH )

	cmp	DWORD PTR _dwFLen$93998[ebp], 0
	je	$L93999
	cmp	DWORD PTR _dwFLen$93998[ebp], 260	; 00000104H
	je	$L93999

; 3685 : 				{
; 3686 : 					USES_CONVERSION_EX;

	mov	DWORD PTR __convert_ex$94000[ebp], 0
	call	?_AtlGetConversionACP@ATL@@YGIXZ	; ATL::_AtlGetConversionACP
	mov	DWORD PTR __acp_ex$94001[ebp], eax
	mov	DWORD PTR __lpw_ex$94002[ebp], 0
	mov	DWORD PTR __lpa_ex$94003[ebp], 0
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$94004[ebp]
	call	??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 3687 : 					CComPtr<ITypeLib> spTypeLibModule;

	lea	ecx, DWORD PTR _spTypeLibModule$94005[ebp]
	call	??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ	; ATL::CComPtr<ITypeLib>::CComPtr<ITypeLib>
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 3688 : 					HRESULT hRes2 = S_OK;

	mov	DWORD PTR _hRes2$94006[ebp], 0

; 3689 : 					LPOLESTR pszFile = T2OLE_EX(szFilePath, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

	lea	edx, DWORD PTR _szFilePath$93997[ebp]
	mov	DWORD PTR __lpa_ex$94003[ebp], edx
	cmp	DWORD PTR __lpa_ex$94003[ebp], 0
	jne	SHORT $L212915
	mov	DWORD PTR tv258[ebp], 0
	jmp	$L212916
$L212915:
	mov	esi, esp
	mov	eax, DWORD PTR __lpa_ex$94003[ebp]
	push	eax
	call	DWORD PTR __imp__lstrlenA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	mov	DWORD PTR __convert_ex$94000[ebp], eax
	mov	ecx, DWORD PTR __convert_ex$94000[ebp]
	shl	ecx, 1
	cmp	ecx, 1024				; 00000400H
	ja	SHORT $L212913
	mov	edx, DWORD PTR __convert_ex$94000[ebp]
	shl	edx, 1
	push	edx
	call	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	SHORT $L212913
	mov	eax, DWORD PTR __convert_ex$94000[ebp]
	shl	eax, 1
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR tv249[ebp], esp
	mov	ecx, DWORD PTR tv249[ebp]
	mov	DWORD PTR tv256[ebp], ecx
	jmp	SHORT $L212914
$L212913:
	mov	edx, DWORD PTR __convert_ex$94000[ebp]
	shl	edx, 1
	push	edx
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$94004[ebp]
	call	?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::Allocate
	mov	DWORD PTR tv256[ebp], eax
$L212914:
	mov	eax, DWORD PTR __acp_ex$94001[ebp]
	push	eax
	mov	ecx, DWORD PTR __convert_ex$94000[ebp]
	push	ecx
	mov	edx, DWORD PTR __lpa_ex$94003[ebp]
	push	edx
	mov	eax, DWORD PTR tv256[ebp]
	push	eax
	call	?AtlA2WHelper@@YGPAGPAGPBDHI@Z		; AtlA2WHelper
	mov	DWORD PTR tv258[ebp], eax
$L212916:
	mov	ecx, DWORD PTR tv258[ebp]
	mov	DWORD PTR _pszFile$94008[ebp], ecx

; 3690 : 					if (pszFile == NULL)

	cmp	DWORD PTR _pszFile$94008[ebp], 0
	jne	SHORT $L94014

; 3691 : 						hRes2 = E_OUTOFMEMORY;

	mov	DWORD PTR _hRes2$94006[ebp], -2147024882 ; 8007000eH

; 3692 : 					else

	jmp	SHORT $L94016
$L94014:

; 3693 : 						hRes2 = LoadTypeLib(pszFile, &spTypeLibModule);

	lea	ecx, DWORD PTR _spTypeLibModule$94005[ebp]
	call	??I?$CComPtrBase@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ ; ATL::CComPtrBase<ITypeLib>::operator&
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _pszFile$94008[ebp]
	push	edx
	call	DWORD PTR __imp__LoadTypeLib@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRes2$94006[ebp], eax
$L94016:

; 3694 : 					if (SUCCEEDED(hRes2))

	cmp	DWORD PTR _hRes2$94006[ebp], 0
	jl	$L94018

; 3695 : 					{
; 3696 : 						TLIBATTR* pLibAttr;
; 3697 : 						hRes2 = spTypeLibModule->GetLibAttr(&pLibAttr);

	lea	ecx, DWORD PTR _spTypeLibModule$94005[ebp]
	call	??C?$CComPtrBase@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ ; ATL::CComPtrBase<ITypeLib>::operator->
	mov	DWORD PTR tv269[ebp], eax
	mov	esi, esp
	lea	eax, DWORD PTR _pLibAttr$94019[ebp]
	push	eax
	mov	ecx, DWORD PTR tv269[ebp]
	push	ecx
	mov	edx, DWORD PTR tv269[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax+28]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRes2$94006[ebp], eax

; 3698 : 						if (SUCCEEDED(hRes2))

	cmp	DWORD PTR _hRes2$94006[ebp], 0
	jl	$L94018

; 3699 : 						{
; 3700 : 							if (InlineIsEqualGUID(pLibAttr->guid, *m_plibid) &&
; 3701 : 								(pLibAttr->wMajorVerNum != m_wMajor ||
; 3702 : 								pLibAttr->wMinorVerNum != m_wMinor))

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _pLibAttr$94019[ebp]
	push	eax
	call	_InlineIsEqualGUID
	add	esp, 8
	test	eax, eax
	je	$L94022
	mov	ecx, DWORD PTR _pLibAttr$94019[ebp]
	movzx	edx, WORD PTR [ecx+24]
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+8]
	cmp	edx, ecx
	jne	SHORT $L94023
	mov	edx, DWORD PTR _pLibAttr$94019[ebp]
	movzx	eax, WORD PTR [edx+26]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+10]
	cmp	eax, edx
	je	SHORT $L94022
$L94023:

; 3703 : 							{
; 3704 : 								ATLTRACE(atlTraceCOM, 0, _T("Warning : CComTypeInfoHolder::GetTI : Loaded typelib does not match the typelib in the module : %s\n"), szFilePath);

	lea	eax, DWORD PTR _szFilePath$93997[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_0GE@IPBGNBKO@Warning?5?3?5CComTypeInfoHolder?3?3Ge@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceCOM@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceCOM
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	3704					; 00000e78H
	push	OFFSET FLAT:??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T212917[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H

; 3705 : 								ATLTRACE(atlTraceCOM, 0, _T("\tSee IDispatchImpl overview help topic for more information\n"), szFilePath);							

	lea	ecx, DWORD PTR _szFilePath$93997[ebp]
	push	ecx
	push	OFFSET FLAT:??_C@_0DN@OOAEELGE@?7See?5IDispatchImpl?5overview?5help@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceCOM@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceCOM
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	3705					; 00000e79H
	push	OFFSET FLAT:??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T212918[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H
$L94022:

; 3706 : 							}
; 3707 : 							spTypeLibModule->ReleaseTLibAttr(pLibAttr);

	lea	ecx, DWORD PTR _spTypeLibModule$94005[ebp]
	call	??C?$CComPtrBase@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ ; ATL::CComPtrBase<ITypeLib>::operator->
	mov	DWORD PTR tv315[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR _pLibAttr$94019[ebp]
	push	edx
	mov	eax, DWORD PTR tv315[ebp]
	push	eax
	mov	ecx, DWORD PTR tv315[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+48]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L94018:

; 3708 : 						}
; 3709 : 					}
; 3710 : 				}

	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _spTypeLibModule$94005[ebp]
	call	??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$94004[ebp]
	call	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
$L93999:

; 3711 : 			}
; 3712 : 			else

	jmp	$L93994
$L93996:

; 3713 : 			{
; 3714 : 				ATLTRACE(atlTraceCOM, 0, _T("ERROR : Unable to load Typelibrary. (HRESULT = 0x%x)\n"), hRes);

	mov	eax, DWORD PTR _hRes$[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_0DG@JANIJOBP@ERROR?5?3?5Unable?5to?5load?5Typelibra@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceCOM@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceCOM
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	3714					; 00000e82H
	push	OFFSET FLAT:??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T212919[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H

; 3715 : 				ATLTRACE(atlTraceCOM, 0, _T("\tVerify TypelibID and major version specified with\n"));

	push	OFFSET FLAT:??_C@_0DE@PFCDKHBK@?7Verify?5TypelibID?5and?5major?5vers@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceCOM@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceCOM
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	3715					; 00000e83H
	push	OFFSET FLAT:??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T212920[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 16					; 00000010H

; 3716 : 				ATLTRACE(atlTraceCOM, 0, _T("\tIDispatchImpl, CStockPropImpl, IProvideClassInfoImpl or IProvideCLassInfo2Impl\n"));

	push	OFFSET FLAT:??_C@_0FB@GGFNIACC@?7IDispatchImpl?0?5CStockPropImpl?0?5@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceCOM@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceCOM
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	3716					; 00000e84H
	push	OFFSET FLAT:??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T212921[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 16					; 00000010H
$L93994:

; 3717 : 			}
; 3718 : #endif		
; 3719 : 		}
; 3720 : 		if (SUCCEEDED(hRes))

	cmp	DWORD PTR _hRes$[ebp], 0
	jl	$L94036

; 3721 : 		{
; 3722 : 			CComPtr<ITypeInfo> spTypeInfo;

	lea	ecx, DWORD PTR _spTypeInfo$94037[ebp]
	call	??0?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ	; ATL::CComPtr<ITypeInfo>::CComPtr<ITypeInfo>
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 3723 : 			hRes = pTypeLib->GetTypeInfoOfGuid(*m_pguid, &spTypeInfo);

	lea	ecx, DWORD PTR _spTypeInfo$94037[ebp]
	call	??I?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAPAUITypeInfo@@XZ ; ATL::CComPtrBase<ITypeInfo>::operator&
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _pTypeLib$93975[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pTypeLib$93975[ebp]
	push	edx
	call	DWORD PTR [ecx+24]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRes$[ebp], eax

; 3724 : 			if (SUCCEEDED(hRes))

	cmp	DWORD PTR _hRes$[ebp], 0
	jl	$L94039

; 3725 : 			{
; 3726 : 				CComPtr<ITypeInfo> spInfo(spTypeInfo);

	lea	eax, DWORD PTR _spTypeInfo$94037[ebp]
	push	eax
	lea	ecx, DWORD PTR _spInfo$94040[ebp]
	call	??0?$CComPtr@UITypeInfo@@@ATL@@QAE@ABV01@@Z ; ATL::CComPtr<ITypeInfo>::CComPtr<ITypeInfo>
	mov	BYTE PTR __$EHRec$[ebp+8], 5

; 3727 : 				CComPtr<ITypeInfo2> spTypeInfo2;

	lea	ecx, DWORD PTR _spTypeInfo2$94115[ebp]
	call	??0?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ	; ATL::CComPtr<ITypeInfo2>::CComPtr<ITypeInfo2>
	mov	BYTE PTR __$EHRec$[ebp+8], 6

; 3728 : 				if (SUCCEEDED(spTypeInfo->QueryInterface(&spTypeInfo2)))

	lea	ecx, DWORD PTR _spTypeInfo2$94115[ebp]
	call	??I?$CComPtrBase@UITypeInfo2@@@ATL@@QAEPAPAUITypeInfo2@@XZ ; ATL::CComPtrBase<ITypeInfo2>::operator&
	push	eax
	lea	ecx, DWORD PTR _spTypeInfo$94037[ebp]
	call	??C?$CComPtrBase@UITypeInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeInfo@@@1@XZ ; ATL::CComPtrBase<ITypeInfo>::operator->
	push	eax
	call	??$QueryInterface@UITypeInfo2@@@IUnknown@@QAGJPAPAUITypeInfo2@@@Z ; IUnknown::QueryInterface<ITypeInfo2>
	test	eax, eax
	jl	SHORT $L94120

; 3729 : 					spInfo = spTypeInfo2;

	lea	ecx, DWORD PTR _spTypeInfo2$94115[ebp]
	push	ecx
	lea	ecx, DWORD PTR _spInfo$94040[ebp]
	call	??$?4UITypeInfo2@@@?$CComPtr@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@ABV?$CComPtr@UITypeInfo2@@@1@@Z ; ATL::CComPtr<ITypeInfo>::operator=<ITypeInfo2>
$L94120:

; 3730 : 
; 3731 : 				m_pInfo = spInfo.Detach();

	lea	ecx, DWORD PTR _spInfo$94040[ebp]
	call	?Detach@?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@XZ ; ATL::CComPtrBase<ITypeInfo>::Detach
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], eax

; 3732 : #ifndef _ATL_DLL_IMPL
; 3733 : 				_pAtlModule->AddTermFunc(Cleanup, (DWORD_PTR)this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	push	OFFSET FLAT:?Cleanup@CComTypeInfoHolder@ATL@@SGXK@Z ; ATL::CComTypeInfoHolder::Cleanup
	mov	ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	call	?AddTermFunc@CAtlModule@ATL@@QAEJP6GXK@ZK@Z ; ATL::CAtlModule::AddTermFunc

; 3734 : #endif
; 3735 : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _spTypeInfo2$94115[ebp]
	call	??1?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _spInfo$94040[ebp]
	call	??1?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ
$L94039:

; 3736 : 			pTypeLib->Release();

	mov	ecx, DWORD PTR _pTypeLib$93975[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pTypeLib$93975[ebp]
	push	eax
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 3737 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _spTypeInfo$94037[ebp]
	call	??1?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ
$L94036:

; 3738 : 	}
; 3739 : 	else

	jmp	SHORT $L94125
$L93974:

; 3740 : 	{
; 3741 : 		// Another thread has loaded the typeinfo so we're OK.
; 3742 : 		hRes = S_OK;

	mov	DWORD PTR _hRes$[ebp], 0
$L94125:

; 3743 : 	}
; 3744 : 
; 3745 : 	if (m_pInfo != NULL && m_pMap == NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	je	SHORT $L94127
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+20], 0
	jne	SHORT $L94127

; 3746 : 		LoadNameCache(m_pInfo);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LoadNameCache@CComTypeInfoHolder@ATL@@QAEJPAUITypeInfo@@@Z ; ATL::CComTypeInfoHolder::LoadNameCache
$L94127:

; 3747 : 
; 3748 : 	return hRes;

	mov	edx, DWORD PTR _hRes$[ebp]
	mov	DWORD PTR $T212922[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
	mov	eax, DWORD PTR $T212922[ebp]
$L93957:

; 3749 : }

	lea	esp, DWORD PTR [ebp-824]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212946
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	call	@__security_check_cookie@4
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
$L212946:
	DD	11					; 0000000bH
	DD	$L212945
$L212945:
	DD	-32					; ffffffe0H
	DD	8
	DD	$L212932
	DD	-48					; ffffffd0H
	DD	4
	DD	$L212933
	DD	-316					; fffffec4H
	DD	260					; 00000104H
	DD	$L212934
	DD	-348					; fffffea4H
	DD	4
	DD	$L212935
	DD	-620					; fffffd94H
	DD	260					; 00000104H
	DD	$L212936
	DD	-652					; fffffd74H
	DD	4
	DD	$L212937
	DD	-664					; fffffd68H
	DD	4
	DD	$L212938
	DD	-684					; fffffd54H
	DD	4
	DD	$L212939
	DD	-696					; fffffd48H
	DD	4
	DD	$L212940
	DD	-708					; fffffd3cH
	DD	4
	DD	$L212941
	DD	-720					; fffffd30H
	DD	4
	DD	$L212942
$L212942:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	84					; 00000054H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	50					; 00000032H
	DB	0
$L212941:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$L212940:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	84					; 00000054H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$L212939:
	DB	112					; 00000070H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	98					; 00000062H
	DB	65					; 00000041H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$L212938:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	84					; 00000054H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	98					; 00000062H
	DB	77					; 0000004dH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$L212937:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	116					; 00000074H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	97					; 00000061H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	77					; 0000004dH
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$L212936:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$L212935:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	116					; 00000074H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	97					; 00000061H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	77					; 0000004dH
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$L212934:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$L212933:
	DB	112					; 00000070H
	DB	84					; 00000054H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	98					; 00000062H
	DB	0
$L212932:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L212923:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
$L212924:
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$93984[ebp]
	jmp	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
$L212925:
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$94004[ebp]
	jmp	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
$L212926:
	lea	ecx, DWORD PTR _spTypeLibModule$94005[ebp]
	jmp	??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
$L212927:
	lea	ecx, DWORD PTR _spTypeInfo$94037[ebp]
	jmp	??1?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ
$L212928:
	lea	ecx, DWORD PTR _spInfo$94040[ebp]
	jmp	??1?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ
$L212929:
	lea	ecx, DWORD PTR _spTypeInfo2$94115[ebp]
	jmp	??1?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ
__ehhandler$?GetTI@CComTypeInfoHolder@ATL@@QAEJK@Z:
	mov	eax, OFFSET FLAT:$T212931
	jmp	___CxxFrameHandler
text$x	ENDS
?GetTI@CComTypeInfoHolder@ATL@@QAEJK@Z ENDP		; ATL::CComTypeInfoHolder::GetTI
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\platformsdk\include\guiddef.h
;	COMDAT _InlineIsEqualGUID
_TEXT	SEGMENT
tv74 = -4						; size = 4
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_InlineIsEqualGUID PROC NEAR				; COMDAT

; 151  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 152  :    return (
; 153  :       ((unsigned long *) &rguid1)[0] == ((unsigned long *) &rguid2)[0] &&
; 154  :       ((unsigned long *) &rguid1)[1] == ((unsigned long *) &rguid2)[1] &&
; 155  :       ((unsigned long *) &rguid1)[2] == ((unsigned long *) &rguid2)[2] &&
; 156  :       ((unsigned long *) &rguid1)[3] == ((unsigned long *) &rguid2)[3]);

	mov	eax, DWORD PTR _rguid1$[ebp]
	mov	ecx, DWORD PTR _rguid2$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $L212952
	mov	eax, DWORD PTR _rguid1$[ebp]
	mov	ecx, DWORD PTR _rguid2$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $L212952
	mov	eax, DWORD PTR _rguid1$[ebp]
	mov	ecx, DWORD PTR _rguid2$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $L212952
	mov	eax, DWORD PTR _rguid1$[ebp]
	mov	ecx, DWORD PTR _rguid2$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $L212952
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $L212953
$L212952:
	mov	DWORD PTR tv74[ebp], 0
$L212953:
	mov	eax, DWORD PTR tv74[ebp]

; 157  : }

	mov	esp, ebp
	pop	ebp
	ret	0
_InlineIsEqualGUID ENDP
_TEXT	ENDS
EXTRN	?AtlModuleAddTermFunc@ATL@@YGJPAU_ATL_MODULE70@1@P6GXK@ZK@Z:NEAR ; ATL::AtlModuleAddTermFunc
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
;	COMDAT ?AddTermFunc@CAtlModule@ATL@@QAEJP6GXK@ZK@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_pFunc$ = 8						; size = 4
_dw$ = 12						; size = 4
?AddTermFunc@CAtlModule@ATL@@QAEJP6GXK@ZK@Z PROC NEAR	; ATL::CAtlModule::AddTermFunc, COMDAT
; _this$ = ecx

; 2677 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2678 : 		return AtlModuleAddTermFunc(this, pFunc, dw);

	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $L212956
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $L212957
$L212956:
	mov	DWORD PTR tv69[ebp], 0
$L212957:
	mov	ecx, DWORD PTR _dw$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pFunc$[ebp]
	push	edx
	mov	eax, DWORD PTR tv69[ebp]
	push	eax
	call	?AtlModuleAddTermFunc@ATL@@YGJPAU_ATL_MODULE70@1@P6GXK@ZK@Z ; ATL::AtlModuleAddTermFunc

; 2679 : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?AddTermFunc@CAtlModule@ATL@@QAEJP6GXK@ZK@Z ENDP	; ATL::CAtlModule::AddTermFunc
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UITypeLib@@@ATL@@QAE@XZ	; ATL::CComPtrBase<ITypeLib>::~CComPtrBase<ITypeLib>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ PROC NEAR		; ATL::CComPtr<ITypeLib>::~CComPtr<ITypeLib>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UITypeLib@@@ATL@@QAE@XZ ; ATL::CComPtrBase<ITypeLib>::~CComPtrBase<ITypeLib>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<ITypeLib>::~CComPtr<ITypeLib>
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UITypeInfo@@@ATL@@QAE@XZ	; ATL::CComPtrBase<ITypeInfo>::~CComPtrBase<ITypeInfo>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ PROC NEAR		; ATL::CComPtr<ITypeInfo>::~CComPtr<ITypeInfo>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UITypeInfo@@@ATL@@QAE@XZ ; ATL::CComPtrBase<ITypeInfo>::~CComPtrBase<ITypeInfo>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<ITypeInfo>::~CComPtr<ITypeInfo>
_TEXT	ENDS
PUBLIC	??_C@_07PJPEDDJP@dw?5?$CB?$DN?50?$AA@		; `string'
;	COMDAT ??_C@_07PJPEDDJP@dw?5?$CB?$DN?50?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcom.h
CONST	SEGMENT
??_C@_07PJPEDDJP@dw?5?$CB?$DN?50?$AA@ DB 'dw != 0', 00H	; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?Cleanup@CComTypeInfoHolder@ATL@@SGXK@Z
_TEXT	SEGMENT
tv89 = -16						; size = 4
$T212966 = -12						; size = 4
$T212965 = -8						; size = 4
_p$ = -4						; size = 4
_dw$ = 8						; size = 4
?Cleanup@CComTypeInfoHolder@ATL@@SGXK@Z PROC NEAR	; ATL::CComTypeInfoHolder::Cleanup, COMDAT

; 3530 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 3531 : 		ATLASSERT(dw != 0);

	cmp	DWORD PTR _dw$[ebp], 0
	jne	SHORT $L212964
	push	OFFSET FLAT:??_C@_07PJPEDDJP@dw?5?$CB?$DN?50?$AA@
	push	0
	push	3531					; 00000dcbH
	push	OFFSET FLAT:??_C@_0EP@FBJOMLAB@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L212964
	int	3
$L212964:

; 3532 : 		if (dw == 0)

	cmp	DWORD PTR _dw$[ebp], 0
	jne	SHORT $L93888

; 3533 : 			return;

	jmp	SHORT $L93885
$L93888:

; 3534 : 			
; 3535 : 		CComTypeInfoHolder* p = (CComTypeInfoHolder*) dw;

	mov	ecx, DWORD PTR _dw$[ebp]
	mov	DWORD PTR _p$[ebp], ecx

; 3536 : 		if (p->m_pInfo != NULL)

	mov	edx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [edx+12], 0
	je	SHORT $L93891

; 3537 : 			p->m_pInfo->Release();

	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	call	DWORD PTR [ecx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L93891:

; 3538 : 		p->m_pInfo = NULL;

	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+12], 0

; 3539 : 		delete [] p->m_pMap;

	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR $T212966[ebp], ecx
	mov	edx, DWORD PTR $T212966[ebp]
	mov	DWORD PTR $T212965[ebp], edx
	cmp	DWORD PTR $T212965[ebp], 0
	je	SHORT $L212967
	push	3
	mov	ecx, DWORD PTR $T212965[ebp]
	call	??_Estringdispid@CComTypeInfoHolder@ATL@@QAEPAXI@Z
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $L212968
$L212967:
	mov	DWORD PTR tv89[ebp], 0
$L212968:

; 3540 : 		p->m_pMap = NULL;

	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+20], 0
$L93885:

; 3541 : 	}

	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Cleanup@CComTypeInfoHolder@ATL@@SGXK@Z ENDP		; ATL::CComTypeInfoHolder::Cleanup
_TEXT	ENDS
PUBLIC	??0stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ	; ATL::CComTypeInfoHolder::stringdispid::stringdispid
PUBLIC	?Attach@CComBSTR@ATL@@QAEXPAG@Z			; ATL::CComBSTR::Attach
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:NEAR			; `eh vector constructor iterator'
EXTRN	??_U@YAPAXI@Z:NEAR				; operator new[]
;	COMDAT xdata$x
xdata$x	SEGMENT
$T212988 DD	0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:$L212978
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	FLAT:$L212979
$T212990 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L212977
$T212989 DD	00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:$T212990
$T212981 DD	019930520H
	DD	04H
	DD	FLAT:$T212988
	DD	01H
	DD	FLAT:$T212989
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?LoadNameCache@CComTypeInfoHolder@ATL@@QAEJPAUITypeInfo@@@Z
_TEXT	SEGMENT
tv91 = -88						; size = 4
tv183 = -84						; size = 4
$T212973 = -80						; size = 4
$T212972 = -76						; size = 4
$T212971 = -72						; size = 4
_bstrName$93941 = -64					; size = 4
_pfd$93938 = -52					; size = 4
_i$93934 = -44						; size = 4
_pMap$93922 = -40					; size = 4
_hr$ = -36						; size = 4
_pta$ = -28						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_pTypeInfo$ = 8						; size = 4
?LoadNameCache@CComTypeInfoHolder@ATL@@QAEJPAUITypeInfo@@@Z PROC NEAR ; ATL::CComTypeInfoHolder::LoadNameCache, COMDAT
; _this$ = ecx

; 3591 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadNameCache@CComTypeInfoHolder@ATL@@QAEJPAUITypeInfo@@@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	ecx
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-88]
	mov	ecx, 18					; 00000012H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 3592 : 		TYPEATTR* pta;
; 3593 : 		HRESULT hr = pTypeInfo->GetTypeAttr(&pta);

	mov	esi, esp
	lea	eax, DWORD PTR _pta$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pTypeInfo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pTypeInfo$[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 3594 : 		if (SUCCEEDED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jl	$L93921

; 3595 : 		{
; 3596 : 			stringdispid* pMap = NULL;

	mov	DWORD PTR _pMap$93922[ebp], 0

; 3597 : 			m_nCount = pta->cFuncs;

	mov	ecx, DWORD PTR _pta$[ebp]
	movzx	edx, WORD PTR [ecx+44]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], edx

; 3598 : 			m_pMap = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 3599 : 			if (m_nCount != 0)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+24], 0
	je	$L93923

; 3600 : 			{
; 3601 : 				ATLTRY(pMap = new stringdispid[m_nCount]);

	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR $T212971[ebp], ecx
	mov	edx, DWORD PTR $T212971[ebp]
	imul	edx, 12					; 0000000cH
	add	edx, 4
	push	edx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR tv183[ebp], eax
	mov	eax, DWORD PTR tv183[ebp]
	mov	DWORD PTR $T212973[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	DWORD PTR $T212973[ebp], 0
	je	SHORT $L212974
	mov	ecx, DWORD PTR $T212973[ebp]
	mov	edx, DWORD PTR $T212971[ebp]
	mov	DWORD PTR [ecx], edx
	push	OFFSET FLAT:??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ
	push	OFFSET FLAT:??0stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ ; ATL::CComTypeInfoHolder::stringdispid::stringdispid
	mov	eax, DWORD PTR $T212971[ebp]
	push	eax
	push	12					; 0000000cH
	mov	ecx, DWORD PTR $T212973[ebp]
	add	ecx, 4
	push	ecx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	edx, DWORD PTR $T212973[ebp]
	add	edx, 4
	mov	DWORD PTR tv91[ebp], edx
	jmp	SHORT $L212975
$L212974:
	mov	DWORD PTR tv91[ebp], 0
$L212975:
	mov	eax, DWORD PTR tv91[ebp]
	mov	DWORD PTR $T212972[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	mov	ecx, DWORD PTR $T212972[ebp]
	mov	DWORD PTR _pMap$93922[ebp], ecx
	jmp	SHORT $L212976
$L212977:
	mov	eax, $L212976
	ret	0
$L212976:
	mov	DWORD PTR __$EHRec$[ebp+12], -1

; 3602 : 				if (pMap == NULL)

	cmp	DWORD PTR _pMap$93922[ebp], 0
	jne	SHORT $L93923

; 3603 : 				{
; 3604 : 					pTypeInfo->ReleaseTypeAttr(pta);

	mov	esi, esp
	mov	edx, DWORD PTR _pta$[ebp]
	push	edx
	mov	eax, DWORD PTR _pTypeInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pTypeInfo$[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+76]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 3605 : 					return E_OUTOFMEMORY;

	mov	eax, -2147024882			; 8007000eH
	jmp	$L93917
$L93923:

; 3606 : 				}
; 3607 : 			}
; 3608 : 			for (int i=0; i<m_nCount; i++)

	mov	DWORD PTR _i$93934[ebp], 0
	jmp	SHORT $L93935
$L93936:
	mov	eax, DWORD PTR _i$93934[ebp]
	add	eax, 1
	mov	DWORD PTR _i$93934[ebp], eax
$L93935:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$93934[ebp]
	cmp	edx, DWORD PTR [ecx+24]
	jge	$L93937

; 3609 : 			{
; 3610 : 				FUNCDESC* pfd;
; 3611 : 				if (SUCCEEDED(pTypeInfo->GetFuncDesc(i, &pfd)))

	mov	esi, esp
	lea	eax, DWORD PTR _pfd$93938[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$93934[ebp]
	push	ecx
	mov	edx, DWORD PTR _pTypeInfo$[ebp]
	push	edx
	mov	eax, DWORD PTR _pTypeInfo$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+20]
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jl	$L93940

; 3612 : 				{
; 3613 : 					CComBSTR bstrName;

	lea	ecx, DWORD PTR _bstrName$93941[ebp]
	call	??0CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::CComBSTR
	mov	DWORD PTR __$EHRec$[ebp+12], 3

; 3614 : 					if (SUCCEEDED(pTypeInfo->GetDocumentation(pfd->memid, &bstrName, NULL, NULL, NULL)))

	mov	esi, esp
	push	0
	push	0
	push	0
	lea	ecx, DWORD PTR _bstrName$93941[ebp]
	call	??ICComBSTR@ATL@@QAEPAPAGXZ		; ATL::CComBSTR::operator&
	push	eax
	mov	edx, DWORD PTR _pfd$93938[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pTypeInfo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pTypeInfo$[ebp]
	mov	eax, DWORD PTR [edx]
	call	DWORD PTR [eax+48]
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jl	SHORT $L93943

; 3615 : 					{
; 3616 : 						pMap[i].bstr.Attach(bstrName.Detach());

	lea	ecx, DWORD PTR _bstrName$93941[ebp]
	call	?Detach@CComBSTR@ATL@@QAEPAGXZ		; ATL::CComBSTR::Detach
	push	eax
	mov	ecx, DWORD PTR _i$93934[ebp]
	imul	ecx, 12					; 0000000cH
	add	ecx, DWORD PTR _pMap$93922[ebp]
	call	?Attach@CComBSTR@ATL@@QAEXPAG@Z		; ATL::CComBSTR::Attach

; 3617 : 						pMap[i].nLen = SysStringLen(pMap[i].bstr);

	mov	esi, DWORD PTR _i$93934[ebp]
	imul	esi, 12					; 0000000cH
	mov	ecx, DWORD PTR _i$93934[ebp]
	imul	ecx, 12					; 0000000cH
	add	ecx, DWORD PTR _pMap$93922[ebp]
	call	??BCComBSTR@ATL@@QBEPAGXZ		; ATL::CComBSTR::operator unsigned short *
	mov	edi, esp
	push	eax
	call	DWORD PTR __imp__SysStringLen@4
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _pMap$93922[ebp]
	mov	DWORD PTR [ecx+esi+4], eax

; 3618 : 						pMap[i].id = pfd->memid;

	mov	edx, DWORD PTR _i$93934[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _pMap$93922[ebp]
	mov	ecx, DWORD PTR _pfd$93938[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+edx+8], ecx
$L93943:

; 3619 : 					}
; 3620 : 					pTypeInfo->ReleaseFuncDesc(pfd);

	mov	esi, esp
	mov	edx, DWORD PTR _pfd$93938[ebp]
	push	edx
	mov	eax, DWORD PTR _pTypeInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pTypeInfo$[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+80]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 3621 : 				}

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _bstrName$93941[ebp]
	call	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
$L93940:

; 3622 : 			}

	jmp	$L93936
$L93937:

; 3623 : 			m_pMap = pMap;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pMap$93922[ebp]
	mov	DWORD PTR [eax+20], ecx

; 3624 : 			pTypeInfo->ReleaseTypeAttr(pta);

	mov	esi, esp
	mov	edx, DWORD PTR _pta$[ebp]
	push	edx
	mov	eax, DWORD PTR _pTypeInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pTypeInfo$[ebp]
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+76]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L93921:

; 3625 : 		}
; 3626 : 		return S_OK;

	xor	eax, eax
$L93917:

; 3627 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L212987
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 88					; 00000058H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$L212987:
	DD	3
	DD	$L212986
$L212986:
	DD	-28					; ffffffe4H
	DD	4
	DD	$L212982
	DD	-52					; ffffffccH
	DD	4
	DD	$L212983
	DD	-64					; ffffffc0H
	DD	4
	DD	$L212984
$L212984:
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$L212983:
	DB	112					; 00000070H
	DB	102					; 00000066H
	DB	100					; 00000064H
	DB	0
$L212982:
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L212978:
	mov	eax, DWORD PTR $T212973[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	pop	ecx
	ret	0
$L212979:
	lea	ecx, DWORD PTR _bstrName$93941[ebp]
	jmp	??1CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::~CComBSTR
__ehhandler$?LoadNameCache@CComTypeInfoHolder@ATL@@QAEJPAUITypeInfo@@@Z:
	mov	eax, OFFSET FLAT:$T212981
	jmp	___CxxFrameHandler
text$x	ENDS
?LoadNameCache@CComTypeInfoHolder@ATL@@QAEJPAUITypeInfo@@@Z ENDP ; ATL::CComTypeInfoHolder::LoadNameCache
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ?Attach@CComBSTR@ATL@@QAEXPAG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_src$ = 8						; size = 4
?Attach@CComBSTR@ATL@@QAEXPAG@Z PROC NEAR		; ATL::CComBSTR::Attach, COMDAT
; _this$ = ecx

; 680  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 681  : 		if (m_str != src)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _src$[ebp]
	je	SHORT $L81754

; 682  : 		{
; 683  : 			::SysFreeString(m_str);

	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__SysFreeString@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 684  : 			m_str = src;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _src$[ebp]
	mov	DWORD PTR [ecx], edx
$L81754:

; 685  : 		}
; 686  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Attach@CComBSTR@ATL@@QAEXPAG@Z ENDP			; ATL::CComBSTR::Attach
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcom.h
_TEXT	ENDS
;	COMDAT ??0stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ PROC NEAR ; ATL::CComTypeInfoHolder::stringdispid::stringdispid, COMDAT
; _this$ = ecx

; 3477 : 		stringdispid() : nLen(0), id(DISPID_UNKNOWN){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CComBSTR@ATL@@QAE@XZ			; ATL::CComBSTR::CComBSTR
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ ENDP	; ATL::CComTypeInfoHolder::stringdispid::stringdispid
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UITypeInfo2@@@ATL@@QAE@XZ	; ATL::CComPtrBase<ITypeInfo2>::~CComPtrBase<ITypeInfo2>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<ITypeInfo2>::~CComPtr<ITypeInfo2>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComPtrBase@UITypeInfo2@@@ATL@@QAE@XZ ; ATL::CComPtrBase<ITypeInfo2>::~CComPtrBase<ITypeInfo2>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<ITypeInfo2>::~CComPtr<ITypeInfo2>
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UITypeLib@@@ATL@@IAE@XZ	; ATL::CComPtrBase<ITypeLib>::CComPtrBase<ITypeLib>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ PROC NEAR		; ATL::CComPtr<ITypeLib>::CComPtr<ITypeLib>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UITypeLib@@@ATL@@IAE@XZ ; ATL::CComPtrBase<ITypeLib>::CComPtrBase<ITypeLib>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<ITypeLib>::CComPtr<ITypeLib>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UITypeLib@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtrBase<ITypeLib>::~CComPtrBase<ITypeLib>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L163057

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163057:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UITypeLib@@@ATL@@QAE@XZ ENDP		; ATL::CComPtrBase<ITypeLib>::~CComPtrBase<ITypeLib>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ PROC NEAR ; ATL::CComPtrBase<ITypeLib>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L213006
	push	OFFSET FLAT:??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
	push	0
	push	143					; 0000008fH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213006
	int	3
$L213006:

; 144  : 		return &p;

	mov	eax, DWORD PTR _this$[ebp]

; 145  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ ENDP ; ATL::CComPtrBase<ITypeLib>::operator&
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ PROC NEAR ; ATL::CComPtrBase<ITypeLib>::operator->, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 148  : 		ATLASSERT(p!=NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L213009
	push	OFFSET FLAT:??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
	push	0
	push	148					; 00000094H
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213009
	int	3
$L213009:

; 149  : 		return (_NoAddRefReleaseOnCComPtr<T>*)p;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 150  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CComPtrBase@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ ENDP ; ATL::CComPtrBase<ITypeLib>::operator->
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@XZ	; ATL::CComPtrBase<ITypeInfo>::CComPtrBase<ITypeInfo>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ PROC NEAR		; ATL::CComPtr<ITypeInfo>::CComPtr<ITypeInfo>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@XZ ; ATL::CComPtrBase<ITypeInfo>::CComPtrBase<ITypeInfo>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<ITypeInfo>::CComPtr<ITypeInfo>
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@PAUITypeInfo@@@Z ; ATL::CComPtrBase<ITypeInfo>::CComPtrBase<ITypeInfo>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CComPtr@UITypeInfo@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??0?$CComPtr@UITypeInfo@@@ATL@@QAE@ABV01@@Z PROC NEAR	; ATL::CComPtr<ITypeInfo>::CComPtr<ITypeInfo>, COMDAT
; _this$ = ecx

; 273  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _lp$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@PAUITypeInfo@@@Z ; ATL::CComPtrBase<ITypeInfo>::CComPtrBase<ITypeInfo>

; 274  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CComPtr@UITypeInfo@@@ATL@@QAE@ABV01@@Z ENDP	; ATL::CComPtr<ITypeInfo>::CComPtr<ITypeInfo>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UITypeInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UITypeInfo@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtrBase<ITypeInfo>::~CComPtrBase<ITypeInfo>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L163087

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163087:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UITypeInfo@@@ATL@@QAE@XZ ENDP		; ATL::CComPtrBase<ITypeInfo>::~CComPtrBase<ITypeInfo>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAPAUITypeInfo@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAPAUITypeInfo@@XZ PROC NEAR ; ATL::CComPtrBase<ITypeInfo>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L213018
	push	OFFSET FLAT:??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
	push	0
	push	143					; 0000008fH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213018
	int	3
$L213018:

; 144  : 		return &p;

	mov	eax, DWORD PTR _this$[ebp]

; 145  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAPAUITypeInfo@@XZ ENDP ; ATL::CComPtrBase<ITypeInfo>::operator&
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UITypeInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeInfo@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UITypeInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeInfo@@@1@XZ PROC NEAR ; ATL::CComPtrBase<ITypeInfo>::operator->, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 148  : 		ATLASSERT(p!=NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L213021
	push	OFFSET FLAT:??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
	push	0
	push	148					; 00000094H
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213021
	int	3
$L213021:

; 149  : 		return (_NoAddRefReleaseOnCComPtr<T>*)p;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 150  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CComPtrBase@UITypeInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeInfo@@@1@XZ ENDP ; ATL::CComPtrBase<ITypeInfo>::operator->
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Detach@?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@XZ
_TEXT	SEGMENT
_pt$ = -8						; size = 4
_this$ = -4						; size = 4
?Detach@?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@XZ PROC NEAR ; ATL::CComPtrBase<ITypeInfo>::Detach, COMDAT
; _this$ = ecx

; 198  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 199  : 		T* pt = p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pt$[ebp], ecx

; 200  : 		p = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 201  : 		return pt;

	mov	eax, DWORD PTR _pt$[ebp]

; 202  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?Detach@?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@XZ ENDP ; ATL::CComPtrBase<ITypeInfo>::Detach
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UITypeInfo2@@@ATL@@IAE@XZ	; ATL::CComPtrBase<ITypeInfo2>::CComPtrBase<ITypeInfo2>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<ITypeInfo2>::CComPtr<ITypeInfo2>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UITypeInfo2@@@ATL@@IAE@XZ ; ATL::CComPtrBase<ITypeInfo2>::CComPtrBase<ITypeInfo2>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<ITypeInfo2>::CComPtr<ITypeInfo2>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UITypeInfo2@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UITypeInfo2@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtrBase<ITypeInfo2>::~CComPtrBase<ITypeInfo2>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L163108

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163108:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UITypeInfo2@@@ATL@@QAE@XZ ENDP		; ATL::CComPtrBase<ITypeInfo2>::~CComPtrBase<ITypeInfo2>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UITypeInfo2@@@ATL@@QAEPAPAUITypeInfo2@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UITypeInfo2@@@ATL@@QAEPAPAUITypeInfo2@@XZ PROC NEAR ; ATL::CComPtrBase<ITypeInfo2>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L213030
	push	OFFSET FLAT:??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
	push	0
	push	143					; 0000008fH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213030
	int	3
$L213030:

; 144  : 		return &p;

	mov	eax, DWORD PTR _this$[ebp]

; 145  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UITypeInfo2@@@ATL@@QAEPAPAUITypeInfo2@@XZ ENDP ; ATL::CComPtrBase<ITypeInfo2>::operator&
_TEXT	ENDS
PUBLIC	?GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPAGIKPAJ@Z ; ATL::CComTypeInfoHolder::GetIDsOfNames
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcom.h
;	COMDAT ?GetIDsOfNames@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJABU_GUID@@PAPAGIKPAJ@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_rgszNames$ = 16					; size = 4
_cNames$ = 20						; size = 4
_lcid$ = 24						; size = 4
_rgdispid$ = 28						; size = 4
?GetIDsOfNames@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJABU_GUID@@PAPAGIKPAJ@Z PROC NEAR ; ATL::IDispatchImpl<IAxWinAmbientDispatchEx,&_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5,&ATL::CAtlModule::m_libid,65535,65535,ATL::CComTypeInfoHolder>::GetIDsOfNames, COMDAT

; 4403 : 	{

	push	ebp
	mov	ebp, esp

; 4404 : 		return _tih.GetIDsOfNames(riid, rgszNames, cNames, lcid, rgdispid);

	mov	eax, DWORD PTR _rgdispid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lcid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cNames$[ebp]
	push	edx
	mov	eax, DWORD PTR _rgszNames$[ebp]
	push	eax
	mov	ecx, DWORD PTR _riid$[ebp]
	push	ecx
	mov	ecx, OFFSET FLAT:?_tih@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A
	call	?GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPAGIKPAJ@Z ; ATL::CComTypeInfoHolder::GetIDsOfNames

; 4405 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	24					; 00000018H
?GetIDsOfNames@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJABU_GUID@@PAPAGIKPAJ@Z ENDP ; ATL::IDispatchImpl<IAxWinAmbientDispatchEx,&_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5,&ATL::CAtlModule::m_libid,65535,65535,ATL::CComTypeInfoHolder>::GetIDsOfNames
_TEXT	ENDS
PUBLIC	?EnsureTI@CComTypeInfoHolder@ATL@@QAEJK@Z	; ATL::CComTypeInfoHolder::EnsureTI
EXTRN	_memcmp:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPAGIKPAJ@Z
_TEXT	SEGMENT
_j$93903 = -16						; size = 4
_n$93902 = -12						; size = 4
_hRes$ = -8						; size = 4
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
_rgszNames$ = 12					; size = 4
_cNames$ = 16						; size = 4
_lcid$ = 20						; size = 4
_rgdispid$ = 24						; size = 4
?GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPAGIKPAJ@Z PROC NEAR ; ATL::CComTypeInfoHolder::GetIDsOfNames, COMDAT
; _this$ = ecx

; 3549 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 3550 : 		HRESULT hRes = EnsureTI(lcid);

	mov	eax, DWORD PTR _lcid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EnsureTI@CComTypeInfoHolder@ATL@@QAEJK@Z ; ATL::CComTypeInfoHolder::EnsureTI
	mov	DWORD PTR _hRes$[ebp], eax

; 3551 : 		if (m_pInfo != NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	je	$L93899

; 3552 : 		{
; 3553 : 			hRes = E_FAIL;

	mov	DWORD PTR _hRes$[ebp], -2147467259	; 80004005H

; 3554 : 			// Look in cache if
; 3555 : 			//	cache is populated
; 3556 : 			//	parameter names are not requested
; 3557 : 			if (m_pMap != NULL && cNames == 1)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+20], 0
	je	$L93901
	cmp	DWORD PTR _cNames$[ebp], 1
	jne	$L93901

; 3558 : 			{
; 3559 : 				int n = int( ocslen(rgszNames[0]) );

	mov	eax, DWORD PTR _rgszNames$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?ocslen@@YAHPBG@Z			; ocslen
	add	esp, 4
	mov	DWORD PTR _n$93902[ebp], eax

; 3560 : 				for (int j=m_nCount-1; j>=0; j--)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	sub	eax, 1
	mov	DWORD PTR _j$93903[ebp], eax
	jmp	SHORT $L93904
$L93905:
	mov	ecx, DWORD PTR _j$93903[ebp]
	sub	ecx, 1
	mov	DWORD PTR _j$93903[ebp], ecx
$L93904:
	cmp	DWORD PTR _j$93903[ebp], 0
	jl	SHORT $L93901

; 3561 : 				{
; 3562 : 					if ((n == m_pMap[j].nLen) &&
; 3563 : 						(memcmp(m_pMap[j].bstr, rgszNames[0], m_pMap[j].nLen * sizeof(OLECHAR)) == 0))

	mov	edx, DWORD PTR _j$93903[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR _n$93902[ebp]
	cmp	eax, DWORD PTR [ecx+edx+4]
	jne	SHORT $L93908
	mov	ecx, DWORD PTR _j$93903[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR [eax+ecx+4]
	shl	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _rgszNames$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _j$93903[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+20]
	call	??BCComBSTR@ATL@@QBEPAGXZ		; ATL::CComBSTR::operator unsigned short *
	push	eax
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $L93908

; 3564 : 					{
; 3565 : 						rgdispid[0] = m_pMap[j].id;

	mov	eax, DWORD PTR _j$93903[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	ecx, DWORD PTR _rgdispid$[ebp]
	mov	edx, DWORD PTR [edx+eax+8]
	mov	DWORD PTR [ecx], edx

; 3566 : 						hRes = S_OK;

	mov	DWORD PTR _hRes$[ebp], 0

; 3567 : 						break;

	jmp	SHORT $L93901
$L93908:

; 3568 : 					}
; 3569 : 				}

	jmp	SHORT $L93905
$L93901:

; 3570 : 			}
; 3571 : 			// if cache is empty or name not in cache or parameter names are requested,
; 3572 : 			// delegate to ITypeInfo::GetIDsOfNames
; 3573 : 			if (FAILED(hRes))

	cmp	DWORD PTR _hRes$[ebp], 0
	jge	SHORT $L93899

; 3574 : 			{
; 3575 : 				hRes = m_pInfo->GetIDsOfNames(rgszNames, cNames, rgdispid);

	mov	esi, esp
	mov	eax, DWORD PTR _rgdispid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cNames$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rgszNames$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	call	DWORD PTR [ecx+40]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRes$[ebp], eax
$L93899:

; 3576 : 			}
; 3577 : 		}
; 3578 : 		return hRes;

	mov	eax, DWORD PTR _hRes$[ebp]

; 3579 : 	}

	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPAGIKPAJ@Z ENDP ; ATL::CComTypeInfoHolder::GetIDsOfNames
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?EnsureTI@CComTypeInfoHolder@ATL@@QAEJK@Z
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_lcid$ = 8						; size = 4
?EnsureTI@CComTypeInfoHolder@ATL@@QAEJK@Z PROC NEAR	; ATL::CComTypeInfoHolder::EnsureTI, COMDAT
; _this$ = ecx

; 3520 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 3521 : 		HRESULT hr = S_OK;

	mov	DWORD PTR _hr$[ebp], 0

; 3522 : 		if (m_pInfo == NULL || m_pMap == NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $L93884
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 0
	jne	SHORT $L93883
$L93884:

; 3523 : 			hr = GetTI(lcid);

	mov	edx, DWORD PTR _lcid$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTI@CComTypeInfoHolder@ATL@@QAEJK@Z	; ATL::CComTypeInfoHolder::GetTI
	mov	DWORD PTR _hr$[ebp], eax
$L93883:

; 3524 : 		return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 3525 : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?EnsureTI@CComTypeInfoHolder@ATL@@QAEJK@Z ENDP		; ATL::CComTypeInfoHolder::EnsureTI
_TEXT	ENDS
PUBLIC	?Invoke@CComTypeInfoHolder@ATL@@QAEJPAUIDispatch@@JABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ; ATL::CComTypeInfoHolder::Invoke
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Invoke@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_dispidMember$ = 12					; size = 4
_riid$ = 16						; size = 4
_lcid$ = 20						; size = 4
_wFlags$ = 24						; size = 2
_pdispparams$ = 28					; size = 4
_pvarResult$ = 32					; size = 4
_pexcepinfo$ = 36					; size = 4
_puArgErr$ = 40						; size = 4
?Invoke@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z PROC NEAR ; ATL::IDispatchImpl<IAxWinAmbientDispatchEx,&_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5,&ATL::CAtlModule::m_libid,65535,65535,ATL::CComTypeInfoHolder>::Invoke, COMDAT

; 4409 : 	{

	push	ebp
	mov	ebp, esp

; 4410 : 		return _tih.Invoke((IDispatch*)this, dispidMember, riid, lcid,
; 4411 : 		wFlags, pdispparams, pvarResult, pexcepinfo, puArgErr);

	mov	eax, DWORD PTR _puArgErr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pexcepinfo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pvarResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _pdispparams$[ebp]
	push	eax
	mov	cx, WORD PTR _wFlags$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lcid$[ebp]
	push	edx
	mov	eax, DWORD PTR _riid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dispidMember$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, OFFSET FLAT:?_tih@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A
	call	?Invoke@CComTypeInfoHolder@ATL@@QAEJPAUIDispatch@@JABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ; ATL::CComTypeInfoHolder::Invoke

; 4412 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	36					; 00000024H
?Invoke@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ENDP ; ATL::IDispatchImpl<IAxWinAmbientDispatchEx,&_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5,&ATL::CAtlModule::m_libid,65535,65535,ATL::CComTypeInfoHolder>::Invoke
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Invoke@CComTypeInfoHolder@ATL@@QAEJPAUIDispatch@@JABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z
_TEXT	SEGMENT
_hRes$ = -8						; size = 4
_this$ = -4						; size = 4
_p$ = 8							; size = 4
_dispidMember$ = 12					; size = 4
___formal$ = 16						; size = 4
_lcid$ = 20						; size = 4
_wFlags$ = 24						; size = 2
_pdispparams$ = 28					; size = 4
_pvarResult$ = 32					; size = 4
_pexcepinfo$ = 36					; size = 4
_puArgErr$ = 40						; size = 4
?Invoke@CComTypeInfoHolder@ATL@@QAEJPAUIDispatch@@JABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z PROC NEAR ; ATL::CComTypeInfoHolder::Invoke, COMDAT
; _this$ = ecx

; 3584 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 3585 : 		HRESULT hRes = EnsureTI(lcid);

	mov	eax, DWORD PTR _lcid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EnsureTI@CComTypeInfoHolder@ATL@@QAEJK@Z ; ATL::CComTypeInfoHolder::EnsureTI
	mov	DWORD PTR _hRes$[ebp], eax

; 3586 : 		if (m_pInfo != NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	je	SHORT $L93915

; 3587 : 			hRes = m_pInfo->Invoke(p, dispidMember, wFlags, pdispparams, pvarResult, pexcepinfo, puArgErr);

	mov	esi, esp
	mov	edx, DWORD PTR _puArgErr$[ebp]
	push	edx
	mov	eax, DWORD PTR _pexcepinfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pvarResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pdispparams$[ebp]
	push	edx
	mov	ax, WORD PTR _wFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dispidMember$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	call	DWORD PTR [ecx+44]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRes$[ebp], eax
$L93915:

; 3588 : 		return hRes;

	mov	eax, DWORD PTR _hRes$[ebp]

; 3589 : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
?Invoke@CComTypeInfoHolder@ATL@@QAEJPAUIDispatch@@JABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ENDP ; ATL::CComTypeInfoHolder::Invoke
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIOleObject@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IOleObject>::CComPtrBase<IOleObject>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIOleObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIOleObject@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<IOleObject>::CComPtr<IOleObject>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIOleObject@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IOleObject>::CComPtrBase<IOleObject>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIOleObject@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IOleObject>::CComPtr<IOleObject>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIOleObject@@@ATL@@QAEPAPAUIOleObject@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIOleObject@@@ATL@@QAEPAPAUIOleObject@@XZ PROC NEAR ; ATL::CComPtrBase<IOleObject>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L213045
	push	OFFSET FLAT:??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
	push	0
	push	143					; 0000008fH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213045
	int	3
$L213045:

; 144  : 		return &p;

	mov	eax, DWORD PTR _this$[ebp]

; 145  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UIOleObject@@@ATL@@QAEPAPAUIOleObject@@XZ ENDP ; ATL::CComPtrBase<IOleObject>::operator&
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IOleInPlaceFrame>::CComPtrBase<IOleInPlaceFrame>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<IOleInPlaceFrame>::CComPtr<IOleInPlaceFrame>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IOleInPlaceFrame>::CComPtrBase<IOleInPlaceFrame>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IOleInPlaceFrame>::CComPtr<IOleInPlaceFrame>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBEPAUIOleInPlaceFrame@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBEPAUIOleInPlaceFrame@@XZ PROC NEAR ; ATL::CComPtrBase<IOleInPlaceFrame>::operator IOleInPlaceFrame *, COMDAT
; _this$ = ecx

; 131  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 132  : 		return p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 133  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBEPAUIOleInPlaceFrame@@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceFrame>::operator IOleInPlaceFrame *
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEPAPAUIOleInPlaceFrame@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEPAPAUIOleInPlaceFrame@@XZ PROC NEAR ; ATL::CComPtrBase<IOleInPlaceFrame>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L213052
	push	OFFSET FLAT:??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
	push	0
	push	143					; 0000008fH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213052
	int	3
$L213052:

; 144  : 		return &p;

	mov	eax, DWORD PTR _this$[ebp]

; 145  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEPAPAUIOleInPlaceFrame@@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceFrame>::operator&
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??7?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??7?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBE_NXZ PROC NEAR ; ATL::CComPtrBase<IOleInPlaceFrame>::operator!, COMDAT
; _this$ = ecx

; 152  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 153  : 		return (p == NULL);

	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], 0
	sete	cl
	mov	al, cl

; 154  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??7?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBE_NXZ ENDP	; ATL::CComPtrBase<IOleInPlaceFrame>::operator!
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?CopyTo@?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEJPAPAUIOleInPlaceFrame@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppT$ = 8						; size = 4
?CopyTo@?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEJPAPAUIOleInPlaceFrame@@@Z PROC NEAR ; ATL::CComPtrBase<IOleInPlaceFrame>::CopyTo, COMDAT
; _this$ = ecx

; 204  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 205  : 		ATLASSERT(ppT != NULL);

	cmp	DWORD PTR _ppT$[ebp], 0
	jne	SHORT $L213057
	push	OFFSET FLAT:??_C@_08IMNICHFN@ppT?5?$CB?$DN?50?$AA@
	push	0
	push	205					; 000000cdH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213057
	int	3
$L213057:

; 206  : 		if (ppT == NULL)

	cmp	DWORD PTR _ppT$[ebp], 0
	jne	SHORT $L163350

; 207  : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L163348
$L163350:

; 208  : 		*ppT = p;

	mov	ecx, DWORD PTR _ppT$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 209  : 		if (p)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $L163352

; 210  : 			p->AddRef();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	call	DWORD PTR [eax+4]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163352:

; 211  : 		return S_OK;

	xor	eax, eax
$L163348:

; 212  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CopyTo@?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEJPAPAUIOleInPlaceFrame@@@Z ENDP ; ATL::CComPtrBase<IOleInPlaceFrame>::CopyTo
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::CComPtrBase<IOleInPlaceUIWindow>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtr<IOleInPlaceUIWindow>::CComPtr<IOleInPlaceUIWindow>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IOleInPlaceUIWindow>::CComPtrBase<IOleInPlaceUIWindow>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IOleInPlaceUIWindow>::CComPtr<IOleInPlaceUIWindow>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBEPAUIOleInPlaceUIWindow@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBEPAUIOleInPlaceUIWindow@@XZ PROC NEAR ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator IOleInPlaceUIWindow *, COMDAT
; _this$ = ecx

; 131  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 132  : 		return p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 133  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBEPAUIOleInPlaceUIWindow@@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator IOleInPlaceUIWindow *
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEPAPAUIOleInPlaceUIWindow@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEPAPAUIOleInPlaceUIWindow@@XZ PROC NEAR ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L213064
	push	OFFSET FLAT:??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
	push	0
	push	143					; 0000008fH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213064
	int	3
$L213064:

; 144  : 		return &p;

	mov	eax, DWORD PTR _this$[ebp]

; 145  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEPAPAUIOleInPlaceUIWindow@@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator&
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??7?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??7?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBE_NXZ PROC NEAR ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator!, COMDAT
; _this$ = ecx

; 152  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 153  : 		return (p == NULL);

	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], 0
	sete	cl
	mov	al, cl

; 154  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??7?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBE_NXZ ENDP ; ATL::CComPtrBase<IOleInPlaceUIWindow>::operator!
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?CopyTo@?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEJPAPAUIOleInPlaceUIWindow@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppT$ = 8						; size = 4
?CopyTo@?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEJPAPAUIOleInPlaceUIWindow@@@Z PROC NEAR ; ATL::CComPtrBase<IOleInPlaceUIWindow>::CopyTo, COMDAT
; _this$ = ecx

; 204  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 205  : 		ATLASSERT(ppT != NULL);

	cmp	DWORD PTR _ppT$[ebp], 0
	jne	SHORT $L213069
	push	OFFSET FLAT:??_C@_08IMNICHFN@ppT?5?$CB?$DN?50?$AA@
	push	0
	push	205					; 000000cdH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213069
	int	3
$L213069:

; 206  : 		if (ppT == NULL)

	cmp	DWORD PTR _ppT$[ebp], 0
	jne	SHORT $L163373

; 207  : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L163371
$L163373:

; 208  : 		*ppT = p;

	mov	ecx, DWORD PTR _ppT$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 209  : 		if (p)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $L163375

; 210  : 			p->AddRef();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	call	DWORD PTR [eax+4]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163375:

; 211  : 		return S_OK;

	xor	eax, eax
$L163371:

; 212  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CopyTo@?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEJPAPAUIOleInPlaceUIWindow@@@Z ENDP ; ATL::CComPtrBase<IOleInPlaceUIWindow>::CopyTo
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIViewObjectEx@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IViewObjectEx>::CComPtrBase<IViewObjectEx>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CComPtr@UIViewObjectEx@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIViewObjectEx@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<IViewObjectEx>::CComPtr<IViewObjectEx>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIViewObjectEx@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IViewObjectEx>::CComPtrBase<IViewObjectEx>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIViewObjectEx@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IViewObjectEx>::CComPtr<IViewObjectEx>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIViewObjectEx@@@ATL@@QAEPAPAUIViewObjectEx@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIViewObjectEx@@@ATL@@QAEPAPAUIViewObjectEx@@XZ PROC NEAR ; ATL::CComPtrBase<IViewObjectEx>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L213074
	push	OFFSET FLAT:??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
	push	0
	push	143					; 0000008fH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213074
	int	3
$L213074:

; 144  : 		return &p;

	mov	eax, DWORD PTR _this$[ebp]

; 145  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UIViewObjectEx@@@ATL@@QAEPAPAUIViewObjectEx@@XZ ENDP ; ATL::CComPtrBase<IViewObjectEx>::operator&
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??8?$CComPtrBase@UIViewObjectEx@@@ATL@@QBE_NPAUIViewObjectEx@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??8?$CComPtrBase@UIViewObjectEx@@@ATL@@QBE_NPAUIViewObjectEx@@@Z PROC NEAR ; ATL::CComPtrBase<IViewObjectEx>::operator==, COMDAT
; _this$ = ecx

; 160  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 161  : 		return p == pT;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR _pT$[ebp]
	neg	eax
	sbb	eax, eax
	inc	eax

; 162  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$CComPtrBase@UIViewObjectEx@@@ATL@@QBE_NPAUIViewObjectEx@@@Z ENDP ; ATL::CComPtrBase<IViewObjectEx>::operator==
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::CComPtrBase<IOleInPlaceObjectWindowless>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CComPtr@UIOleInPlaceObjectWindowless@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIOleInPlaceObjectWindowless@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtr<IOleInPlaceObjectWindowless>::CComPtr<IOleInPlaceObjectWindowless>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::CComPtrBase<IOleInPlaceObjectWindowless>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIOleInPlaceObjectWindowless@@@ATL@@QAE@XZ ENDP ; ATL::CComPtr<IOleInPlaceObjectWindowless>::CComPtr<IOleInPlaceObjectWindowless>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBEPAUIOleInPlaceObjectWindowless@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBEPAUIOleInPlaceObjectWindowless@@XZ PROC NEAR ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator IOleInPlaceObjectWindowless *, COMDAT
; _this$ = ecx

; 131  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 132  : 		return p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 133  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBEPAUIOleInPlaceObjectWindowless@@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator IOleInPlaceObjectWindowless *
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QAEPAPAUIOleInPlaceObjectWindowless@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QAEPAPAUIOleInPlaceObjectWindowless@@XZ PROC NEAR ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L213083
	push	OFFSET FLAT:??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
	push	0
	push	143					; 0000008fH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213083
	int	3
$L213083:

; 144  : 		return &p;

	mov	eax, DWORD PTR _this$[ebp]

; 145  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QAEPAPAUIOleInPlaceObjectWindowless@@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator&
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceObjectWindowless@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceObjectWindowless@@@1@XZ PROC NEAR ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator->, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 148  : 		ATLASSERT(p!=NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L213086
	push	OFFSET FLAT:??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
	push	0
	push	148					; 00000094H
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213086
	int	3
$L213086:

; 149  : 		return (_NoAddRefReleaseOnCComPtr<T>*)p;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 150  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceObjectWindowless@@@1@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator->
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??8?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBE_NPAUIOleInPlaceObjectWindowless@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??8?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBE_NPAUIOleInPlaceObjectWindowless@@@Z PROC NEAR ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator==, COMDAT
; _this$ = ecx

; 160  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 161  : 		return p == pT;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR _pT$[ebp]
	neg	eax
	sbb	eax, eax
	inc	eax

; 162  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBE_NPAUIOleInPlaceObjectWindowless@@@Z ENDP ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::operator==
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::CComPtrBase<IDocHostUIHandlerDispatch>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CComPtr@UIDocHostUIHandlerDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIDocHostUIHandlerDispatch@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtr<IDocHostUIHandlerDispatch>::CComPtr<IDocHostUIHandlerDispatch>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::CComPtrBase<IDocHostUIHandlerDispatch>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIDocHostUIHandlerDispatch@@@ATL@@QAE@XZ ENDP ; ATL::CComPtr<IDocHostUIHandlerDispatch>::CComPtr<IDocHostUIHandlerDispatch>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIDocHostUIHandlerDispatch@@@ATL@@QAEPAUIDocHostUIHandlerDispatch@@PAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??4?$CComPtr@UIDocHostUIHandlerDispatch@@@ATL@@QAEPAUIDocHostUIHandlerDispatch@@PAU2@@Z PROC NEAR ; ATL::CComPtr<IDocHostUIHandlerDispatch>::operator=, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 292  : 		return static_cast<T*>(AtlComPtrAssign((IUnknown**)&p, lp));

	mov	eax, DWORD PTR _lp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z ; ATL::AtlComPtrAssign

; 293  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CComPtr@UIDocHostUIHandlerDispatch@@@ATL@@QAEPAUIDocHostUIHandlerDispatch@@PAU2@@Z ENDP ; ATL::CComPtr<IDocHostUIHandlerDispatch>::operator=
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAUIDocHostUIHandlerDispatch@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAUIDocHostUIHandlerDispatch@@XZ PROC NEAR ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator IDocHostUIHandlerDispatch *, COMDAT
; _this$ = ecx

; 131  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 132  : 		return p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 133  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAUIDocHostUIHandlerDispatch@@XZ ENDP ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator IDocHostUIHandlerDispatch *
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDocHostUIHandlerDispatch@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDocHostUIHandlerDispatch@@@1@XZ PROC NEAR ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator->, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 148  : 		ATLASSERT(p!=NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L213097
	push	OFFSET FLAT:??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
	push	0
	push	148					; 00000094H
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213097
	int	3
$L213097:

; 149  : 		return (_NoAddRefReleaseOnCComPtr<T>*)p;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 150  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDocHostUIHandlerDispatch@@@1@XZ ENDP ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::operator->
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIFontDisp@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IFontDisp>::CComPtrBase<IFontDisp>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CComPtr@UIFontDisp@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIFontDisp@@@ATL@@QAE@XZ PROC NEAR		; ATL::CComPtr<IFontDisp>::CComPtr<IFontDisp>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIFontDisp@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IFontDisp>::CComPtrBase<IFontDisp>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIFontDisp@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IFontDisp>::CComPtr<IFontDisp>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIFontDisp@@@ATL@@QAEPAUIFontDisp@@PAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??4?$CComPtr@UIFontDisp@@@ATL@@QAEPAUIFontDisp@@PAU2@@Z PROC NEAR ; ATL::CComPtr<IFontDisp>::operator=, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 292  : 		return static_cast<T*>(AtlComPtrAssign((IUnknown**)&p, lp));

	mov	eax, DWORD PTR _lp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z ; ATL::AtlComPtrAssign

; 293  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CComPtr@UIFontDisp@@@ATL@@QAEPAUIFontDisp@@PAU2@@Z ENDP ; ATL::CComPtr<IFontDisp>::operator=
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIFontDisp@@@ATL@@QAEPAPAUIFontDisp@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIFontDisp@@@ATL@@QAEPAPAUIFontDisp@@XZ PROC NEAR ; ATL::CComPtrBase<IFontDisp>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L213104
	push	OFFSET FLAT:??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
	push	0
	push	143					; 0000008fH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213104
	int	3
$L213104:

; 144  : 		return &p;

	mov	eax, DWORD PTR _this$[ebp]

; 145  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UIFontDisp@@@ATL@@QAEPAPAUIFontDisp@@XZ ENDP ; ATL::CComPtrBase<IFontDisp>::operator&
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??8?$CComPtrBase@UIFontDisp@@@ATL@@QBE_NPAUIFontDisp@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pT$ = 8						; size = 4
??8?$CComPtrBase@UIFontDisp@@@ATL@@QBE_NPAUIFontDisp@@@Z PROC NEAR ; ATL::CComPtrBase<IFontDisp>::operator==, COMDAT
; _this$ = ecx

; 160  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 161  : 		return p == pT;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR _pT$[ebp]
	neg	eax
	sbb	eax, eax
	inc	eax

; 162  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$CComPtrBase@UIFontDisp@@@ATL@@QBE_NPAUIFontDisp@@@Z ENDP ; ATL::CComPtrBase<IFontDisp>::operator==
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?CopyTo@?$CComPtrBase@UIFontDisp@@@ATL@@QAEJPAPAUIFontDisp@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppT$ = 8						; size = 4
?CopyTo@?$CComPtrBase@UIFontDisp@@@ATL@@QAEJPAPAUIFontDisp@@@Z PROC NEAR ; ATL::CComPtrBase<IFontDisp>::CopyTo, COMDAT
; _this$ = ecx

; 204  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 205  : 		ATLASSERT(ppT != NULL);

	cmp	DWORD PTR _ppT$[ebp], 0
	jne	SHORT $L213109
	push	OFFSET FLAT:??_C@_08IMNICHFN@ppT?5?$CB?$DN?50?$AA@
	push	0
	push	205					; 000000cdH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213109
	int	3
$L213109:

; 206  : 		if (ppT == NULL)

	cmp	DWORD PTR _ppT$[ebp], 0
	jne	SHORT $L163449

; 207  : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L163447
$L163449:

; 208  : 		*ppT = p;

	mov	ecx, DWORD PTR _ppT$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 209  : 		if (p)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $L163451

; 210  : 			p->AddRef();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	call	DWORD PTR [eax+4]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163451:

; 211  : 		return S_OK;

	xor	eax, eax
$L163447:

; 212  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CopyTo@?$CComPtrBase@UIFontDisp@@@ATL@@QAEJPAPAUIFontDisp@@@Z ENDP ; ATL::CComPtrBase<IFontDisp>::CopyTo
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIServiceProvider@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IServiceProvider>::CComPtrBase<IServiceProvider>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CComPtr@UIServiceProvider@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIServiceProvider@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<IServiceProvider>::CComPtr<IServiceProvider>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIServiceProvider@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IServiceProvider>::CComPtrBase<IServiceProvider>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIServiceProvider@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IServiceProvider>::CComPtr<IServiceProvider>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIServiceProvider@@@ATL@@QBEPAUIServiceProvider@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIServiceProvider@@@ATL@@QBEPAUIServiceProvider@@XZ PROC NEAR ; ATL::CComPtrBase<IServiceProvider>::operator IServiceProvider *, COMDAT
; _this$ = ecx

; 131  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 132  : 		return p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 133  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UIServiceProvider@@@ATL@@QBEPAUIServiceProvider@@XZ ENDP ; ATL::CComPtrBase<IServiceProvider>::operator IServiceProvider *
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIServiceProvider@@@ATL@@QAEPAPAUIServiceProvider@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIServiceProvider@@@ATL@@QAEPAPAUIServiceProvider@@XZ PROC NEAR ; ATL::CComPtrBase<IServiceProvider>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L213116
	push	OFFSET FLAT:??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
	push	0
	push	143					; 0000008fH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213116
	int	3
$L213116:

; 144  : 		return &p;

	mov	eax, DWORD PTR _this$[ebp]

; 145  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UIServiceProvider@@@ATL@@QAEPAPAUIServiceProvider@@XZ ENDP ; ATL::CComPtrBase<IServiceProvider>::operator&
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIServiceProvider@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIServiceProvider@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIServiceProvider@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIServiceProvider@@@1@XZ PROC NEAR ; ATL::CComPtrBase<IServiceProvider>::operator->, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 148  : 		ATLASSERT(p!=NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L213119
	push	OFFSET FLAT:??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
	push	0
	push	148					; 00000094H
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213119
	int	3
$L213119:

; 149  : 		return (_NoAddRefReleaseOnCComPtr<T>*)p;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 150  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CComPtrBase@UIServiceProvider@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIServiceProvider@@@1@XZ ENDP ; ATL::CComPtrBase<IServiceProvider>::operator->
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIServiceProvider@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_pTemp$ = -8						; size = 4
_this$ = -4						; size = 4
?Release@?$CComPtrBase@UIServiceProvider@@@ATL@@QAEXXZ PROC NEAR ; ATL::CComPtrBase<IServiceProvider>::Release, COMDAT
; _this$ = ecx

; 166  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 167  : 		T* pTemp = p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 168  : 		if (pTemp)

	cmp	DWORD PTR _pTemp$[ebp], 0
	je	SHORT $L163468

; 169  : 		{
; 170  : 			p = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 171  : 			pTemp->Release();

	mov	eax, DWORD PTR _pTemp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pTemp$[ebp]
	push	edx
	call	DWORD PTR [ecx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163468:

; 172  : 		}
; 173  : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@?$CComPtrBase@UIServiceProvider@@@ATL@@QAEXXZ ENDP ; ATL::CComPtrBase<IServiceProvider>::Release
_TEXT	ENDS
PUBLIC	__GUID_00000117_0000_0000_c000_000000000046
PUBLIC	??0?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleInPlaceActiveObject>::CComPtr<IOleInPlaceActiveObject>
;	COMDAT __GUID_00000117_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000117_0000_0000_c000_000000000046 DD 0117H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ??0?$CComQIPtr@UIOleInPlaceActiveObject@@$1?_GUID_00000117_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??0?$CComQIPtr@UIOleInPlaceActiveObject@@$1?_GUID_00000117_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z PROC NEAR ; ATL::CComQIPtr<IOleInPlaceActiveObject,&_GUID_00000117_0000_0000_c000_000000000046>::CComQIPtr<IOleInPlaceActiveObject,&_GUID_00000117_0000_0000_c000_000000000046>, COMDAT
; _this$ = ecx

; 486  : 	CComQIPtr(IUnknown* lp) throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleInPlaceActiveObject>::CComPtr<IOleInPlaceActiveObject>

; 487  : 	{
; 488  : 		if (lp != NULL)

	cmp	DWORD PTR _lp$[ebp], 0
	je	SHORT $L163472

; 489  : 			lp->QueryInterface(*piid, (void **)&p);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	push	OFFSET FLAT:__GUID_00000117_0000_0000_c000_000000000046
	mov	ecx, DWORD PTR _lp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lp$[ebp]
	push	eax
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163472:

; 490  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CComQIPtr@UIOleInPlaceActiveObject@@$1?_GUID_00000117_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ENDP ; ATL::CComQIPtr<IOleInPlaceActiveObject,&_GUID_00000117_0000_0000_c000_000000000046>::CComQIPtr<IOleInPlaceActiveObject,&_GUID_00000117_0000_0000_c000_000000000046>
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IOleInPlaceActiveObject>::CComPtrBase<IOleInPlaceActiveObject>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtr<IOleInPlaceActiveObject>::CComPtr<IOleInPlaceActiveObject>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IOleInPlaceActiveObject>::CComPtrBase<IOleInPlaceActiveObject>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ ENDP ; ATL::CComPtr<IOleInPlaceActiveObject>::CComPtr<IOleInPlaceActiveObject>
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIOleClientSite@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IOleClientSite>::CComPtrBase<IOleClientSite>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CComPtr@UIOleClientSite@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIOleClientSite@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<IOleClientSite>::CComPtr<IOleClientSite>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIOleClientSite@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IOleClientSite>::CComPtrBase<IOleClientSite>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIOleClientSite@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IOleClientSite>::CComPtr<IOleClientSite>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIOleClientSite@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIOleClientSite@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtrBase<IOleClientSite>::~CComPtrBase<IOleClientSite>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L163492

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163492:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIOleClientSite@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IOleClientSite>::~CComPtrBase<IOleClientSite>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ PROC NEAR ; ATL::CComPtrBase<IOleClientSite>::operator IOleClientSite *, COMDAT
; _this$ = ecx

; 131  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 132  : 		return p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 133  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ ENDP ; ATL::CComPtrBase<IOleClientSite>::operator IOleClientSite *
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIOleClientSite@@@ATL@@QAEPAPAUIOleClientSite@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIOleClientSite@@@ATL@@QAEPAPAUIOleClientSite@@XZ PROC NEAR ; ATL::CComPtrBase<IOleClientSite>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L213134
	push	OFFSET FLAT:??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
	push	0
	push	143					; 0000008fH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213134
	int	3
$L213134:

; 144  : 		return &p;

	mov	eax, DWORD PTR _this$[ebp]

; 145  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UIOleClientSite@@@ATL@@QAEPAPAUIOleClientSite@@XZ ENDP ; ATL::CComPtrBase<IOleClientSite>::operator&
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIPersistStreamInit@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IPersistStreamInit>::CComPtrBase<IPersistStreamInit>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtr<IPersistStreamInit>::CComPtr<IPersistStreamInit>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIPersistStreamInit@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IPersistStreamInit>::CComPtrBase<IPersistStreamInit>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<IPersistStreamInit>::CComPtr<IPersistStreamInit>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIPersistStreamInit@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIPersistStreamInit@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComPtrBase<IPersistStreamInit>::~CComPtrBase<IPersistStreamInit>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L163512

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163512:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIPersistStreamInit@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IPersistStreamInit>::~CComPtrBase<IPersistStreamInit>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBEPAUIPersistStreamInit@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBEPAUIPersistStreamInit@@XZ PROC NEAR ; ATL::CComPtrBase<IPersistStreamInit>::operator IPersistStreamInit *, COMDAT
; _this$ = ecx

; 131  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 132  : 		return p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 133  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBEPAUIPersistStreamInit@@XZ ENDP ; ATL::CComPtrBase<IPersistStreamInit>::operator IPersistStreamInit *
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIPersistStreamInit@@@ATL@@QAEPAPAUIPersistStreamInit@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIPersistStreamInit@@@ATL@@QAEPAPAUIPersistStreamInit@@XZ PROC NEAR ; ATL::CComPtrBase<IPersistStreamInit>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L213143
	push	OFFSET FLAT:??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
	push	0
	push	143					; 0000008fH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213143
	int	3
$L213143:

; 144  : 		return &p;

	mov	eax, DWORD PTR _this$[ebp]

; 145  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UIPersistStreamInit@@@ATL@@QAEPAPAUIPersistStreamInit@@XZ ENDP ; ATL::CComPtrBase<IPersistStreamInit>::operator&
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStreamInit@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStreamInit@@@1@XZ PROC NEAR ; ATL::CComPtrBase<IPersistStreamInit>::operator->, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 148  : 		ATLASSERT(p!=NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L213146
	push	OFFSET FLAT:??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
	push	0
	push	148					; 00000094H
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213146
	int	3
$L213146:

; 149  : 		return (_NoAddRefReleaseOnCComPtr<T>*)p;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 150  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStreamInit@@@1@XZ ENDP ; ATL::CComPtrBase<IPersistStreamInit>::operator->
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIWebBrowser2@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IWebBrowser2>::CComPtrBase<IWebBrowser2>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CComPtr@UIWebBrowser2@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIWebBrowser2@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<IWebBrowser2>::CComPtr<IWebBrowser2>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIWebBrowser2@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IWebBrowser2>::CComPtrBase<IWebBrowser2>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIWebBrowser2@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IWebBrowser2>::CComPtr<IWebBrowser2>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIWebBrowser2@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIWebBrowser2@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtrBase<IWebBrowser2>::~CComPtrBase<IWebBrowser2>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L163526

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163526:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIWebBrowser2@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IWebBrowser2>::~CComPtrBase<IWebBrowser2>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIWebBrowser2@@@ATL@@QBEPAUIWebBrowser2@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIWebBrowser2@@@ATL@@QBEPAUIWebBrowser2@@XZ PROC NEAR ; ATL::CComPtrBase<IWebBrowser2>::operator IWebBrowser2 *, COMDAT
; _this$ = ecx

; 131  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 132  : 		return p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 133  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UIWebBrowser2@@@ATL@@QBEPAUIWebBrowser2@@XZ ENDP ; ATL::CComPtrBase<IWebBrowser2>::operator IWebBrowser2 *
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIWebBrowser2@@@ATL@@QAEPAPAUIWebBrowser2@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CComPtrBase@UIWebBrowser2@@@ATL@@QAEPAPAUIWebBrowser2@@XZ PROC NEAR ; ATL::CComPtrBase<IWebBrowser2>::operator&, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		ATLASSERT(p==NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L213155
	push	OFFSET FLAT:??_C@_04DBLLIIGB@p?$DN?$DN0?$AA@
	push	0
	push	143					; 0000008fH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213155
	int	3
$L213155:

; 144  : 		return &p;

	mov	eax, DWORD PTR _this$[ebp]

; 145  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CComPtrBase@UIWebBrowser2@@@ATL@@QAEPAPAUIWebBrowser2@@XZ ENDP ; ATL::CComPtrBase<IWebBrowser2>::operator&
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIWebBrowser2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIWebBrowser2@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIWebBrowser2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIWebBrowser2@@@1@XZ PROC NEAR ; ATL::CComPtrBase<IWebBrowser2>::operator->, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 148  : 		ATLASSERT(p!=NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L213158
	push	OFFSET FLAT:??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
	push	0
	push	148					; 00000094H
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213158
	int	3
$L213158:

; 149  : 		return (_NoAddRefReleaseOnCComPtr<T>*)p;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 150  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CComPtrBase@UIWebBrowser2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIWebBrowser2@@@1@XZ ENDP ; ATL::CComPtrBase<IWebBrowser2>::operator->
_TEXT	ENDS
PUBLIC	__GUID_b196b288_bab4_101a_b69c_00aa00341d07
PUBLIC	??0?$CComPtr@UIOleControl@@@ATL@@QAE@XZ		; ATL::CComPtr<IOleControl>::CComPtr<IOleControl>
;	COMDAT __GUID_b196b288_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT
__GUID_b196b288_bab4_101a_b69c_00aa00341d07 DD 0b196b288H
	DW	0bab4H
	DW	0101aH
	DB	0b6H
	DB	09cH
	DB	00H
	DB	0aaH
	DB	00H
	DB	034H
	DB	01dH
	DB	07H
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ??0?$CComQIPtr@UIOleControl@@$1?_GUID_b196b288_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??0?$CComQIPtr@UIOleControl@@$1?_GUID_b196b288_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z PROC NEAR ; ATL::CComQIPtr<IOleControl,&_GUID_b196b288_bab4_101a_b69c_00aa00341d07>::CComQIPtr<IOleControl,&_GUID_b196b288_bab4_101a_b69c_00aa00341d07>, COMDAT
; _this$ = ecx

; 486  : 	CComQIPtr(IUnknown* lp) throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtr@UIOleControl@@@ATL@@QAE@XZ	; ATL::CComPtr<IOleControl>::CComPtr<IOleControl>

; 487  : 	{
; 488  : 		if (lp != NULL)

	cmp	DWORD PTR _lp$[ebp], 0
	je	SHORT $L163538

; 489  : 			lp->QueryInterface(*piid, (void **)&p);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	push	OFFSET FLAT:__GUID_b196b288_bab4_101a_b69c_00aa00341d07
	mov	ecx, DWORD PTR _lp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lp$[ebp]
	push	eax
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163538:

; 490  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CComQIPtr@UIOleControl@@$1?_GUID_b196b288_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ENDP ; ATL::CComQIPtr<IOleControl,&_GUID_b196b288_bab4_101a_b69c_00aa00341d07>::CComQIPtr<IOleControl,&_GUID_b196b288_bab4_101a_b69c_00aa00341d07>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIOleControl@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIOleControl@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtrBase<IOleControl>::~CComPtrBase<IOleControl>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L163542

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163542:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIOleControl@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IOleControl>::~CComPtrBase<IOleControl>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIOleControl@@@ATL@@QBEPAUIOleControl@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIOleControl@@@ATL@@QBEPAUIOleControl@@XZ PROC NEAR ; ATL::CComPtrBase<IOleControl>::operator IOleControl *, COMDAT
; _this$ = ecx

; 131  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 132  : 		return p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 133  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UIOleControl@@@ATL@@QBEPAUIOleControl@@XZ ENDP ; ATL::CComPtrBase<IOleControl>::operator IOleControl *
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIOleControl@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleControl@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CComPtrBase@UIOleControl@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleControl@@@1@XZ PROC NEAR ; ATL::CComPtrBase<IOleControl>::operator->, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 148  : 		ATLASSERT(p!=NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L213167
	push	OFFSET FLAT:??_C@_04CLHEGAEG@p?$CB?$DN0?$AA@
	push	0
	push	148					; 00000094H
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213167
	int	3
$L213167:

; 149  : 		return (_NoAddRefReleaseOnCComPtr<T>*)p;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 150  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CComPtrBase@UIOleControl@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleControl@@@1@XZ ENDP ; ATL::CComPtrBase<IOleControl>::operator->
_TEXT	ENDS
PUBLIC	?Next@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJKPAPAUIUnknown@@PAK@Z ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::Next
PUBLIC	?Skip@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJK@Z ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::Skip
PUBLIC	?Reset@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJXZ ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::Reset
PUBLIC	?Clone@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJPAPAUIEnumUnknown@@@Z ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::Clone
PUBLIC	??0?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAE@XZ ; ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel>::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel>
PUBLIC	?AddRef@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::AddRef
PUBLIC	?Release@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::Release
PUBLIC	?QueryInterface@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::QueryInterface
PUBLIC	??_7?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@6B@ ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::`vftable'
PUBLIC	??_G?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAEPAXI@Z ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::`scalar deleting destructor'
EXTRN	??_E?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAEPAXI@Z:NEAR ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::`vector deleting destructor'
;	COMDAT ??_7?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@6B@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcom.h
CONST	SEGMENT
??_7?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@6B@ DD FLAT:?QueryInterface@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::`vftable'
	DD	FLAT:?AddRef@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ
	DD	FLAT:?Release@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ
	DD	FLAT:?Next@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJKPAPAUIUnknown@@PAK@Z
	DD	FLAT:?Skip@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJK@Z
	DD	FLAT:?Reset@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJXZ
	DD	FLAT:?Clone@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJPAPAUIEnumUnknown@@@Z
	DD	FLAT:??_E?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAEPAXI@Z
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ??0?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QAE@PAX@Z PROC NEAR ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >, COMDAT
; _this$ = ecx

; 2489 : 	CComObject(void* = NULL) throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@6B@

; 2490 : 	{
; 2491 : 		_pAtlModule->Lock();

	mov	ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	call	DWORD PTR [edx+4]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2492 : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QAE@PAX@Z ENDP ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ PROC NEAR ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::AddRef, COMDAT

; 2506 : 	STDMETHOD_(ULONG, AddRef)() {return InternalAddRef();}

	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalAddRef
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?AddRef@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ ENDP ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::AddRef
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT
tv74 = -16						; size = 4
$T213175 = -12						; size = 4
$T213174 = -8						; size = 4
_l$ = -4						; size = 4
_this$ = 8						; size = 4
?Release@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ PROC NEAR ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::Release, COMDAT

; 2508 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 2509 : 		ULONG l = InternalRelease();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalRelease
	mov	DWORD PTR _l$[ebp], eax

; 2510 : 		if (l == 0)

	cmp	DWORD PTR _l$[ebp], 0
	jne	SHORT $L163583

; 2511 : 			delete this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T213175[ebp], eax
	mov	ecx, DWORD PTR $T213175[ebp]
	mov	DWORD PTR $T213174[ebp], ecx
	cmp	DWORD PTR $T213174[ebp], 0
	je	SHORT $L213176
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T213174[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T213174[ebp]
	call	DWORD PTR [eax+28]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $L163583
$L213176:
	mov	DWORD PTR tv74[ebp], 0
$L163583:

; 2512 : 		return l;

	mov	eax, DWORD PTR _l$[ebp]

; 2513 : 	}

	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGKXZ ENDP ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::Release
_TEXT	ENDS
PUBLIC	?_InternalQueryInterface@?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel>::_InternalQueryInterface
; Function compile flags: /Odt /RTCsu
;	COMDAT ?QueryInterface@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_ppvObject$ = 16					; size = 4
?QueryInterface@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z PROC NEAR ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::QueryInterface, COMDAT

; 2516 : 	{return _InternalQueryInterface(iid, ppvObject);}

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _ppvObject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_InternalQueryInterface@?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel>::_InternalQueryInterface
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ENDP ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::QueryInterface
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Reset@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Reset@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJXZ PROC NEAR ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::Reset, COMDAT

; 4648 : 	STDMETHOD(Reset)(void){m_iter = m_begin;return S_OK;}

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+16], edx
	xor	eax, eax
	pop	ebp
	ret	4
?Reset@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJXZ ENDP ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::Reset
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
_TEXT	ENDS
;	COMDAT ??0?$CComQIPtr@UIOleClientSite@@$1?_GUID_00000118_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??0?$CComQIPtr@UIOleClientSite@@$1?_GUID_00000118_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z PROC NEAR ; ATL::CComQIPtr<IOleClientSite,&_GUID_00000118_0000_0000_c000_000000000046>::CComQIPtr<IOleClientSite,&_GUID_00000118_0000_0000_c000_000000000046>, COMDAT
; _this$ = ecx

; 486  : 	CComQIPtr(IUnknown* lp) throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtr@UIOleClientSite@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleClientSite>::CComPtr<IOleClientSite>

; 487  : 	{
; 488  : 		if (lp != NULL)

	cmp	DWORD PTR _lp$[ebp], 0
	je	SHORT $L163592

; 489  : 			lp->QueryInterface(*piid, (void **)&p);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	push	OFFSET FLAT:__GUID_00000118_0000_0000_c000_000000000046
	mov	ecx, DWORD PTR _lp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lp$[ebp]
	push	eax
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163592:

; 490  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CComQIPtr@UIOleClientSite@@$1?_GUID_00000118_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ENDP ; ATL::CComQIPtr<IOleClientSite,&_GUID_00000118_0000_0000_c000_000000000046>::CComQIPtr<IOleClientSite,&_GUID_00000118_0000_0000_c000_000000000046>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CComQIPtr@UIPersistStreamInit@@$1?_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??0?$CComQIPtr@UIPersistStreamInit@@$1?_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z PROC NEAR ; ATL::CComQIPtr<IPersistStreamInit,&_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713>::CComQIPtr<IPersistStreamInit,&_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713>, COMDAT
; _this$ = ecx

; 486  : 	CComQIPtr(IUnknown* lp) throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ ; ATL::CComPtr<IPersistStreamInit>::CComPtr<IPersistStreamInit>

; 487  : 	{
; 488  : 		if (lp != NULL)

	cmp	DWORD PTR _lp$[ebp], 0
	je	SHORT $L163596

; 489  : 			lp->QueryInterface(*piid, (void **)&p);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	push	OFFSET FLAT:__GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
	mov	ecx, DWORD PTR _lp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lp$[ebp]
	push	eax
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163596:

; 490  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CComQIPtr@UIPersistStreamInit@@$1?_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ENDP ; ATL::CComQIPtr<IPersistStreamInit,&_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713>::CComQIPtr<IPersistStreamInit,&_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713>
_TEXT	ENDS
PUBLIC	??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ	; ATL::CComPtr<IPersistStream>::CComPtr<IPersistStream>
PUBLIC	__GUID_00000109_0000_0000_c000_000000000046
;	COMDAT __GUID_00000109_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000109_0000_0000_c000_000000000046 DD 0109H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ??0?$CComQIPtr@UIPersistStream@@$1?_GUID_00000109_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??0?$CComQIPtr@UIPersistStream@@$1?_GUID_00000109_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z PROC NEAR ; ATL::CComQIPtr<IPersistStream,&_GUID_00000109_0000_0000_c000_000000000046>::CComQIPtr<IPersistStream,&_GUID_00000109_0000_0000_c000_000000000046>, COMDAT
; _this$ = ecx

; 486  : 	CComQIPtr(IUnknown* lp) throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ ; ATL::CComPtr<IPersistStream>::CComPtr<IPersistStream>

; 487  : 	{
; 488  : 		if (lp != NULL)

	cmp	DWORD PTR _lp$[ebp], 0
	je	SHORT $L163600

; 489  : 			lp->QueryInterface(*piid, (void **)&p);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	push	OFFSET FLAT:__GUID_00000109_0000_0000_c000_000000000046
	mov	ecx, DWORD PTR _lp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lp$[ebp]
	push	eax
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163600:

; 490  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CComQIPtr@UIPersistStream@@$1?_GUID_00000109_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ENDP ; ATL::CComQIPtr<IPersistStream,&_GUID_00000109_0000_0000_c000_000000000046>::CComQIPtr<IPersistStream,&_GUID_00000109_0000_0000_c000_000000000046>
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIPersistStream@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IPersistStream>::CComPtrBase<IPersistStream>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<IPersistStream>::CComPtr<IPersistStream>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIPersistStream@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IPersistStream>::CComPtrBase<IPersistStream>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IPersistStream>::CComPtr<IPersistStream>
_TEXT	ENDS
PUBLIC	??0?$CComPtr@UIAdviseSink@@@ATL@@QAE@XZ		; ATL::CComPtr<IAdviseSink>::CComPtr<IAdviseSink>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CComQIPtr@UIAdviseSink@@$1?_GUID_0000010f_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??0?$CComQIPtr@UIAdviseSink@@$1?_GUID_0000010f_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z PROC NEAR ; ATL::CComQIPtr<IAdviseSink,&_GUID_0000010f_0000_0000_c000_000000000046>::CComQIPtr<IAdviseSink,&_GUID_0000010f_0000_0000_c000_000000000046>, COMDAT
; _this$ = ecx

; 486  : 	CComQIPtr(IUnknown* lp) throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtr@UIAdviseSink@@@ATL@@QAE@XZ	; ATL::CComPtr<IAdviseSink>::CComPtr<IAdviseSink>

; 487  : 	{
; 488  : 		if (lp != NULL)

	cmp	DWORD PTR _lp$[ebp], 0
	je	SHORT $L163604

; 489  : 			lp->QueryInterface(*piid, (void **)&p);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	push	OFFSET FLAT:__GUID_0000010f_0000_0000_c000_000000000046
	mov	ecx, DWORD PTR _lp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lp$[ebp]
	push	eax
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163604:

; 490  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CComQIPtr@UIAdviseSink@@$1?_GUID_0000010f_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ENDP ; ATL::CComQIPtr<IAdviseSink,&_GUID_0000010f_0000_0000_c000_000000000046>::CComQIPtr<IAdviseSink,&_GUID_0000010f_0000_0000_c000_000000000046>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIAdviseSink@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComPtrBase@UIAdviseSink@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtrBase<IAdviseSink>::~CComPtrBase<IAdviseSink>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		if (p)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L163608

; 128  : 			p->Release();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163608:

; 129  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComPtrBase@UIAdviseSink@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<IAdviseSink>::~CComPtrBase<IAdviseSink>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIAdviseSink@@@ATL@@QBEPAUIAdviseSink@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UIAdviseSink@@@ATL@@QBEPAUIAdviseSink@@XZ PROC NEAR ; ATL::CComPtrBase<IAdviseSink>::operator IAdviseSink *, COMDAT
; _this$ = ecx

; 131  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 132  : 		return p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 133  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UIAdviseSink@@@ATL@@QBEPAUIAdviseSink@@XZ ENDP ; ATL::CComPtrBase<IAdviseSink>::operator IAdviseSink *
_TEXT	ENDS
PUBLIC	??1?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAE@XZ ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::~CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >
; Function compile flags: /Odt /RTCsu
;	COMDAT ??_G?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAEPAXI@Z PROC NEAR ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAE@XZ ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::~CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L163764
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L163764:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAEPAXI@Z ENDP ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@UAE@XZ ; ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel>::~CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcom.h
;	COMDAT ??1?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAE@XZ PROC NEAR ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::~CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >, COMDAT
; _this$ = ecx

; 2496 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@6B@

; 2497 : 		m_dwRef = -(LONG_MAX/2);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], -1073741823		; c0000001H

; 2498 : 		FinalRelease();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::FinalRelease

; 2499 : #ifdef _ATL_DEBUG_INTERFACES
; 2500 : 		_AtlDebugInterfacesModule.DeleteNonAddRefThunk(_GetRawUnknown());
; 2501 : #endif
; 2502 : 		_pAtlModule->Unlock();

	mov	edx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	call	DWORD PTR [eax+8]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2503 : 	}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@UAE@XZ
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@UAE@XZ ENDP ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::~CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >
_TEXT	ENDS
PUBLIC	??0?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@QAE@XZ ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >
PUBLIC	??1?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAE@XZ ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::~CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >
;	COMDAT xdata$x
xdata$x	SEGMENT
$T213206 DD	0ffffffffH
	DD	FLAT:$L213202
$T213204 DD	019930520H
	DD	01H
	DD	FLAT:$T213206
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ??0?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAE@XZ PROC NEAR ; ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel>::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@QAE@XZ ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L213202:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAE@XZ ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::~CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >
__ehhandler$??0?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAE@XZ:
	mov	eax, OFFSET FLAT:$T213204
	jmp	___CxxFrameHandler
text$x	ENDS
??0?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAE@XZ ENDP ; ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel>::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@UAE@XZ PROC NEAR ; ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel>::~CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAE@XZ ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::~CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@UAE@XZ ENDP ; ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel>::~CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@PAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@PAUIUnknown@@@Z PROC NEAR ; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>, COMDAT
; _this$ = ecx

; 117  : 	CComPtrBase(T* lp) throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 118  : 	{
; 119  : 		p = lp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _lp$[ebp]
	mov	DWORD PTR [eax], ecx

; 120  : 		if (p != NULL)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $L163776

; 121  : 			p->AddRef();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	call	DWORD PTR [ecx+4]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163776:

; 122  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@PAUIUnknown@@@Z ENDP ; ATL::CComPtrBase<IUnknown>::CComPtrBase<IUnknown>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIPersistStream@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIPersistStream@@@ATL@@IAE@XZ PROC NEAR ; ATL::CComPtrBase<IPersistStream>::CComPtrBase<IPersistStream>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIPersistStream@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<IPersistStream>::CComPtrBase<IPersistStream>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UITypeLib@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UITypeLib@@@ATL@@IAE@XZ PROC NEAR	; ATL::CComPtrBase<ITypeLib>::CComPtrBase<ITypeLib>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UITypeLib@@@ATL@@IAE@XZ ENDP		; ATL::CComPtrBase<ITypeLib>::CComPtrBase<ITypeLib>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@XZ PROC NEAR	; ATL::CComPtrBase<ITypeInfo>::CComPtrBase<ITypeInfo>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@XZ ENDP		; ATL::CComPtrBase<ITypeInfo>::CComPtrBase<ITypeInfo>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@PAUITypeInfo@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@PAUITypeInfo@@@Z PROC NEAR ; ATL::CComPtrBase<ITypeInfo>::CComPtrBase<ITypeInfo>, COMDAT
; _this$ = ecx

; 117  : 	CComPtrBase(T* lp) throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 118  : 	{
; 119  : 		p = lp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _lp$[ebp]
	mov	DWORD PTR [eax], ecx

; 120  : 		if (p != NULL)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $L163939

; 121  : 			p->AddRef();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	call	DWORD PTR [ecx+4]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163939:

; 122  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@PAUITypeInfo@@@Z ENDP ; ATL::CComPtrBase<ITypeInfo>::CComPtrBase<ITypeInfo>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UITypeInfo2@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UITypeInfo2@@@ATL@@IAE@XZ PROC NEAR	; ATL::CComPtrBase<ITypeInfo2>::CComPtrBase<ITypeInfo2>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UITypeInfo2@@@ATL@@IAE@XZ ENDP		; ATL::CComPtrBase<ITypeInfo2>::CComPtrBase<ITypeInfo2>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIClassFactory2@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIClassFactory2@@@ATL@@IAE@XZ PROC NEAR ; ATL::CComPtrBase<IClassFactory2>::CComPtrBase<IClassFactory2>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIClassFactory2@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<IClassFactory2>::CComPtrBase<IClassFactory2>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@IAE@XZ PROC NEAR ; ATL::CComPtrBase<IOleInPlaceActiveObject>::CComPtrBase<IOleInPlaceActiveObject>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@IAE@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceActiveObject>::CComPtrBase<IOleInPlaceActiveObject>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIOleObject@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIOleObject@@@ATL@@IAE@XZ PROC NEAR	; ATL::CComPtrBase<IOleObject>::CComPtrBase<IOleObject>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIOleObject@@@ATL@@IAE@XZ ENDP		; ATL::CComPtrBase<IOleObject>::CComPtrBase<IOleObject>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@IAE@XZ PROC NEAR ; ATL::CComPtrBase<IOleInPlaceFrame>::CComPtrBase<IOleInPlaceFrame>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<IOleInPlaceFrame>::CComPtrBase<IOleInPlaceFrame>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@IAE@XZ PROC NEAR ; ATL::CComPtrBase<IOleInPlaceUIWindow>::CComPtrBase<IOleInPlaceUIWindow>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@IAE@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceUIWindow>::CComPtrBase<IOleInPlaceUIWindow>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIViewObjectEx@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIViewObjectEx@@@ATL@@IAE@XZ PROC NEAR	; ATL::CComPtrBase<IViewObjectEx>::CComPtrBase<IViewObjectEx>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIViewObjectEx@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<IViewObjectEx>::CComPtrBase<IViewObjectEx>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@IAE@XZ PROC NEAR ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::CComPtrBase<IOleInPlaceObjectWindowless>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@IAE@XZ ENDP ; ATL::CComPtrBase<IOleInPlaceObjectWindowless>::CComPtrBase<IOleInPlaceObjectWindowless>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@IAE@XZ PROC NEAR ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::CComPtrBase<IDocHostUIHandlerDispatch>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@IAE@XZ ENDP ; ATL::CComPtrBase<IDocHostUIHandlerDispatch>::CComPtrBase<IDocHostUIHandlerDispatch>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIFontDisp@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIFontDisp@@@ATL@@IAE@XZ PROC NEAR	; ATL::CComPtrBase<IFontDisp>::CComPtrBase<IFontDisp>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIFontDisp@@@ATL@@IAE@XZ ENDP		; ATL::CComPtrBase<IFontDisp>::CComPtrBase<IFontDisp>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIServiceProvider@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIServiceProvider@@@ATL@@IAE@XZ PROC NEAR ; ATL::CComPtrBase<IServiceProvider>::CComPtrBase<IServiceProvider>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIServiceProvider@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<IServiceProvider>::CComPtrBase<IServiceProvider>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIOleClientSite@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIOleClientSite@@@ATL@@IAE@XZ PROC NEAR ; ATL::CComPtrBase<IOleClientSite>::CComPtrBase<IOleClientSite>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIOleClientSite@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<IOleClientSite>::CComPtrBase<IOleClientSite>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIPersistStreamInit@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIPersistStreamInit@@@ATL@@IAE@XZ PROC NEAR ; ATL::CComPtrBase<IPersistStreamInit>::CComPtrBase<IPersistStreamInit>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIPersistStreamInit@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<IPersistStreamInit>::CComPtrBase<IPersistStreamInit>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIWebBrowser2@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIWebBrowser2@@@ATL@@IAE@XZ PROC NEAR	; ATL::CComPtrBase<IWebBrowser2>::CComPtrBase<IWebBrowser2>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIWebBrowser2@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<IWebBrowser2>::CComPtrBase<IWebBrowser2>
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIOleControl@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IOleControl>::CComPtrBase<IOleControl>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CComPtr@UIOleControl@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIOleControl@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<IOleControl>::CComPtr<IOleControl>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIOleControl@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IOleControl>::CComPtrBase<IOleControl>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIOleControl@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IOleControl>::CComPtr<IOleControl>
_TEXT	ENDS
PUBLIC	?_GetEntries@?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ ; ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel>::_GetEntries
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcom.h
;	COMDAT ?_InternalQueryInterface@?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iid$ = 8						; size = 4
_ppvObject$ = 12					; size = 4
?_InternalQueryInterface@?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAEJABU_GUID@@PAPAX@Z PROC NEAR ; ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel>::_InternalQueryInterface, COMDAT
; _this$ = ecx

; 4798 : 	BEGIN_COM_MAP(_CComEnum)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ppvObject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	?_GetEntries@?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ ; ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel>::_GetEntries
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z ; ATL::CComObjectRootBase::InternalQueryInterface
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_InternalQueryInterface@?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAEJABU_GUID@@PAPAX@Z ENDP ; ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel>::_InternalQueryInterface
_TEXT	ENDS
PUBLIC	??0IEnumUnknown@@QAE@XZ				; IEnumUnknown::IEnumUnknown
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >, COMDAT
; _this$ = ecx

; 4644 : 	CComEnumImpl() {m_begin = m_end = m_iter = NULL; m_dwFlags = 0;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IEnumUnknown@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ	; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UIAdviseSink@@@ATL@@IAE@XZ	; ATL::CComPtrBase<IAdviseSink>::CComPtrBase<IAdviseSink>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UIAdviseSink@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtr@UIAdviseSink@@@ATL@@QAE@XZ PROC NEAR	; ATL::CComPtr<IAdviseSink>::CComPtr<IAdviseSink>, COMDAT
; _this$ = ecx

; 248  : 	CComPtr() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CComPtrBase@UIAdviseSink@@@ATL@@IAE@XZ ; ATL::CComPtrBase<IAdviseSink>::CComPtrBase<IAdviseSink>

; 249  : 	{
; 250  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtr@UIAdviseSink@@@ATL@@QAE@XZ ENDP		; ATL::CComPtr<IAdviseSink>::CComPtr<IAdviseSink>
_TEXT	ENDS
PUBLIC	?OuterAddRef@CComObjectRootBase@ATL@@QAEKXZ	; ATL::CComObjectRootBase::OuterAddRef
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcom.h
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ PROC NEAR ; ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef, COMDAT

; 2813 : 	STDMETHOD_(ULONG, AddRef)() throw() {return OuterAddRef();}

	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?OuterAddRef@CComObjectRootBase@ATL@@QAEKXZ ; ATL::CComObjectRootBase::OuterAddRef
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ENDP ; ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?OuterAddRef@CComObjectRootBase@ATL@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OuterAddRef@CComObjectRootBase@ATL@@QAEKXZ PROC NEAR	; ATL::CComObjectRootBase::OuterAddRef, COMDAT
; _this$ = ecx

; 2180 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2181 : 		return m_pOuterUnknown->AddRef();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	call	DWORD PTR [ecx+4]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2182 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OuterAddRef@CComObjectRootBase@ATL@@QAEKXZ ENDP	; ATL::CComObjectRootBase::OuterAddRef
_TEXT	ENDS
PUBLIC	?OuterRelease@CComObjectRootBase@ATL@@QAEKXZ	; ATL::CComObjectRootBase::OuterRelease
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ PROC NEAR ; ATL::CComContainedObject<ATL::CAxHostWindow>::Release, COMDAT

; 2814 : 	STDMETHOD_(ULONG, Release)() throw() {return OuterRelease();}

	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?OuterRelease@CComObjectRootBase@ATL@@QAEKXZ ; ATL::CComObjectRootBase::OuterRelease
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ENDP ; ATL::CComContainedObject<ATL::CAxHostWindow>::Release
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?OuterRelease@CComObjectRootBase@ATL@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OuterRelease@CComObjectRootBase@ATL@@QAEKXZ PROC NEAR	; ATL::CComObjectRootBase::OuterRelease, COMDAT
; _this$ = ecx

; 2184 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2185 : 		return m_pOuterUnknown->Release();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	call	DWORD PTR [ecx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2186 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OuterRelease@CComObjectRootBase@ATL@@QAEKXZ ENDP	; ATL::CComObjectRootBase::OuterRelease
_TEXT	ENDS
PUBLIC	?OuterQueryInterface@CComObjectRootBase@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CComObjectRootBase::OuterQueryInterface
; Function compile flags: /Odt /RTCsu
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_ppvObject$ = 16					; size = 4
?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z PROC NEAR ; ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface, COMDAT

; 2816 : 	{

	push	ebp
	mov	ebp, esp

; 2817 : 		return OuterQueryInterface(iid, ppvObject);

	mov	eax, DWORD PTR _ppvObject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?OuterQueryInterface@CComObjectRootBase@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CComObjectRootBase::OuterQueryInterface

; 2818 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ENDP ; ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?OuterQueryInterface@CComObjectRootBase@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iid$ = 8						; size = 4
_ppvObject$ = 12					; size = 4
?OuterQueryInterface@CComObjectRootBase@ATL@@QAEJABU_GUID@@PAPAX@Z PROC NEAR ; ATL::CComObjectRootBase::OuterQueryInterface, COMDAT
; _this$ = ecx

; 2188 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2189 : 		return m_pOuterUnknown->QueryInterface(iid, ppvObject);

	mov	esi, esp
	mov	eax, DWORD PTR _ppvObject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	push	edx
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2190 : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?OuterQueryInterface@CComObjectRootBase@ATL@@QAEJABU_GUID@@PAPAX@Z ENDP ; ATL::CComObjectRootBase::OuterQueryInterface
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?GetControllingUnknown@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAEPAUIUnknown@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetControllingUnknown@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAEPAUIUnknown@@XZ PROC NEAR ; ATL::CComContainedObject<ATL::CAxHostWindow>::GetControllingUnknown, COMDAT
; _this$ = ecx

; 2827 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2828 : #ifdef _ATL_DEBUG_INTERFACES
; 2829 : 		IUnknown* p;
; 2830 : 		_AtlDebugInterfacesModule.AddNonAddRefThunk(m_pOuterUnknown, _T("CComContainedObject"), &p);
; 2831 : 		return p;
; 2832 : #else
; 2833 : 		return m_pOuterUnknown;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+80]

; 2834 : #endif
; 2835 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetControllingUnknown@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAEPAUIUnknown@@XZ ENDP ; ATL::CComContainedObject<ATL::CAxHostWindow>::GetControllingUnknown
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0IEnumUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IEnumUnknown@@QAE@XZ PROC NEAR			; IEnumUnknown::IEnumUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IEnumUnknown@@QAE@XZ ENDP				; IEnumUnknown::IEnumUnknown
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIOleControl@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIOleControl@@@ATL@@IAE@XZ PROC NEAR	; ATL::CComPtrBase<IOleControl>::CComPtrBase<IOleControl>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIOleControl@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<IOleControl>::CComPtrBase<IOleControl>
_TEXT	ENDS
PUBLIC	?_entries@?1??_GetEntries@?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B ; `ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel>::_GetEntries'::`2'::_entries
PUBLIC	??_C@_09BEHAHIFA@_CComEnum?$AA@			; `string'
;	COMDAT ?_entries@?1??_GetEntries@?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcom.h
CONST	SEGMENT
?_entries@?1??_GetEntries@?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B DD 00H ; `ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel>::_GetEntries'::`2'::_entries
	DD	FLAT:??_C@_09BEHAHIFA@_CComEnum?$AA@
	DD	00H
	DD	FLAT:__GUID_00000100_0000_0000_c000_000000000046
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_C@_09BEHAHIFA@_CComEnum?$AA@
CONST	SEGMENT
??_C@_09BEHAHIFA@_CComEnum?$AA@ DB '_CComEnum', 00H	; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?_GetEntries@?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ
_TEXT	SEGMENT
?_GetEntries@?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ PROC NEAR ; ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel>::_GetEntries, COMDAT

; 4798 : 	BEGIN_COM_MAP(_CComEnum)

	push	ebp
	mov	ebp, esp

; 4799 : 		COM_INTERFACE_ENTRY_IID(*piid, _CComEnumBase)
; 4800 : 	END_COM_MAP()

	mov	eax, OFFSET FLAT:?_entries@?1??_GetEntries@?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B+12
	pop	ebp
	ret	0
?_GetEntries@?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ ENDP ; ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel>::_GetEntries
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIAdviseSink@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CComPtrBase@UIAdviseSink@@@ATL@@IAE@XZ PROC NEAR	; ATL::CComPtrBase<IAdviseSink>::CComPtrBase<IAdviseSink>, COMDAT
; _this$ = ecx

; 107  : 	CComPtrBase() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 108  : 	{
; 109  : 		p = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CComPtrBase@UIAdviseSink@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<IAdviseSink>::CComPtrBase<IAdviseSink>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??_G?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAEPAXI@Z PROC NEAR ; ATL::CComContainedObject<ATL::CAxHostWindow>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L164217
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L164217:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAEPAXI@Z ENDP ; ATL::CComContainedObject<ATL::CAxHostWindow>::`scalar deleting destructor'
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
_TEXT	ENDS
;	COMDAT ??0?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@AAVCComCriticalSection@1@_N@Z
_TEXT	SEGMENT
_hr$164246 = -8						; size = 4
_this$ = -4						; size = 4
_cs$ = 8						; size = 4
_bInitialLock$ = 12					; size = 1
??0?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@AAVCComCriticalSection@1@_N@Z PROC NEAR ; ATL::CComCritSecLock<ATL::CComCriticalSection>::CComCritSecLock<ATL::CComCriticalSection>, COMDAT
; _this$ = ecx

; 288  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cs$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+4], 0

; 289  : 	if( bInitialLock )

	movzx	eax, BYTE PTR _bInitialLock$[ebp]
	test	eax, eax
	je	SHORT $L164244

; 290  : 	{
; 291  : 		HRESULT hr;
; 292  : 
; 293  : 		hr = Lock();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Lock
	mov	DWORD PTR _hr$164246[ebp], eax

; 294  : 		if( FAILED( hr ) )

	cmp	DWORD PTR _hr$164246[ebp], 0
	jge	SHORT $L164244

; 295  : 		{
; 296  : 			AtlThrow( hr );

	mov	ecx, DWORD PTR _hr$164246[ebp]
	push	ecx
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L164244:

; 297  : 		}
; 298  : 	}
; 299  : }

	mov	eax, DWORD PTR _this$[ebp]
$L213284:
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@AAVCComCriticalSection@1@_N@Z ENDP ; ATL::CComCritSecLock<ATL::CComCriticalSection>::CComCritSecLock<ATL::CComCriticalSection>
_TEXT	ENDS
PUBLIC	?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Unlock
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>, COMDAT
; _this$ = ecx

; 303  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 304  : 	if( m_bLocked )

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	je	SHORT $L164252

; 305  : 	{
; 306  : 		Unlock();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Unlock
$L164252:

; 307  : 	}
; 308  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
_TEXT	ENDS
PUBLIC	?Unlock@CComCriticalSection@ATL@@QAEJXZ		; ATL::CComCriticalSection::Unlock
PUBLIC	??_C@_0FA@KBNNCCJL@C?3?2Program?5Files?2Microsoft?5Visua@ ; `string'
PUBLIC	??_C@_09HIEJFN@m_bLocked?$AA@			; `string'
;	COMDAT ??_C@_09HIEJFN@m_bLocked?$AA@
CONST	SEGMENT
??_C@_09HIEJFN@m_bLocked?$AA@ DB 'm_bLocked', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FA@KBNNCCJL@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT
??_C@_0FA@KBNNCCJL@C?3?2Program?5Files?2Microsoft?5Visua@ DB 'C:\Program '
	DB	'Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\include\at'
	DB	'lbase.h', 00H				; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ PROC NEAR ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Unlock, COMDAT
; _this$ = ecx

; 328  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 329  : 	ATLASSERT( m_bLocked );

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	jne	SHORT $L213289
	push	OFFSET FLAT:??_C@_09HIEJFN@m_bLocked?$AA@
	push	0
	push	329					; 00000149H
	push	OFFSET FLAT:??_C@_0FA@KBNNCCJL@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213289
	int	3
$L213289:

; 330  : 	m_cs.Unlock();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?Unlock@CComCriticalSection@ATL@@QAEJXZ	; ATL::CComCriticalSection::Unlock

; 331  : 	m_bLocked = false;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+4], 0

; 332  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Unlock
_TEXT	ENDS
EXTRN	__imp__LeaveCriticalSection@4:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcore.h
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Unlock@CComCriticalSection@ATL@@QAEJXZ PROC NEAR	; ATL::CComCriticalSection::Unlock, COMDAT
; _this$ = ecx

; 124  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 125  : 		LeaveCriticalSection(&m_sec);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__LeaveCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 126  : 		return S_OK;

	xor	eax, eax

; 127  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Unlock@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Unlock
_TEXT	ENDS
PUBLIC	?Lock@CComCriticalSection@ATL@@QAEJXZ		; ATL::CComCriticalSection::Lock
PUBLIC	??_C@_0L@MPGHMANA@?$CBm_bLocked?$AA@		; `string'
;	COMDAT ??_C@_0L@MPGHMANA@?$CBm_bLocked?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
CONST	SEGMENT
??_C@_0L@MPGHMANA@?$CBm_bLocked?$AA@ DB '!m_bLocked', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ PROC NEAR ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Lock, COMDAT
; _this$ = ecx

; 312  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 313  : 	HRESULT hr;
; 314  : 
; 315  : 	ATLASSERT( !m_bLocked );

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	je	SHORT $L213294
	push	OFFSET FLAT:??_C@_0L@MPGHMANA@?$CBm_bLocked?$AA@
	push	0
	push	315					; 0000013bH
	push	OFFSET FLAT:??_C@_0FA@KBNNCCJL@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213294
	int	3
$L213294:

; 316  : 	hr = m_cs.Lock();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?Lock@CComCriticalSection@ATL@@QAEJXZ	; ATL::CComCriticalSection::Lock
	mov	DWORD PTR _hr$[ebp], eax

; 317  : 	if( FAILED( hr ) )

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L164261

; 318  : 	{
; 319  : 		return( hr );

	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $L164257
$L164261:

; 320  : 	}
; 321  : 	m_bLocked = true;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+4], 1

; 322  : 
; 323  : 	return( S_OK );

	xor	eax, eax
$L164257:

; 324  : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ ENDP ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Lock
_TEXT	ENDS
EXTRN	__imp__EnterCriticalSection@4:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcore.h
;	COMDAT ?Lock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Lock@CComCriticalSection@ATL@@QAEJXZ PROC NEAR		; ATL::CComCriticalSection::Lock, COMDAT
; _this$ = ecx

; 119  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 120  : 		EnterCriticalSection(&m_sec);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__EnterCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 121  : 		return S_OK;

	xor	eax, eax

; 122  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Lock@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Lock
_TEXT	ENDS
PUBLIC	__GUID_00020412_0000_0000_c000_000000000046
;	COMDAT __GUID_00020412_0000_0000_c000_000000000046
; File c:\program files\microsoft visual studio .net 2003\vc7\platformsdk\include\unknwn.h
CONST	SEGMENT
__GUID_00020412_0000_0000_c000_000000000046 DD 020412H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ??$QueryInterface@UITypeInfo2@@@IUnknown@@QAGJPAPAUITypeInfo2@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pp$ = 12						; size = 4
??$QueryInterface@UITypeInfo2@@@IUnknown@@QAGJPAPAUITypeInfo2@@@Z PROC NEAR ; IUnknown::QueryInterface<ITypeInfo2>, COMDAT

; 123  :     	{

	push	ebp
	mov	ebp, esp
	push	esi

; 124  :     	    return QueryInterface(__uuidof(Q), (void **)pp);

	mov	esi, esp
	mov	eax, DWORD PTR _pp$[ebp]
	push	eax
	push	OFFSET FLAT:__GUID_00020412_0000_0000_c000_000000000046
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 125  :     	}

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
??$QueryInterface@UITypeInfo2@@@IUnknown@@QAGJPAPAUITypeInfo2@@@Z ENDP ; IUnknown::QueryInterface<ITypeInfo2>
_TEXT	ENDS
PUBLIC	?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z ; ATL::AtlComQIPtrAssign
PUBLIC	__GUID_00020401_0000_0000_c000_000000000046
PUBLIC	??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ ; ATL::CComPtrBase<ITypeInfo2>::operator ITypeInfo2 *
;	COMDAT __GUID_00020401_0000_0000_c000_000000000046
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
CONST	SEGMENT
__GUID_00020401_0000_0000_c000_000000000046 DD 020401H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ??$?4UITypeInfo2@@@?$CComPtr@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@ABV?$CComPtr@UITypeInfo2@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??$?4UITypeInfo2@@@?$CComPtr@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@ABV?$CComPtr@UITypeInfo2@@@1@@Z PROC NEAR ; ATL::CComPtr<ITypeInfo>::operator=<ITypeInfo2>, COMDAT
; _this$ = ecx

; 295  : 	T* operator=(const CComPtr<Q>& lp) throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 296  : 	{
; 297  : 		return static_cast<T*>(AtlComQIPtrAssign((IUnknown**)&p, lp, __uuidof(T)));

	push	OFFSET FLAT:__GUID_00020401_0000_0000_c000_000000000046
	mov	ecx, DWORD PTR _lp$[ebp]
	call	??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ ; ATL::CComPtrBase<ITypeInfo2>::operator ITypeInfo2 *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z ; ATL::AtlComQIPtrAssign

; 298  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?4UITypeInfo2@@@?$CComPtr@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@ABV?$CComPtr@UITypeInfo2@@@1@@Z ENDP ; ATL::CComPtr<ITypeInfo>::operator=<ITypeInfo2>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z
_TEXT	SEGMENT
_pTemp$ = -4						; size = 4
_pp$ = 8						; size = 4
_lp$ = 12						; size = 4
_riid$ = 16						; size = 4
?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z PROC NEAR ; ATL::AtlComQIPtrAssign, COMDAT

; 58   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 59   : 	if (pp == NULL)

	cmp	DWORD PTR _pp$[ebp], 0
	jne	SHORT $L81067

; 60   : 		return NULL;

	xor	eax, eax
	jmp	SHORT $L81066
$L81067:

; 61   : 
; 62   : 	IUnknown* pTemp = *pp;

	mov	eax, DWORD PTR _pp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 63   : 	*pp = NULL;

	mov	edx, DWORD PTR _pp$[ebp]
	mov	DWORD PTR [edx], 0

; 64   : 	if (lp != NULL)

	cmp	DWORD PTR _lp$[ebp], 0
	je	SHORT $L81069

; 65   : 		lp->QueryInterface(riid, (void**)pp);

	mov	esi, esp
	mov	eax, DWORD PTR _pp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _riid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lp$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lp$[ebp]
	push	ecx
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L81069:

; 66   : 	if (pTemp)

	cmp	DWORD PTR _pTemp$[ebp], 0
	je	SHORT $L81071

; 67   : 		pTemp->Release();

	mov	edx, DWORD PTR _pTemp$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _pTemp$[ebp]
	push	ecx
	call	DWORD PTR [eax+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L81071:

; 68   : 	return *pp;

	mov	edx, DWORD PTR _pp$[ebp]
	mov	eax, DWORD PTR [edx]
$L81066:

; 69   : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z ENDP ; ATL::AtlComQIPtrAssign
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ PROC NEAR ; ATL::CComPtrBase<ITypeInfo2>::operator ITypeInfo2 *, COMDAT
; _this$ = ecx

; 131  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 132  : 		return p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 133  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ ENDP ; ATL::CComPtrBase<ITypeInfo2>::operator ITypeInfo2 *
_TEXT	ENDS
PUBLIC	??0_ATL_MSG@ATL@@QAE@PAUHWND__@@IIJH@Z		; ATL::_ATL_MSG::_ATL_MSG
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
;	COMDAT ?DialogProc@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
tv128 = -76						; size = 4
_hWnd$164299 = -72					; size = 4
_bRet$ = -68						; size = 4
_lRes$ = -60						; size = 4
_pOldMsg$ = -52						; size = 4
_msg$ = -44						; size = 36
_pThis$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?DialogProc@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z PROC NEAR ; ATL::CDialogImplBaseT<ATL::CWindow>::DialogProc, COMDAT

; 3287 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-76]
	mov	ecx, 19					; 00000013H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 3288 : 	CDialogImplBaseT< TBase >* pThis = (CDialogImplBaseT< TBase >*)hWnd;

	mov	eax, DWORD PTR _hWnd$[ebp]
	mov	DWORD PTR _pThis$[ebp], eax

; 3289 : 	// set a ptr to this message and save the old value
; 3290 : 	_ATL_MSG msg(pThis->m_hWnd, uMsg, wParam, lParam);

	push	1
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _uMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pThis$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	lea	ecx, DWORD PTR _msg$[ebp]
	call	??0_ATL_MSG@ATL@@QAE@PAUHWND__@@IIJH@Z	; ATL::_ATL_MSG::_ATL_MSG

; 3291 : 	const _ATL_MSG* pOldMsg = pThis->m_pCurrentMsg;

	mov	eax, DWORD PTR _pThis$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _pOldMsg$[ebp], ecx

; 3292 : 	pThis->m_pCurrentMsg = &msg;

	mov	edx, DWORD PTR _pThis$[ebp]
	lea	eax, DWORD PTR _msg$[ebp]
	mov	DWORD PTR [edx+24], eax

; 3293 : 	// pass to the message map to process
; 3294 : 	LRESULT lRes;
; 3295 : 	BOOL bRet = pThis->ProcessWindowMessage(pThis->m_hWnd, uMsg, wParam, lParam, lRes, 0);

	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _lRes$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _uMsg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pThis$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _pThis$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pThis$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _bRet$[ebp], eax

; 3296 : 	// restore saved value for the current message
; 3297 : 	ATLASSERT(pThis->m_pCurrentMsg == &msg);

	mov	eax, DWORD PTR _pThis$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	lea	edx, DWORD PTR _msg$[ebp]
	cmp	ecx, edx
	je	SHORT $L213307
	push	OFFSET FLAT:$SG164286
	push	0
	push	3297					; 00000ce1H
	push	OFFSET FLAT:$SG164287
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213307
	int	3
$L213307:

; 3298 : 	pThis->m_pCurrentMsg = pOldMsg;

	mov	ecx, DWORD PTR _pThis$[ebp]
	mov	edx, DWORD PTR _pOldMsg$[ebp]
	mov	DWORD PTR [ecx+24], edx

; 3299 : 	// set result if message was handled
; 3300 : 	if(bRet)

	cmp	DWORD PTR _bRet$[ebp], 0
	je	SHORT $L164288

; 3301 : 	{
; 3302 : 		switch (uMsg)

	mov	eax, DWORD PTR _uMsg$[ebp]
	mov	DWORD PTR tv128[ebp], eax
	cmp	DWORD PTR tv128[ebp], 57		; 00000039H
	ja	SHORT $L213308
	cmp	DWORD PTR tv128[ebp], 57		; 00000039H
	je	SHORT $L164293
	cmp	DWORD PTR tv128[ebp], 46		; 0000002eH
	jb	SHORT $L164295
	cmp	DWORD PTR tv128[ebp], 47		; 0000002fH
	jbe	SHORT $L164293
	cmp	DWORD PTR tv128[ebp], 55		; 00000037H
	je	SHORT $L164293
	jmp	SHORT $L164295
$L213308:
	cmp	DWORD PTR tv128[ebp], 272		; 00000110H
	je	SHORT $L164293
	cmp	DWORD PTR tv128[ebp], 305		; 00000131H
	jbe	SHORT $L164295
	cmp	DWORD PTR tv128[ebp], 312		; 00000138H
	jbe	SHORT $L164293
	jmp	SHORT $L164295
$L164293:

; 3303 : 		{
; 3304 : 		case WM_COMPAREITEM:
; 3305 : 		case WM_VKEYTOITEM:
; 3306 : 		case WM_CHARTOITEM:
; 3307 : 		case WM_INITDIALOG:
; 3308 : 		case WM_QUERYDRAGICON:
; 3309 : 		case WM_CTLCOLORMSGBOX:
; 3310 : 		case WM_CTLCOLOREDIT:
; 3311 : 		case WM_CTLCOLORLISTBOX:
; 3312 : 		case WM_CTLCOLORBTN:
; 3313 : 		case WM_CTLCOLORDLG:
; 3314 : 		case WM_CTLCOLORSCROLLBAR:
; 3315 : 		case WM_CTLCOLORSTATIC:
; 3316 : 			// return directly
; 3317 : 			bRet = (BOOL)lRes;

	mov	ecx, DWORD PTR _lRes$[ebp]
	mov	DWORD PTR _bRet$[ebp], ecx

; 3318 : 			break;

	jmp	SHORT $L164290
$L164295:

; 3319 : 		default:
; 3320 : 			// return in DWL_MSGRESULT
; 3321 : 			::SetWindowLongPtr(pThis->m_hWnd, DWLP_MSGRESULT, lRes);

	mov	edx, DWORD PTR _lRes$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _pThis$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?SetWindowLongPtrA@@YAJPAUHWND__@@HJ@Z	; SetWindowLongPtrA
	add	esp, 12					; 0000000cH
$L164290:

; 3322 : 			break;
; 3323 : 		}
; 3324 : 	}
; 3325 : 	else if(uMsg == WM_NCDESTROY)

	jmp	SHORT $L164296
$L164288:
	cmp	DWORD PTR _uMsg$[ebp], 130		; 00000082H
	jne	SHORT $L164296

; 3326 : 	{
; 3327 : 		// mark dialog as destryed
; 3328 : 		pThis->m_dwState |= WINSTATE_DESTROYED;

	mov	edx, DWORD PTR _pThis$[ebp]
	mov	eax, DWORD PTR [edx+28]
	or	eax, 1
	mov	ecx, DWORD PTR _pThis$[ebp]
	mov	DWORD PTR [ecx+28], eax
$L164296:

; 3329 : 	}
; 3330 : 
; 3331 : 	if((pThis->m_dwState & WINSTATE_DESTROYED) && pThis->m_pCurrentMsg == NULL)

	mov	edx, DWORD PTR _pThis$[ebp]
	mov	eax, DWORD PTR [edx+28]
	and	eax, 1
	je	SHORT $L164298
	mov	ecx, DWORD PTR _pThis$[ebp]
	cmp	DWORD PTR [ecx+24], 0
	jne	SHORT $L164298

; 3332 : 	{
; 3333 : 		// clear out window handle
; 3334 : 		HWND hWnd = pThis->m_hWnd;

	mov	edx, DWORD PTR _pThis$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _hWnd$164299[ebp], eax

; 3335 : 		pThis->m_hWnd = NULL;

	mov	ecx, DWORD PTR _pThis$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 3336 : 		pThis->m_dwState &= ~WINSTATE_DESTROYED;

	mov	edx, DWORD PTR _pThis$[ebp]
	mov	eax, DWORD PTR [edx+28]
	and	eax, -2					; fffffffeH
	mov	ecx, DWORD PTR _pThis$[ebp]
	mov	DWORD PTR [ecx+28], eax

; 3337 : 		// clean up after dialog is destroyed
; 3338 : 		pThis->OnFinalMessage(hWnd);

	mov	esi, esp
	mov	edx, DWORD PTR _hWnd$164299[ebp]
	push	edx
	mov	eax, DWORD PTR _pThis$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pThis$[ebp]
	call	DWORD PTR [edx+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L164298:

; 3339 : 	}
; 3340 : 	return bRet;

	mov	eax, DWORD PTR _bRet$[ebp]

; 3341 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L213312
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 76					; 0000004cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$L213312:
	DD	2
	DD	$L213311
$L213311:
	DD	-44					; ffffffd4H
	DD	36					; 00000024H
	DD	$L213309
	DD	-60					; ffffffc4H
	DD	4
	DD	$L213310
$L213310:
	DB	108					; 0000006cH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$L213309:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
?DialogProc@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z ENDP ; ATL::CDialogImplBaseT<ATL::CWindow>::DialogProc
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0_ATL_MSG@ATL@@QAE@PAUHWND__@@IIJH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParamIn$ = 16						; size = 4
_lParamIn$ = 20						; size = 4
_bHandledIn$ = 24					; size = 4
??0_ATL_MSG@ATL@@QAE@PAUHWND__@@IIJH@Z PROC NEAR	; ATL::_ATL_MSG::_ATL_MSG, COMDAT
; _this$ = ecx

; 202  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 36			; 00000024H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _bHandledIn$[ebp]
	mov	DWORD PTR [ecx+32], edx

; 203  : 		hwnd = hWnd;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _hWnd$[ebp]
	mov	DWORD PTR [eax], ecx

; 204  : 		message = uMsg;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uMsg$[ebp]
	mov	DWORD PTR [edx+4], eax

; 205  : 		wParam = wParamIn;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _wParamIn$[ebp]
	mov	DWORD PTR [ecx+8], edx

; 206  : 		lParam = lParamIn;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _lParamIn$[ebp]
	mov	DWORD PTR [eax+12], ecx

; 207  : 		time = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], 0

; 208  : 		pt.x = pt.y = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 209  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??0_ATL_MSG@ATL@@QAE@PAUHWND__@@IIJH@Z ENDP		; ATL::_ATL_MSG::_ATL_MSG
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?WindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_hWnd$164345 = -76					; size = 4
_pfnWndProc$164341 = -72				; size = 4
_bRet$ = -68						; size = 4
_lRes$ = -60						; size = 4
_pOldMsg$ = -52						; size = 4
_msg$ = -44						; size = 36
_pThis$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?WindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z PROC NEAR ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::WindowProc, COMDAT

; 3004 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-76]
	mov	ecx, 19					; 00000013H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 3005 : 	CWindowImplBaseT< TBase, TWinTraits >* pThis = (CWindowImplBaseT< TBase, TWinTraits >*)hWnd;

	mov	eax, DWORD PTR _hWnd$[ebp]
	mov	DWORD PTR _pThis$[ebp], eax

; 3006 : 	// set a ptr to this message and save the old value
; 3007 : 	_ATL_MSG msg(pThis->m_hWnd, uMsg, wParam, lParam);

	push	1
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _uMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pThis$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	lea	ecx, DWORD PTR _msg$[ebp]
	call	??0_ATL_MSG@ATL@@QAE@PAUHWND__@@IIJH@Z	; ATL::_ATL_MSG::_ATL_MSG

; 3008 : 	const _ATL_MSG* pOldMsg = pThis->m_pCurrentMsg;

	mov	eax, DWORD PTR _pThis$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _pOldMsg$[ebp], ecx

; 3009 : 	pThis->m_pCurrentMsg = &msg;

	mov	edx, DWORD PTR _pThis$[ebp]
	lea	eax, DWORD PTR _msg$[ebp]
	mov	DWORD PTR [edx+24], eax

; 3010 : 	// pass to the message map to process
; 3011 : 	LRESULT lRes;
; 3012 : 	BOOL bRet = pThis->ProcessWindowMessage(pThis->m_hWnd, uMsg, wParam, lParam, lRes, 0);

	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _lRes$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _uMsg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pThis$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _pThis$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pThis$[ebp]
	call	DWORD PTR [edx]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _bRet$[ebp], eax

; 3013 : 	// restore saved value for the current message
; 3014 : 	ATLASSERT(pThis->m_pCurrentMsg == &msg);

	mov	eax, DWORD PTR _pThis$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	lea	edx, DWORD PTR _msg$[ebp]
	cmp	ecx, edx
	je	SHORT $L213317
	push	OFFSET FLAT:$SG164336
	push	0
	push	3014					; 00000bc6H
	push	OFFSET FLAT:$SG164337
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213317
	int	3
$L213317:

; 3015 : 	pThis->m_pCurrentMsg = pOldMsg;

	mov	ecx, DWORD PTR _pThis$[ebp]
	mov	edx, DWORD PTR _pOldMsg$[ebp]
	mov	DWORD PTR [ecx+24], edx

; 3016 : 	// do the default processing if message was not handled
; 3017 : 	if(!bRet)

	cmp	DWORD PTR _bRet$[ebp], 0
	jne	$L164338

; 3018 : 	{
; 3019 : 		if(uMsg != WM_NCDESTROY)

	cmp	DWORD PTR _uMsg$[ebp], 130		; 00000082H
	je	SHORT $L164339

; 3020 : 			lRes = pThis->DefWindowProc(uMsg, wParam, lParam);

	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uMsg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pThis$[ebp]
	call	?DefWindowProcA@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEJIIJ@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::DefWindowProcA
	mov	DWORD PTR _lRes$[ebp], eax

; 3021 : 		else

	jmp	SHORT $L164338
$L164339:

; 3022 : 		{
; 3023 : 			// unsubclass, if needed
; 3024 : 			LONG_PTR pfnWndProc = ::GetWindowLongPtr(pThis->m_hWnd, GWLP_WNDPROC);

	push	-4					; fffffffcH
	mov	eax, DWORD PTR _pThis$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?GetWindowLongPtrA@@YAJPAUHWND__@@H@Z	; GetWindowLongPtrA
	add	esp, 8
	mov	DWORD PTR _pfnWndProc$164341[ebp], eax

; 3025 : 			lRes = pThis->DefWindowProc(uMsg, wParam, lParam);

	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _uMsg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pThis$[ebp]
	call	?DefWindowProcA@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEJIIJ@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::DefWindowProcA
	mov	DWORD PTR _lRes$[ebp], eax

; 3026 : 			if(pThis->m_pfnSuperWindowProc != ::DefWindowProc && ::GetWindowLongPtr(pThis->m_hWnd, GWLP_WNDPROC) == pfnWndProc)

	mov	edx, DWORD PTR _pThis$[ebp]
	mov	eax, DWORD PTR [edx+32]
	cmp	eax, DWORD PTR __imp__DefWindowProcA@16
	je	SHORT $L164342
	push	-4					; fffffffcH
	mov	ecx, DWORD PTR _pThis$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?GetWindowLongPtrA@@YAJPAUHWND__@@H@Z	; GetWindowLongPtrA
	add	esp, 8
	cmp	eax, DWORD PTR _pfnWndProc$164341[ebp]
	jne	SHORT $L164342

; 3027 : 				::SetWindowLongPtr(pThis->m_hWnd, GWLP_WNDPROC, (LONG_PTR)pThis->m_pfnSuperWindowProc);

	mov	eax, DWORD PTR _pThis$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	push	-4					; fffffffcH
	mov	edx, DWORD PTR _pThis$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?SetWindowLongPtrA@@YAJPAUHWND__@@HJ@Z	; SetWindowLongPtrA
	add	esp, 12					; 0000000cH
$L164342:

; 3028 : 			// mark window as destryed
; 3029 : 			pThis->m_dwState |= WINSTATE_DESTROYED;

	mov	ecx, DWORD PTR _pThis$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	or	edx, 1
	mov	eax, DWORD PTR _pThis$[ebp]
	mov	DWORD PTR [eax+28], edx
$L164338:

; 3030 : 		}
; 3031 : 	}
; 3032 : 	if((pThis->m_dwState & WINSTATE_DESTROYED) && pThis->m_pCurrentMsg == NULL)

	mov	ecx, DWORD PTR _pThis$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	and	edx, 1
	je	SHORT $L164344
	mov	eax, DWORD PTR _pThis$[ebp]
	cmp	DWORD PTR [eax+24], 0
	jne	SHORT $L164344

; 3033 : 	{
; 3034 : 		// clear out window handle
; 3035 : 		HWND hWnd = pThis->m_hWnd;

	mov	ecx, DWORD PTR _pThis$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _hWnd$164345[ebp], edx

; 3036 : 		pThis->m_hWnd = NULL;

	mov	eax, DWORD PTR _pThis$[ebp]
	mov	DWORD PTR [eax+4], 0

; 3037 : 		pThis->m_dwState &= ~WINSTATE_DESTROYED;

	mov	ecx, DWORD PTR _pThis$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	and	edx, -2					; fffffffeH
	mov	eax, DWORD PTR _pThis$[ebp]
	mov	DWORD PTR [eax+28], edx

; 3038 : 		// clean up after window is destroyed
; 3039 : 		pThis->OnFinalMessage(hWnd);

	mov	esi, esp
	mov	ecx, DWORD PTR _hWnd$164345[ebp]
	push	ecx
	mov	edx, DWORD PTR _pThis$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pThis$[ebp]
	call	DWORD PTR [eax+12]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L164344:

; 3040 : 	}
; 3041 : 	return lRes;

	mov	eax, DWORD PTR _lRes$[ebp]

; 3042 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L213321
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 76					; 0000004cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$L213321:
	DD	2
	DD	$L213320
$L213320:
	DD	-44					; ffffffd4H
	DD	36					; 00000024H
	DD	$L213318
	DD	-60					; ffffffc4H
	DD	4
	DD	$L213319
$L213319:
	DB	108					; 0000006cH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$L213318:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
?WindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z ENDP ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::WindowProc
_TEXT	ENDS
PUBLIC	?Init@CWndProcThunk@ATL@@QAEXP6GJPAUHWND__@@IIJ@ZPAX@Z ; ATL::CWndProcThunk::Init
PUBLIC	?GetWNDPROC@CWndProcThunk@ATL@@QAEP6GJPAUHWND__@@IIJ@ZXZ ; ATL::CWndProcThunk::GetWNDPROC
; Function compile flags: /Odt /RTCsu
;	COMDAT ?SubclassWindow@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEHPAUHWND__@@@Z
_TEXT	SEGMENT
_pfnWndProc$ = -12					; size = 4
_pProc$ = -8						; size = 4
_this$ = -4						; size = 4
_hWnd$ = 8						; size = 4
?SubclassWindow@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEHPAUHWND__@@@Z PROC NEAR ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::SubclassWindow, COMDAT
; _this$ = ecx

; 3072 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 3073 : 	ATLASSERT(m_hWnd == NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $L213324
	push	OFFSET FLAT:$SG164381
	push	0
	push	3073					; 00000c01H
	push	OFFSET FLAT:$SG164382
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213324
	int	3
$L213324:

; 3074 : 	ATLASSERT(::IsWindow(hWnd));

	mov	esi, esp
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $L213325
	push	OFFSET FLAT:$SG164384
	push	0
	push	3074					; 00000c02H
	push	OFFSET FLAT:$SG164385
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213325
	int	3
$L213325:

; 3075 : 	m_thunk.Init(GetWindowProc(), this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR [eax+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Init@CWndProcThunk@ATL@@QAEXP6GJPAUHWND__@@IIJ@ZPAX@Z ; ATL::CWndProcThunk::Init

; 3076 : 	WNDPROC pProc = m_thunk.GetWNDPROC();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetWNDPROC@CWndProcThunk@ATL@@QAEP6GJPAUHWND__@@IIJ@ZXZ ; ATL::CWndProcThunk::GetWNDPROC
	mov	DWORD PTR _pProc$[ebp], eax

; 3077 : 	WNDPROC pfnWndProc = (WNDPROC)::SetWindowLongPtr(hWnd, GWLP_WNDPROC, (LONG_PTR)pProc);

	mov	ecx, DWORD PTR _pProc$[ebp]
	push	ecx
	push	-4					; fffffffcH
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	?SetWindowLongPtrA@@YAJPAUHWND__@@HJ@Z	; SetWindowLongPtrA
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pfnWndProc$[ebp], eax

; 3078 : 	if(pfnWndProc == NULL)

	cmp	DWORD PTR _pfnWndProc$[ebp], 0
	jne	SHORT $L164390

; 3079 : 		return FALSE;

	xor	eax, eax
	jmp	SHORT $L164379
$L164390:

; 3080 : 	m_pfnSuperWindowProc = pfnWndProc;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pfnWndProc$[ebp]
	mov	DWORD PTR [eax+32], ecx

; 3081 : 	m_hWnd = hWnd;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _hWnd$[ebp]
	mov	DWORD PTR [edx+4], eax

; 3082 : 	return TRUE;

	mov	eax, 1
$L164379:

; 3083 : }

	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SubclassWindow@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEHPAUHWND__@@@Z ENDP ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::SubclassWindow
_TEXT	ENDS
PUBLIC	?Init@CDynamicStdCallThunk@ATL@@QAEXKPAX@Z	; ATL::CDynamicStdCallThunk::Init
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Init@CWndProcThunk@ATL@@QAEXP6GJPAUHWND__@@IIJ@ZPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_proc$ = 8						; size = 4
_pThis$ = 12						; size = 4
?Init@CWndProcThunk@ATL@@QAEXP6GJPAUHWND__@@IIJ@ZPAX@Z PROC NEAR ; ATL::CWndProcThunk::Init, COMDAT
; _this$ = ecx

; 2234 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2235 : 		thunk.Init((DWORD_PTR)proc, pThis);

	mov	eax, DWORD PTR _pThis$[ebp]
	push	eax
	mov	ecx, DWORD PTR _proc$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?Init@CDynamicStdCallThunk@ATL@@QAEXKPAX@Z ; ATL::CDynamicStdCallThunk::Init

; 2236 : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Init@CWndProcThunk@ATL@@QAEXP6GJPAUHWND__@@IIJ@ZPAX@Z ENDP ; ATL::CWndProcThunk::Init
_TEXT	ENDS
PUBLIC	?Init@_stdcallthunk@ATL@@QAEXKPAX@Z		; ATL::_stdcallthunk::Init
PUBLIC	??_C@_06CIAHICCP@pThunk?$AA@			; `string'
EXTRN	__imp__HeapAlloc@12:NEAR
;	COMDAT ??_C@_06CIAHICCP@pThunk?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
CONST	SEGMENT
??_C@_06CIAHICCP@pThunk?$AA@ DB 'pThunk', 00H		; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?Init@CDynamicStdCallThunk@ATL@@QAEXKPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_proc$ = 8						; size = 4
_pThis$ = 12						; size = 4
?Init@CDynamicStdCallThunk@ATL@@QAEXKPAX@Z PROC NEAR	; ATL::CDynamicStdCallThunk::Init, COMDAT
; _this$ = ecx

; 633  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 634  : 		if (pThunk == NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L87713

; 635  : 			pThunk = static_cast<_stdcallthunk *>(HeapAlloc(GetProcessHeap(), 
; 636  : 				HEAP_GENERATE_EXCEPTIONS, sizeof(_stdcallthunk)));

	mov	esi, esp
	push	13					; 0000000dH
	push	4
	mov	edi, esp
	call	DWORD PTR __imp__GetProcessHeap@0
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__HeapAlloc@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
$L87713:

; 637  : 		ATLASSERT(pThunk);

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $L213330
	push	OFFSET FLAT:??_C@_06CIAHICCP@pThunk?$AA@
	push	0
	push	637					; 0000027dH
	push	OFFSET FLAT:??_C@_0FA@KBNNCCJL@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213330
	int	3
$L213330:

; 638  : 		pThunk->Init(proc, pThis);

	mov	ecx, DWORD PTR _pThis$[ebp]
	push	ecx
	mov	edx, DWORD PTR _proc$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?Init@_stdcallthunk@ATL@@QAEXKPAX@Z	; ATL::_stdcallthunk::Init

; 639  : 	}

	pop	edi
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Init@CDynamicStdCallThunk@ATL@@QAEXKPAX@Z ENDP		; ATL::CDynamicStdCallThunk::Init
_TEXT	ENDS
EXTRN	__imp__FlushInstructionCache@12:NEAR
EXTRN	__imp__GetCurrentProcess@0:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Init@_stdcallthunk@ATL@@QAEXKPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_proc$ = 8						; size = 4
_pThis$ = 12						; size = 4
?Init@_stdcallthunk@ATL@@QAEXKPAX@Z PROC NEAR		; ATL::_stdcallthunk::Init, COMDAT
; _this$ = ecx

; 453  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 454  : 		m_mov = 0x042444C7;  //C7 44 24 0C

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 69485767		; 042444c7H

; 455  : 		m_this = PtrToUlong(pThis);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pThis$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 456  : 		m_jmp = 0xe9;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 233			; 000000e9H

; 457  : 		m_relproc = DWORD((INT_PTR)proc - ((INT_PTR)this+sizeof(_stdcallthunk)));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 13					; 0000000dH
	mov	edx, DWORD PTR _proc$[ebp]
	sub	edx, ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+9], edx

; 458  : 		// write block from data cache and
; 459  : 		//  flush from instruction cache
; 460  : 		FlushInstructionCache(GetCurrentProcess(), this, sizeof(_stdcallthunk));

	mov	esi, esp
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edi, esp
	call	DWORD PTR __imp__GetCurrentProcess@0
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__FlushInstructionCache@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 461  : 	}

	pop	edi
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Init@_stdcallthunk@ATL@@QAEXKPAX@Z ENDP		; ATL::_stdcallthunk::Init
_TEXT	ENDS
PUBLIC	?GetCodeAddress@CDynamicStdCallThunk@ATL@@QAEPAXXZ ; ATL::CDynamicStdCallThunk::GetCodeAddress
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
;	COMDAT ?GetWNDPROC@CWndProcThunk@ATL@@QAEP6GJPAUHWND__@@IIJ@ZXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWNDPROC@CWndProcThunk@ATL@@QAEP6GJPAUHWND__@@IIJ@ZXZ PROC NEAR ; ATL::CWndProcThunk::GetWNDPROC, COMDAT
; _this$ = ecx

; 2238 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2239 : 		return (WNDPROC)thunk.GetCodeAddress();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?GetCodeAddress@CDynamicStdCallThunk@ATL@@QAEPAXXZ ; ATL::CDynamicStdCallThunk::GetCodeAddress

; 2240 : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWNDPROC@CWndProcThunk@ATL@@QAEP6GJPAUHWND__@@IIJ@ZXZ ENDP ; ATL::CWndProcThunk::GetWNDPROC
_TEXT	ENDS
PUBLIC	?GetCodeAddress@_stdcallthunk@ATL@@QAEPAXXZ	; ATL::_stdcallthunk::GetCodeAddress
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
;	COMDAT ?GetCodeAddress@CDynamicStdCallThunk@ATL@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCodeAddress@CDynamicStdCallThunk@ATL@@QAEPAXXZ PROC NEAR ; ATL::CDynamicStdCallThunk::GetCodeAddress, COMDAT
; _this$ = ecx

; 642  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 643  : 		ATLASSERT(pThunk);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L213337
	push	OFFSET FLAT:??_C@_06CIAHICCP@pThunk?$AA@
	push	0
	push	643					; 00000283H
	push	OFFSET FLAT:??_C@_0FA@KBNNCCJL@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213337
	int	3
$L213337:

; 644  : 		return pThunk->GetCodeAddress();

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?GetCodeAddress@_stdcallthunk@ATL@@QAEPAXXZ ; ATL::_stdcallthunk::GetCodeAddress

; 645  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCodeAddress@CDynamicStdCallThunk@ATL@@QAEPAXXZ ENDP	; ATL::CDynamicStdCallThunk::GetCodeAddress
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?GetCodeAddress@_stdcallthunk@ATL@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCodeAddress@_stdcallthunk@ATL@@QAEPAXXZ PROC NEAR	; ATL::_stdcallthunk::GetCodeAddress, COMDAT
; _this$ = ecx

; 464  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 465  : 		return this;

	mov	eax, DWORD PTR _this$[ebp]

; 466  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetCodeAddress@_stdcallthunk@ATL@@QAEPAXXZ ENDP	; ATL::_stdcallthunk::GetCodeAddress
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
_TEXT	ENDS
;	COMDAT ?UnsubclassWindow@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@H@Z
_TEXT	SEGMENT
_hWnd$ = -16						; size = 4
_pActiveProc$ = -12					; size = 4
_pOurProc$ = -8						; size = 4
_this$ = -4						; size = 4
_bForce$ = 8						; size = 4
?UnsubclassWindow@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@H@Z PROC NEAR ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::UnsubclassWindow, COMDAT
; _this$ = ecx

; 3089 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 3090 : 	ATLASSERT(m_hWnd != NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $L213342
	push	OFFSET FLAT:$SG164398
	push	0
	push	3090					; 00000c12H
	push	OFFSET FLAT:$SG164399
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213342
	int	3
$L213342:

; 3091 : 
; 3092 : 	WNDPROC pOurProc = m_thunk.GetWNDPROC();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetWNDPROC@CWndProcThunk@ATL@@QAEP6GJPAUHWND__@@IIJ@ZXZ ; ATL::CWndProcThunk::GetWNDPROC
	mov	DWORD PTR _pOurProc$[ebp], eax

; 3093 : 	WNDPROC pActiveProc = (WNDPROC)::GetWindowLongPtr(m_hWnd, GWLP_WNDPROC);

	push	-4					; fffffffcH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?GetWindowLongPtrA@@YAJPAUHWND__@@H@Z	; GetWindowLongPtrA
	add	esp, 8
	mov	DWORD PTR _pActiveProc$[ebp], eax

; 3094 : 
; 3095 : 	HWND hWnd = NULL;

	mov	DWORD PTR _hWnd$[ebp], 0

; 3096 : 	if (bForce || pOurProc == pActiveProc)

	cmp	DWORD PTR _bForce$[ebp], 0
	jne	SHORT $L164405
	mov	ecx, DWORD PTR _pOurProc$[ebp]
	cmp	ecx, DWORD PTR _pActiveProc$[ebp]
	jne	SHORT $L164404
$L164405:

; 3097 : 	{
; 3098 : 		if(!::SetWindowLongPtr(m_hWnd, GWLP_WNDPROC, (LONG_PTR)m_pfnSuperWindowProc))

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	push	eax
	push	-4					; fffffffcH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?SetWindowLongPtrA@@YAJPAUHWND__@@HJ@Z	; SetWindowLongPtrA
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $L164407

; 3099 : 			return NULL;

	xor	eax, eax
	jmp	SHORT $L164396
$L164407:

; 3100 : 
; 3101 : 		m_pfnSuperWindowProc = ::DefWindowProc;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __imp__DefWindowProcA@16
	mov	DWORD PTR [eax+32], ecx

; 3102 : 		hWnd = m_hWnd;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _hWnd$[ebp], eax

; 3103 : 		m_hWnd = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
$L164404:

; 3104 : 	}
; 3105 : 	return hWnd;

	mov	eax, DWORD PTR _hWnd$[ebp]
$L164396:

; 3106 : }

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?UnsubclassWindow@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@H@Z ENDP ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::UnsubclassWindow
_TEXT	ENDS
PUBLIC	??0?$CComObject@VCAxFrameWindow@ATL@@@ATL@@QAE@PAX@Z ; ATL::CComObject<ATL::CAxFrameWindow>::CComObject<ATL::CAxFrameWindow>
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcom.h
xdata$x	SEGMENT
$T213358 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
$T213360 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L213354
$T213359 DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:$T213360
$T213356 DD	019930520H
	DD	02H
	DD	FLAT:$T213358
	DD	01H
	DD	FLAT:$T213359
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?CreateInstance@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@SGJPAPAV12@@Z
_TEXT	SEGMENT
tv135 = -48						; size = 4
tv80 = -44						; size = 4
tv137 = -40						; size = 4
$T213350 = -36						; size = 4
$T213349 = -32						; size = 4
$T213346 = -28						; size = 4
_p$ = -24						; size = 4
_hRes$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_pp$ = 8						; size = 4
?CreateInstance@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@SGJPAPAV12@@Z PROC NEAR ; ATL::CComObject<ATL::CAxFrameWindow>::CreateInstance, COMDAT

; 2528 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateInstance@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@SGJPAPAV12@@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-48], eax
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 2529 : 	ATLASSERT(pp != NULL);

	cmp	DWORD PTR _pp$[ebp], 0
	jne	SHORT $L213345
	push	OFFSET FLAT:$SG164419
	push	0
	push	2529					; 000009e1H
	push	OFFSET FLAT:$SG164420
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213345
	int	3
$L213345:

; 2530 : 	if (pp == NULL)

	cmp	DWORD PTR _pp$[ebp], 0
	jne	SHORT $L164421

; 2531 : 		return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	$L164417
$L164421:

; 2532 : 	*pp = NULL;

	mov	ecx, DWORD PTR _pp$[ebp]
	mov	DWORD PTR [ecx], 0

; 2533 : 
; 2534 : 	HRESULT hRes = E_OUTOFMEMORY;

	mov	DWORD PTR _hRes$[ebp], -2147024882	; 8007000eH

; 2535 : 	CComObject<Base>* p = NULL;

	mov	DWORD PTR _p$[ebp], 0

; 2536 : 	ATLTRY(p = new CComObject<Base>())

	mov	DWORD PTR __$EHRec$[ebp+12], 0
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv137[ebp], eax
	mov	edx, DWORD PTR tv137[ebp]
	mov	DWORD PTR $T213346[ebp], edx
	cmp	DWORD PTR $T213346[ebp], 0
	je	SHORT $L213347
	push	0
	mov	ecx, DWORD PTR $T213346[ebp]
	call	??0?$CComObject@VCAxFrameWindow@ATL@@@ATL@@QAE@PAX@Z ; ATL::CComObject<ATL::CAxFrameWindow>::CComObject<ATL::CAxFrameWindow>
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $L213348
$L213347:
	mov	DWORD PTR tv80[ebp], 0
$L213348:
	mov	eax, DWORD PTR tv80[ebp]
	mov	DWORD PTR _p$[ebp], eax
	jmp	SHORT $L213353
$L213354:
	mov	eax, $L213353
	ret	0
$L213353:
	mov	DWORD PTR __$EHRec$[ebp+12], -1

; 2537 : 	if (p != NULL)

	cmp	DWORD PTR _p$[ebp], 0
	je	$L164429

; 2538 : 	{
; 2539 : 		p->SetVoid(NULL);

	push	0
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 40					; 00000028H
	call	?SetVoid@CComObjectRootBase@ATL@@QAEXPAX@Z ; ATL::CComObjectRootBase::SetVoid

; 2540 : 		p->InternalFinalConstructAddRef();

	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 40					; 00000028H
	call	?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::InternalFinalConstructAddRef

; 2541 : 		hRes = p->FinalConstruct();

	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 40					; 00000028H
	call	?FinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ; ATL::CComObjectRootBase::FinalConstruct
	mov	DWORD PTR _hRes$[ebp], eax

; 2542 : 		if (SUCCEEDED(hRes))

	cmp	DWORD PTR _hRes$[ebp], 0
	jl	SHORT $L164431

; 2543 : 			hRes = p->_AtlFinalConstruct();

	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 40					; 00000028H
	call	?_AtlFinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ; ATL::CComObjectRootBase::_AtlFinalConstruct
	mov	DWORD PTR _hRes$[ebp], eax
$L164431:

; 2544 : 		p->InternalFinalConstructRelease();

	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 40					; 00000028H
	call	?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::InternalFinalConstructRelease

; 2545 : 		if (hRes != S_OK)

	cmp	DWORD PTR _hRes$[ebp], 0
	je	SHORT $L164429

; 2546 : 		{
; 2547 : 			delete p;

	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR $T213350[ebp], ecx
	mov	edx, DWORD PTR $T213350[ebp]
	mov	DWORD PTR $T213349[ebp], edx
	cmp	DWORD PTR $T213349[ebp], 0
	je	SHORT $L213351
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T213349[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T213349[ebp]
	call	DWORD PTR [edx+4]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv135[ebp], eax
	jmp	SHORT $L213352
$L213351:
	mov	DWORD PTR tv135[ebp], 0
$L213352:

; 2548 : 			p = NULL;

	mov	DWORD PTR _p$[ebp], 0
$L164429:

; 2549 : 		}
; 2550 : 	}
; 2551 : 	*pp = p;

	mov	eax, DWORD PTR _pp$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx

; 2552 : 	return hRes;

	mov	eax, DWORD PTR _hRes$[ebp]
$L164417:

; 2553 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?CreateInstance@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@SGJPAPAV12@@Z:
	mov	eax, OFFSET FLAT:$T213356
	jmp	___CxxFrameHandler
text$x	ENDS
?CreateInstance@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@SGJPAPAV12@@Z ENDP ; ATL::CComObject<ATL::CAxFrameWindow>::CreateInstance
PUBLIC	?OnFinalMessage@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEXPAUHWND__@@@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::OnFinalMessage
PUBLIC	??0CAxFrameWindow@ATL@@QAE@XZ			; ATL::CAxFrameWindow::CAxFrameWindow
PUBLIC	?AddRef@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComObject<ATL::CAxFrameWindow>::AddRef
PUBLIC	?Release@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComObject<ATL::CAxFrameWindow>::Release
PUBLIC	?QueryInterface@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<ATL::CAxFrameWindow>::QueryInterface
PUBLIC	?ProcessWindowMessage@CAxFrameWindow@ATL@@UAEHPAUHWND__@@IIJAAJK@Z ; ATL::CAxFrameWindow::ProcessWindowMessage
PUBLIC	?GetWindow@CAxFrameWindow@ATL@@UAGJPAPAUHWND__@@@Z ; ATL::CAxFrameWindow::GetWindow
PUBLIC	?ContextSensitiveHelp@CAxFrameWindow@ATL@@UAGJH@Z ; ATL::CAxFrameWindow::ContextSensitiveHelp
PUBLIC	??_7?$CComObject@VCAxFrameWindow@ATL@@@ATL@@6B?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@1@@ ; ATL::CComObject<ATL::CAxFrameWindow>::`vftable'
PUBLIC	?GetBorder@CAxFrameWindow@ATL@@UAGJPAUtagRECT@@@Z ; ATL::CAxFrameWindow::GetBorder
PUBLIC	??_7?$CComObject@VCAxFrameWindow@ATL@@@ATL@@6BIOleInPlaceFrame@@@ ; ATL::CComObject<ATL::CAxFrameWindow>::`vftable'
PUBLIC	?RequestBorderSpace@CAxFrameWindow@ATL@@UAGJPBUtagRECT@@@Z ; ATL::CAxFrameWindow::RequestBorderSpace
PUBLIC	?SetBorderSpace@CAxFrameWindow@ATL@@UAGJPBUtagRECT@@@Z ; ATL::CAxFrameWindow::SetBorderSpace
PUBLIC	??_G?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAEPAXI@Z ; ATL::CComObject<ATL::CAxFrameWindow>::`scalar deleting destructor'
PUBLIC	?SetActiveObject@CAxFrameWindow@ATL@@UAGJPAUIOleInPlaceActiveObject@@PBG@Z ; ATL::CAxFrameWindow::SetActiveObject
PUBLIC	?InsertMenus@CAxFrameWindow@ATL@@UAGJPAUHMENU__@@PAUtagOleMenuGroupWidths@@@Z ; ATL::CAxFrameWindow::InsertMenus
PUBLIC	?SetMenu@CAxFrameWindow@ATL@@UAGJPAUHMENU__@@PAXPAUHWND__@@@Z ; ATL::CAxFrameWindow::SetMenu
PUBLIC	?RemoveMenus@CAxFrameWindow@ATL@@UAGJPAUHMENU__@@@Z ; ATL::CAxFrameWindow::RemoveMenus
PUBLIC	?SetStatusText@CAxFrameWindow@ATL@@UAGJPBG@Z	; ATL::CAxFrameWindow::SetStatusText
PUBLIC	?EnableModeless@CAxFrameWindow@ATL@@UAGJH@Z	; ATL::CAxFrameWindow::EnableModeless
PUBLIC	?TranslateAcceleratorA@CAxFrameWindow@ATL@@UAGJPAUtagMSG@@G@Z ; ATL::CAxFrameWindow::TranslateAcceleratorA
EXTRN	??_E?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAEPAXI@Z:NEAR ; ATL::CComObject<ATL::CAxFrameWindow>::`vector deleting destructor'
;	COMDAT ??_7?$CComObject@VCAxFrameWindow@ATL@@@ATL@@6B?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@1@@
CONST	SEGMENT
??_7?$CComObject@VCAxFrameWindow@ATL@@@ATL@@6B?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@1@@ DD FLAT:?ProcessWindowMessage@CAxFrameWindow@ATL@@UAEHPAUHWND__@@IIJAAJK@Z ; ATL::CComObject<ATL::CAxFrameWindow>::`vftable'
	DD	FLAT:??_E?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAEPAXI@Z
	DD	FLAT:?GetWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?OnFinalMessage@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEXPAUHWND__@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCAxFrameWindow@ATL@@@ATL@@6BIOleInPlaceFrame@@@
CONST	SEGMENT
??_7?$CComObject@VCAxFrameWindow@ATL@@@ATL@@6BIOleInPlaceFrame@@@ DD FLAT:?QueryInterface@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<ATL::CAxFrameWindow>::`vftable'
	DD	FLAT:?AddRef@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAGKXZ
	DD	FLAT:?Release@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAGKXZ
	DD	FLAT:?GetWindow@CAxFrameWindow@ATL@@UAGJPAPAUHWND__@@@Z
	DD	FLAT:?ContextSensitiveHelp@CAxFrameWindow@ATL@@UAGJH@Z
	DD	FLAT:?GetBorder@CAxFrameWindow@ATL@@UAGJPAUtagRECT@@@Z
	DD	FLAT:?RequestBorderSpace@CAxFrameWindow@ATL@@UAGJPBUtagRECT@@@Z
	DD	FLAT:?SetBorderSpace@CAxFrameWindow@ATL@@UAGJPBUtagRECT@@@Z
	DD	FLAT:?SetActiveObject@CAxFrameWindow@ATL@@UAGJPAUIOleInPlaceActiveObject@@PBG@Z
	DD	FLAT:?InsertMenus@CAxFrameWindow@ATL@@UAGJPAUHMENU__@@PAUtagOleMenuGroupWidths@@@Z
	DD	FLAT:?SetMenu@CAxFrameWindow@ATL@@UAGJPAUHMENU__@@PAXPAUHWND__@@@Z
	DD	FLAT:?RemoveMenus@CAxFrameWindow@ATL@@UAGJPAUHMENU__@@@Z
	DD	FLAT:?SetStatusText@CAxFrameWindow@ATL@@UAGJPBG@Z
	DD	FLAT:?EnableModeless@CAxFrameWindow@ATL@@UAGJH@Z
	DD	FLAT:?TranslateAcceleratorA@CAxFrameWindow@ATL@@UAGJPAUtagMSG@@G@Z
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ??0?$CComObject@VCAxFrameWindow@ATL@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$CComObject@VCAxFrameWindow@ATL@@@ATL@@QAE@PAX@Z PROC NEAR ; ATL::CComObject<ATL::CAxFrameWindow>::CComObject<ATL::CAxFrameWindow>, COMDAT
; _this$ = ecx

; 2489 : 	CComObject(void* = NULL) throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CAxFrameWindow@ATL@@QAE@XZ		; ATL::CAxFrameWindow::CAxFrameWindow
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7?$CComObject@VCAxFrameWindow@ATL@@@ATL@@6B?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@1@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36], OFFSET FLAT:??_7?$CComObject@VCAxFrameWindow@ATL@@@ATL@@6BIOleInPlaceFrame@@@

; 2490 : 	{
; 2491 : 		_pAtlModule->Lock();

	mov	edx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	call	DWORD PTR [eax+4]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2492 : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CComObject@VCAxFrameWindow@ATL@@@ATL@@QAE@PAX@Z ENDP ; ATL::CComObject<ATL::CAxFrameWindow>::CComObject<ATL::CAxFrameWindow>
_TEXT	ENDS
PUBLIC	??0?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ ; ATL::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >
PUBLIC	??0IOleInPlaceFrame@@QAE@XZ			; IOleInPlaceFrame::IOleInPlaceFrame
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
;	COMDAT ??0CAxFrameWindow@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CAxFrameWindow@ATL@@QAE@XZ PROC NEAR			; ATL::CAxFrameWindow::CAxFrameWindow, COMDAT
; _this$ = ecx

; 135  : 	CAxFrameWindow()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0IOleInPlaceFrame@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleInPlaceActiveObject>::CComPtr<IOleInPlaceActiveObject>

; 136  : 	{
; 137  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CAxFrameWindow@ATL@@QAE@XZ ENDP			; ATL::CAxFrameWindow::CAxFrameWindow
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?ProcessWindowMessage@CAxFrameWindow@ATL@@UAEHPAUHWND__@@IIJAAJK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 4
?ProcessWindowMessage@CAxFrameWindow@ATL@@UAEHPAUHWND__@@IIJAAJK@Z PROC NEAR ; ATL::CAxFrameWindow::ProcessWindowMessage, COMDAT
; _this$ = ecx

; 153  : 	DECLARE_EMPTY_MSG_MAP()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?ProcessWindowMessage@CAxFrameWindow@ATL@@UAEHPAUHWND__@@IIJAAJK@Z ENDP ; ATL::CAxFrameWindow::ProcessWindowMessage
_TEXT	ENDS
PUBLIC	?Create@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z ; ATL::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::Create
PUBLIC	??_C@_0L@JIHHHPOK@phwnd?5?$CB?$DN?50?$AA@	; `string'
PUBLIC	??_C@_0BD@LIOMMJMF@AXWIN?5Frame?5Window?$AA@	; `string'
;	COMDAT ??_C@_0L@JIHHHPOK@phwnd?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0L@JIHHHPOK@phwnd?5?$CB?$DN?50?$AA@ DB 'phwnd != 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LIOMMJMF@AXWIN?5Frame?5Window?$AA@
CONST	SEGMENT
??_C@_0BD@LIOMMJMF@AXWIN?5Frame?5Window?$AA@ DB 'AXWIN Frame Window', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?GetWindow@CAxFrameWindow@ATL@@UAGJPAPAUHWND__@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_phwnd$ = 12						; size = 4
?GetWindow@CAxFrameWindow@ATL@@UAGJPAPAUHWND__@@@Z PROC NEAR ; ATL::CAxFrameWindow::GetWindow, COMDAT

; 157  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 158  : 		ATLASSERT(phwnd != NULL);

	cmp	DWORD PTR _phwnd$[ebp], 0
	jne	SHORT $L213373
	push	OFFSET FLAT:??_C@_0L@JIHHHPOK@phwnd?5?$CB?$DN?50?$AA@
	push	0
	push	158					; 0000009eH
	push	OFFSET FLAT:??_C@_0FA@NHACCMFP@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213373
	int	3
$L213373:

; 159  : 		if (phwnd == NULL)

	cmp	DWORD PTR _phwnd$[ebp], 0
	jne	SHORT $L147871

; 160  : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $L147868
$L147871:

; 161  : 
; 162  : 		if (m_hWnd == NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx-32], 0
	jne	SHORT $L147873

; 163  : 			Create(NULL, NULL, _T("AXWIN Frame Window"), WS_OVERLAPPEDWINDOW, 0, (UINT)NULL);

	push	0
	push	ecx
	mov	ecx, esp
	push	0
	call	??0_U_MENUorID@ATL@@QAE@I@Z		; ATL::_U_MENUorID::_U_MENUorID
	push	0
	push	13565952				; 00cf0000H
	push	OFFSET FLAT:??_C@_0BD@LIOMMJMF@AXWIN?5Frame?5Window?$AA@
	push	ecx
	mov	ecx, esp
	push	0
	call	??0_U_RECT@ATL@@QAE@PAUtagRECT@@@Z	; ATL::_U_RECT::_U_RECT
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 36					; 00000024H
	call	?Create@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z ; ATL::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::Create
$L147873:

; 164  : 		*phwnd = m_hWnd;

	mov	edx, DWORD PTR _phwnd$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-32]
	mov	DWORD PTR [edx], ecx

; 165  : 		return S_OK;

	xor	eax, eax
$L147868:

; 166  : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetWindow@CAxFrameWindow@ATL@@UAGJPAPAUHWND__@@@Z ENDP	; ATL::CAxFrameWindow::GetWindow
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?ContextSensitiveHelp@CAxFrameWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?ContextSensitiveHelp@CAxFrameWindow@ATL@@UAGJH@Z PROC NEAR ; ATL::CAxFrameWindow::ContextSensitiveHelp, COMDAT

; 168  : 	{

	push	ebp
	mov	ebp, esp

; 169  : 		return S_OK;

	xor	eax, eax

; 170  : 	}

	pop	ebp
	ret	8
?ContextSensitiveHelp@CAxFrameWindow@ATL@@UAGJH@Z ENDP	; ATL::CAxFrameWindow::ContextSensitiveHelp
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?GetBorder@CAxFrameWindow@ATL@@UAGJPAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?GetBorder@CAxFrameWindow@ATL@@UAGJPAUtagRECT@@@Z PROC NEAR ; ATL::CAxFrameWindow::GetBorder, COMDAT

; 174  : 	{

	push	ebp
	mov	ebp, esp

; 175  : 		return S_OK;

	xor	eax, eax

; 176  : 	}

	pop	ebp
	ret	8
?GetBorder@CAxFrameWindow@ATL@@UAGJPAUtagRECT@@@Z ENDP	; ATL::CAxFrameWindow::GetBorder
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?RequestBorderSpace@CAxFrameWindow@ATL@@UAGJPBUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?RequestBorderSpace@CAxFrameWindow@ATL@@UAGJPBUtagRECT@@@Z PROC NEAR ; ATL::CAxFrameWindow::RequestBorderSpace, COMDAT

; 179  : 	{

	push	ebp
	mov	ebp, esp

; 180  : 		return INPLACE_E_NOTOOLSPACE;

	mov	eax, -2147221087			; 800401a1H

; 181  : 	}

	pop	ebp
	ret	8
?RequestBorderSpace@CAxFrameWindow@ATL@@UAGJPBUtagRECT@@@Z ENDP ; ATL::CAxFrameWindow::RequestBorderSpace
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?SetBorderSpace@CAxFrameWindow@ATL@@UAGJPBUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?SetBorderSpace@CAxFrameWindow@ATL@@UAGJPBUtagRECT@@@Z PROC NEAR ; ATL::CAxFrameWindow::SetBorderSpace, COMDAT

; 184  : 	{

	push	ebp
	mov	ebp, esp

; 185  : 		return S_OK;

	xor	eax, eax

; 186  : 	}

	pop	ebp
	ret	8
?SetBorderSpace@CAxFrameWindow@ATL@@UAGJPBUtagRECT@@@Z ENDP ; ATL::CAxFrameWindow::SetBorderSpace
_TEXT	ENDS
PUBLIC	??4?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAEPAUIOleInPlaceActiveObject@@PAU2@@Z ; ATL::CComPtr<IOleInPlaceActiveObject>::operator=
; Function compile flags: /Odt /RTCsu
;	COMDAT ?SetActiveObject@CAxFrameWindow@ATL@@UAGJPAUIOleInPlaceActiveObject@@PBG@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pActiveObject$ = 12					; size = 4
___formal$ = 16						; size = 4
?SetActiveObject@CAxFrameWindow@ATL@@UAGJPAUIOleInPlaceActiveObject@@PBG@Z PROC NEAR ; ATL::CAxFrameWindow::SetActiveObject, COMDAT

; 189  : 	{

	push	ebp
	mov	ebp, esp

; 190  : 		m_spActiveObject = pActiveObject;

	mov	eax, DWORD PTR _pActiveObject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??4?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAEPAUIOleInPlaceActiveObject@@PAU2@@Z ; ATL::CComPtr<IOleInPlaceActiveObject>::operator=

; 191  : 		return S_OK;

	xor	eax, eax

; 192  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?SetActiveObject@CAxFrameWindow@ATL@@UAGJPAUIOleInPlaceActiveObject@@PBG@Z ENDP ; ATL::CAxFrameWindow::SetActiveObject
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?InsertMenus@CAxFrameWindow@ATL@@UAGJPAUHMENU__@@PAUtagOleMenuGroupWidths@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?InsertMenus@CAxFrameWindow@ATL@@UAGJPAUHMENU__@@PAUtagOleMenuGroupWidths@@@Z PROC NEAR ; ATL::CAxFrameWindow::InsertMenus, COMDAT

; 196  : 	{

	push	ebp
	mov	ebp, esp

; 197  : 		return S_OK;

	xor	eax, eax

; 198  : 	}

	pop	ebp
	ret	12					; 0000000cH
?InsertMenus@CAxFrameWindow@ATL@@UAGJPAUHMENU__@@PAUtagOleMenuGroupWidths@@@Z ENDP ; ATL::CAxFrameWindow::InsertMenus
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?SetMenu@CAxFrameWindow@ATL@@UAGJPAUHMENU__@@PAXPAUHWND__@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
?SetMenu@CAxFrameWindow@ATL@@UAGJPAUHMENU__@@PAXPAUHWND__@@@Z PROC NEAR ; ATL::CAxFrameWindow::SetMenu, COMDAT

; 201  : 	{

	push	ebp
	mov	ebp, esp

; 202  : 		return S_OK;

	xor	eax, eax

; 203  : 	}

	pop	ebp
	ret	16					; 00000010H
?SetMenu@CAxFrameWindow@ATL@@UAGJPAUHMENU__@@PAXPAUHWND__@@@Z ENDP ; ATL::CAxFrameWindow::SetMenu
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?RemoveMenus@CAxFrameWindow@ATL@@UAGJPAUHMENU__@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?RemoveMenus@CAxFrameWindow@ATL@@UAGJPAUHMENU__@@@Z PROC NEAR ; ATL::CAxFrameWindow::RemoveMenus, COMDAT

; 206  : 	{

	push	ebp
	mov	ebp, esp

; 207  : 		return S_OK;

	xor	eax, eax

; 208  : 	}

	pop	ebp
	ret	8
?RemoveMenus@CAxFrameWindow@ATL@@UAGJPAUHMENU__@@@Z ENDP ; ATL::CAxFrameWindow::RemoveMenus
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?SetStatusText@CAxFrameWindow@ATL@@UAGJPBG@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?SetStatusText@CAxFrameWindow@ATL@@UAGJPBG@Z PROC NEAR	; ATL::CAxFrameWindow::SetStatusText, COMDAT

; 211  : 	{

	push	ebp
	mov	ebp, esp

; 212  : 		return S_OK;

	xor	eax, eax

; 213  : 	}

	pop	ebp
	ret	8
?SetStatusText@CAxFrameWindow@ATL@@UAGJPBG@Z ENDP	; ATL::CAxFrameWindow::SetStatusText
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?EnableModeless@CAxFrameWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?EnableModeless@CAxFrameWindow@ATL@@UAGJH@Z PROC NEAR	; ATL::CAxFrameWindow::EnableModeless, COMDAT

; 216  : 	{

	push	ebp
	mov	ebp, esp

; 217  : 		return S_OK;

	xor	eax, eax

; 218  : 	}

	pop	ebp
	ret	8
?EnableModeless@CAxFrameWindow@ATL@@UAGJH@Z ENDP	; ATL::CAxFrameWindow::EnableModeless
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?TranslateAcceleratorA@CAxFrameWindow@ATL@@UAGJPAUtagMSG@@G@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 2
?TranslateAcceleratorA@CAxFrameWindow@ATL@@UAGJPAUtagMSG@@G@Z PROC NEAR ; ATL::CAxFrameWindow::TranslateAcceleratorA, COMDAT

; 221  : 	{

	push	ebp
	mov	ebp, esp

; 222  : 		return S_FALSE;

	mov	eax, 1

; 223  : 	}

	pop	ebp
	ret	12					; 0000000cH
?TranslateAcceleratorA@CAxFrameWindow@ATL@@UAGJPAUtagMSG@@G@Z ENDP ; ATL::CAxFrameWindow::TranslateAcceleratorA
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ PROC NEAR ; ATL::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ ENDP ; ATL::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >
_TEXT	ENDS
PUBLIC	??0IOleInPlaceUIWindow@@QAE@XZ			; IOleInPlaceUIWindow::IOleInPlaceUIWindow
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0IOleInPlaceFrame@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IOleInPlaceFrame@@QAE@XZ PROC NEAR			; IOleInPlaceFrame::IOleInPlaceFrame, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IOleInPlaceUIWindow@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IOleInPlaceFrame@@QAE@XZ ENDP			; IOleInPlaceFrame::IOleInPlaceFrame
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0IOleInPlaceUIWindow@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IOleInPlaceUIWindow@@QAE@XZ PROC NEAR		; IOleInPlaceUIWindow::IOleInPlaceUIWindow, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IOleWindow@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IOleInPlaceUIWindow@@QAE@XZ ENDP			; IOleInPlaceUIWindow::IOleInPlaceUIWindow
_TEXT	ENDS
PUBLIC	?GetWndStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndStyle
PUBLIC	?GetWndExStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndExStyle
PUBLIC	?Create@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@GPAX@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::Create
PUBLIC	?GetWndClassInfo@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@2@XZ ; ATL::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo
PUBLIC	?GetWndCaption@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAPBDXZ ; ATL::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndCaption
PUBLIC	?Register@_ATL_WNDCLASSINFOA@ATL@@QAEGPAP6GJPAUHWND__@@IIJ@Z@Z ; ATL::_ATL_WNDCLASSINFOA::Register
PUBLIC	?GetWndClassName@CWindow@ATL@@SAPBDXZ		; ATL::CWindow::GetWndClassName
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
;	COMDAT ?Create@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z
_TEXT	SEGMENT
_atom$ = -8						; size = 2
_this$ = -4						; size = 4
_hWndParent$ = 8					; size = 4
_rect$ = 12						; size = 4
_szWindowName$ = 16					; size = 4
_dwStyle$ = 20						; size = 4
_dwExStyle$ = 24					; size = 4
_MenuOrID$ = 28						; size = 4
_lpCreateParam$ = 32					; size = 4
?Create@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z PROC NEAR ; ATL::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::Create, COMDAT
; _this$ = ecx

; 3122 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 3123 : 		if (T::GetWndClassInfo().m_lpszOrigName == NULL)

	call	?GetWndClassInfo@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@2@XZ ; ATL::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo
	cmp	DWORD PTR [eax+48], 0
	jne	SHORT $L163235

; 3124 : 			T::GetWndClassInfo().m_lpszOrigName = GetWndClassName();

	call	?GetWndClassName@CWindow@ATL@@SAPBDXZ	; ATL::CWindow::GetWndClassName
	mov	esi, eax
	call	?GetWndClassInfo@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@2@XZ ; ATL::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo
	mov	DWORD PTR [eax+48], esi
$L163235:

; 3125 : 		ATOM atom = T::GetWndClassInfo().Register(&m_pfnSuperWindowProc);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	call	?GetWndClassInfo@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@2@XZ ; ATL::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo
	mov	ecx, eax
	call	?Register@_ATL_WNDCLASSINFOA@ATL@@QAEGPAP6GJPAUHWND__@@IIJ@Z@Z ; ATL::_ATL_WNDCLASSINFOA::Register
	mov	WORD PTR _atom$[ebp], ax

; 3126 : 
; 3127 : 		dwStyle = T::GetWndStyle(dwStyle);

	mov	ecx, DWORD PTR _dwStyle$[ebp]
	push	ecx
	call	?GetWndStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndStyle
	add	esp, 4
	mov	DWORD PTR _dwStyle$[ebp], eax

; 3128 : 		dwExStyle = T::GetWndExStyle(dwExStyle);

	mov	edx, DWORD PTR _dwExStyle$[ebp]
	push	edx
	call	?GetWndExStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndExStyle
	add	esp, 4
	mov	DWORD PTR _dwExStyle$[ebp], eax

; 3129 : 
; 3130 : 		// set caption
; 3131 : 		if (szWindowName == NULL)

	cmp	DWORD PTR _szWindowName$[ebp], 0
	jne	SHORT $L163237

; 3132 : 			szWindowName = T::GetWndCaption();

	call	?GetWndCaption@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAPBDXZ ; ATL::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndCaption
	mov	DWORD PTR _szWindowName$[ebp], eax
$L163237:

; 3133 : 
; 3134 : 		return CWindowImplBaseT< TBase, TWinTraits >::Create(hWndParent, rect, szWindowName,
; 3135 : 			dwStyle, dwExStyle, MenuOrID, atom, lpCreateParam);

	mov	eax, DWORD PTR _lpCreateParam$[ebp]
	push	eax
	mov	cx, WORD PTR _atom$[ebp]
	push	ecx
	mov	edx, DWORD PTR _MenuOrID$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwExStyle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dwStyle$[ebp]
	push	ecx
	mov	edx, DWORD PTR _szWindowName$[ebp]
	push	edx
	mov	eax, DWORD PTR _rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWndParent$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Create@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@GPAX@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::Create

; 3136 : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?Create@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z ENDP ; ATL::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::Create
_TEXT	ENDS
PUBLIC	?AtlWinModuleRegisterWndClassInfoA@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PAU_ATL_BASE_MODULE70@1@PAU_ATL_WNDCLASSINFOA@1@PAP6GJPAUHWND__@@IIJ@Z@Z ; ATL::AtlWinModuleRegisterWndClassInfoA
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Register@_ATL_WNDCLASSINFOA@ATL@@QAEGPAP6GJPAUHWND__@@IIJ@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
?Register@_ATL_WNDCLASSINFOA@ATL@@QAEGPAP6GJPAUHWND__@@IIJ@Z@Z PROC NEAR ; ATL::_ATL_WNDCLASSINFOA::Register, COMDAT
; _this$ = ecx

; 231  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 232  : 		return AtlWinModuleRegisterWndClassInfoA(&_AtlWinModule, &_AtlBaseModule, this, p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	push	OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A ; ATL::_AtlBaseModule
	push	OFFSET FLAT:?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
	call	?AtlWinModuleRegisterWndClassInfoA@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PAU_ATL_BASE_MODULE70@1@PAU_ATL_WNDCLASSINFOA@1@PAP6GJPAUHWND__@@IIJ@Z@Z ; ATL::AtlWinModuleRegisterWndClassInfoA

; 233  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Register@_ATL_WNDCLASSINFOA@ATL@@QAEGPAP6GJPAUHWND__@@IIJ@Z@Z ENDP ; ATL::_ATL_WNDCLASSINFOA::Register
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?GetWndClassName@CWindow@ATL@@SAPBDXZ
_TEXT	SEGMENT
?GetWndClassName@CWindow@ATL@@SAPBDXZ PROC NEAR		; ATL::CWindow::GetWndClassName, COMDAT

; 686  : 	{

	push	ebp
	mov	ebp, esp

; 687  : 		return NULL;

	xor	eax, eax

; 688  : 	}

	pop	ebp
	ret	0
?GetWndClassName@CWindow@ATL@@SAPBDXZ ENDP		; ATL::CWindow::GetWndClassName
_TEXT	ENDS
PUBLIC	??$AtlModuleRegisterWndClassInfoT@VAtlModuleRegisterWndClassInfoParamA@ATL@@@ATL@@YAGPAU_ATL_BASE_MODULE70@0@PAU_ATL_WIN_MODULE70@0@PAU_ATL_WNDCLASSINFOA@0@PAP6GJPAUHWND__@@IIJ@ZVAtlModuleRegisterWndClassInfoParamA@0@@Z ; ATL::AtlModuleRegisterWndClassInfoT<ATL::AtlModuleRegisterWndClassInfoParamA>
; Function compile flags: /Odt /RTCsu
;	COMDAT ?AtlWinModuleRegisterWndClassInfoA@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PAU_ATL_BASE_MODULE70@1@PAU_ATL_WNDCLASSINFOA@1@PAP6GJPAUHWND__@@IIJ@Z@Z
_TEXT	SEGMENT
_templateParameter$ = -5				; size = 1
_pWinModule$ = 8					; size = 4
_pBaseModule$ = 12					; size = 4
_p$ = 16						; size = 4
_pProc$ = 20						; size = 4
?AtlWinModuleRegisterWndClassInfoA@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PAU_ATL_BASE_MODULE70@1@PAU_ATL_WNDCLASSINFOA@1@PAP6GJPAUHWND__@@IIJ@Z@Z PROC NEAR ; ATL::AtlWinModuleRegisterWndClassInfoA, COMDAT

; 4438 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 4439 : 	AtlModuleRegisterWndClassInfoParamA templateParameter;
; 4440 : 	return AtlModuleRegisterWndClassInfoT<AtlModuleRegisterWndClassInfoParamA>(pBaseModule, pWinModule, p, pProc, templateParameter);

	mov	al, BYTE PTR _templateParameter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pProc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR _pWinModule$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBaseModule$[ebp]
	push	ecx
	call	??$AtlModuleRegisterWndClassInfoT@VAtlModuleRegisterWndClassInfoParamA@ATL@@@ATL@@YAGPAU_ATL_BASE_MODULE70@0@PAU_ATL_WIN_MODULE70@0@PAU_ATL_WNDCLASSINFOA@0@PAP6GJPAUHWND__@@IIJ@ZVAtlModuleRegisterWndClassInfoParamA@0@@Z ; ATL::AtlModuleRegisterWndClassInfoT<ATL::AtlModuleRegisterWndClassInfoParamA>
	add	esp, 20					; 00000014H

; 4441 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L213415
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$L213415:
	DD	1
	DD	$L213414
$L213414:
	DD	-5					; fffffffbH
	DD	1
	DD	$L213413
$L213413:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?AtlWinModuleRegisterWndClassInfoA@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PAU_ATL_BASE_MODULE70@1@PAU_ATL_WNDCLASSINFOA@1@PAP6GJPAUHWND__@@IIJ@Z@Z ENDP ; ATL::AtlWinModuleRegisterWndClassInfoA
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?OnFinalMessage@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEXPAUHWND__@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?OnFinalMessage@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEXPAUHWND__@@@Z PROC NEAR ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::OnFinalMessage, COMDAT
; _this$ = ecx

; 2976 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2977 : 		// override to do something, if needed
; 2978 : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?OnFinalMessage@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEXPAUHWND__@@@Z ENDP ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::OnFinalMessage
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAEPAUIOleInPlaceActiveObject@@PAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??4?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAEPAUIOleInPlaceActiveObject@@PAU2@@Z PROC NEAR ; ATL::CComPtr<IOleInPlaceActiveObject>::operator=, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 292  : 		return static_cast<T*>(AtlComPtrAssign((IUnknown**)&p, lp));

	mov	eax, DWORD PTR _lp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z ; ATL::AtlComPtrAssign

; 293  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAEPAUIOleInPlaceActiveObject@@PAU2@@Z ENDP ; ATL::CComPtr<IOleInPlaceActiveObject>::operator=
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcom.h
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAGKXZ PROC NEAR ; ATL::CComObject<ATL::CAxFrameWindow>::AddRef, COMDAT

; 2506 : 	STDMETHOD_(ULONG, AddRef)() {return InternalAddRef();}

	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalAddRef
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?AddRef@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAGKXZ ENDP ; ATL::CComObject<ATL::CAxFrameWindow>::AddRef
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT
tv76 = -16						; size = 4
$T213425 = -12						; size = 4
$T213424 = -8						; size = 4
_l$ = -4						; size = 4
_this$ = 8						; size = 4
?Release@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAGKXZ PROC NEAR ; ATL::CComObject<ATL::CAxFrameWindow>::Release, COMDAT

; 2508 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 2509 : 		ULONG l = InternalRelease();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalRelease
	mov	DWORD PTR _l$[ebp], eax

; 2510 : 		if (l == 0)

	cmp	DWORD PTR _l$[ebp], 0
	jne	SHORT $L163557

; 2511 : 			delete this;

	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 36					; 00000024H
	mov	DWORD PTR $T213425[ebp], eax
	mov	ecx, DWORD PTR $T213425[ebp]
	mov	DWORD PTR $T213424[ebp], ecx
	cmp	DWORD PTR $T213424[ebp], 0
	je	SHORT $L213426
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T213424[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T213424[ebp]
	call	DWORD PTR [eax+4]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $L163557
$L213426:
	mov	DWORD PTR tv76[ebp], 0
$L163557:

; 2512 : 		return l;

	mov	eax, DWORD PTR _l$[ebp]

; 2513 : 	}

	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAGKXZ ENDP ; ATL::CComObject<ATL::CAxFrameWindow>::Release
_TEXT	ENDS
PUBLIC	?_InternalQueryInterface@CAxFrameWindow@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CAxFrameWindow::_InternalQueryInterface
; Function compile flags: /Odt /RTCsu
;	COMDAT ?QueryInterface@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_ppvObject$ = 16					; size = 4
?QueryInterface@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z PROC NEAR ; ATL::CComObject<ATL::CAxFrameWindow>::QueryInterface, COMDAT

; 2516 : 	{return _InternalQueryInterface(iid, ppvObject);}

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _ppvObject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 36					; 00000024H
	call	?_InternalQueryInterface@CAxFrameWindow@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CAxFrameWindow::_InternalQueryInterface
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ENDP ; ATL::CComObject<ATL::CAxFrameWindow>::QueryInterface
_TEXT	ENDS
PUBLIC	?_GetEntries@CAxFrameWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ ; ATL::CAxFrameWindow::_GetEntries
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
;	COMDAT ?_InternalQueryInterface@CAxFrameWindow@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iid$ = 8						; size = 4
_ppvObject$ = 12					; size = 4
?_InternalQueryInterface@CAxFrameWindow@ATL@@QAEJABU_GUID@@PAPAX@Z PROC NEAR ; ATL::CAxFrameWindow::_InternalQueryInterface, COMDAT
; _this$ = ecx

; 147  : 	BEGIN_COM_MAP(CAxFrameWindow)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ppvObject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	?_GetEntries@CAxFrameWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ ; ATL::CAxFrameWindow::_GetEntries
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z ; ATL::CComObjectRootBase::InternalQueryInterface
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_InternalQueryInterface@CAxFrameWindow@ATL@@QAEJABU_GUID@@PAPAX@Z ENDP ; ATL::CAxFrameWindow::_InternalQueryInterface
_TEXT	ENDS
PUBLIC	?_entries@?1??_GetEntries@CAxFrameWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B ; `ATL::CAxFrameWindow::_GetEntries'::`2'::_entries
PUBLIC	??_C@_0P@MFMDEJMN@CAxFrameWindow?$AA@		; `string'
;	COMDAT ?_entries@?1??_GetEntries@CAxFrameWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B
CONST	SEGMENT
?_entries@?1??_GetEntries@CAxFrameWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B DD 00H ; `ATL::CAxFrameWindow::_GetEntries'::`2'::_entries
	DD	FLAT:??_C@_0P@MFMDEJMN@CAxFrameWindow?$AA@
	DD	00H
	DD	FLAT:__GUID_00000116_0000_0000_c000_000000000046
	DD	024H
	DD	01H
	DD	FLAT:__GUID_00000115_0000_0000_c000_000000000046
	DD	024H
	DD	01H
	DD	FLAT:__GUID_00000114_0000_0000_c000_000000000046
	DD	024H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_C@_0P@MFMDEJMN@CAxFrameWindow?$AA@
CONST	SEGMENT
??_C@_0P@MFMDEJMN@CAxFrameWindow?$AA@ DB 'CAxFrameWindow', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?_GetEntries@CAxFrameWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ
_TEXT	SEGMENT
?_GetEntries@CAxFrameWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ PROC NEAR ; ATL::CAxFrameWindow::_GetEntries, COMDAT

; 147  : 	BEGIN_COM_MAP(CAxFrameWindow)

	push	ebp
	mov	ebp, esp

; 148  : 		COM_INTERFACE_ENTRY(IOleInPlaceFrame)
; 149  : 		COM_INTERFACE_ENTRY(IOleInPlaceUIWindow)
; 150  : 		COM_INTERFACE_ENTRY(IOleWindow)
; 151  : 	END_COM_MAP()

	mov	eax, OFFSET FLAT:?_entries@?1??_GetEntries@CAxFrameWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B+12
	pop	ebp
	ret	0
?_GetEntries@CAxFrameWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ ENDP ; ATL::CAxFrameWindow::_GetEntries
_TEXT	ENDS
PUBLIC	??1?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAE@XZ ; ATL::CComObject<ATL::CAxFrameWindow>::~CComObject<ATL::CAxFrameWindow>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??_G?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAEPAXI@Z PROC NEAR ; ATL::CComObject<ATL::CAxFrameWindow>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAE@XZ ; ATL::CComObject<ATL::CAxFrameWindow>::~CComObject<ATL::CAxFrameWindow>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L163758
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L163758:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAEPAXI@Z ENDP ; ATL::CComObject<ATL::CAxFrameWindow>::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?FinalRelease@CAxFrameWindow@ATL@@QAEXXZ	; ATL::CAxFrameWindow::FinalRelease
PUBLIC	??1CAxFrameWindow@ATL@@UAE@XZ			; ATL::CAxFrameWindow::~CAxFrameWindow
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcom.h
;	COMDAT ??1?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAE@XZ PROC NEAR ; ATL::CComObject<ATL::CAxFrameWindow>::~CComObject<ATL::CAxFrameWindow>, COMDAT
; _this$ = ecx

; 2496 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7?$CComObject@VCAxFrameWindow@ATL@@@ATL@@6B?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@1@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36], OFFSET FLAT:??_7?$CComObject@VCAxFrameWindow@ATL@@@ATL@@6BIOleInPlaceFrame@@@

; 2497 : 		m_dwRef = -(LONG_MAX/2);

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+40], -1073741823		; c0000001H

; 2498 : 		FinalRelease();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FinalRelease@CAxFrameWindow@ATL@@QAEXXZ ; ATL::CAxFrameWindow::FinalRelease

; 2499 : #ifdef _ATL_DEBUG_INTERFACES
; 2500 : 		_AtlDebugInterfacesModule.DeleteNonAddRefThunk(_GetRawUnknown());
; 2501 : #endif
; 2502 : 		_pAtlModule->Unlock();

	mov	eax, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2503 : 	}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CAxFrameWindow@ATL@@UAE@XZ
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAE@XZ ENDP	; ATL::CComObject<ATL::CAxFrameWindow>::~CComObject<ATL::CAxFrameWindow>
_TEXT	ENDS
PUBLIC	?Release@?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IOleInPlaceActiveObject>::Release
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
;	COMDAT ?FinalRelease@CAxFrameWindow@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FinalRelease@CAxFrameWindow@ATL@@QAEXXZ PROC NEAR	; ATL::CAxFrameWindow::FinalRelease, COMDAT
; _this$ = ecx

; 139  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 140  : 		m_spActiveObject.Release();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?Release@?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IOleInPlaceActiveObject>::Release

; 141  : 		if (m_hWnd)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $L147825

; 142  : 			DestroyWindow();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DestroyWindow@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEHXZ ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::DestroyWindow
$L147825:

; 143  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FinalRelease@CAxFrameWindow@ATL@@QAEXXZ ENDP		; ATL::CAxFrameWindow::FinalRelease
_TEXT	ENDS
PUBLIC	??1?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ ; ATL::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::~CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1CAxFrameWindow@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CAxFrameWindow@ATL@@UAE@XZ PROC NEAR			; ATL::CAxFrameWindow::~CAxFrameWindow, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??1?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CAxFrameWindow@ATL@@UAE@XZ ENDP			; ATL::CAxFrameWindow::~CAxFrameWindow
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ PROC NEAR ; ATL::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::~CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ ENDP ; ATL::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::~CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
_TEXT	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_pTemp$ = -8						; size = 4
_this$ = -4						; size = 4
?Release@?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAEXXZ PROC NEAR ; ATL::CComPtrBase<IOleInPlaceActiveObject>::Release, COMDAT
; _this$ = ecx

; 166  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 167  : 		T* pTemp = p;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 168  : 		if (pTemp)

	cmp	DWORD PTR _pTemp$[ebp], 0
	je	SHORT $L163270

; 169  : 		{
; 170  : 			p = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 171  : 			pTemp->Release();

	mov	eax, DWORD PTR _pTemp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pTemp$[ebp]
	push	edx
	call	DWORD PTR [ecx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L163270:

; 172  : 		}
; 173  : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAEXXZ ENDP ; ATL::CComPtrBase<IOleInPlaceActiveObject>::Release
_TEXT	ENDS
PUBLIC	?StartWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::StartWindowProc
PUBLIC	?wc@?1??GetWndClassInfo@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@3@XZ@4U43@A ; `ATL::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo'::`2'::wc
;	COMDAT ?wc@?1??GetWndClassInfo@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@3@XZ@4U43@A
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
_DATA	SEGMENT
?wc@?1??GetWndClassInfo@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@3@XZ@4U43@A DD 030H ; `ATL::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo'::`2'::wc
	DD	0bH
	DD	FLAT:?StartWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	06H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	07f00H
	DD	01H
	DW	00H
	DB	00H
	ORG $+36
	ORG $+1
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
;	COMDAT ?GetWndClassInfo@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@2@XZ
_TEXT	SEGMENT
?GetWndClassInfo@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@2@XZ PROC NEAR ; ATL::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo, COMDAT

; 3112 : 	DECLARE_WND_CLASS(NULL)

	push	ebp
	mov	ebp, esp
	mov	eax, OFFSET FLAT:?wc@?1??GetWndClassInfo@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@3@XZ@4U43@A ; `ATL::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo'::`2'::wc
	pop	ebp
	ret	0
?GetWndClassInfo@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@2@XZ ENDP ; ATL::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?GetWndCaption@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAPBDXZ
_TEXT	SEGMENT
?GetWndCaption@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAPBDXZ PROC NEAR ; ATL::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndCaption, COMDAT

; 3115 : 	{

	push	ebp
	mov	ebp, esp

; 3116 : 		return NULL;

	xor	eax, eax

; 3117 : 	}

	pop	ebp
	ret	0
?GetWndCaption@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAPBDXZ ENDP ; ATL::CWindowImpl<ATL::CAxFrameWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndCaption
_TEXT	ENDS
PUBLIC	?GetWndStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z ; ATL::CWinTraits<1442840576,0>::GetWndStyle
; Function compile flags: /Odt /RTCsu
;	COMDAT ?GetWndStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z
_TEXT	SEGMENT
_dwStyle$ = 8						; size = 4
?GetWndStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z PROC NEAR ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndStyle, COMDAT

; 2933 : 	{

	push	ebp
	mov	ebp, esp

; 2934 : 		return TWinTraits::GetWndStyle(dwStyle);

	mov	eax, DWORD PTR _dwStyle$[ebp]
	push	eax
	call	?GetWndStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z ; ATL::CWinTraits<1442840576,0>::GetWndStyle
	add	esp, 4

; 2935 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?GetWndStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z ENDP ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndStyle
_TEXT	ENDS
PUBLIC	?GetWndExStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z ; ATL::CWinTraits<1442840576,0>::GetWndExStyle
; Function compile flags: /Odt /RTCsu
;	COMDAT ?GetWndExStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z
_TEXT	SEGMENT
_dwExStyle$ = 8						; size = 4
?GetWndExStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z PROC NEAR ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndExStyle, COMDAT

; 2937 : 	{

	push	ebp
	mov	ebp, esp

; 2938 : 		return TWinTraits::GetWndExStyle(dwExStyle);

	mov	eax, DWORD PTR _dwExStyle$[ebp]
	push	eax
	call	?GetWndExStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z ; ATL::CWinTraits<1442840576,0>::GetWndExStyle
	add	esp, 4

; 2939 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?GetWndExStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z ENDP ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndExStyle
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?GetWndStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
_dwStyle$ = 8						; size = 4
?GetWndStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z PROC NEAR ; ATL::CWinTraits<1442840576,0>::GetWndStyle, COMDAT

; 2703 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 2704 : 		return dwStyle == 0 ? t_dwStyle : dwStyle;

	cmp	DWORD PTR _dwStyle$[ebp], 0
	jne	SHORT $L213459
	mov	DWORD PTR tv65[ebp], 1442840576		; 56000000H
	jmp	SHORT $L213460
$L213459:
	mov	eax, DWORD PTR _dwStyle$[ebp]
	mov	DWORD PTR tv65[ebp], eax
$L213460:
	mov	eax, DWORD PTR tv65[ebp]

; 2705 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetWndStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z ENDP ; ATL::CWinTraits<1442840576,0>::GetWndStyle
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?GetWndExStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z
_TEXT	SEGMENT
_dwExStyle$ = 8						; size = 4
?GetWndExStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z PROC NEAR ; ATL::CWinTraits<1442840576,0>::GetWndExStyle, COMDAT

; 2707 : 	{

	push	ebp
	mov	ebp, esp

; 2708 : 		return dwExStyle == 0 ? t_dwExStyle : dwExStyle;

	mov	eax, DWORD PTR _dwExStyle$[ebp]
	neg	eax
	sbb	eax, eax
	and	eax, DWORD PTR _dwExStyle$[ebp]

; 2709 : 	}

	pop	ebp
	ret	0
?GetWndExStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z ENDP ; ATL::CWinTraits<1442840576,0>::GetWndExStyle
_TEXT	ENDS
PUBLIC	?ExtractCreateWndData@CAtlWinModule@ATL@@QAEPAXXZ ; ATL::CAtlWinModule::ExtractCreateWndData
; Function compile flags: /Odt /RTCsu
;	COMDAT ?StartWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
$T213466 = -20						; size = 8
_pOldProc$ = -12					; size = 4
_pProc$ = -8						; size = 4
_pThis$ = -4						; size = 4
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?StartWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z PROC NEAR ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::StartWindowProc, COMDAT

; 2985 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 2986 : 	CWindowImplBaseT< TBase, TWinTraits >* pThis = (CWindowImplBaseT< TBase, TWinTraits >*)_AtlWinModule.ExtractCreateWndData();

	mov	ecx, OFFSET FLAT:?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
	call	?ExtractCreateWndData@CAtlWinModule@ATL@@QAEPAXXZ ; ATL::CAtlWinModule::ExtractCreateWndData
	mov	DWORD PTR _pThis$[ebp], eax

; 2987 : 	ATLASSERT(pThis != NULL);

	cmp	DWORD PTR _pThis$[ebp], 0
	jne	SHORT $L213465
	push	OFFSET FLAT:$SG164311
	push	0
	push	2987					; 00000babH
	push	OFFSET FLAT:$SG164312
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213465
	int	3
$L213465:

; 2988 : 	pThis->m_hWnd = hWnd;

	mov	ecx, DWORD PTR _pThis$[ebp]
	mov	edx, DWORD PTR _hWnd$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 2989 : 	pThis->m_thunk.Init(pThis->GetWindowProc(), pThis);

	mov	eax, DWORD PTR _pThis$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pThis$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _pThis$[ebp]
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _pThis$[ebp]
	add	ecx, 8
	call	?Init@CWndProcThunk@ATL@@QAEXP6GJPAUHWND__@@IIJ@ZPAX@Z ; ATL::CWndProcThunk::Init

; 2990 : 	WNDPROC pProc = pThis->m_thunk.GetWNDPROC();

	mov	ecx, DWORD PTR _pThis$[ebp]
	add	ecx, 8
	call	?GetWNDPROC@CWndProcThunk@ATL@@QAEP6GJPAUHWND__@@IIJ@ZXZ ; ATL::CWndProcThunk::GetWNDPROC
	mov	DWORD PTR _pProc$[ebp], eax

; 2991 : 	WNDPROC pOldProc = (WNDPROC)::SetWindowLongPtr(hWnd, GWLP_WNDPROC, (LONG_PTR)pProc);

	mov	eax, DWORD PTR _pProc$[ebp]
	push	eax
	push	-4					; fffffffcH
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	?SetWindowLongPtrA@@YAJPAUHWND__@@HJ@Z	; SetWindowLongPtrA
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pOldProc$[ebp], eax

; 2992 : #ifdef _DEBUG
; 2993 : 	// check if somebody has subclassed us already since we discard it
; 2994 : 	if(pOldProc != StartWindowProc)

	cmp	DWORD PTR _pOldProc$[ebp], OFFSET FLAT:?StartWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::StartWindowProc
	je	SHORT $L164317

; 2995 : 		ATLTRACE(atlTraceWindowing, 0, _T("Subclassing through a hook discarded.\n"));

	push	OFFSET FLAT:$SG164320
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceWindowing@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceWindowing
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	2995					; 00000bb3H
	push	OFFSET FLAT:$SG164319
	lea	ecx, DWORD PTR $T213466[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 16					; 00000010H
$L164317:

; 2996 : #else
; 2997 : 	(pOldProc);	// avoid unused warning
; 2998 : #endif
; 2999 : 	return pProc(hWnd, uMsg, wParam, lParam);

	mov	esi, esp
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _uMsg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR _pProc$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 3000 : }

	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?StartWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z ENDP ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::StartWindowProc
_TEXT	ENDS
EXTRN	?AtlWinModuleExtractCreateWndData@ATL@@YGPAXPAU_ATL_WIN_MODULE70@1@@Z:NEAR ; ATL::AtlWinModuleExtractCreateWndData
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
;	COMDAT ?ExtractCreateWndData@CAtlWinModule@ATL@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ExtractCreateWndData@CAtlWinModule@ATL@@QAEPAXXZ PROC NEAR ; ATL::CAtlWinModule::ExtractCreateWndData, COMDAT
; _this$ = ecx

; 2597 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2598 : 		return AtlWinModuleExtractCreateWndData(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?AtlWinModuleExtractCreateWndData@ATL@@YGPAXPAU_ATL_WIN_MODULE70@1@@Z ; ATL::AtlWinModuleExtractCreateWndData

; 2599 : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ExtractCreateWndData@CAtlWinModule@ATL@@QAEPAXXZ ENDP	; ATL::CAtlWinModule::ExtractCreateWndData
_TEXT	ENDS
PUBLIC	?AddCreateWndData@CAtlWinModule@ATL@@QAEXPAU_AtlCreateWndData@2@PAX@Z ; ATL::CAtlWinModule::AddCreateWndData
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
;	COMDAT ?Create@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@GPAX@Z
_TEXT	SEGMENT
_hWnd$ = -8						; size = 4
_this$ = -4						; size = 4
_hWndParent$ = 8					; size = 4
_rect$ = 12						; size = 4
_szWindowName$ = 16					; size = 4
_dwStyle$ = 20						; size = 4
_dwExStyle$ = 24					; size = 4
_MenuOrID$ = 28						; size = 4
_atom$ = 32						; size = 2
_lpCreateParam$ = 36					; size = 4
?Create@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@GPAX@Z PROC NEAR ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::Create, COMDAT
; _this$ = ecx

; 3047 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 3048 : 	ATLASSERT(m_hWnd == NULL);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $L213471
	push	OFFSET FLAT:$SG164360
	push	0
	push	3048					; 00000be8H
	push	OFFSET FLAT:$SG164361
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213471
	int	3
$L213471:

; 3049 : 
; 3050 : 	if(atom == 0)

	movzx	edx, WORD PTR _atom$[ebp]
	test	edx, edx
	jne	SHORT $L164362

; 3051 : 		return NULL;

	xor	eax, eax
	jmp	$L164358
$L164362:

; 3052 : 
; 3053 : 	_AtlWinModule.AddCreateWndData(&m_thunk.cd, this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	push	ecx
	mov	ecx, OFFSET FLAT:?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
	call	?AddCreateWndData@CAtlWinModule@ATL@@QAEXPAU_AtlCreateWndData@2@PAX@Z ; ATL::CAtlWinModule::AddCreateWndData

; 3054 : 
; 3055 : 	if(MenuOrID.m_hMenu == NULL && (dwStyle & WS_CHILD))

	cmp	DWORD PTR _MenuOrID$[ebp], 0
	jne	SHORT $L164363
	mov	edx, DWORD PTR _dwStyle$[ebp]
	and	edx, 1073741824				; 40000000H
	je	SHORT $L164363

; 3056 : 		MenuOrID.m_hMenu = (HMENU)(UINT_PTR)this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR _MenuOrID$[ebp], eax
$L164363:

; 3057 : 	if(rect.m_lpRect == NULL)

	cmp	DWORD PTR _rect$[ebp], 0
	jne	SHORT $L164366

; 3058 : 		rect.m_lpRect = &TBase::rcDefault;

	mov	DWORD PTR _rect$[ebp], OFFSET FLAT:?rcDefault@CWindow@ATL@@2UtagRECT@@A ; ATL::CWindow::rcDefault
$L164366:

; 3059 : 
; 3060 : 	HWND hWnd = ::CreateWindowEx(dwExStyle, MAKEINTATOM(atom), szWindowName,
; 3061 : 		dwStyle, rect.m_lpRect->left, rect.m_lpRect->top, rect.m_lpRect->right - rect.m_lpRect->left,
; 3062 : 		rect.m_lpRect->bottom - rect.m_lpRect->top, hWndParent, MenuOrID.m_hMenu,
; 3063 : 		_AtlBaseModule.GetModuleInstance(), lpCreateParam);

	mov	esi, esp
	mov	ecx, DWORD PTR _lpCreateParam$[ebp]
	push	ecx
	mov	ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
	call	?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
	push	eax
	mov	edx, DWORD PTR _MenuOrID$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWndParent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rect$[ebp]
	mov	edx, DWORD PTR _rect$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _rect$[ebp]
	mov	edx, DWORD PTR _rect$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _rect$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _rect$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _dwStyle$[ebp]
	push	edx
	mov	eax, DWORD PTR _szWindowName$[ebp]
	push	eax
	movzx	ecx, WORD PTR _atom$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dwExStyle$[ebp]
	push	edx
	call	DWORD PTR __imp__CreateWindowExA@48
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hWnd$[ebp], eax

; 3064 : 
; 3065 : 	ATLASSERT(m_hWnd == hWnd);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _hWnd$[ebp]
	je	SHORT $L213472
	push	OFFSET FLAT:$SG164372
	push	0
	push	3065					; 00000bf9H
	push	OFFSET FLAT:$SG164373
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213472
	int	3
$L213472:

; 3066 : 
; 3067 : 	return hWnd;

	mov	eax, DWORD PTR _hWnd$[ebp]
$L164358:

; 3068 : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?Create@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@GPAX@Z ENDP ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::Create
_TEXT	ENDS
EXTRN	?AtlWinModuleAddCreateWndData@ATL@@YGXPAU_ATL_WIN_MODULE70@1@PAU_AtlCreateWndData@1@PAX@Z:NEAR ; ATL::AtlWinModuleAddCreateWndData
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
;	COMDAT ?AddCreateWndData@CAtlWinModule@ATL@@QAEXPAU_AtlCreateWndData@2@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
_pObject$ = 12						; size = 4
?AddCreateWndData@CAtlWinModule@ATL@@QAEXPAU_AtlCreateWndData@2@PAX@Z PROC NEAR ; ATL::CAtlWinModule::AddCreateWndData, COMDAT
; _this$ = ecx

; 2592 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2593 : 		AtlWinModuleAddCreateWndData(this, pData, pObject);

	mov	eax, DWORD PTR _pObject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?AtlWinModuleAddCreateWndData@ATL@@YGXPAU_ATL_WIN_MODULE70@1@PAU_AtlCreateWndData@1@PAX@Z ; ATL::AtlWinModuleAddCreateWndData

; 2594 : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?AddCreateWndData@CAtlWinModule@ATL@@QAEXPAU_AtlCreateWndData@2@PAX@Z ENDP ; ATL::CAtlWinModule::AddCreateWndData
_TEXT	ENDS
PUBLIC	??0?$CComObject@VCAxUIWindow@ATL@@@ATL@@QAE@PAX@Z ; ATL::CComObject<ATL::CAxUIWindow>::CComObject<ATL::CAxUIWindow>
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcom.h
xdata$x	SEGMENT
$T213490 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
$T213492 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L213486
$T213491 DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:$T213492
$T213488 DD	019930520H
	DD	02H
	DD	FLAT:$T213490
	DD	01H
	DD	FLAT:$T213491
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?CreateInstance@?$CComObject@VCAxUIWindow@ATL@@@ATL@@SGJPAPAV12@@Z
_TEXT	SEGMENT
tv135 = -48						; size = 4
tv80 = -44						; size = 4
tv137 = -40						; size = 4
$T213482 = -36						; size = 4
$T213481 = -32						; size = 4
$T213478 = -28						; size = 4
_p$ = -24						; size = 4
_hRes$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_pp$ = 8						; size = 4
?CreateInstance@?$CComObject@VCAxUIWindow@ATL@@@ATL@@SGJPAPAV12@@Z PROC NEAR ; ATL::CComObject<ATL::CAxUIWindow>::CreateInstance, COMDAT

; 2528 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateInstance@?$CComObject@VCAxUIWindow@ATL@@@ATL@@SGJPAPAV12@@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-48], eax
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 2529 : 	ATLASSERT(pp != NULL);

	cmp	DWORD PTR _pp$[ebp], 0
	jne	SHORT $L213477
	push	OFFSET FLAT:$SG164441
	push	0
	push	2529					; 000009e1H
	push	OFFSET FLAT:$SG164442
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213477
	int	3
$L213477:

; 2530 : 	if (pp == NULL)

	cmp	DWORD PTR _pp$[ebp], 0
	jne	SHORT $L164443

; 2531 : 		return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	$L164439
$L164443:

; 2532 : 	*pp = NULL;

	mov	ecx, DWORD PTR _pp$[ebp]
	mov	DWORD PTR [ecx], 0

; 2533 : 
; 2534 : 	HRESULT hRes = E_OUTOFMEMORY;

	mov	DWORD PTR _hRes$[ebp], -2147024882	; 8007000eH

; 2535 : 	CComObject<Base>* p = NULL;

	mov	DWORD PTR _p$[ebp], 0

; 2536 : 	ATLTRY(p = new CComObject<Base>())

	mov	DWORD PTR __$EHRec$[ebp+12], 0
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv137[ebp], eax
	mov	edx, DWORD PTR tv137[ebp]
	mov	DWORD PTR $T213478[ebp], edx
	cmp	DWORD PTR $T213478[ebp], 0
	je	SHORT $L213479
	push	0
	mov	ecx, DWORD PTR $T213478[ebp]
	call	??0?$CComObject@VCAxUIWindow@ATL@@@ATL@@QAE@PAX@Z ; ATL::CComObject<ATL::CAxUIWindow>::CComObject<ATL::CAxUIWindow>
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $L213480
$L213479:
	mov	DWORD PTR tv80[ebp], 0
$L213480:
	mov	eax, DWORD PTR tv80[ebp]
	mov	DWORD PTR _p$[ebp], eax
	jmp	SHORT $L213485
$L213486:
	mov	eax, $L213485
	ret	0
$L213485:
	mov	DWORD PTR __$EHRec$[ebp+12], -1

; 2537 : 	if (p != NULL)

	cmp	DWORD PTR _p$[ebp], 0
	je	$L164451

; 2538 : 	{
; 2539 : 		p->SetVoid(NULL);

	push	0
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 40					; 00000028H
	call	?SetVoid@CComObjectRootBase@ATL@@QAEXPAX@Z ; ATL::CComObjectRootBase::SetVoid

; 2540 : 		p->InternalFinalConstructAddRef();

	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 40					; 00000028H
	call	?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::InternalFinalConstructAddRef

; 2541 : 		hRes = p->FinalConstruct();

	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 40					; 00000028H
	call	?FinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ; ATL::CComObjectRootBase::FinalConstruct
	mov	DWORD PTR _hRes$[ebp], eax

; 2542 : 		if (SUCCEEDED(hRes))

	cmp	DWORD PTR _hRes$[ebp], 0
	jl	SHORT $L164453

; 2543 : 			hRes = p->_AtlFinalConstruct();

	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 40					; 00000028H
	call	?_AtlFinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ; ATL::CComObjectRootBase::_AtlFinalConstruct
	mov	DWORD PTR _hRes$[ebp], eax
$L164453:

; 2544 : 		p->InternalFinalConstructRelease();

	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 40					; 00000028H
	call	?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::InternalFinalConstructRelease

; 2545 : 		if (hRes != S_OK)

	cmp	DWORD PTR _hRes$[ebp], 0
	je	SHORT $L164451

; 2546 : 		{
; 2547 : 			delete p;

	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR $T213482[ebp], ecx
	mov	edx, DWORD PTR $T213482[ebp]
	mov	DWORD PTR $T213481[ebp], edx
	cmp	DWORD PTR $T213481[ebp], 0
	je	SHORT $L213483
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T213481[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T213481[ebp]
	call	DWORD PTR [edx+4]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv135[ebp], eax
	jmp	SHORT $L213484
$L213483:
	mov	DWORD PTR tv135[ebp], 0
$L213484:

; 2548 : 			p = NULL;

	mov	DWORD PTR _p$[ebp], 0
$L164451:

; 2549 : 		}
; 2550 : 	}
; 2551 : 	*pp = p;

	mov	eax, DWORD PTR _pp$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx

; 2552 : 	return hRes;

	mov	eax, DWORD PTR _hRes$[ebp]
$L164439:

; 2553 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?CreateInstance@?$CComObject@VCAxUIWindow@ATL@@@ATL@@SGJPAPAV12@@Z:
	mov	eax, OFFSET FLAT:$T213488
	jmp	___CxxFrameHandler
text$x	ENDS
?CreateInstance@?$CComObject@VCAxUIWindow@ATL@@@ATL@@SGJPAPAV12@@Z ENDP ; ATL::CComObject<ATL::CAxUIWindow>::CreateInstance
PUBLIC	?AddRef@?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComObject<ATL::CAxUIWindow>::AddRef
PUBLIC	?Release@?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComObject<ATL::CAxUIWindow>::Release
PUBLIC	?QueryInterface@?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<ATL::CAxUIWindow>::QueryInterface
PUBLIC	??_7?$CComObject@VCAxUIWindow@ATL@@@ATL@@6B?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@1@@ ; ATL::CComObject<ATL::CAxUIWindow>::`vftable'
PUBLIC	??_7?$CComObject@VCAxUIWindow@ATL@@@ATL@@6BIOleInPlaceUIWindow@@@ ; ATL::CComObject<ATL::CAxUIWindow>::`vftable'
PUBLIC	??_G?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAEPAXI@Z ; ATL::CComObject<ATL::CAxUIWindow>::`scalar deleting destructor'
PUBLIC	??0CAxUIWindow@ATL@@QAE@XZ			; ATL::CAxUIWindow::CAxUIWindow
PUBLIC	?ProcessWindowMessage@CAxUIWindow@ATL@@UAEHPAUHWND__@@IIJAAJK@Z ; ATL::CAxUIWindow::ProcessWindowMessage
PUBLIC	?GetWindow@CAxUIWindow@ATL@@UAGJPAPAUHWND__@@@Z	; ATL::CAxUIWindow::GetWindow
PUBLIC	?ContextSensitiveHelp@CAxUIWindow@ATL@@UAGJH@Z	; ATL::CAxUIWindow::ContextSensitiveHelp
PUBLIC	?GetBorder@CAxUIWindow@ATL@@UAGJPAUtagRECT@@@Z	; ATL::CAxUIWindow::GetBorder
PUBLIC	?RequestBorderSpace@CAxUIWindow@ATL@@UAGJPBUtagRECT@@@Z ; ATL::CAxUIWindow::RequestBorderSpace
PUBLIC	?SetBorderSpace@CAxUIWindow@ATL@@UAGJPBUtagRECT@@@Z ; ATL::CAxUIWindow::SetBorderSpace
PUBLIC	?SetActiveObject@CAxUIWindow@ATL@@UAGJPAUIOleInPlaceActiveObject@@PBG@Z ; ATL::CAxUIWindow::SetActiveObject
EXTRN	??_E?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAEPAXI@Z:NEAR ; ATL::CComObject<ATL::CAxUIWindow>::`vector deleting destructor'
;	COMDAT ??_7?$CComObject@VCAxUIWindow@ATL@@@ATL@@6B?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@1@@
CONST	SEGMENT
??_7?$CComObject@VCAxUIWindow@ATL@@@ATL@@6B?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@1@@ DD FLAT:?ProcessWindowMessage@CAxUIWindow@ATL@@UAEHPAUHWND__@@IIJAAJK@Z ; ATL::CComObject<ATL::CAxUIWindow>::`vftable'
	DD	FLAT:??_E?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAEPAXI@Z
	DD	FLAT:?GetWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?OnFinalMessage@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEXPAUHWND__@@@Z
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCAxUIWindow@ATL@@@ATL@@6BIOleInPlaceUIWindow@@@
CONST	SEGMENT
??_7?$CComObject@VCAxUIWindow@ATL@@@ATL@@6BIOleInPlaceUIWindow@@@ DD FLAT:?QueryInterface@?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<ATL::CAxUIWindow>::`vftable'
	DD	FLAT:?AddRef@?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAGKXZ
	DD	FLAT:?Release@?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAGKXZ
	DD	FLAT:?GetWindow@CAxUIWindow@ATL@@UAGJPAPAUHWND__@@@Z
	DD	FLAT:?ContextSensitiveHelp@CAxUIWindow@ATL@@UAGJH@Z
	DD	FLAT:?GetBorder@CAxUIWindow@ATL@@UAGJPAUtagRECT@@@Z
	DD	FLAT:?RequestBorderSpace@CAxUIWindow@ATL@@UAGJPBUtagRECT@@@Z
	DD	FLAT:?SetBorderSpace@CAxUIWindow@ATL@@UAGJPBUtagRECT@@@Z
	DD	FLAT:?SetActiveObject@CAxUIWindow@ATL@@UAGJPAUIOleInPlaceActiveObject@@PBG@Z
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ??0?$CComObject@VCAxUIWindow@ATL@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$CComObject@VCAxUIWindow@ATL@@@ATL@@QAE@PAX@Z PROC NEAR ; ATL::CComObject<ATL::CAxUIWindow>::CComObject<ATL::CAxUIWindow>, COMDAT
; _this$ = ecx

; 2489 : 	CComObject(void* = NULL) throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CAxUIWindow@ATL@@QAE@XZ		; ATL::CAxUIWindow::CAxUIWindow
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7?$CComObject@VCAxUIWindow@ATL@@@ATL@@6B?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@1@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36], OFFSET FLAT:??_7?$CComObject@VCAxUIWindow@ATL@@@ATL@@6BIOleInPlaceUIWindow@@@

; 2490 : 	{
; 2491 : 		_pAtlModule->Lock();

	mov	edx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	call	DWORD PTR [eax+4]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2492 : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CComObject@VCAxUIWindow@ATL@@@ATL@@QAE@PAX@Z ENDP	; ATL::CComObject<ATL::CAxUIWindow>::CComObject<ATL::CAxUIWindow>
_TEXT	ENDS
PUBLIC	??0?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ ; ATL::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
;	COMDAT ??0CAxUIWindow@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CAxUIWindow@ATL@@QAE@XZ PROC NEAR			; ATL::CAxUIWindow::CAxUIWindow, COMDAT
; _this$ = ecx

; 235  : 	CAxUIWindow()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0IOleInPlaceUIWindow@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ ; ATL::CComPtr<IOleInPlaceActiveObject>::CComPtr<IOleInPlaceActiveObject>

; 236  : 	{
; 237  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CAxUIWindow@ATL@@QAE@XZ ENDP				; ATL::CAxUIWindow::CAxUIWindow
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?ProcessWindowMessage@CAxUIWindow@ATL@@UAEHPAUHWND__@@IIJAAJK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 4
?ProcessWindowMessage@CAxUIWindow@ATL@@UAEHPAUHWND__@@IIJAAJK@Z PROC NEAR ; ATL::CAxUIWindow::ProcessWindowMessage, COMDAT
; _this$ = ecx

; 253  : 	DECLARE_EMPTY_MSG_MAP()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?ProcessWindowMessage@CAxUIWindow@ATL@@UAEHPAUHWND__@@IIJAAJK@Z ENDP ; ATL::CAxUIWindow::ProcessWindowMessage
_TEXT	ENDS
PUBLIC	?Create@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z ; ATL::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::Create
PUBLIC	??_C@_0BA@FJBCDDKK@AXWIN?5UI?5Window?$AA@	; `string'
;	COMDAT ??_C@_0BA@FJBCDDKK@AXWIN?5UI?5Window?$AA@
CONST	SEGMENT
??_C@_0BA@FJBCDDKK@AXWIN?5UI?5Window?$AA@ DB 'AXWIN UI Window', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?GetWindow@CAxUIWindow@ATL@@UAGJPAPAUHWND__@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_phwnd$ = 12						; size = 4
?GetWindow@CAxUIWindow@ATL@@UAGJPAPAUHWND__@@@Z PROC NEAR ; ATL::CAxUIWindow::GetWindow, COMDAT

; 257  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 258  : 		if (m_hWnd == NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax-32], 0
	jne	SHORT $L148067

; 259  : 			Create(NULL, NULL, _T("AXWIN UI Window"), WS_OVERLAPPEDWINDOW, 0, (UINT)NULL);

	push	0
	push	ecx
	mov	ecx, esp
	push	0
	call	??0_U_MENUorID@ATL@@QAE@I@Z		; ATL::_U_MENUorID::_U_MENUorID
	push	0
	push	13565952				; 00cf0000H
	push	OFFSET FLAT:??_C@_0BA@FJBCDDKK@AXWIN?5UI?5Window?$AA@
	push	ecx
	mov	ecx, esp
	push	0
	call	??0_U_RECT@ATL@@QAE@PAUtagRECT@@@Z	; ATL::_U_RECT::_U_RECT
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 36					; 00000024H
	call	?Create@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z ; ATL::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::Create
$L148067:

; 260  : 		*phwnd = m_hWnd;

	mov	ecx, DWORD PTR _phwnd$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx-32]
	mov	DWORD PTR [ecx], eax

; 261  : 		return S_OK;

	xor	eax, eax

; 262  : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetWindow@CAxUIWindow@ATL@@UAGJPAPAUHWND__@@@Z ENDP	; ATL::CAxUIWindow::GetWindow
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?ContextSensitiveHelp@CAxUIWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?ContextSensitiveHelp@CAxUIWindow@ATL@@UAGJH@Z PROC NEAR ; ATL::CAxUIWindow::ContextSensitiveHelp, COMDAT

; 265  : 	{

	push	ebp
	mov	ebp, esp

; 266  : 		return S_OK;

	xor	eax, eax

; 267  : 	}

	pop	ebp
	ret	8
?ContextSensitiveHelp@CAxUIWindow@ATL@@UAGJH@Z ENDP	; ATL::CAxUIWindow::ContextSensitiveHelp
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?GetBorder@CAxUIWindow@ATL@@UAGJPAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?GetBorder@CAxUIWindow@ATL@@UAGJPAUtagRECT@@@Z PROC NEAR ; ATL::CAxUIWindow::GetBorder, COMDAT

; 271  : 	{

	push	ebp
	mov	ebp, esp

; 272  : 		return S_OK;

	xor	eax, eax

; 273  : 	}

	pop	ebp
	ret	8
?GetBorder@CAxUIWindow@ATL@@UAGJPAUtagRECT@@@Z ENDP	; ATL::CAxUIWindow::GetBorder
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?RequestBorderSpace@CAxUIWindow@ATL@@UAGJPBUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?RequestBorderSpace@CAxUIWindow@ATL@@UAGJPBUtagRECT@@@Z PROC NEAR ; ATL::CAxUIWindow::RequestBorderSpace, COMDAT

; 276  : 	{

	push	ebp
	mov	ebp, esp

; 277  : 		return INPLACE_E_NOTOOLSPACE;

	mov	eax, -2147221087			; 800401a1H

; 278  : 	}

	pop	ebp
	ret	8
?RequestBorderSpace@CAxUIWindow@ATL@@UAGJPBUtagRECT@@@Z ENDP ; ATL::CAxUIWindow::RequestBorderSpace
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?SetBorderSpace@CAxUIWindow@ATL@@UAGJPBUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?SetBorderSpace@CAxUIWindow@ATL@@UAGJPBUtagRECT@@@Z PROC NEAR ; ATL::CAxUIWindow::SetBorderSpace, COMDAT

; 281  : 	{

	push	ebp
	mov	ebp, esp

; 282  : 		return S_OK;

	xor	eax, eax

; 283  : 	}

	pop	ebp
	ret	8
?SetBorderSpace@CAxUIWindow@ATL@@UAGJPBUtagRECT@@@Z ENDP ; ATL::CAxUIWindow::SetBorderSpace
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?SetActiveObject@CAxUIWindow@ATL@@UAGJPAUIOleInPlaceActiveObject@@PBG@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pActiveObject$ = 12					; size = 4
___formal$ = 16						; size = 4
?SetActiveObject@CAxUIWindow@ATL@@UAGJPAUIOleInPlaceActiveObject@@PBG@Z PROC NEAR ; ATL::CAxUIWindow::SetActiveObject, COMDAT

; 286  : 	{

	push	ebp
	mov	ebp, esp

; 287  : 		m_spActiveObject = pActiveObject;

	mov	eax, DWORD PTR _pActiveObject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??4?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAEPAUIOleInPlaceActiveObject@@PAU2@@Z ; ATL::CComPtr<IOleInPlaceActiveObject>::operator=

; 288  : 		return S_OK;

	xor	eax, eax

; 289  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?SetActiveObject@CAxUIWindow@ATL@@UAGJPAUIOleInPlaceActiveObject@@PBG@Z ENDP ; ATL::CAxUIWindow::SetActiveObject
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ PROC NEAR ; ATL::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ ENDP ; ATL::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >
_TEXT	ENDS
PUBLIC	?GetWndClassInfo@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@2@XZ ; ATL::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo
PUBLIC	?GetWndCaption@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAPBDXZ ; ATL::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndCaption
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
;	COMDAT ?Create@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z
_TEXT	SEGMENT
_atom$ = -8						; size = 2
_this$ = -4						; size = 4
_hWndParent$ = 8					; size = 4
_rect$ = 12						; size = 4
_szWindowName$ = 16					; size = 4
_dwStyle$ = 20						; size = 4
_dwExStyle$ = 24					; size = 4
_MenuOrID$ = 28						; size = 4
_lpCreateParam$ = 32					; size = 4
?Create@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z PROC NEAR ; ATL::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::Create, COMDAT
; _this$ = ecx

; 3122 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 3123 : 		if (T::GetWndClassInfo().m_lpszOrigName == NULL)

	call	?GetWndClassInfo@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@2@XZ ; ATL::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo
	cmp	DWORD PTR [eax+48], 0
	jne	SHORT $L163275

; 3124 : 			T::GetWndClassInfo().m_lpszOrigName = GetWndClassName();

	call	?GetWndClassName@CWindow@ATL@@SAPBDXZ	; ATL::CWindow::GetWndClassName
	mov	esi, eax
	call	?GetWndClassInfo@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@2@XZ ; ATL::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo
	mov	DWORD PTR [eax+48], esi
$L163275:

; 3125 : 		ATOM atom = T::GetWndClassInfo().Register(&m_pfnSuperWindowProc);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	call	?GetWndClassInfo@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@2@XZ ; ATL::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo
	mov	ecx, eax
	call	?Register@_ATL_WNDCLASSINFOA@ATL@@QAEGPAP6GJPAUHWND__@@IIJ@Z@Z ; ATL::_ATL_WNDCLASSINFOA::Register
	mov	WORD PTR _atom$[ebp], ax

; 3126 : 
; 3127 : 		dwStyle = T::GetWndStyle(dwStyle);

	mov	ecx, DWORD PTR _dwStyle$[ebp]
	push	ecx
	call	?GetWndStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndStyle
	add	esp, 4
	mov	DWORD PTR _dwStyle$[ebp], eax

; 3128 : 		dwExStyle = T::GetWndExStyle(dwExStyle);

	mov	edx, DWORD PTR _dwExStyle$[ebp]
	push	edx
	call	?GetWndExStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndExStyle
	add	esp, 4
	mov	DWORD PTR _dwExStyle$[ebp], eax

; 3129 : 
; 3130 : 		// set caption
; 3131 : 		if (szWindowName == NULL)

	cmp	DWORD PTR _szWindowName$[ebp], 0
	jne	SHORT $L163277

; 3132 : 			szWindowName = T::GetWndCaption();

	call	?GetWndCaption@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAPBDXZ ; ATL::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndCaption
	mov	DWORD PTR _szWindowName$[ebp], eax
$L163277:

; 3133 : 
; 3134 : 		return CWindowImplBaseT< TBase, TWinTraits >::Create(hWndParent, rect, szWindowName,
; 3135 : 			dwStyle, dwExStyle, MenuOrID, atom, lpCreateParam);

	mov	eax, DWORD PTR _lpCreateParam$[ebp]
	push	eax
	mov	cx, WORD PTR _atom$[ebp]
	push	ecx
	mov	edx, DWORD PTR _MenuOrID$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwExStyle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dwStyle$[ebp]
	push	ecx
	mov	edx, DWORD PTR _szWindowName$[ebp]
	push	edx
	mov	eax, DWORD PTR _rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWndParent$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Create@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@GPAX@Z ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::Create

; 3136 : 	}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?Create@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z ENDP ; ATL::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::Create
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcom.h
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAGKXZ PROC NEAR ; ATL::CComObject<ATL::CAxUIWindow>::AddRef, COMDAT

; 2506 : 	STDMETHOD_(ULONG, AddRef)() {return InternalAddRef();}

	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalAddRef
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?AddRef@?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAGKXZ ENDP ; ATL::CComObject<ATL::CAxUIWindow>::AddRef
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT
tv76 = -16						; size = 4
$T213527 = -12						; size = 4
$T213526 = -8						; size = 4
_l$ = -4						; size = 4
_this$ = 8						; size = 4
?Release@?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAGKXZ PROC NEAR ; ATL::CComObject<ATL::CAxUIWindow>::Release, COMDAT

; 2508 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 2509 : 		ULONG l = InternalRelease();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ ; ATL::CComObjectRootEx<ATL::CComSingleThreadModel>::InternalRelease
	mov	DWORD PTR _l$[ebp], eax

; 2510 : 		if (l == 0)

	cmp	DWORD PTR _l$[ebp], 0
	jne	SHORT $L163569

; 2511 : 			delete this;

	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 36					; 00000024H
	mov	DWORD PTR $T213527[ebp], eax
	mov	ecx, DWORD PTR $T213527[ebp]
	mov	DWORD PTR $T213526[ebp], ecx
	cmp	DWORD PTR $T213526[ebp], 0
	je	SHORT $L213528
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T213526[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T213526[ebp]
	call	DWORD PTR [eax+4]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $L163569
$L213528:
	mov	DWORD PTR tv76[ebp], 0
$L163569:

; 2512 : 		return l;

	mov	eax, DWORD PTR _l$[ebp]

; 2513 : 	}

	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAGKXZ ENDP ; ATL::CComObject<ATL::CAxUIWindow>::Release
_TEXT	ENDS
PUBLIC	?_InternalQueryInterface@CAxUIWindow@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CAxUIWindow::_InternalQueryInterface
; Function compile flags: /Odt /RTCsu
;	COMDAT ?QueryInterface@?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_ppvObject$ = 16					; size = 4
?QueryInterface@?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z PROC NEAR ; ATL::CComObject<ATL::CAxUIWindow>::QueryInterface, COMDAT

; 2516 : 	{return _InternalQueryInterface(iid, ppvObject);}

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _ppvObject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 36					; 00000024H
	call	?_InternalQueryInterface@CAxUIWindow@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CAxUIWindow::_InternalQueryInterface
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ENDP ; ATL::CComObject<ATL::CAxUIWindow>::QueryInterface
_TEXT	ENDS
PUBLIC	?_GetEntries@CAxUIWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ ; ATL::CAxUIWindow::_GetEntries
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
;	COMDAT ?_InternalQueryInterface@CAxUIWindow@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iid$ = 8						; size = 4
_ppvObject$ = 12					; size = 4
?_InternalQueryInterface@CAxUIWindow@ATL@@QAEJABU_GUID@@PAPAX@Z PROC NEAR ; ATL::CAxUIWindow::_InternalQueryInterface, COMDAT
; _this$ = ecx

; 248  : 	BEGIN_COM_MAP(CAxUIWindow)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ppvObject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	?_GetEntries@CAxUIWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ ; ATL::CAxUIWindow::_GetEntries
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z ; ATL::CComObjectRootBase::InternalQueryInterface
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_InternalQueryInterface@CAxUIWindow@ATL@@QAEJABU_GUID@@PAPAX@Z ENDP ; ATL::CAxUIWindow::_InternalQueryInterface
_TEXT	ENDS
PUBLIC	?_entries@?1??_GetEntries@CAxUIWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B ; `ATL::CAxUIWindow::_GetEntries'::`2'::_entries
PUBLIC	??_C@_0M@EHKCMBND@CAxUIWindow?$AA@		; `string'
;	COMDAT ?_entries@?1??_GetEntries@CAxUIWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B
CONST	SEGMENT
?_entries@?1??_GetEntries@CAxUIWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B DD 00H ; `ATL::CAxUIWindow::_GetEntries'::`2'::_entries
	DD	FLAT:??_C@_0M@EHKCMBND@CAxUIWindow?$AA@
	DD	00H
	DD	FLAT:__GUID_00000115_0000_0000_c000_000000000046
	DD	024H
	DD	01H
	DD	FLAT:__GUID_00000114_0000_0000_c000_000000000046
	DD	024H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_C@_0M@EHKCMBND@CAxUIWindow?$AA@
CONST	SEGMENT
??_C@_0M@EHKCMBND@CAxUIWindow?$AA@ DB 'CAxUIWindow', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?_GetEntries@CAxUIWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ
_TEXT	SEGMENT
?_GetEntries@CAxUIWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ PROC NEAR ; ATL::CAxUIWindow::_GetEntries, COMDAT

; 248  : 	BEGIN_COM_MAP(CAxUIWindow)

	push	ebp
	mov	ebp, esp

; 249  : 		COM_INTERFACE_ENTRY(IOleInPlaceUIWindow)
; 250  : 		COM_INTERFACE_ENTRY(IOleWindow)
; 251  : 	END_COM_MAP()

	mov	eax, OFFSET FLAT:?_entries@?1??_GetEntries@CAxUIWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B+12
	pop	ebp
	ret	0
?_GetEntries@CAxUIWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ ENDP ; ATL::CAxUIWindow::_GetEntries
_TEXT	ENDS
PUBLIC	??1?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAE@XZ	; ATL::CComObject<ATL::CAxUIWindow>::~CComObject<ATL::CAxUIWindow>
; Function compile flags: /Odt /RTCsu
;	COMDAT ??_G?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAEPAXI@Z PROC NEAR ; ATL::CComObject<ATL::CAxUIWindow>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAE@XZ ; ATL::CComObject<ATL::CAxUIWindow>::~CComObject<ATL::CAxUIWindow>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $L163761
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L163761:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAEPAXI@Z ENDP	; ATL::CComObject<ATL::CAxUIWindow>::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?FinalRelease@CAxUIWindow@ATL@@QAEXXZ		; ATL::CAxUIWindow::FinalRelease
PUBLIC	??1CAxUIWindow@ATL@@UAE@XZ			; ATL::CAxUIWindow::~CAxUIWindow
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcom.h
;	COMDAT ??1?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAE@XZ PROC NEAR ; ATL::CComObject<ATL::CAxUIWindow>::~CComObject<ATL::CAxUIWindow>, COMDAT
; _this$ = ecx

; 2496 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7?$CComObject@VCAxUIWindow@ATL@@@ATL@@6B?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@1@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36], OFFSET FLAT:??_7?$CComObject@VCAxUIWindow@ATL@@@ATL@@6BIOleInPlaceUIWindow@@@

; 2497 : 		m_dwRef = -(LONG_MAX/2);

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+40], -1073741823		; c0000001H

; 2498 : 		FinalRelease();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FinalRelease@CAxUIWindow@ATL@@QAEXXZ	; ATL::CAxUIWindow::FinalRelease

; 2499 : #ifdef _ATL_DEBUG_INTERFACES
; 2500 : 		_AtlDebugInterfacesModule.DeleteNonAddRefThunk(_GetRawUnknown());
; 2501 : #endif
; 2502 : 		_pAtlModule->Unlock();

	mov	eax, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A ; ATL::_pAtlModule
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2503 : 	}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CAxUIWindow@ATL@@UAE@XZ
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAE@XZ ENDP	; ATL::CComObject<ATL::CAxUIWindow>::~CComObject<ATL::CAxUIWindow>
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlhost.h
_TEXT	ENDS
;	COMDAT ?FinalRelease@CAxUIWindow@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FinalRelease@CAxUIWindow@ATL@@QAEXXZ PROC NEAR		; ATL::CAxUIWindow::FinalRelease, COMDAT
; _this$ = ecx

; 240  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 241  : 		m_spActiveObject.Release();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?Release@?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAEXXZ ; ATL::CComPtrBase<IOleInPlaceActiveObject>::Release

; 242  : 		if (m_hWnd)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $L148031

; 243  : 			DestroyWindow();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DestroyWindow@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEHXZ ; ATL::CWindowImplBaseT<ATL::CWindow,ATL::CWinTraits<1442840576,0> >::DestroyWindow
$L148031:

; 244  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FinalRelease@CAxUIWindow@ATL@@QAEXXZ ENDP		; ATL::CAxUIWindow::FinalRelease
_TEXT	ENDS
PUBLIC	??1?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ ; ATL::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::~CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1CAxUIWindow@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CAxUIWindow@ATL@@UAE@XZ PROC NEAR			; ATL::CAxUIWindow::~CAxUIWindow, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??1?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CAxUIWindow@ATL@@UAE@XZ ENDP				; ATL::CAxUIWindow::~CAxUIWindow
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ PROC NEAR ; ATL::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::~CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ ENDP ; ATL::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::~CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >
_TEXT	ENDS
PUBLIC	?wc@?1??GetWndClassInfo@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@3@XZ@4U43@A ; `ATL::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo'::`2'::wc
;	COMDAT ?wc@?1??GetWndClassInfo@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@3@XZ@4U43@A
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
_DATA	SEGMENT
?wc@?1??GetWndClassInfo@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@3@XZ@4U43@A DD 030H ; `ATL::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo'::`2'::wc
	DD	0bH
	DD	FLAT:?StartWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	06H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	07f00H
	DD	01H
	DW	00H
	DB	00H
	ORG $+36
	ORG $+1
; Function compile flags: /Odt /RTCsu
_DATA	ENDS
;	COMDAT ?GetWndClassInfo@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@2@XZ
_TEXT	SEGMENT
?GetWndClassInfo@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@2@XZ PROC NEAR ; ATL::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo, COMDAT

; 3112 : 	DECLARE_WND_CLASS(NULL)

	push	ebp
	mov	ebp, esp
	mov	eax, OFFSET FLAT:?wc@?1??GetWndClassInfo@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@3@XZ@4U43@A ; `ATL::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo'::`2'::wc
	pop	ebp
	ret	0
?GetWndClassInfo@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@2@XZ ENDP ; ATL::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndClassInfo
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?GetWndCaption@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAPBDXZ
_TEXT	SEGMENT
?GetWndCaption@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAPBDXZ PROC NEAR ; ATL::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndCaption, COMDAT

; 3115 : 	{

	push	ebp
	mov	ebp, esp

; 3116 : 		return NULL;

	xor	eax, eax

; 3117 : 	}

	pop	ebp
	ret	0
?GetWndCaption@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAPBDXZ ENDP ; ATL::CWindowImpl<ATL::CAxUIWindow,ATL::CWindow,ATL::CWinTraits<1442840576,0> >::GetWndCaption
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
_TEXT	ENDS
;	COMDAT ??$QueryInterface@UIDispatch@@@?$CComPtrBase@UIOleObject@@@ATL@@QBEJPAPAUIDispatch@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pp$ = 8						; size = 4
??$QueryInterface@UIDispatch@@@?$CComPtrBase@UIOleObject@@@ATL@@QBEJPAPAUIDispatch@@@Z PROC NEAR ; ATL::CComPtrBase<IOleObject>::QueryInterface<IDispatch>, COMDAT
; _this$ = ecx

; 236  : 	HRESULT QueryInterface(Q** pp) const throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 237  : 	{
; 238  : 		ATLASSERT(pp != NULL);

	cmp	DWORD PTR _pp$[ebp], 0
	jne	SHORT $L213555
	push	OFFSET FLAT:??_C@_07MEKCDCMA@pp?5?$CB?$DN?50?$AA@
	push	0
	push	238					; 000000eeH
	push	OFFSET FLAT:??_C@_0FC@KBOEFHBO@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213555
	int	3
$L213555:

; 239  : 		return p->QueryInterface(__uuidof(Q), (void**)pp);

	mov	esi, esp
	mov	ecx, DWORD PTR _pp$[ebp]
	push	ecx
	push	OFFSET FLAT:__GUID_00020400_0000_0000_c000_000000000046
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	push	edx
	call	DWORD PTR [eax]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 240  : 	}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$QueryInterface@UIDispatch@@@?$CComPtrBase@UIOleObject@@@ATL@@QBEJPAPAUIDispatch@@@Z ENDP ; ATL::CComPtrBase<IOleObject>::QueryInterface<IDispatch>
_TEXT	ENDS
PUBLIC	?destroy@?$_CopyInterface@UIUnknown@@@ATL@@SAXPAPAUIUnknown@@@Z ; ATL::_CopyInterface<IUnknown>::destroy
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcom.h
xdata$x	SEGMENT
$T213563 DD	0ffffffffH
	DD	FLAT:$L213559
$T213561 DD	019930520H
	DD	01H
	DD	FLAT:$T213563
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT
$T213558 = -24						; size = 4
_p$164471 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAE@XZ PROC NEAR ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::~CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >, COMDAT
; _this$ = ecx

; 4667 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 4668 : 	if (m_dwFlags & BitOwn)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	and	ecx, 2
	je	SHORT $L164469

; 4669 : 	{
; 4670 : 		for (T* p = m_begin; p != m_end; p++)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _p$164471[ebp], eax
	jmp	SHORT $L164472
$L164473:
	mov	ecx, DWORD PTR _p$164471[ebp]
	add	ecx, 4
	mov	DWORD PTR _p$164471[ebp], ecx
$L164472:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$164471[ebp]
	cmp	eax, DWORD PTR [edx+12]
	je	SHORT $L164474

; 4671 : 			Copy::destroy(p);

	mov	ecx, DWORD PTR _p$164471[ebp]
	push	ecx
	call	?destroy@?$_CopyInterface@UIUnknown@@@ATL@@SAXPAPAUIUnknown@@@Z ; ATL::_CopyInterface<IUnknown>::destroy
	add	esp, 4
	jmp	SHORT $L164473
$L164474:

; 4672 : 		delete [] m_begin;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T213558[ebp], eax
	mov	ecx, DWORD PTR $T213558[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L164469:

; 4673 : 	}
; 4674 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L213559:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
__ehhandler$??1?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAE@XZ:
	mov	eax, OFFSET FLAT:$T213561
	jmp	___CxxFrameHandler
text$x	ENDS
??1?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAE@XZ ENDP ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::~CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >
; Function compile flags: /Odt /RTCsu
;	COMDAT ?destroy@?$_CopyInterface@UIUnknown@@@ATL@@SAXPAPAUIUnknown@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?destroy@?$_CopyInterface@UIUnknown@@@ATL@@SAXPAPAUIUnknown@@@Z PROC NEAR ; ATL::_CopyInterface<IUnknown>::destroy, COMDAT

; 4618 : 	static void destroy(T** p) {if (*p) (*p)->Release();}

	push	ebp
	mov	ebp, esp
	push	esi
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L207842
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+8]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L207842:
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?destroy@?$_CopyInterface@UIUnknown@@@ATL@@SAXPAPAUIUnknown@@@Z ENDP ; ATL::_CopyInterface<IUnknown>::destroy
_TEXT	ENDS
PUBLIC	?copy@?$_CopyInterface@UIUnknown@@@ATL@@SAJPAPAUIUnknown@@0@Z ; ATL::_CopyInterface<IUnknown>::copy
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Next@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJKPAPAUIUnknown@@PAK@Z
_TEXT	SEGMENT
tv93 = -32						; size = 4
tv84 = -28						; size = 4
tv81 = -24						; size = 4
_hr$164521 = -20					; size = 4
_pelt$ = -16						; size = 4
_nMin$ = -12						; size = 4
_hRes$ = -8						; size = 4
_nRem$ = -4						; size = 4
_this$ = 8						; size = 4
_celt$ = 12						; size = 4
_rgelt$ = 16						; size = 4
_pceltFetched$ = 20					; size = 4
?Next@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJKPAPAUIUnknown@@PAK@Z PROC NEAR ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::Next, COMDAT

; 4679 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 4680 : 	if (pceltFetched != NULL)

	cmp	DWORD PTR _pceltFetched$[ebp], 0
	je	SHORT $L164500

; 4681 : 		*pceltFetched = 0;

	mov	eax, DWORD PTR _pceltFetched$[ebp]
	mov	DWORD PTR [eax], 0
$L164500:

; 4682 : 	if (celt == 0)

	cmp	DWORD PTR _celt$[ebp], 0
	jne	SHORT $L164501

; 4683 : 		return E_INVALIDARG;

	mov	eax, -2147024809			; 80070057H
	jmp	$L164499
$L164501:

; 4684 : 	if (rgelt == NULL || (celt != 1 && pceltFetched == NULL))

	cmp	DWORD PTR _rgelt$[ebp], 0
	je	SHORT $L164504
	cmp	DWORD PTR _celt$[ebp], 1
	je	SHORT $L164503
	cmp	DWORD PTR _pceltFetched$[ebp], 0
	jne	SHORT $L164503
$L164504:

; 4685 : 		return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	$L164499
$L164503:

; 4686 : 	if (m_begin == NULL || m_end == NULL || m_iter == NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	je	SHORT $L164507
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+12], 0
	je	SHORT $L164507
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $L164506
$L164507:

; 4687 : 		return E_FAIL;

	mov	eax, -2147467259			; 80004005H
	jmp	$L164499
$L164506:

; 4688 : 	ULONG nRem = (ULONG)(m_end - m_iter);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+16]
	sar	eax, 2
	mov	DWORD PTR _nRem$[ebp], eax

; 4689 : 	HRESULT hRes = S_OK;

	mov	DWORD PTR _hRes$[ebp], 0

; 4690 : 	if (nRem < celt)

	mov	ecx, DWORD PTR _nRem$[ebp]
	cmp	ecx, DWORD PTR _celt$[ebp]
	jae	SHORT $L164513

; 4691 : 		hRes = S_FALSE;

	mov	DWORD PTR _hRes$[ebp], 1
$L164513:

; 4692 : 	ULONG nMin = celt < nRem ? celt : nRem ;

	mov	edx, DWORD PTR _celt$[ebp]
	cmp	edx, DWORD PTR _nRem$[ebp]
	jae	SHORT $L213570
	mov	eax, DWORD PTR _celt$[ebp]
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $L213571
$L213570:
	mov	ecx, DWORD PTR _nRem$[ebp]
	mov	DWORD PTR tv81[ebp], ecx
$L213571:
	mov	edx, DWORD PTR tv81[ebp]
	mov	DWORD PTR _nMin$[ebp], edx

; 4693 : 	if (pceltFetched != NULL)

	cmp	DWORD PTR _pceltFetched$[ebp], 0
	je	SHORT $L164516

; 4694 : 		*pceltFetched = nMin;

	mov	eax, DWORD PTR _pceltFetched$[ebp]
	mov	ecx, DWORD PTR _nMin$[ebp]
	mov	DWORD PTR [eax], ecx
$L164516:

; 4695 : 	T* pelt = rgelt;

	mov	edx, DWORD PTR _rgelt$[ebp]
	mov	DWORD PTR _pelt$[ebp], edx
$L164519:

; 4696 : 	while(nMin--)

	mov	eax, DWORD PTR _nMin$[ebp]
	mov	DWORD PTR tv84[ebp], eax
	mov	ecx, DWORD PTR _nMin$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _nMin$[ebp], ecx
	cmp	DWORD PTR tv84[ebp], 0
	je	SHORT $L164520

; 4697 : 	{
; 4698 : 		HRESULT hr = Copy::copy(pelt, m_iter);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _pelt$[ebp]
	push	ecx
	call	?copy@?$_CopyInterface@UIUnknown@@@ATL@@SAJPAPAUIUnknown@@0@Z ; ATL::_CopyInterface<IUnknown>::copy
	add	esp, 8
	mov	DWORD PTR _hr$164521[ebp], eax

; 4699 : 		if (FAILED(hr))

	cmp	DWORD PTR _hr$164521[ebp], 0
	jge	SHORT $L164523
$L164525:

; 4700 : 		{
; 4701 : 			while (rgelt < pelt)

	mov	edx, DWORD PTR _rgelt$[ebp]
	cmp	edx, DWORD PTR _pelt$[ebp]
	jae	SHORT $L164526

; 4702 : 				Copy::destroy(rgelt++);

	mov	eax, DWORD PTR _rgelt$[ebp]
	mov	DWORD PTR tv93[ebp], eax
	mov	ecx, DWORD PTR _rgelt$[ebp]
	add	ecx, 4
	mov	DWORD PTR _rgelt$[ebp], ecx
	mov	edx, DWORD PTR tv93[ebp]
	push	edx
	call	?destroy@?$_CopyInterface@UIUnknown@@@ATL@@SAXPAPAUIUnknown@@@Z ; ATL::_CopyInterface<IUnknown>::destroy
	add	esp, 4
	jmp	SHORT $L164525
$L164526:

; 4703 : 			if (pceltFetched != NULL)

	cmp	DWORD PTR _pceltFetched$[ebp], 0
	je	SHORT $L164527

; 4704 : 				*pceltFetched = 0;

	mov	eax, DWORD PTR _pceltFetched$[ebp]
	mov	DWORD PTR [eax], 0
$L164527:

; 4705 : 			return hr;

	mov	eax, DWORD PTR _hr$164521[ebp]
	jmp	SHORT $L164499
$L164523:

; 4706 : 		}
; 4707 : 		pelt++;

	mov	ecx, DWORD PTR _pelt$[ebp]
	add	ecx, 4
	mov	DWORD PTR _pelt$[ebp], ecx

; 4708 : 		m_iter++;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax

; 4709 : 	}

	jmp	$L164519
$L164520:

; 4710 : 	return hRes;

	mov	eax, DWORD PTR _hRes$[ebp]
$L164499:

; 4711 : }

	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Next@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJKPAPAUIUnknown@@PAK@Z ENDP ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::Next
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?copy@?$_CopyInterface@UIUnknown@@@ATL@@SAJPAPAUIUnknown@@0@Z
_TEXT	SEGMENT
_p1$ = 8						; size = 4
_p2$ = 12						; size = 4
?copy@?$_CopyInterface@UIUnknown@@@ATL@@SAJPAPAUIUnknown@@0@Z PROC NEAR ; ATL::_CopyInterface<IUnknown>::copy, COMDAT

; 4611 : 	{

	push	ebp
	mov	ebp, esp
	push	esi

; 4612 : 		*p1 = *p2;

	mov	eax, DWORD PTR _p1$[ebp]
	mov	ecx, DWORD PTR _p2$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 4613 : 		if (*p1)

	mov	eax, DWORD PTR _p1$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L207839

; 4614 : 			(*p1)->AddRef();

	mov	ecx, DWORD PTR _p1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _p1$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	call	DWORD PTR [edx+4]
	cmp	esi, esp
	call	__RTC_CheckEsp
$L207839:

; 4615 : 		return S_OK;

	xor	eax, eax

; 4616 : 	}

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?copy@?$_CopyInterface@UIUnknown@@@ATL@@SAJPAPAUIUnknown@@0@Z ENDP ; ATL::_CopyInterface<IUnknown>::copy
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Skip@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJK@Z
_TEXT	SEGMENT
tv70 = -12						; size = 4
_nSkip$ = -8						; size = 4
_nRem$ = -4						; size = 4
_this$ = 8						; size = 4
_celt$ = 12						; size = 4
?Skip@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJK@Z PROC NEAR ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::Skip, COMDAT

; 4715 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 4716 : 	if (celt == 0)

	cmp	DWORD PTR _celt$[ebp], 0
	jne	SHORT $L164536

; 4717 : 		return E_INVALIDARG;

	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $L164535
$L164536:

; 4718 : 
; 4719 : 	ULONG nRem = ULONG(m_end - m_iter);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+16]
	sar	edx, 2
	mov	DWORD PTR _nRem$[ebp], edx

; 4720 : 	ULONG nSkip = (celt > nRem) ? nRem : celt;

	mov	eax, DWORD PTR _celt$[ebp]
	cmp	eax, DWORD PTR _nRem$[ebp]
	jbe	SHORT $L213576
	mov	ecx, DWORD PTR _nRem$[ebp]
	mov	DWORD PTR tv70[ebp], ecx
	jmp	SHORT $L213577
$L213576:
	mov	edx, DWORD PTR _celt$[ebp]
	mov	DWORD PTR tv70[ebp], edx
$L213577:
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR _nSkip$[ebp], eax

; 4721 : 	m_iter += nSkip;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _nSkip$[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], ecx

; 4722 : 	return (celt == nSkip) ? S_OK : S_FALSE;

	mov	eax, DWORD PTR _celt$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR _nSkip$[ebp]
	setne	cl
	mov	eax, ecx
$L164535:

; 4723 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Skip@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJK@Z ENDP ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::Skip
_TEXT	ENDS
PUBLIC	?CreateInstance@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SGJPAPAV12@@Z ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::CreateInstance
;	COMDAT xdata$x
xdata$x	SEGMENT
$T213598 DD	0ffffffffH
	DD	FLAT:$L213589
$T213593 DD	019930520H
	DD	01H
	DD	FLAT:$T213598
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?Clone@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJPAPAUIEnumUnknown@@@Z
_TEXT	SEGMENT
tv134 = -64						; size = 4
tv80 = -60						; size = 4
tv139 = -56						; size = 4
tv142 = -52						; size = 4
$T213588 = -48						; size = 4
$T213585 = -44						; size = 4
$T213584 = -40						; size = 4
$T213581 = -36						; size = 4
$T213580 = -32						; size = 4
_p$164558 = -24						; size = 4
_hRes$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_ppEnum$ = 12						; size = 4
?Clone@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJPAPAUIEnumUnknown@@@Z PROC NEAR ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::Clone, COMDAT

; 4727 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Clone@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJPAPAUIEnumUnknown@@@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 52					; 00000034H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR $T213588[ebp], 0

; 4728 : 	typedef CComObject<CComEnum<Base, piid, T, Copy> > _class;
; 4729 : 	HRESULT hRes = E_POINTER;

	mov	DWORD PTR _hRes$[ebp], -2147467261	; 80004003H

; 4730 : 	if (ppEnum != NULL)

	cmp	DWORD PTR _ppEnum$[ebp], 0
	je	$L164557

; 4731 : 	{
; 4732 : 		*ppEnum = NULL;

	mov	eax, DWORD PTR _ppEnum$[ebp]
	mov	DWORD PTR [eax], 0

; 4733 : 		_class* p;
; 4734 : 		hRes = _class::CreateInstance(&p);

	lea	ecx, DWORD PTR _p$164558[ebp]
	push	ecx
	call	?CreateInstance@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SGJPAPAV12@@Z ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::CreateInstance
	mov	DWORD PTR _hRes$[ebp], eax

; 4735 : 		if (SUCCEEDED(hRes))

	cmp	DWORD PTR _hRes$[ebp], 0
	jl	$L164557

; 4736 : 		{
; 4737 : 			// If this object has ownership of the data then we need to keep it around
; 4738 : 			hRes = p->Init(m_begin, m_end, (m_dwFlags & BitOwn) ? this : m_spUnk);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	and	eax, 2
	je	SHORT $L213582
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T213581[ebp]
	call	??0?$CComPtr@UIUnknown@@@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComPtr<IUnknown>::CComPtr<IUnknown>
	mov	DWORD PTR tv142[ebp], eax
	mov	edx, DWORD PTR tv142[ebp]
	mov	DWORD PTR tv139[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T213588[ebp]
	or	eax, 1
	mov	DWORD PTR $T213588[ebp], eax
	mov	ecx, DWORD PTR tv139[ebp]
	mov	DWORD PTR tv80[ebp], ecx
	jmp	SHORT $L213583
$L213582:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR tv80[ebp], edx
$L213583:
	mov	eax, DWORD PTR tv80[ebp]
	mov	DWORD PTR $T213580[ebp], eax
	push	0
	mov	ecx, DWORD PTR $T213580[ebp]
	call	??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ ; ATL::CComPtrBase<IUnknown>::operator IUnknown *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _p$164558[ebp]
	call	?Init@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@QAEJPAPAUIUnknown@@0PAU3@W4CComEnumFlags@2@@Z ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::Init
	mov	DWORD PTR _hRes$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T213588[ebp]
	and	edx, 1
	je	SHORT $L213591
	and	DWORD PTR $T213588[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T213581[ebp]
	call	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
$L213591:

; 4739 : 			if (SUCCEEDED(hRes))

	cmp	DWORD PTR _hRes$[ebp], 0
	jl	SHORT $L164564

; 4740 : 			{
; 4741 : 				p->m_iter = m_iter;

	mov	eax, DWORD PTR _p$164558[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx

; 4742 : 				hRes = p->_InternalQueryInterface(*piid, (void**)ppEnum);

	mov	eax, DWORD PTR _ppEnum$[ebp]
	push	eax
	push	OFFSET FLAT:__GUID_00000100_0000_0000_c000_000000000046
	mov	ecx, DWORD PTR _p$164558[ebp]
	call	?_InternalQueryInterface@?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@QAEJABU_GUID@@PAPAX@Z ; ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel>::_InternalQueryInterface
	mov	DWORD PTR _hRes$[ebp], eax
$L164564:

; 4743 : 			}
; 4744 : 			if (FAILED(hRes))

	cmp	DWORD PTR _hRes$[ebp], 0
	jge	SHORT $L164557

; 4745 : 				delete p;

	mov	ecx, DWORD PTR _p$164558[ebp]
	mov	DWORD PTR $T213585[ebp], ecx
	mov	edx, DWORD PTR $T213585[ebp]
	mov	DWORD PTR $T213584[ebp], edx
	cmp	DWORD PTR $T213584[ebp], 0
	je	SHORT $L213586
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T213584[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T213584[ebp]
	call	DWORD PTR [edx+28]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $L164557
$L213586:
	mov	DWORD PTR tv134[ebp], 0
$L164557:

; 4746 : 		}
; 4747 : 	}
; 4748 : 	return hRes;

	mov	eax, DWORD PTR _hRes$[ebp]

; 4749 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L213597
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$L213597:
	DD	1
	DD	$L213596
$L213596:
	DD	-24					; ffffffe8H
	DD	4
	DD	$L213594
$L213594:
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L213589:
	mov	eax, DWORD PTR $T213588[ebp]
	and	eax, 1
	je	$L213590
	and	DWORD PTR $T213588[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T213581[ebp]
	jmp	??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
$L213590:
	ret	0
__ehhandler$?Clone@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJPAPAUIEnumUnknown@@@Z:
	mov	eax, OFFSET FLAT:$T213593
	jmp	___CxxFrameHandler
text$x	ENDS
?Clone@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJPAPAUIEnumUnknown@@@Z ENDP ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::Clone
;	COMDAT xdata$x
xdata$x	SEGMENT
$T213616 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
$T213618 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L213612
$T213617 DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:$T213618
$T213614 DD	019930520H
	DD	02H
	DD	FLAT:$T213616
	DD	01H
	DD	FLAT:$T213617
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?CreateInstance@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SGJPAPAV12@@Z
_TEXT	SEGMENT
tv135 = -48						; size = 4
tv80 = -44						; size = 4
tv137 = -40						; size = 4
$T213608 = -36						; size = 4
$T213607 = -32						; size = 4
$T213604 = -28						; size = 4
_p$ = -24						; size = 4
_hRes$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_pp$ = 8						; size = 4
?CreateInstance@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SGJPAPAV12@@Z PROC NEAR ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::CreateInstance, COMDAT

; 2528 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateInstance@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SGJPAPAV12@@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-48], eax
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 2529 : 	ATLASSERT(pp != NULL);

	cmp	DWORD PTR _pp$[ebp], 0
	jne	SHORT $L213603
	push	OFFSET FLAT:$SG209086
	push	0
	push	2529					; 000009e1H
	push	OFFSET FLAT:$SG209087
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213603
	int	3
$L213603:

; 2530 : 	if (pp == NULL)

	cmp	DWORD PTR _pp$[ebp], 0
	jne	SHORT $L209088

; 2531 : 		return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	jmp	$L209084
$L209088:

; 2532 : 	*pp = NULL;

	mov	ecx, DWORD PTR _pp$[ebp]
	mov	DWORD PTR [ecx], 0

; 2533 : 
; 2534 : 	HRESULT hRes = E_OUTOFMEMORY;

	mov	DWORD PTR _hRes$[ebp], -2147024882	; 8007000eH

; 2535 : 	CComObject<Base>* p = NULL;

	mov	DWORD PTR _p$[ebp], 0

; 2536 : 	ATLTRY(p = new CComObject<Base>())

	mov	DWORD PTR __$EHRec$[ebp+12], 0
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv137[ebp], eax
	mov	edx, DWORD PTR tv137[ebp]
	mov	DWORD PTR $T213604[ebp], edx
	cmp	DWORD PTR $T213604[ebp], 0
	je	SHORT $L213605
	push	0
	mov	ecx, DWORD PTR $T213604[ebp]
	call	??0?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@QAE@PAX@Z ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $L213606
$L213605:
	mov	DWORD PTR tv80[ebp], 0
$L213606:
	mov	eax, DWORD PTR tv80[ebp]
	mov	DWORD PTR _p$[ebp], eax
	jmp	SHORT $L213611
$L213612:
	mov	eax, $L213611
	ret	0
$L213611:
	mov	DWORD PTR __$EHRec$[ebp+12], -1

; 2537 : 	if (p != NULL)

	cmp	DWORD PTR _p$[ebp], 0
	je	$L209096

; 2538 : 	{
; 2539 : 		p->SetVoid(NULL);

	push	0
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 24					; 00000018H
	call	?SetVoid@CComObjectRootBase@ATL@@QAEXPAX@Z ; ATL::CComObjectRootBase::SetVoid

; 2540 : 		p->InternalFinalConstructAddRef();

	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 24					; 00000018H
	call	?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::InternalFinalConstructAddRef

; 2541 : 		hRes = p->FinalConstruct();

	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 24					; 00000018H
	call	?FinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ; ATL::CComObjectRootBase::FinalConstruct
	mov	DWORD PTR _hRes$[ebp], eax

; 2542 : 		if (SUCCEEDED(hRes))

	cmp	DWORD PTR _hRes$[ebp], 0
	jl	SHORT $L209098

; 2543 : 			hRes = p->_AtlFinalConstruct();

	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 24					; 00000018H
	call	?_AtlFinalConstruct@CComObjectRootBase@ATL@@QAEJXZ ; ATL::CComObjectRootBase::_AtlFinalConstruct
	mov	DWORD PTR _hRes$[ebp], eax
$L209098:

; 2544 : 		p->InternalFinalConstructRelease();

	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 24					; 00000018H
	call	?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QAEXXZ ; ATL::CComObjectRootBase::InternalFinalConstructRelease

; 2545 : 		if (hRes != S_OK)

	cmp	DWORD PTR _hRes$[ebp], 0
	je	SHORT $L209096

; 2546 : 		{
; 2547 : 			delete p;

	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR $T213608[ebp], ecx
	mov	edx, DWORD PTR $T213608[ebp]
	mov	DWORD PTR $T213607[ebp], edx
	cmp	DWORD PTR $T213607[ebp], 0
	je	SHORT $L213609
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T213607[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T213607[ebp]
	call	DWORD PTR [edx+28]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv135[ebp], eax
	jmp	SHORT $L213610
$L213609:
	mov	DWORD PTR tv135[ebp], 0
$L213610:

; 2548 : 			p = NULL;

	mov	DWORD PTR _p$[ebp], 0
$L209096:

; 2549 : 		}
; 2550 : 	}
; 2551 : 	*pp = p;

	mov	eax, DWORD PTR _pp$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx

; 2552 : 	return hRes;

	mov	eax, DWORD PTR _hRes$[ebp]
$L209084:

; 2553 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?CreateInstance@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SGJPAPAV12@@Z:
	mov	eax, OFFSET FLAT:$T213614
	jmp	___CxxFrameHandler
text$x	ENDS
?CreateInstance@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComSingleThreadModel@6@@ATL@@@ATL@@SGJPAPAV12@@Z ENDP ; ATL::CComObject<ATL::CComEnum<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComSingleThreadModel> >::CreateInstance
PUBLIC	?init@?$_CopyInterface@UIUnknown@@@ATL@@SAXPAPAUIUnknown@@@Z ; ATL::_CopyInterface<IUnknown>::init
;	COMDAT xdata$x
xdata$x	SEGMENT
$T213631 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
$T213633 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L213627
$T213632 DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:$T213633
$T213629 DD	019930520H
	DD	02H
	DD	FLAT:$T213631
	DD	01H
	DD	FLAT:$T213632
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?Init@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@QAEJPAPAUIUnknown@@0PAU3@W4CComEnumFlags@2@@Z
_TEXT	SEGMENT
tv130 = -48						; size = 4
tv156 = -44						; size = 4
$T213625 = -40						; size = 4
$T213624 = -36						; size = 4
_p$164597 = -32						; size = 4
_hr$164594 = -28					; size = 4
_i$164590 = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_begin$ = 8						; size = 4
_end$ = 12						; size = 4
_pUnk$ = 16						; size = 4
_flags$ = 20						; size = 4
?Init@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@QAEJPAPAUIUnknown@@0PAU3@W4CComEnumFlags@2@@Z PROC NEAR ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::Init, COMDAT
; _this$ = ecx

; 4754 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Init@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@QAEJPAPAUIUnknown@@0PAU3@W4CComEnumFlags@2@@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-48], eax
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 4755 : 	if (flags == AtlFlagCopy)

	cmp	DWORD PTR _flags$[ebp], 3
	jne	$L164581

; 4756 : 	{
; 4757 : 		ATLASSERT(m_begin == NULL); //Init called twice?

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $L213623
	push	OFFSET FLAT:$SG164583
	push	0
	push	4757					; 00001295H
	push	OFFSET FLAT:$SG164584
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213623
	int	3
$L213623:

; 4758 : 		ATLTRY(m_begin = new T[end-begin])

	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	edx, DWORD PTR _end$[ebp]
	sub	edx, DWORD PTR _begin$[ebp]
	sar	edx, 2
	shl	edx, 2
	push	edx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR tv156[ebp], eax
	mov	eax, DWORD PTR tv156[ebp]
	mov	DWORD PTR $T213624[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T213624[ebp]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $L213626
$L213627:
	mov	eax, $L213626
	ret	0
$L213626:
	mov	DWORD PTR __$EHRec$[ebp+12], -1

; 4759 : 		m_iter = m_begin;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+16], edx

; 4760 : 		if (m_begin == NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $L164588

; 4761 : 			return E_OUTOFMEMORY;

	mov	eax, -2147024882			; 8007000eH
	jmp	$L164580
$L164588:

; 4762 : 		for (T* i=begin; i != end; i++)

	mov	ecx, DWORD PTR _begin$[ebp]
	mov	DWORD PTR _i$164590[ebp], ecx
	jmp	SHORT $L164591
$L164592:
	mov	edx, DWORD PTR _i$164590[ebp]
	add	edx, 4
	mov	DWORD PTR _i$164590[ebp], edx
$L164591:
	mov	eax, DWORD PTR _i$164590[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	je	$L164593

; 4763 : 		{
; 4764 : 			Copy::init(m_iter);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	?init@?$_CopyInterface@UIUnknown@@@ATL@@SAXPAPAUIUnknown@@@Z ; ATL::_CopyInterface<IUnknown>::init
	add	esp, 4

; 4765 : 			HRESULT hr = Copy::copy(m_iter, i);

	mov	eax, DWORD PTR _i$164590[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	?copy@?$_CopyInterface@UIUnknown@@@ATL@@SAJPAPAUIUnknown@@0@Z ; ATL::_CopyInterface<IUnknown>::copy
	add	esp, 8
	mov	DWORD PTR _hr$164594[ebp], eax

; 4766 : 			if (FAILED(hr))

	cmp	DWORD PTR _hr$164594[ebp], 0
	jge	SHORT $L164596

; 4767 : 			{
; 4768 : 				T* p = m_begin;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _p$164597[ebp], ecx
$L164599:

; 4769 : 				while (p < m_iter)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$164597[ebp]
	cmp	eax, DWORD PTR [edx+16]
	jae	SHORT $L164600

; 4770 : 					Copy::destroy(p++);

	mov	ecx, DWORD PTR _p$164597[ebp]
	mov	DWORD PTR tv130[ebp], ecx
	mov	edx, DWORD PTR _p$164597[ebp]
	add	edx, 4
	mov	DWORD PTR _p$164597[ebp], edx
	mov	eax, DWORD PTR tv130[ebp]
	push	eax
	call	?destroy@?$_CopyInterface@UIUnknown@@@ATL@@SAXPAPAUIUnknown@@@Z ; ATL::_CopyInterface<IUnknown>::destroy
	add	esp, 4
	jmp	SHORT $L164599
$L164600:

; 4771 : 				delete [] m_begin;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T213625[ebp], edx
	mov	eax, DWORD PTR $T213625[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 4772 : 				m_begin = m_end = m_iter = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 4773 : 				return hr;

	mov	eax, DWORD PTR _hr$164594[ebp]
	jmp	SHORT $L164580
$L164596:

; 4774 : 			}
; 4775 : 			m_iter++;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], edx

; 4776 : 		}

	jmp	$L164592
$L164593:

; 4777 : 		m_end = m_begin + (end-begin);

	mov	ecx, DWORD PTR _end$[ebp]
	sub	ecx, DWORD PTR _begin$[ebp]
	sar	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx*4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx

; 4778 : 	}
; 4779 : 	else

	jmp	SHORT $L164602
$L164581:

; 4780 : 	{
; 4781 : 		m_begin = begin;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _begin$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 4782 : 		m_end = end;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _end$[ebp]
	mov	DWORD PTR [edx+12], eax
$L164602:

; 4783 : 	}
; 4784 : 	m_spUnk = pUnk;

	mov	ecx, DWORD PTR _pUnk$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??4?$CComPtr@UIUnknown@@@ATL@@QAEPAUIUnknown@@PAU2@@Z ; ATL::CComPtr<IUnknown>::operator=

; 4785 : 	m_iter = m_begin;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+16], ecx

; 4786 : 	m_dwFlags = flags;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _flags$[ebp]
	mov	DWORD PTR [edx+20], eax

; 4787 : 	return S_OK;

	xor	eax, eax
$L164580:

; 4788 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?Init@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@QAEJPAPAUIUnknown@@0PAU3@W4CComEnumFlags@2@@Z:
	mov	eax, OFFSET FLAT:$T213629
	jmp	___CxxFrameHandler
text$x	ENDS
?Init@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@QAEJPAPAUIUnknown@@0PAU3@W4CComEnumFlags@2@@Z ENDP ; ATL::CComEnumImpl<IEnumUnknown,&_GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown> >::Init
; Function compile flags: /Odt /RTCsu
;	COMDAT ?init@?$_CopyInterface@UIUnknown@@@ATL@@SAXPAPAUIUnknown@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?init@?$_CopyInterface@UIUnknown@@@ATL@@SAXPAPAUIUnknown@@@Z PROC NEAR ; ATL::_CopyInterface<IUnknown>::init, COMDAT

; 4617 : 	static void init(T** ) {}

	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
?init@?$_CopyInterface@UIUnknown@@@ATL@@SAXPAPAUIUnknown@@@Z ENDP ; ATL::_CopyInterface<IUnknown>::init
_TEXT	ENDS
PUBLIC	?GetClassInfoExA@AtlModuleRegisterWndClassInfoParamA@ATL@@SAHPAUHINSTANCE__@@PBDPAUtagWNDCLASSEXA@@@Z ; ATL::AtlModuleRegisterWndClassInfoParamA::GetClassInfoExA
PUBLIC	?FormatWindowClassName@AtlModuleRegisterWndClassInfoParamA@ATL@@SAXPADPAX@Z ; ATL::AtlModuleRegisterWndClassInfoParamA::FormatWindowClassName
PUBLIC	?LoadCursorA@AtlModuleRegisterWndClassInfoParamA@ATL@@SAPAUHICON__@@PAUHINSTANCE__@@PBD@Z ; ATL::AtlModuleRegisterWndClassInfoParamA::LoadCursorA
PUBLIC	?RegisterClassExA@AtlModuleRegisterWndClassInfoParamA@ATL@@SAGPAU_ATL_WIN_MODULE70@2@PBUtagWNDCLASSEXA@@@Z ; ATL::AtlModuleRegisterWndClassInfoParamA::RegisterClassExA
PUBLIC	??_C@_0DN@BIGELNIF@ERROR?5?3?5Invalid?5Arguments?5to?5Atl@ ; `string'
PUBLIC	??_C@_0EL@KHCGDDHE@ERROR?5?3?5Unable?5to?5lock?5critical?5@ ; `string'
PUBLIC	??_C@_0L@KAMJMGHJ@pProc?5?$CB?$DN?50?$AA@	; `string'
PUBLIC	??_C@_0DK@EAELIHNL@ERROR?5?3?5Could?5not?5obtain?5Window?5@ ; `string'
PUBLIC	??_C@_0BB@BIGOECOI@p?9?$DOpWndProc?5?$CB?$DN?50?$AA@ ; `string'
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlwin.h
xdata$x	SEGMENT
$T213661 DD	0ffffffffH
	DD	FLAT:$L213652
$T213654 DD	019930520H
	DD	01H
	DD	FLAT:$T213661
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DN@BIGELNIF@ERROR?5?3?5Invalid?5Arguments?5to?5Atl@
CONST	SEGMENT
??_C@_0DN@BIGELNIF@ERROR?5?3?5Invalid?5Arguments?5to?5Atl@ DB 'ERROR : In'
	DB	'valid Arguments to AtlModuleRegisterWndClassInfoT', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@KHCGDDHE@ERROR?5?3?5Unable?5to?5lock?5critical?5@
CONST	SEGMENT
??_C@_0EL@KHCGDDHE@ERROR?5?3?5Unable?5to?5lock?5critical?5@ DB 'ERROR : U'
	DB	'nable to lock critical section in AtlModuleRegisterWndClassIn'
	DB	'foT', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KAMJMGHJ@pProc?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0L@KAMJMGHJ@pProc?5?$CB?$DN?50?$AA@ DB 'pProc != 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@EAELIHNL@ERROR?5?3?5Could?5not?5obtain?5Window?5@
CONST	SEGMENT
??_C@_0DK@EAELIHNL@ERROR?5?3?5Could?5not?5obtain?5Window?5@ DB 'ERROR : C'
	DB	'ould not obtain Window Class information for %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BIGOECOI@p?9?$DOpWndProc?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BB@BIGOECOI@p?9?$DOpWndProc?5?$CB?$DN?50?$AA@ DB 'p->pWndProc != 0'
	DB	00H						; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ??$AtlModuleRegisterWndClassInfoT@VAtlModuleRegisterWndClassInfoParamA@ATL@@@ATL@@YAGPAU_ATL_BASE_MODULE70@0@PAU_ATL_WIN_MODULE70@0@PAU_ATL_WNDCLASSINFOA@0@PAP6GJPAUHWND__@@IIJ@ZVAtlModuleRegisterWndClassInfoParamA@0@@Z
_TEXT	SEGMENT
tv202 = -184						; size = 4
$T213647 = -178						; size = 2
$T213646 = -176						; size = 8
$T213644 = -166						; size = 2
$T213642 = -164						; size = 8
$T213640 = -156						; size = 8
_wcTemp$164752 = -144					; size = 48
_wc$164743 = -88					; size = 48
_proc$164742 = -36					; size = 4
_lpsz$164741 = -32					; size = 4
_lock$164730 = -24					; size = 8
__$EHRec$ = -12						; size = 12
_pBaseModule$ = 8					; size = 4
_pWinModule$ = 12					; size = 4
_p$ = 16						; size = 4
_pProc$ = 20						; size = 4
___formal$ = 24						; size = 1
??$AtlModuleRegisterWndClassInfoT@VAtlModuleRegisterWndClassInfoParamA@ATL@@@ATL@@YAGPAU_ATL_BASE_MODULE70@0@PAU_ATL_WIN_MODULE70@0@PAU_ATL_WNDCLASSINFOA@0@PAP6GJPAUHWND__@@IIJ@ZVAtlModuleRegisterWndClassInfoParamA@0@@Z PROC NEAR ; ATL::AtlModuleRegisterWndClassInfoT<ATL::AtlModuleRegisterWndClassInfoParamA>, COMDAT

; 4363 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$AtlModuleRegisterWndClassInfoT@VAtlModuleRegisterWndClassInfoParamA@ATL@@@ATL@@YAGPAU_ATL_BASE_MODULE70@0@PAU_ATL_WIN_MODULE70@0@PAU_ATL_WNDCLASSINFOA@0@PAP6GJPAUHWND__@@IIJ@ZVAtlModuleRegisterWndClassInfoParamA@0@@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 172				; 000000acH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-184]
	mov	ecx, 43					; 0000002bH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 4364 : 	if (pBaseModule == NULL || pWinModule == NULL || p == NULL || pProc == NULL)

	cmp	DWORD PTR _pBaseModule$[ebp], 0
	je	SHORT $L164725
	cmp	DWORD PTR _pWinModule$[ebp], 0
	je	SHORT $L164725
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $L164725
	cmp	DWORD PTR _pProc$[ebp], 0
	jne	SHORT $L164724
$L164725:

; 4365 : 	{
; 4366 : 		ATLTRACE(atlTraceWindowing, 0, _T("ERROR : Invalid Arguments to AtlModuleRegisterWndClassInfoT\n"));

	push	OFFSET FLAT:??_C@_0DN@BIGELNIF@ERROR?5?3?5Invalid?5Arguments?5to?5Atl@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceWindowing@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceWindowing
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	4366					; 0000110eH
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T213640[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 16					; 00000010H

; 4367 : 		ATLASSERT(0);

	xor	eax, eax
	jne	SHORT $L213641
	push	OFFSET FLAT:??_C@_01GBGANLPD@0?$AA@
	push	0
	push	4367					; 0000110fH
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213641
	int	3
$L213641:

; 4368 : 		return 0;

	xor	ax, ax
	jmp	$L164723
$L164724:

; 4369 : 	}
; 4370 : 		
; 4371 : 	if (p->m_atom == 0)

	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, WORD PTR [edx+64]
	test	eax, eax
	jne	$L164729

; 4372 : 	{
; 4373 : 		ATL::CComCritSecLock<ATL::CComCriticalSection> lock(pWinModule->m_csWindowCreate, false);

	push	0
	mov	ecx, DWORD PTR _pWinModule$[ebp]
	add	ecx, 4
	push	ecx
	lea	ecx, DWORD PTR _lock$164730[ebp]
	call	??0?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@AAVCComCriticalSection@1@_N@Z ; ATL::CComCritSecLock<ATL::CComCriticalSection>::CComCritSecLock<ATL::CComCriticalSection>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 4374 : 		if (FAILED(lock.Lock()))

	lea	ecx, DWORD PTR _lock$164730[ebp]
	call	?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::Lock
	test	eax, eax
	jge	SHORT $L164732

; 4375 : 		{
; 4376 : 			ATLTRACE(atlTraceWindowing, 0, _T("ERROR : Unable to lock critical section in AtlModuleRegisterWndClassInfoT\n"));

	push	OFFSET FLAT:??_C@_0EL@KHCGDDHE@ERROR?5?3?5Unable?5to?5lock?5critical?5@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceWindowing@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceWindowing
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	4376					; 00001118H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T213642[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 16					; 00000010H

; 4377 : 			ATLASSERT(0);

	xor	edx, edx
	jne	SHORT $L213643
	push	OFFSET FLAT:??_C@_01GBGANLPD@0?$AA@
	push	0
	push	4377					; 00001119H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213643
	int	3
$L213643:

; 4378 : 			return 0;

	mov	WORD PTR $T213644[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$164730[ebp]
	call	??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
	mov	ax, WORD PTR $T213644[ebp]
	jmp	$L164723
$L164732:

; 4379 : 		}
; 4380 : 		if(p->m_atom == 0)

	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, WORD PTR [ecx+64]
	test	edx, edx
	jne	$L164737

; 4381 : 		{
; 4382 : 			if (p->m_lpszOrigName != NULL)

	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+48], 0
	je	$L164738

; 4383 : 			{
; 4384 : 				ATLASSERT(pProc != NULL);

	cmp	DWORD PTR _pProc$[ebp], 0
	jne	SHORT $L213645
	push	OFFSET FLAT:??_C@_0L@KAMJMGHJ@pProc?5?$CB?$DN?50?$AA@
	push	0
	push	4384					; 00001120H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213645
	int	3
$L213645:

; 4385 : 				T::PCXSTR lpsz = p->m_wc.lpszClassName;

	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR _lpsz$164741[ebp], eax

; 4386 : 				WNDPROC proc = p->m_wc.lpfnWndProc;

	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _proc$164742[ebp], edx

; 4387 : 
; 4388 : 				T::WNDCLASSEX wc;
; 4389 : 				wc.cbSize = sizeof(T::WNDCLASSEX);

	mov	DWORD PTR _wc$164743[ebp], 48		; 00000030H

; 4390 : 				// Try global class
; 4391 : 				if(!T::GetClassInfoEx(NULL, p->m_lpszOrigName, &wc))

	lea	eax, DWORD PTR _wc$164743[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	push	0
	call	?GetClassInfoExA@AtlModuleRegisterWndClassInfoParamA@ATL@@SAHPAUHINSTANCE__@@PBDPAUtagWNDCLASSEXA@@@Z ; ATL::AtlModuleRegisterWndClassInfoParamA::GetClassInfoExA
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $L164745

; 4392 : 				{
; 4393 : 					// try process local
; 4394 : 					if(!T::GetClassInfoEx(pBaseModule->m_hInst, p->m_lpszOrigName, &wc))

	lea	eax, DWORD PTR _wc$164743[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	eax, DWORD PTR _pBaseModule$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?GetClassInfoExA@AtlModuleRegisterWndClassInfoParamA@ATL@@SAHPAUHINSTANCE__@@PBDPAUtagWNDCLASSEXA@@@Z ; ATL::AtlModuleRegisterWndClassInfoParamA::GetClassInfoExA
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $L164745

; 4395 : 					{
; 4396 : 						ATLTRACE(atlTraceWindowing, 0, "ERROR : Could not obtain Window Class information for %s\n", p->m_lpszOrigName);

	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	push	OFFSET FLAT:??_C@_0DK@EAELIHNL@ERROR?5?3?5Could?5not?5obtain?5Window?5@
	push	0
	mov	ecx, OFFSET FLAT:?atlTraceWindowing@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceWindowing
	call	??BCTraceCategory@ATL@@QBEKXZ		; ATL::CTraceCategory::operator unsigned long
	push	eax
	push	4396					; 0000112cH
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	lea	ecx, DWORD PTR $T213646[ebp]
	call	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
	push	eax
	call	??RCTraceFileAndLineInfo@ATL@@QBAXKIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
	add	esp, 20					; 00000014H

; 4397 : 						return 0;

	mov	WORD PTR $T213647[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$164730[ebp]
	call	??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
	mov	ax, WORD PTR $T213647[ebp]
	jmp	$L164723
$L164745:

; 4398 : 					}
; 4399 : 				}
; 4400 : 				p->m_wc = wc;

	mov	ecx, 12					; 0000000cH
	lea	esi, DWORD PTR _wc$164743[ebp]
	mov	edi, DWORD PTR _p$[ebp]
	rep movsd

; 4401 : 				p->pWndProc = p->m_wc.lpfnWndProc;

	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+52], eax

; 4402 : 				p->m_wc.lpszClassName = lpsz;

	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _lpsz$164741[ebp]
	mov	DWORD PTR [ecx+40], edx

; 4403 : 				p->m_wc.lpfnWndProc = proc;

	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _proc$164742[ebp]
	mov	DWORD PTR [eax+8], ecx

; 4404 : 			}
; 4405 : 			else

	jmp	SHORT $L164750
$L164738:

; 4406 : 			{
; 4407 : 				p->m_wc.hCursor = T::LoadCursor(p->m_bSystemCursor ? NULL : pBaseModule->m_hInstResource,
; 4408 : 					p->m_lpszCursorID);

	mov	edx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [edx+60], 0
	je	SHORT $L213648
	mov	DWORD PTR tv202[ebp], 0
	jmp	SHORT $L213649
$L213648:
	mov	eax, DWORD PTR _pBaseModule$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR tv202[ebp], ecx
$L213649:
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+56]
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	push	ecx
	call	?LoadCursorA@AtlModuleRegisterWndClassInfoParamA@ATL@@SAPAUHICON__@@PAUHINSTANCE__@@PBD@Z ; ATL::AtlModuleRegisterWndClassInfoParamA::LoadCursorA
	add	esp, 8
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+28], eax
$L164750:

; 4409 : 			}
; 4410 : 
; 4411 : 			p->m_wc.hInstance = pBaseModule->m_hInst;

	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _pBaseModule$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+20], edx

; 4412 : 			p->m_wc.style &= ~CS_GLOBALCLASS;	// we don't register global classes

	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	and	ecx, -16385				; ffffbfffH
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 4413 : 			if (p->m_wc.lpszClassName == NULL)

	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+40], 0
	jne	SHORT $L164751

; 4414 : 			{
; 4415 : 				T::FormatWindowClassName(p->m_szAutoName, &p->m_wc);

	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 66					; 00000042H
	push	edx
	call	?FormatWindowClassName@AtlModuleRegisterWndClassInfoParamA@ATL@@SAXPADPAX@Z ; ATL::AtlModuleRegisterWndClassInfoParamA::FormatWindowClassName
	add	esp, 8

; 4416 : 				p->m_wc.lpszClassName = p->m_szAutoName;

	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 66					; 00000042H
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+40], eax
$L164751:

; 4417 : 			}
; 4418 : 			T::WNDCLASSEX wcTemp;
; 4419 : 			wcTemp = p->m_wc;

	mov	esi, DWORD PTR _p$[ebp]
	mov	ecx, 12					; 0000000cH
	lea	edi, DWORD PTR _wcTemp$164752[ebp]
	rep movsd

; 4420 : 			p->m_atom = static_cast<ATOM>(T::GetClassInfoEx(p->m_wc.hInstance, p->m_wc.lpszClassName, &wcTemp));

	lea	edx, DWORD PTR _wcTemp$164752[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	?GetClassInfoExA@AtlModuleRegisterWndClassInfoParamA@ATL@@SAHPAUHINSTANCE__@@PBDPAUtagWNDCLASSEXA@@@Z ; ATL::AtlModuleRegisterWndClassInfoParamA::GetClassInfoExA
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _p$[ebp]
	mov	WORD PTR [ecx+64], ax

; 4421 : 			if (p->m_atom == 0)

	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, WORD PTR [edx+64]
	test	eax, eax
	jne	SHORT $L164737

; 4422 : 			{
; 4423 : 				p->m_atom = T::RegisterClassEx(pWinModule, &p->m_wc);

	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pWinModule$[ebp]
	push	edx
	call	?RegisterClassExA@AtlModuleRegisterWndClassInfoParamA@ATL@@SAGPAU_ATL_WIN_MODULE70@2@PBUtagWNDCLASSEXA@@@Z ; ATL::AtlModuleRegisterWndClassInfoParamA::RegisterClassExA
	add	esp, 8
	mov	ecx, DWORD PTR _p$[ebp]
	mov	WORD PTR [ecx+64], ax
$L164737:

; 4424 : 			}
; 4425 : 		}
; 4426 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$164730[ebp]
	call	??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
$L164729:

; 4427 : 
; 4428 : 	if (p->m_lpszOrigName != NULL)

	mov	edx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [edx+48], 0
	je	SHORT $L164755

; 4429 : 	{
; 4430 : 		ATLASSERT(pProc != NULL);

	cmp	DWORD PTR _pProc$[ebp], 0
	jne	SHORT $L213650
	push	OFFSET FLAT:??_C@_0L@KAMJMGHJ@pProc?5?$CB?$DN?50?$AA@
	push	0
	push	4430					; 0000114eH
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213650
	int	3
$L213650:

; 4431 : 		ATLASSERT(p->pWndProc != NULL);

	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+52], 0
	jne	SHORT $L213651
	push	OFFSET FLAT:??_C@_0BB@BIGOECOI@p?9?$DOpWndProc?5?$CB?$DN?50?$AA@
	push	0
	push	4431					; 0000114fH
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213651
	int	3
$L213651:

; 4432 : 		*pProc = p->pWndProc;

	mov	eax, DWORD PTR _pProc$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR [eax], edx
$L164755:

; 4433 : 	}
; 4434 : 	return p->m_atom;

	mov	eax, DWORD PTR _p$[ebp]
	mov	ax, WORD PTR [eax+64]
$L164723:

; 4435 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L213660
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	add	esp, 184				; 000000b8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$L213660:
	DD	3
	DD	$L213659
$L213659:
	DD	-24					; ffffffe8H
	DD	8
	DD	$L213655
	DD	-88					; ffffffa8H
	DD	48					; 00000030H
	DD	$L213656
	DD	-144					; ffffff70H
	DD	48					; 00000030H
	DD	$L213657
$L213657:
	DB	119					; 00000077H
	DB	99					; 00000063H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$L213656:
	DB	119					; 00000077H
	DB	99					; 00000063H
	DB	0
$L213655:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L213652:
	lea	ecx, DWORD PTR _lock$164730[ebp]
	jmp	??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ ; ATL::CComCritSecLock<ATL::CComCriticalSection>::~CComCritSecLock<ATL::CComCriticalSection>
__ehhandler$??$AtlModuleRegisterWndClassInfoT@VAtlModuleRegisterWndClassInfoParamA@ATL@@@ATL@@YAGPAU_ATL_BASE_MODULE70@0@PAU_ATL_WIN_MODULE70@0@PAU_ATL_WNDCLASSINFOA@0@PAP6GJPAUHWND__@@IIJ@ZVAtlModuleRegisterWndClassInfoParamA@0@@Z:
	mov	eax, OFFSET FLAT:$T213654
	jmp	___CxxFrameHandler
text$x	ENDS
??$AtlModuleRegisterWndClassInfoT@VAtlModuleRegisterWndClassInfoParamA@ATL@@@ATL@@YAGPAU_ATL_BASE_MODULE70@0@PAU_ATL_WIN_MODULE70@0@PAU_ATL_WNDCLASSINFOA@0@PAP6GJPAUHWND__@@IIJ@ZVAtlModuleRegisterWndClassInfoParamA@0@@Z ENDP ; ATL::AtlModuleRegisterWndClassInfoT<ATL::AtlModuleRegisterWndClassInfoParamA>
; Function compile flags: /Odt /RTCsu
;	COMDAT ?GetClassInfoExA@AtlModuleRegisterWndClassInfoParamA@ATL@@SAHPAUHINSTANCE__@@PBDPAUtagWNDCLASSEXA@@@Z
_TEXT	SEGMENT
_hinst$ = 8						; size = 4
_lpszClass$ = 12					; size = 4
_lpwcx$ = 16						; size = 4
?GetClassInfoExA@AtlModuleRegisterWndClassInfoParamA@ATL@@SAHPAUHINSTANCE__@@PBDPAUtagWNDCLASSEXA@@@Z PROC NEAR ; ATL::AtlModuleRegisterWndClassInfoParamA::GetClassInfoExA, COMDAT

; 4281 : 	{

	push	ebp
	mov	ebp, esp
	push	esi

; 4282 : 		return ::GetClassInfoExA(hinst, lpszClass, lpwcx);

	mov	esi, esp
	mov	eax, DWORD PTR _lpwcx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpszClass$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hinst$[ebp]
	push	edx
	call	DWORD PTR __imp__GetClassInfoExA@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 4283 : 	}

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?GetClassInfoExA@AtlModuleRegisterWndClassInfoParamA@ATL@@SAHPAUHINSTANCE__@@PBDPAUtagWNDCLASSEXA@@@Z ENDP ; ATL::AtlModuleRegisterWndClassInfoParamA::GetClassInfoExA
_TEXT	ENDS
PUBLIC	??_C@_09OOFFBKGI@ATL?3?$CF8?48X?$AA@		; `string'
EXTRN	__imp__wsprintfA:NEAR
;	COMDAT ??_C@_09OOFFBKGI@ATL?3?$CF8?48X?$AA@
CONST	SEGMENT
??_C@_09OOFFBKGI@ATL?3?$CF8?48X?$AA@ DB 'ATL:%8.8X', 00H ; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?FormatWindowClassName@AtlModuleRegisterWndClassInfoParamA@ATL@@SAXPADPAX@Z
_TEXT	SEGMENT
_szBuffer$ = 8						; size = 4
_unique$ = 12						; size = 4
?FormatWindowClassName@AtlModuleRegisterWndClassInfoParamA@ATL@@SAXPADPAX@Z PROC NEAR ; ATL::AtlModuleRegisterWndClassInfoParamA::FormatWindowClassName, COMDAT

; 4286 : 	{

	push	ebp
	mov	ebp, esp
	push	esi

; 4287 : #if defined(_WIN64) // || or Windows 2000
; 4288 : 		::wsprintfA(szBuffer, "ATL:%p", unique);
; 4289 : #else
; 4290 : 		::wsprintfA(szBuffer, "ATL:%8.8X", reinterpret_cast<DWORD_PTR>(unique));

	mov	esi, esp
	mov	eax, DWORD PTR _unique$[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_09OOFFBKGI@ATL?3?$CF8?48X?$AA@
	mov	ecx, DWORD PTR _szBuffer$[ebp]
	push	ecx
	call	DWORD PTR __imp__wsprintfA
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 4291 : #endif
; 4292 : 	}

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?FormatWindowClassName@AtlModuleRegisterWndClassInfoParamA@ATL@@SAXPADPAX@Z ENDP ; ATL::AtlModuleRegisterWndClassInfoParamA::FormatWindowClassName
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?LoadCursorA@AtlModuleRegisterWndClassInfoParamA@ATL@@SAPAUHICON__@@PAUHINSTANCE__@@PBD@Z
_TEXT	SEGMENT
_hInstance$ = 8						; size = 4
_lpCursorName$ = 12					; size = 4
?LoadCursorA@AtlModuleRegisterWndClassInfoParamA@ATL@@SAPAUHICON__@@PAUHINSTANCE__@@PBD@Z PROC NEAR ; ATL::AtlModuleRegisterWndClassInfoParamA::LoadCursorA, COMDAT

; 4295 : 	{

	push	ebp
	mov	ebp, esp
	push	esi

; 4296 : 		return ::LoadCursorA(hInstance, lpCursorName);

	mov	esi, esp
	mov	eax, DWORD PTR _lpCursorName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	DWORD PTR __imp__LoadCursorA@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 4297 : 	}

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?LoadCursorA@AtlModuleRegisterWndClassInfoParamA@ATL@@SAPAUHICON__@@PAUHINSTANCE__@@PBD@Z ENDP ; ATL::AtlModuleRegisterWndClassInfoParamA::LoadCursorA
_TEXT	ENDS
PUBLIC	?AtlWinModuleRegisterClassExA@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PBUtagWNDCLASSEXA@@@Z ; ATL::AtlWinModuleRegisterClassExA
; Function compile flags: /Odt /RTCsu
;	COMDAT ?RegisterClassExA@AtlModuleRegisterWndClassInfoParamA@ATL@@SAGPAU_ATL_WIN_MODULE70@2@PBUtagWNDCLASSEXA@@@Z
_TEXT	SEGMENT
_pWinModule$ = 8					; size = 4
_lpwcx$ = 12						; size = 4
?RegisterClassExA@AtlModuleRegisterWndClassInfoParamA@ATL@@SAGPAU_ATL_WIN_MODULE70@2@PBUtagWNDCLASSEXA@@@Z PROC NEAR ; ATL::AtlModuleRegisterWndClassInfoParamA::RegisterClassExA, COMDAT

; 4300 : 	{

	push	ebp
	mov	ebp, esp

; 4301 : 		return AtlWinModuleRegisterClassExA(pWinModule, lpwcx);

	mov	eax, DWORD PTR _lpwcx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pWinModule$[ebp]
	push	ecx
	call	?AtlWinModuleRegisterClassExA@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PBUtagWNDCLASSEXA@@@Z ; ATL::AtlWinModuleRegisterClassExA

; 4302 : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?RegisterClassExA@AtlModuleRegisterWndClassInfoParamA@ATL@@SAGPAU_ATL_WIN_MODULE70@2@PBUtagWNDCLASSEXA@@@Z ENDP ; ATL::AtlModuleRegisterWndClassInfoParamA::RegisterClassExA
_TEXT	ENDS
PUBLIC	?Add@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEHABG@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Add
PUBLIC	??_C@_04LOGEFONP@bRet?$AA@			; `string'
;	COMDAT ??_C@_04LOGEFONP@bRet?$AA@
CONST	SEGMENT
??_C@_04LOGEFONP@bRet?$AA@ DB 'bRet', 00H		; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ?AtlWinModuleRegisterClassExA@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PBUtagWNDCLASSEXA@@@Z
_TEXT	SEGMENT
_bRet$ = -16						; size = 4
_atom$ = -8						; size = 2
_pWinModule$ = 8					; size = 4
_lpwc$ = 12						; size = 4
?AtlWinModuleRegisterClassExA@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PBUtagWNDCLASSEXA@@@Z PROC NEAR ; ATL::AtlWinModuleRegisterClassExA, COMDAT

; 4339 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 4340 : 	if (pWinModule == NULL || lpwc == NULL)

	cmp	DWORD PTR _pWinModule$[ebp], 0
	je	SHORT $L152172
	cmp	DWORD PTR _lpwc$[ebp], 0
	jne	SHORT $L152171
$L152172:

; 4341 : 		return 0;

	xor	ax, ax
	jmp	SHORT $L152170
$L152171:

; 4342 : 	ATOM atom = ::RegisterClassExA(lpwc);

	mov	esi, esp
	mov	eax, DWORD PTR _lpwc$[ebp]
	push	eax
	call	DWORD PTR __imp__RegisterClassExA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _atom$[ebp], ax

; 4343 : 	BOOL bRet = pWinModule->m_rgWindowClassAtoms.Add(atom);

	lea	ecx, DWORD PTR _atom$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pWinModule$[ebp]
	add	ecx, 32					; 00000020H
	call	?Add@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEHABG@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Add
	mov	DWORD PTR _bRet$[ebp], eax

; 4344 : 	ATLASSERT(bRet);

	cmp	DWORD PTR _bRet$[ebp], 0
	jne	SHORT $L213674
	push	OFFSET FLAT:??_C@_04LOGEFONP@bRet?$AA@
	push	0
	push	4344					; 000010f8H
	push	OFFSET FLAT:??_C@_0EP@FECMNBMC@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213674
	int	3
$L213674:

; 4345 : 	(bRet);
; 4346 : 	return atom;

	mov	ax, WORD PTR _atom$[ebp]
$L152170:

; 4347 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $L213677
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$L213677:
	DD	1
	DD	$L213676
$L213676:
	DD	-8					; fffffff8H
	DD	2
	DD	$L213675
$L213675:
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	0
?AtlWinModuleRegisterClassExA@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PBUtagWNDCLASSEXA@@@Z ENDP ; ATL::AtlWinModuleRegisterClassExA
_TEXT	ENDS
PUBLIC	?InternalSetAtIndex@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXHABG@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::InternalSetAtIndex
EXTRN	_realloc:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpcoll.h
;	COMDAT ?Add@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEHABG@Z
_TEXT	SEGMENT
tv71 = -16						; size = 4
_nNewAllocSize$162908 = -12				; size = 4
_aT$162907 = -8						; size = 4
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?Add@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEHABG@Z PROC NEAR ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Add, COMDAT
; _this$ = ecx

; 139  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 140  : 		if(m_nSize == m_nAllocSize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $L162906

; 141  : 		{
; 142  : 			T* aT;
; 143  : 			int nNewAllocSize = (m_nAllocSize == 0) ? 1 : (m_nSize * 2);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $L213680
	mov	DWORD PTR tv71[ebp], 1
	jmp	SHORT $L213681
$L213680:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	shl	edx, 1
	mov	DWORD PTR tv71[ebp], edx
$L213681:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR _nNewAllocSize$162908[ebp], eax

; 144  : 			aT = (T*)realloc(m_aT, nNewAllocSize * sizeof(T));

	mov	ecx, DWORD PTR _nNewAllocSize$162908[ebp]
	shl	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_realloc
	add	esp, 8
	mov	DWORD PTR _aT$162907[ebp], eax

; 145  : 			if(aT == NULL)

	cmp	DWORD PTR _aT$162907[ebp], 0
	jne	SHORT $L162911

; 146  : 				return FALSE;

	xor	eax, eax
	jmp	SHORT $L162905
$L162911:

; 147  : 			m_nAllocSize = nNewAllocSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _nNewAllocSize$162908[ebp]
	mov	DWORD PTR [ecx+8], edx

; 148  : 			m_aT = aT;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _aT$162907[ebp]
	mov	DWORD PTR [eax], ecx
$L162906:

; 149  : 		}
; 150  : 		InternalSetAtIndex(m_nSize, t);

	mov	edx, DWORD PTR _t$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalSetAtIndex@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXHABG@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::InternalSetAtIndex

; 151  : 		m_nSize++;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 152  : 		return TRUE;

	mov	eax, 1
$L162905:

; 153  : 	}

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEHABG@Z ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Add
_TEXT	ENDS
PUBLIC	??0Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@ABG@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Wrapper::Wrapper
PUBLIC	??$?2G@Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@SAPAXIPAG@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Wrapper::operator new<unsigned short>
PUBLIC	??$?3G@Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@SAXPAXPAG@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Wrapper::operator delete<unsigned short>
;	COMDAT xdata$x
xdata$x	SEGMENT
$T213692 DD	0ffffffffH
	DD	FLAT:$L213688
$T213690 DD	019930520H
	DD	01H
	DD	FLAT:$T213692
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ?InternalSetAtIndex@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXHABG@Z
_TEXT	SEGMENT
tv78 = -28						; size = 4
$T213685 = -24						; size = 4
$T213684 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nIndex$ = 8						; size = 4
_t$ = 12						; size = 4
?InternalSetAtIndex@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXHABG@Z PROC NEAR ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::InternalSetAtIndex, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InternalSetAtIndex@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXHABG@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR _this$[ebp], ecx

; 247  : 		new(m_aT + nIndex) Wrapper(t);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _nIndex$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	push	eax
	push	2
	call	??$?2G@Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@SAPAXIPAG@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Wrapper::operator new<unsigned short>
	add	esp, 8
	mov	DWORD PTR $T213685[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T213685[ebp], 0
	je	SHORT $L213686
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T213685[ebp]
	call	??0Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@ABG@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Wrapper::Wrapper
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $L213687
$L213686:
	mov	DWORD PTR tv78[ebp], 0
$L213687:
	mov	edx, DWORD PTR tv78[ebp]
	mov	DWORD PTR $T213684[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1

; 248  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L213688:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _nIndex$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	push	eax
	mov	ecx, DWORD PTR $T213685[ebp]
	push	ecx
	call	??$?3G@Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@SAXPAXPAG@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Wrapper::operator delete<unsigned short>
	add	esp, 8
	ret	0
__ehhandler$?InternalSetAtIndex@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXHABG@Z:
	mov	eax, OFFSET FLAT:$T213690
	jmp	___CxxFrameHandler
text$x	ENDS
?InternalSetAtIndex@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXHABG@Z ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::InternalSetAtIndex
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@ABG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__t$ = 8						; size = 4
??0Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@ABG@Z PROC NEAR ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Wrapper::Wrapper, COMDAT
; _this$ = ecx

; 230  : 		{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __t$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx

; 231  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@ABG@Z ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Wrapper::Wrapper
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??$?2G@Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@SAPAXIPAG@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_p$ = 12						; size = 4
??$?2G@Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@SAPAXIPAG@Z PROC NEAR ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Wrapper::operator new<unsigned short>, COMDAT

; 233  : 		void * __cdecl operator new(size_t, _Ty* p)

	push	ebp
	mov	ebp, esp

; 234  : 		{
; 235  : 			return p;

	mov	eax, DWORD PTR _p$[ebp]

; 236  : 		}

	pop	ebp
	ret	0
??$?2G@Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@SAPAXIPAG@Z ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Wrapper::operator new<unsigned short>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??$?3G@Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@SAXPAXPAG@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?3G@Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@SAXPAXPAG@Z PROC NEAR ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Wrapper::operator delete<unsigned short>, COMDAT

; 238  : 		void __cdecl operator delete(void* /* pv */, _Ty* /* p */)

	push	ebp
	mov	ebp, esp

; 239  : 		{
; 240  : 		}

	pop	ebp
	ret	0
??$?3G@Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@SAXPAXPAG@Z ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::Wrapper::operator delete<unsigned short>
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W3AGJABU_GUID@@PAPAX@Z PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface
?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{4}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W3AGKXZ PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef
?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W3AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{4}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W3AGKXZ
_TEXT	SEGMENT
?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W3AGKXZ PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComContainedObject<ATL::CAxHostWindow>::Release
?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W3AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{4}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W7AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W7AGJABU_GUID@@PAPAX@Z PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface
?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W7AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{8}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W7AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W7AGKXZ PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef
?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W7AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{8}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W7AGKXZ
_TEXT	SEGMENT
?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W7AGKXZ PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComContainedObject<ATL::CAxHostWindow>::Release
?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W7AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{8}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WM@AGJABU_GUID@@PAPAX@Z PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface
?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WM@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{12}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WM@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WM@AGKXZ PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef
?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WM@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{12}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WM@AGKXZ
_TEXT	SEGMENT
?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WM@AGKXZ PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComContainedObject<ATL::CAxHostWindow>::Release
?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WM@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{12}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBA@AGJABU_GUID@@PAPAX@Z PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{16}', COMDAT
	sub	DWORD PTR [esp+4], 16			; 00000010H
	jmp	?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface
?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBA@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{16}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBA@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBA@AGKXZ PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{16}', COMDAT
	sub	DWORD PTR [esp+4], 16			; 00000010H
	jmp	?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef
?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBA@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{16}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBA@AGKXZ
_TEXT	SEGMENT
?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBA@AGKXZ PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{16}', COMDAT
	sub	DWORD PTR [esp+4], 16			; 00000010H
	jmp	?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComContainedObject<ATL::CAxHostWindow>::Release
?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBA@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{16}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBE@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBE@AGJABU_GUID@@PAPAX@Z PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{20}', COMDAT
	sub	DWORD PTR [esp+4], 20			; 00000014H
	jmp	?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface
?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBE@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{20}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBE@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBE@AGKXZ PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{20}', COMDAT
	sub	DWORD PTR [esp+4], 20			; 00000014H
	jmp	?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef
?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBE@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{20}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBE@AGKXZ
_TEXT	SEGMENT
?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBE@AGKXZ PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{20}', COMDAT
	sub	DWORD PTR [esp+4], 20			; 00000014H
	jmp	?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComContainedObject<ATL::CAxHostWindow>::Release
?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBE@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{20}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ??_E?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WDI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WDI@AEPAXI@Z PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::`vector deleting destructor', COMDAT
	sub	ecx, 56					; 00000038H
	jmp	??_E?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAEPAXI@Z
??_E?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WDI@AEPAXI@Z ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::`vector deleting destructor'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBM@AGJABU_GUID@@PAPAX@Z PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{28}', COMDAT
	sub	DWORD PTR [esp+4], 28			; 0000001cH
	jmp	?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface
?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBM@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{28}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBM@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBM@AGKXZ PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{28}', COMDAT
	sub	DWORD PTR [esp+4], 28			; 0000001cH
	jmp	?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef
?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBM@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{28}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBM@AGKXZ
_TEXT	SEGMENT
?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBM@AGKXZ PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{28}', COMDAT
	sub	DWORD PTR [esp+4], 28			; 0000001cH
	jmp	?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComContainedObject<ATL::CAxHostWindow>::Release
?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBM@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{28}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCA@AGJABU_GUID@@PAPAX@Z PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{32}', COMDAT
	sub	DWORD PTR [esp+4], 32			; 00000020H
	jmp	?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface
?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCA@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{32}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCA@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCA@AGKXZ PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{32}', COMDAT
	sub	DWORD PTR [esp+4], 32			; 00000020H
	jmp	?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef
?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCA@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{32}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCA@AGKXZ
_TEXT	SEGMENT
?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCA@AGKXZ PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{32}', COMDAT
	sub	DWORD PTR [esp+4], 32			; 00000020H
	jmp	?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComContainedObject<ATL::CAxHostWindow>::Release
?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCA@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{32}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCE@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCE@AGJABU_GUID@@PAPAX@Z PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{36}', COMDAT
	sub	DWORD PTR [esp+4], 36			; 00000024H
	jmp	?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface
?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCE@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{36}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCE@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCE@AGKXZ PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{36}', COMDAT
	sub	DWORD PTR [esp+4], 36			; 00000024H
	jmp	?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef
?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCE@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{36}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCE@AGKXZ
_TEXT	SEGMENT
?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCE@AGKXZ PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{36}', COMDAT
	sub	DWORD PTR [esp+4], 36			; 00000024H
	jmp	?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComContainedObject<ATL::CAxHostWindow>::Release
?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCE@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{36}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCI@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCI@AGJABU_GUID@@PAPAX@Z PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{40}', COMDAT
	sub	DWORD PTR [esp+4], 40			; 00000028H
	jmp	?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface
?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCI@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::QueryInterface`adjustor{40}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCI@AGKXZ
_TEXT	SEGMENT
?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCI@AGKXZ PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{40}', COMDAT
	sub	DWORD PTR [esp+4], 40			; 00000028H
	jmp	?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef
?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCI@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::AddRef`adjustor{40}'
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCI@AGKXZ
_TEXT	SEGMENT
?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCI@AGKXZ PROC NEAR ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{40}', COMDAT
	sub	DWORD PTR [esp+4], 40			; 00000028H
	jmp	?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ ; ATL::CComContainedObject<ATL::CAxHostWindow>::Release
?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCI@AGKXZ ENDP ; [thunk]:ATL::CComContainedObject<ATL::CAxHostWindow>::Release`adjustor{40}'
_TEXT	ENDS
PUBLIC	??0CAtlWinModule@ATL@@QAE@XZ			; ATL::CAtlWinModule::CAtlWinModule
EXTRN	_atexit:NEAR
;	COMDAT CRT$XCU
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
CRT$XCU	SEGMENT
_$S3	DD	FLAT:_$E1
; Function compile flags: /Odt /RTCsu
CRT$XCU	ENDS
;	COMDAT _$E1
text$yc	SEGMENT
_$E1	PROC NEAR					; COMDAT

; 2602 : __declspec(selectany) CAtlWinModule _AtlWinModule;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET FLAT:?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
	call	??0CAtlWinModule@ATL@@QAE@XZ		; ATL::CAtlWinModule::CAtlWinModule
	push	OFFSET FLAT:_$E2
	call	_atexit
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_$E1	ENDP
text$yc	ENDS
PUBLIC	??0_ATL_WIN_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
EXTRN	?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z:NEAR ; ATL::AtlWinModuleInit
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
??0CAtlWinModule@ATL@@QAE@XZ PROC NEAR			; ATL::CAtlWinModule::CAtlWinModule, COMDAT
; _this$ = ecx

; 2573 : 	CAtlWinModule()

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_ATL_WIN_MODULE70@ATL@@QAE@XZ

; 2574 : 	{
; 2575 : 		cbSize = sizeof(_ATL_WIN_MODULE);

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 44			; 0000002cH

; 2576 : 		HRESULT hr = AtlWinModuleInit(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z ; ATL::AtlWinModuleInit
	mov	DWORD PTR _hr$[ebp], eax

; 2577 : 		if (FAILED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $L88121

; 2578 : 			CAtlBaseModule::m_bInitFailed = true;

	mov	BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed
$L88121:

; 2579 : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CAtlWinModule@ATL@@QAE@XZ ENDP			; ATL::CAtlWinModule::CAtlWinModule
_TEXT	ENDS
PUBLIC	??0CComCriticalSection@ATL@@QAE@XZ		; ATL::CComCriticalSection::CComCriticalSection
PUBLIC	??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
; Function compile flags: /Odt /RTCsu
;	COMDAT ??0_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_ATL_WIN_MODULE70@ATL@@QAE@XZ PROC NEAR		; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CComCriticalSection@ATL@@QAE@XZ	; ATL::CComCriticalSection::CComCriticalSection
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_ATL_WIN_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcore.h
_TEXT	ENDS
;	COMDAT ??0CComCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CComCriticalSection@ATL@@QAE@XZ PROC NEAR		; ATL::CComCriticalSection::CComCriticalSection, COMDAT
; _this$ = ecx

; 114  : 	CComCriticalSection() throw()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 115  : 	{
; 116  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

	push	24					; 00000018H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 117  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CComCriticalSection@ATL@@QAE@XZ ENDP			; ATL::CComCriticalSection::CComCriticalSection
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpcoll.h
_TEXT	ENDS
;	COMDAT ??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT
; _this$ = ecx

; 97   : 	{ }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
_TEXT	ENDS
PUBLIC	??1CAtlWinModule@ATL@@QAE@XZ			; ATL::CAtlWinModule::~CAtlWinModule
; Function compile flags: /Odt /RTCsu
;	COMDAT _$E2
text$yd	SEGMENT
_$E2	PROC NEAR					; COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET FLAT:?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
	call	??1CAtlWinModule@ATL@@QAE@XZ		; ATL::CAtlWinModule::~CAtlWinModule
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_$E2	ENDP
text$yd	ENDS
PUBLIC	?Term@CAtlWinModule@ATL@@QAEXXZ			; ATL::CAtlWinModule::Term
PUBLIC	??1_ATL_WIN_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
xdata$x	SEGMENT
$T213777 DD	0ffffffffH
	DD	FLAT:$L213773
$T213775 DD	019930520H
	DD	01H
	DD	FLAT:$T213777
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Odt /RTCsu
xdata$x	ENDS
;	COMDAT ??1CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CAtlWinModule@ATL@@QAE@XZ PROC NEAR			; ATL::CAtlWinModule::~CAtlWinModule, COMDAT
; _this$ = ecx

; 2582 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CAtlWinModule@ATL@@QAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2583 : 		Term();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Term@CAtlWinModule@ATL@@QAEXXZ		; ATL::CAtlWinModule::Term

; 2584 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_ATL_WIN_MODULE70@ATL@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L213773:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_ATL_WIN_MODULE70@ATL@@QAE@XZ
__ehhandler$??1CAtlWinModule@ATL@@QAE@XZ:
	mov	eax, OFFSET FLAT:$T213775
	jmp	___CxxFrameHandler
text$x	ENDS
??1CAtlWinModule@ATL@@QAE@XZ ENDP			; ATL::CAtlWinModule::~CAtlWinModule
PUBLIC	?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm
; Function compile flags: /Odt /RTCsu
;	COMDAT ?Term@CAtlWinModule@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Term@CAtlWinModule@ATL@@QAEXXZ PROC NEAR		; ATL::CAtlWinModule::Term, COMDAT
; _this$ = ecx

; 2587 : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2588 : 		AtlWinModuleTerm(this, _AtlBaseModule.GetModuleInstance());

	mov	ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
	call	?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm

; 2589 : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Term@CAtlWinModule@ATL@@QAEXXZ ENDP			; ATL::CAtlWinModule::Term
_TEXT	ENDS
PUBLIC	??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
; Function compile flags: /Odt /RTCsu
;	COMDAT ??1_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_ATL_WIN_MODULE70@ATL@@QAE@XZ PROC NEAR		; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_ATL_WIN_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
_TEXT	ENDS
PUBLIC	?Term@CComCriticalSection@ATL@@QAEJXZ		; ATL::CComCriticalSection::Term
PUBLIC	?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
PUBLIC	?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
PUBLIC	??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
EXTRN	__imp__UnregisterClassA@8:NEAR
; Function compile flags: /Odt /RTCsu
;	COMDAT ?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT
_i$91551 = -4						; size = 4
_pWinModule$ = 8					; size = 4
_hInst$ = 12						; size = 4
?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z PROC NEAR ; ATL::AtlWinModuleTerm, COMDAT

; 6215 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 6216 : 	if (pWinModule == NULL)

	cmp	DWORD PTR _pWinModule$[ebp], 0
	jne	SHORT $L91544

; 6217 : 		return E_INVALIDARG;

	mov	eax, -2147024809			; 80070057H
	jmp	$L91543
$L91544:

; 6218 : 	if (pWinModule->cbSize == 0)

	mov	eax, DWORD PTR _pWinModule$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L91546

; 6219 : 		return S_OK;

	xor	eax, eax
	jmp	SHORT $L91543
$L91546:

; 6220 : 	if (pWinModule->cbSize != sizeof(_ATL_WIN_MODULE))

	mov	ecx, DWORD PTR _pWinModule$[ebp]
	cmp	DWORD PTR [ecx], 44			; 0000002cH
	je	SHORT $L91549

; 6221 : 		return E_INVALIDARG;

	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $L91543
$L91549:

; 6222 : 
; 6223 : 	for (int i = 0; i < pWinModule->m_rgWindowClassAtoms.GetSize(); i++)

	mov	DWORD PTR _i$91551[ebp], 0
	jmp	SHORT $L91552
$L91553:
	mov	edx, DWORD PTR _i$91551[ebp]
	add	edx, 1
	mov	DWORD PTR _i$91551[ebp], edx
$L91552:
	mov	ecx, DWORD PTR _pWinModule$[ebp]
	add	ecx, 32					; 00000020H
	call	?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
	cmp	DWORD PTR _i$91551[ebp], eax
	jge	SHORT $L91554

; 6224 : 		UnregisterClass((LPCTSTR)pWinModule->m_rgWindowClassAtoms[i], hInst);

	mov	esi, esp
	mov	eax, DWORD PTR _hInst$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$91551[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pWinModule$[ebp]
	add	ecx, 32					; 00000020H
	call	??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
	movzx	edx, WORD PTR [eax]
	push	edx
	call	DWORD PTR __imp__UnregisterClassA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $L91553
$L91554:

; 6225 : 	pWinModule->m_rgWindowClassAtoms.RemoveAll();

	mov	ecx, DWORD PTR _pWinModule$[ebp]
	add	ecx, 32					; 00000020H
	call	?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll

; 6226 : 	pWinModule->m_csWindowCreate.Term();

	mov	ecx, DWORD PTR _pWinModule$[ebp]
	add	ecx, 4
	call	?Term@CComCriticalSection@ATL@@QAEJXZ	; ATL::CComCriticalSection::Term

; 6227 : 	pWinModule->cbSize = 0;

	mov	eax, DWORD PTR _pWinModule$[ebp]
	mov	DWORD PTR [eax], 0

; 6228 : 	return S_OK;

	xor	eax, eax
$L91543:

; 6229 : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ENDP ; ATL::AtlWinModuleTerm
_TEXT	ENDS
EXTRN	__imp__DeleteCriticalSection@4:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcore.h
;	COMDAT ?Term@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Term@CComCriticalSection@ATL@@QAEJXZ PROC NEAR		; ATL::CComCriticalSection::Term, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 148  : 		DeleteCriticalSection(&m_sec);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__DeleteCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 149  : 		return S_OK;

	xor	eax, eax

; 150  : 	}	

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Term@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Term
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpcoll.h
_TEXT	ENDS
;	COMDAT ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT
; _this$ = ecx

; 100  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 101  : 		RemoveAll();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll

; 102  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ PROC NEAR ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize, COMDAT
; _this$ = ecx

; 135  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 136  : 		return m_nSize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 137  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
; Function compile flags: /Odt /RTCsu
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_i$162915 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ PROC NEAR ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll, COMDAT
; _this$ = ecx

; 173  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 174  : 		if(m_aT != NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $L162914

; 175  : 		{
; 176  : 			for(int i = 0; i < m_nSize; i++)

	mov	DWORD PTR _i$162915[ebp], 0
	jmp	SHORT $L162916
$L162917:
	mov	ecx, DWORD PTR _i$162915[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$162915[ebp], ecx
$L162916:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _i$162915[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jge	SHORT $L162918

; 177  : 				m_aT[i].~T();

	jmp	SHORT $L162917
$L162918:

; 178  : 			free(m_aT);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_free
	add	esp, 4

; 179  : 			m_aT = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$L162914:

; 180  : 		}
; 181  : 		m_nSize = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 182  : 		m_nAllocSize = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 183  : 	}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
_TEXT	ENDS
PUBLIC	??_C@_0FE@GCCFFNOH@C?3?2Program?5Files?2Microsoft?5Visua@ ; `string'
PUBLIC	?_AtlRaiseException@ATL@@YAXKK@Z		; ATL::_AtlRaiseException
PUBLIC	??_C@_0CA@CLKCNBMB@nIndex?5?$DO?$DN?50?5?$CG?$CG?5nIndex?5?$DM?5m_nSize?$AA@ ; `string'
;	COMDAT ??_C@_0CA@CLKCNBMB@nIndex?5?$DO?$DN?50?5?$CG?$CG?5nIndex?5?$DM?5m_nSize?$AA@
CONST	SEGMENT
??_C@_0CA@CLKCNBMB@nIndex?5?$DO?$DN?50?5?$CG?$CG?5nIndex?5?$DM?5m_nSize?$AA@ DB 'n'
	DB	'Index >= 0 && nIndex < m_nSize', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FE@GCCFFNOH@C?3?2Program?5Files?2Microsoft?5Visua@
CONST	SEGMENT
??_C@_0FE@GCCFFNOH@C?3?2Program?5Files?2Microsoft?5Visua@ DB 'C:\Program '
	DB	'Files\Microsoft Visual Studio .NET 2003\Vc7\atlmfc\include\at'
	DB	'lsimpcoll.h', 00H				; `string'
; Function compile flags: /Odt /RTCsu
CONST	ENDS
;	COMDAT ??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z PROC NEAR ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[], COMDAT
; _this$ = ecx

; 194  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 195  : 		ATLASSERT(nIndex >= 0 && nIndex < m_nSize);

	cmp	DWORD PTR _nIndex$[ebp], 0
	jl	SHORT $L213797
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nIndex$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jl	SHORT $L213798
$L213797:
	push	OFFSET FLAT:??_C@_0CA@CLKCNBMB@nIndex?5?$DO?$DN?50?5?$CG?$CG?5nIndex?5?$DM?5m_nSize?$AA@
	push	0
	push	195					; 000000c3H
	push	OFFSET FLAT:??_C@_0FE@GCCFFNOH@C?3?2Program?5Files?2Microsoft?5Visua@
	push	2
	call	__CrtDbgReport
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $L213798
	int	3
$L213798:

; 196  : 		if(nIndex < 0 || nIndex >= m_nSize)

	cmp	DWORD PTR _nIndex$[ebp], 0
	jl	SHORT $L162924
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nIndex$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jl	SHORT $L162923
$L162924:

; 197  : 		{
; 198  : 			_AtlRaiseException(EXCEPTION_ARRAY_BOUNDS_EXCEEDED);					

	push	1
	push	-1073741684				; c000008cH
	call	?_AtlRaiseException@ATL@@YAXKK@Z	; ATL::_AtlRaiseException
$L162923:

; 199  : 		}
; 200  : 		return m_aT[nIndex];

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _nIndex$[ebp]
	lea	eax, DWORD PTR [eax+ecx*2]
$L213796:

; 201  : 	}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
_TEXT	ENDS
EXTRN	__imp__RaiseException@16:NEAR
; Function compile flags: /Odt /RTCsu
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlexcept.h
;	COMDAT ?_AtlRaiseException@ATL@@YAXKK@Z
_TEXT	SEGMENT
_dwExceptionCode$ = 8					; size = 4
_dwExceptionFlags$ = 12					; size = 4
?_AtlRaiseException@ATL@@YAXKK@Z PROC NEAR		; ATL::_AtlRaiseException, COMDAT

; 26   : {

	push	ebp
	mov	ebp, esp
	push	esi

; 27   : 	RaiseException( dwExceptionCode, dwExceptionFlags, 0, NULL );

	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _dwExceptionFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dwExceptionCode$[ebp]
	push	ecx
	call	DWORD PTR __imp__RaiseException@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 28   : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?_AtlRaiseException@ATL@@YAXKK@Z ENDP			; ATL::_AtlRaiseException
_TEXT	ENDS
PUBLIC	?_AtlWinModule@ATL@@3VCAtlWinModule@1@A		; ATL::_AtlWinModule
;	COMDAT ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
_BSS	SEGMENT
?_AtlWinModule@ATL@@3VCAtlWinModule@1@A DB 02cH DUP (?)	; ATL::_AtlWinModule
_BSS	ENDS
END
